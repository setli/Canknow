{"version":3,"sources":["webpack:///static/js/1.9765a905f9b7c65dbacb.js","webpack:///./example/src/views/page/Index.vue?488b","webpack:///./example/src/views/page/Index.vue?aadc","webpack:///./node_modules/_three@0.68.87@three/three.js","webpack:///./example/src/views/page/Index.vue?f2fd","webpack:///./example/src/image/star-bg.svg","webpack:///./example/src/views/page/Index.vue","webpack:///./package.json","webpack:///example/src/views/page/Index.vue"],"names":["webpackJsonp","1101","module","exports","__webpack_require__","content","i","locals","1102","push","1103","self","THREE","REVISION","console","info","log","debug","warn","error","lastTime","vendors","x","length","requestAnimationFrame","cancelAnimationFrame","undefined","callback","currTime","Date","now","timeToCall","Math","max","id","setTimeout","clearTimeout","ExceptionErrorHandler","message","optionalData","Error","ConsoleErrorHandler","ConsoleWarningHandler","NullHandler","onerror","onwarning","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","NoShading","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","MultiplyOperation","MixOperation","AddOperation","UVMapping","CubeReflectionMapping","CubeRefractionMapping","SphericalReflectionMapping","SphericalRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","Linear","sRGB","RGBE","LogLUV","RGBM7","RGBM16","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","Color","color","arguments","this","setRGB","set","prototype","constructor","r","g","b","value","copy","setHex","setStyle","hex","floor","setHSL","h","s","l","hue2rgb","p","q","t","style","test","exec","min","parseInt","ColorKeywords","copyGammaToLinear","copyLinearToGamma","sqrt","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","toString","slice","getHSL","optionalTarget","hue","saturation","hsl","lightness","delta","getStyle","offsetHSL","add","addColors","color1","color2","addScalar","multiply","multiplyScalar","lerp","alpha","equals","c","fromArray","array","toArray","clone","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Quaternion","y","z","w","_x","_y","_z","_w","_euler","_updateEuler","setFromQuaternion","quaternion","setFromEuler","euler","update","Euler","c1","cos","c2","c3","s1","sin","s2","s3","order","setFromAxisAngle","axis","angle","halfAngle","setFromRotationMatrix","m","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","inverse","conjugate","normalize","sub","lengthSq","multiplyQuaternions","a","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","multiplyVector3","vector","applyQuaternion","slerp","qb","cosHalfTheta","halfTheta","acos","sinHalfTheta","abs","ratioA","ratioB","qa","qm","Vector2","setX","setY","setComponent","index","getComponent","v","addVectors","subVectors","divideScalar","scalar","invScalar","clamp","clampScalar","minVal","maxVal","ceil","round","roundToZero","negate","dot","distanceTo","distanceToSquared","dx","dy","setLength","oldLength","Vector3","setZ","onwarningn","multiplyVectors","applyEuler","applyAxisAngle","applyMatrix3","e","applyMatrix4","applyProjection","d","qx","qy","qz","qw","ix","iy","iz","iw","transformDirection","divide","lengthManhattan","cross","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","v1","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","dz","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","setFromMatrixPosition","getScaleFromMatrix","setFromMatrixScale","getColumnFromMatrix","matrix","setFromMatrixColumn","sx","sy","sz","offset","me","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","PI","xx","yy","zz","xy","xz","yz","_order","DefaultOrder","RotationOrders","_quaternion","_updateQuaternion","setFromVector","asin","atan2","mIntermediate","Matrix4","makeRotationFromQuaternion","reorder","newOrder","toVector3","optionalResult","Line3","start","end","line","center","distanceSq","distance","at","result","closestPointToPointParameter","startP","startEnd","point","clampToLine","startEnd2","startEnd_startP","closestPointToPoint","Box2","Infinity","setFromPoints","points","il","makeEmpty","setFromCenterAndSize","size","halfSize","box","empty","expandByPoint","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","isIntersectionBox","clampPoint","distanceToPoint","intersect","union","translate","Box3","addPoint","setFromObject","object","scope","updateMatrixWorld","traverse","node","geometry","vertices","matrixWorld","getBoundingSphere","Sphere","radius","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","Float32Array","identity","multiplyVector3Array","determinant","f","getInverse","errorOnInvertible","det","transpose","tmp","getNormalMatrix","transposeIntoArray","n14","n24","n34","n41","n42","n43","n44","extractPosition","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","setRotationFromQuaternion","x2","y2","z2","wx","wy","wz","lookAt","eye","target","up","n","multiplyMatrices","multiplyList","listOfMatrices","multiplyMatricesList","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","multiplyVector4","rotateAxis","crossVector","flattenToArray","flat","flattenToArrayOffset","getPosition","setPosition","rotateX","rotateY","rotateZ","rotateByAxis","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","makeShear","vector3Shear","reverseStyle","compose","position","decompose","invSX","invSY","invSZ","makeFrustum","left","right","bottom","top","near","far","filmOffset","filmSize","makePerspective","fov","aspect","ymax","degToRad","ymin","xmin","xmax","makeOrthographic","Ray","origin","direction","ray","recast","directionDistance","distanceSqToSegment","v0","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segCenter","segDir","segExtent","diff","a01","b0","b1","invDet","isIntersectionSphere","sphere","isIntersectionPlane","plane","distToPoint","distanceToPlane","denominator","constant","intersectPlane","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","QdN","matrix4","optionalCenter","maxRadiusSq","cx","cy","cz","pt","distanceSquared","intersectsSphere","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p1","p2","p3","p4","p5","planes","Plane","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","boundingSphere","computeBoundingSphere","negRadius","intersectsBox","d1","d2","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","v2","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","isIntersectionLine","startSign","endSign","intersectLine","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","newNormal","newCoplanarPoint","PI2","DegreeToRadiansFactor","RadianToDegreesFactor","generateUUID","chars","split","uuid","Array","rnd","random","join","clampBottom","mapLinear","a1","a2","b2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","range","degrees","radToDeg","radians","isPowerOfTwo","Spline","interpolate","t2","t3","intPoint","weight","w2","w3","pa","pb","pc","pd","v3","initFromArray","getPoint","k","getControlPointsArray","coords","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","chunks","total","reparametrizeByArcLength","samplingCoef","j","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","Vertex","UV","Clock","autoStart","startTime","oldTime","elapsedTime","running","performance","stop","getElapsedTime","getDelta","newTime","EventDispatcher","apply","addEventListener","hasEventListener","removeEventListener","dispatchEvent","type","listener","_listeners","listeners","indexOf","listenerArray","splice","event","call","Raycaster","localRay","matrixPosition","inverseMatrix","descSort","vA","vB","vC","intersectObject","raycaster","intersects","Sprite","face","LOD","getObjectForDistance","Mesh","boundingBox","BufferGeometry","material","attributes","precision","offsets","indices","positions","oi","ol","count","side","intersectionPoint","faceIndex","Geometry","isFaceMaterial","MeshFaceMaterial","objectMaterials","materials","fl","faces","materialIndex","morphTargets","morphInfluences","morphTargetInfluences","tl","influence","targets","Line","linePrecision","precisionSq","nbVertices","interSegment","interRay","step","LineStrip","distSq","intersectDescendants","descendants","getDescendants","recursive","sort","intersectObjects","objects","Object3D","Object3DIdCount","className","name","parent","children","_rotation","rotation","renderDepth","rotationAutoUpdate","matrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","userData","eulerOrder","useQuaternion","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","rotateOnAxis","q1","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","remove","scene","Scene","__addObject","__removeObject","getObjectById","child","getObjectByName","getChildByName","updateMatrix","force","JSON","parse","stringify","Projector","getNextObjectInPool","_objectCount","_objectPoolLength","RenderableObject","_objectPool","getNextVertexInPool","_vertexCount","_vertexPoolLength","vertex","RenderableVertex","_vertexPool","getNextFaceInPool","_faceCount","_facePoolLength","RenderableFace","_facePool","getNextLineInPool","_lineCount","_linePoolLength","RenderableLine","_linePool","getNextSpriteInPool","_spriteCount","_spritePoolLength","sprite","RenderableSprite","_spritePool","painterSort","clipLine","alpha1","alpha2","bc1near","bc2near","bc1far","bc2far","_object","_vertex","_face","_line","_sprite","_modelMatrix","_renderData","lights","_vA","_vB","_vC","_vector3","_vector4","_clipBox","_boundingBox","_points3","_viewMatrix","_viewProjectionMatrix","_modelViewProjectionMatrix","_normalMatrix","_frustum","_clippedVertex1PositionScreen","_clippedVertex2PositionScreen","projectVector","camera","matrixWorldInverse","projectionMatrix","unprojectVector","projectionMatrixInverse","pickingRay","projectObject","Light","projectGraph","root","sortObjects","RenderList","normals","setObject","projectVertex","positionWorld","positionScreen","invW","pushVertex","pushNormal","checkTriangleVisibility","pushLine","pushTriangle","vertexNormalsModel","vertexNormalsLength","renderList","projectScene","sortElements","faceVertexNormals","faceVertexUvs","uvs","autoUpdate","o","vl","v1p","v2p","v3p","normalModel","centroidModel","centroid","vertexNormals","nl","cl","ul","LinePieces","vertexColors","colors","Face3","vertexTangents","Face4","GeometryIdCount","addAttribute","numItems","itemSize","needsUpdate","computeBoundingBox","bb","computeVertexNormals","jl","nVertexElements","pA","pB","pC","cb","ab","normalizeNormals","normalsNeedUpdate","computeTangents","handleVertex","n2","tan1","tmp2","tan2","tangents","nVertices","nTangentElements","xA","yA","zA","xB","yB","zB","xC","yC","zC","uA","uB","uC","x1","y1","z1","t1","iA","iB","iC","sdir","tdir","computeOffsets","indexBufferSize","facesCount","sortedIndices","Uint16Array","indexPtr","vertexPtr","duplicatedVertices","newVerticeMaps","faceVertices","Int32Array","vertexMap","revVertexMap","findex","vo","vid","new_offset","new_vid","reorderBuffers","indexBuffer","indexMap","vertexCount","sortedAttributes","types","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint32Array","Float64Array","attr","sourceArray","attrArray","attrSize","sortedAttr","sourceAttr","attribute","dispose","morphColors","morphNormals","skinWeights","skinIndices","lineDistances","hasTangents","dynamic","verticesNeedUpdate","elementsNeedUpdate","uvsNeedUpdate","tangentsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","buffersNeedUpdate","computeCentroids","computeFaceNormals","areaWeighted","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","faceNormal","dstNormalsFace","dstNormalsVertex","vertexIndex","uv","uvA","uvB","uvC","context","ua","ub","uc","computeLineDistances","mergeVertices","key","verticesMap","unique","changes","pow","faceIndicesToRemove","idx","makeGroups","geometryGroupCounter","usesFaceMaterial","groupHash","hash_map","numMorphTargets","numMorphNormals","geometryGroups","hash","counter","faces3","geometryGroupsList","uvCopy","Geometry2","Object","create","Camera","normalizedViewport","width","height","OrthographicCamera","updateProjectionMatrix","viewportMatrix","PerspectiveCamera","setLens","focalLength","frameHeight","atan","setViewOffset","fullWidth","fullHeight","light","AmbientLight","AreaLight","intensity","decayExponent","physicalFalloff","DirectionalLight","onlyShadow","shadowCameraNear","shadowCameraFar","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowBias","shadowDarkness","shadowMapWidth","shadowMapHeight","shadowCascade","shadowCascadeOffset","shadowCascadeCount","shadowCascadeBias","shadowCascadeWidth","shadowCascadeHeight","shadowCascadeNearZ","shadowCascadeFarZ","shadowCascadeArray","shadowMap","shadowMapSize","shadowCamera","shadowMatrix","HemisphereLight","skyColor","groundColor","PointLight","SpotLight","exponent","shadowCameraFov","Loader","showStatus","statusDomElement","addStatusElement","onLoadStart","onLoadProgress","onLoadComplete","crossOrigin","document","createElement","fontSize","textAlign","background","padding","zIndex","innerHTML","updateProgress","progress","loaded","toFixed","extractUrlBase","url","parts","pop","initMaterials","texturePath","createMaterial","needsTangents","ShaderMaterial","is_pow2","LN2","nearest_pow2","load_image","where","image","Image","onload","getContext","drawImage","_this","src","create_texture","sourceFile","repeat","wrap","anisotropy","isCompressed","fullPath","texture","ImageUtils","loadCompressedTexture","Texture","wrapS","wrapT","wrapMap","mirror","rgb2hex","rgb","mtype","mpars","opacity","map","lightMap","normalMap","bumpMap","wireframe","shading","toLowerCase","blending","transparent","depthTest","depthWrite","flipSided","doubleSided","colorDiffuse","DbgColor","colorSpecular","specular","colorAmbient","ambient","transparency","specularCoef","shininess","mapDiffuse","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapLight","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapBump","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormal","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecular","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapBumpScale","bumpScale","shader","ShaderLib","uniforms","UniformsUtils","mapNormalFactor","specularMap","parameters","fragmentShader","vertexShader","fog","DbgName","XHRLoader","manager","DefaultLoadingManager","load","onLoad","onProgress","onError","request","XMLHttpRequest","responseText","itemEnd","open","send","itemStart","setCrossOrigin","ImageLoader","JSONLoader","withCredentials","loadAjaxJSON","callbackProgress","xhr","onreadystatechange","readyState","DONE","status","json","metadata","LOADING","getResponseHeader","HEADERS_RECEIVED","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","hasMaterial","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceA","faceB","uvLayer","nUvLayers","bones","animation","animations","dstVertices","srcVertices","dstColors","srcColors","LoadingManager","BufferGeometryLoader","loader","text","Geometry2Loader","MaterialLoader","emissive","falloff","falloffColor","roughness","metallic","clearCoat","clearCoatRoughness","anisotropyRotation","translucency","translucencyNormalAlpha","translucencyNormalPower","translucencyViewAlpha","translucencyViewPower","ObjectLoader","geometries","parseGeometries","parseMaterials","parseObject","geometryLoader","geometry2Loader","bufferGeometryLoader","data","PlaneGeometry","widthSegments","heightSegments","BoxGeometry","depth","depthSegments","CircleGeometry","segments","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","IcosahedronGeometry","detail","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","heightScale","decay","SceneLoader","callbackSync","geometryHandlers","hierarchyHandlers","addGeometryHandler","typeID","loaderClass","addHierarchyHandler","callbackFinished","get_url","source_url","url_type","urlBase","handle_objects","handle_children","mat","pos","rot","scl","quat","objID","objJSON","loading","reservedTypes","skin","morph","mirroredLoop","duration","loaderParameters","parType","options","urlBaseType","create_callback_hierachy","face_materials","SkinnedMesh","MorphAnimMesh","time","size_y","cameras","empties","groups","groupID","handle_mesh","geo","handle_hierarchy","obj","dae","counter_models","async_callback_gate","totalModels","total_models","totalTextures","total_textures","loadedModels","loadedTextures","counter_textures","finalize","target_array","ta","targetName","targetInverse","traverse_json_hierarchy","objChildID","textures","fogs","transform","fogID","fogJSON","callbackTexture","generateTextureCallback","Fog","FogExp2","density","geoID","geoJSON","topRad","botRad","radSegs","heightSegs","segmentsR","segmentsT","subdivisions","modelJson","embeds","jsonLoader","model","textureID","textureJSON","mapping","url_array","loadCompressedTextureCube","loadTextureCube","fullUrl","textureCallback","loadTexture","minFilter","magFilter","matID","matJSON","parID","diffuse","normalScale","envMap","reflectivity","displacementMap","displacementBias","displacementScale","materialArray","label","defaults","currentCamera","TextureLoader","Material","MaterialIdCount","blendSrc","blendDst","blendEquation","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","alphaTest","overdraw","setValues","values","newValue","currentValue","Number","LineBasicMaterial","linewidth","linecap","linejoin","LineDashedMaterial","dashSize","gapSize","MeshBasicMaterial","combine","refractionRatio","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","MeshLambertMaterial","wrapAround","wrapRGB","MeshPhongMaterial","opacityMap","emissiveMap","MeshPhysicalMaterial","falloffMap","falloffBlendParams","roughnessMap","metallicMap","anisotropyMap","anisotropyRotationMap","translucencyMap","diffuseEnvMap","MeshDepthMaterial","MeshNormalMaterial","ParticleSystemMaterial","sizeAttenuation","ParticleBasicMaterial","shaderID","defines","defaultAttributeValues","uv2","index0AttributeName","SpriteMaterial","SpriteCanvasMaterial","program","ParticleCanvasMaterial","format","TextureIdCount","mipmaps","invert","gainPivot","gain","brightness","encoding","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","_needsUpdate","onUpdate","CompressedTexture","DataTexture","ParticleSystem","sortParticles","updateMorphTargets","morphTargetBase","morphTargetForcedOrder","morphTargetDictionary","ml","getMorphTargetIndexByName","Bone","belongsToSkin","skinMatrix","parentSkinMatrix","forceUpdate","useVertexTexture","identityMatrix","boneMatrices","bone","gbone","rotq","addBone","nBones","boneTextureWidth","boneTextureHeight","boneTexture","pose","offsetMatrix","boneInverses","bl","normalizeSkinWeights","sw","lastKeyframe","currentKeyframe","directionBackwards","setFrameRange","startKeyframe","endKeyframe","setDirectionForward","setDirectionBackward","parseAnimations","firstAnimation","pattern","match","setAnimationLabel","playAnimation","fps","updateAnimation","frameTime","keyframe","mix","addLevel","Particle","overrideMaterial","__lights","__objectsAdded","__objectsRemoved","CanvasRenderer","calculateLights","_ambientLight","_directionalLights","_pointLights","ll","_lights","lightColor","calculateLight","_lightColor","lightPosition","amount","renderSprite","element","setOpacity","setBlending","_canvasWidthHalf","_canvasHeightHalf","dist","_elemBox","onTextureUpdate","textureToPattern","_patterns","setFillStyle","bitmap","ox","oy","_context","save","rotate","fillRect","restore","setStrokeStyle","renderLine","beginPath","moveTo","lineTo","setLineWidth","setLineCap","setLineJoin","colorStyle1","colorStyle2","grad","createLinearGradient","addColorStop","exception","stroke","setDashAndGap","renderFace3","uv1","uv3","render","_v1x","_v1y","_v2x","_v2y","_v3x","_v3y","drawTriangle","_diffuseColor","_emissiveColor","_color1","_color2","_color3","_color4","_image","getGradientTexture","clipImage","_color","strokePath","fillPath","_uvs","patternPath","_normal","_normalViewMatrix","_uv1x","_uv1y","_uv2x","_uv2y","_uv3x","_uv3y","_near","_camera","_far","x0","y0","closePath","fill","repeatX","repeatY","canvas","setTransform","createPattern","u0","u1","u2","idet","offsetX","offsetY","clip","color3","color4","_pixelMapData","_pixelMapContext","putImageData","_pixelMapImage","_gradientMapContext","_pixelMap","_gradientMap","expand","pixels","_contextGlobalAlpha","globalAlpha","_contextGlobalCompositeOperation","globalCompositeOperation","_contextLineWidth","lineWidth","_contextLineCap","lineCap","_contextLineJoin","lineJoin","_contextStrokeStyle","strokeStyle","_contextFillStyle","fillStyle","dashSizeValue","gapSizeValue","_contextDashSize","_contextGapSize","setLineDash","_elements","_v1","_v2","_v3","_projector","_canvas","_canvasWidth","_canvasHeight","_clearColor","_clearAlpha","_clearBox","_gradientMapQuality","getImageData","mozDash","domElement","devicePixelRatio","autoClear","supportsVertexTextures","setFaceCulling","setSize","updateStyle","setClearColor","setClearColorHex","getMaxAnisotropy","clear","clearRect","clearColor","clearDepth","clearStencil","el","ShaderChunk","common","fog_pars_fragment","fog_fragment","diffuseenvmap_pars_fragment","envmap_pars_fragment","envmap_fragment","worldpos_vertex","map_particle_pars_fragment","map_particle_fragment","map_pars_vertex","map_pars_fragment","map_vertex","map_fragment","falloffmap_pars_fragment","opacitymap_pars_fragment","opacitymap_fragment","translucencymap_pars_fragment","translucencymap_fragment","lightmap_pars_fragment","lightmap_pars_vertex","lightmap_fragment","lightmap_vertex","bumpmap_pars_fragment","lightattenuation_func_fragment","normalmap_pars_fragment","anisotropymap_pars_fragment","anisotropymap_fragment","anisotropyrotationmap_pars_fragment","anisotropyrotationmap_fragment","metallicmap_pars_fragment","metallicmap_fragment","roughnessmap_pars_fragment","roughnessmap_fragment","specularmap_pars_fragment","specularmap_fragment","lights_lambert_pars_vertex","lights_lambert_vertex","lights_physical_pars_vertex","lights_physical_vertex","lights_physical_pars_fragment","lights_physical_fragment","lights_phong_pars_vertex","lights_phong_vertex","lights_phong_pars_fragment","lights_phong_fragment","color_pars_fragment","color_fragment","color_pars_vertex","color_vertex","skinning_pars_vertex","skinbase_vertex","skinning_vertex","morphtarget_pars_vertex","morphtarget_vertex","default_vertex","morphnormal_vertex","skinnormal_vertex","defaultnormal_vertex","shadowmap_pars_fragment","shadowmap_fragment","shadowmap_pars_vertex","shadowmap_vertex","alphatest_fragment","linear_to_gamma_fragment","merge","merged","uniforms_src","parameter_src","uniforms_dst","UniformsLib","offsetRepeat","gainBrightness","envEncoding","diffuseEnvEncoding","flipEnvMap","useRefract","specularmap","specularOffsetRepeat","specularGainBrightness","bumpmap","bumpOffsetRepeat","opacitymap","opacityOffsetRepeat","opacityGainBrightness","normalmap","normalOffsetRepeat","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","directionalLightDirection","directionalLightColor","hemisphereLightDirection","hemisphereLightSkyColor","hemisphereLightGroundColor","pointLightColor","pointLightPosition","pointLightDistance","pointLightDecayExponent","spotLightColor","spotLightPosition","spotLightDirection","spotLightDistance","spotLightDecayExponent","spotLightAngleCos","spotLightExponent","areaLightColor","areaLightPosition","areaLightDistance","areaLightDecayExponent","areaLightWidth","areaLightHeight","particle","psColor","shadowmap","physical","roughnessOffsetRepeat","roughnessGainBrightness","metallicOffsetRepeat","metallicGainBrightness","anisotropyOffsetRepeat","anisotropyGainBrightness","anisotropyRotationOffsetRepeat","anisotropyRotationGainBrightness","basic","lambert","phong","particle_basic","dashed","totalSize","mNear","mFar","enableAO","enableDiffuse","enableSpecular","enableReflection","enableDisplacement","tDisplacement","tDiffuse","tCube","tNormal","tSpecular","tAO","uNormalScale","uDisplacementBias","uDisplacementScale","uOffset","uRepeat","cube","tFlip","tEncoding","blurring","depthRGBA","linearDepthRGBA","zNear","zFar","WebGLRenderer","createParticleBuffers","__webglVertexBuffer","_gl","createBuffer","__webglColorBuffer","memory","createLineBuffers","__webglLineDistanceBuffer","createMeshBuffers","geometryGroup","__webglNormalBuffer","__webglTangentBuffer","__webglUVBuffer","__webglUV2Buffer","__webglSkinIndicesBuffer","__webglSkinWeightsBuffer","__webglFaceBuffer","__webglLineBuffer","__webglMorphTargetsBuffers","__webglMorphNormalsBuffers","initCustomAttributes","nvertices","__webglCustomAttributesList","__webglInitialized","createUniqueBuffers","buffer","belongsToAttribute","initParticleBuffers","__vertexArray","__colorArray","__sortArray","__webglParticleCount","initLineBuffers","__lineDistanceArray","__webglLineCount","initMeshBuffers","ntris","nlines","getBufferMaterial","uvType","bufferGuessUVType","normalType","bufferGuessNormalType","vertexColorType","bufferGuessVertexColorType","__normalArray","__tangentArray","__uvArray","__uv2Array","__skinIndexArray","__skinWeightArray","__faceArray","__lineArray","__morphTargetsArrays","__morphNormalsArrays","__webglFaceCount","originalAttribute","property","__original","__inittedArrays","materialNeedsSmoothNormals","reflectivityMap","initDirectBuffers","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","bindBuffer","bufferData","STATIC_DRAW","setParticleBuffers","hint","ca","cal","customAttribute","vertexArray","colorArray","sortArray","dirtyVertices","dirtyColors","customAttributes","_projScreenMatrixPS","_projScreenMatrix","numericalSort","boundTo","setLineBuffers","dl","lineDistanceArray","dirtyLineDistances","setMeshBuffers","faceColor","n1","n3","sw1","sw2","sw3","si1","si2","si3","vn","uvi","uv2i","vk","vkl","vka","nka","chf","needsSmoothNormals","offset_uv","offset_uv2","offset_face","offset_normal","offset_tangent","offset_line","offset_color","offset_skin","offset_morphTarget","offset_custom","uvArray","uv2Array","normalArray","tangentArray","skinIndexArray","skinWeightArray","morphTargetsArrays","morphNormalsArrays","faceArray","lineArray","dirtyElements","dirtyUvs","dirtyNormals","dirtyTangents","dirtyMorphTargets","morphTargetsNeedUpdate","chunk_faces3","obj_faces","obj_uvs","obj_uvs2","obj_skinIndices","obj_skinWeights","pp","setupLinesVertexAttributes","programAttributes","geometryAttributes","startIndex","attributeItem","attributeName","attributePointer","attributeSize","enableAttribute","vertexAttribPointer","FLOAT","vertexAttrib2fv","vertexAttrib3fv","setDirectBuffers","_enabledAttributes","enableVertexAttribArray","disableAttributes","disableVertexAttribArray","setupMorphTargets","influences","numSupportedMorphTargets","__webglMorphTargetInfluences","activeInfluenceIndices","numSupportedMorphNormals","influenceIndex","uniform1fv","painterSortStable","renderPlugins","plugins","_currentProgram","_currentCamera","_oldBlending","_oldDepthTest","_oldDepthWrite","_oldDoubleSided","_oldFlipSided","_currentGeometryGroupHash","_currentMaterialId","_lightsNeedUpdate","_currentWidth","_currentHeight","renderObjects","reverse","materialType","useBlending","webglObject","setDepthTest","setDepthWrite","setPolygonOffset","setMaterialFaces","renderBufferDirect","renderBuffer","renderObjectsImmediate","renderImmediateObject","unrollImmediateBufferMaterial","globject","opaque","unrollBufferMaterial","addObject","__webglInit","_modelViewMatrix","onGeometryDispose","__webglActive","addBuffer","__webglObjects","ImmediateRenderObject","immediateRenderCallback","addBufferImmediate","__webglObjectsImmediate","__webglSprites","LensFlare","__webglFlares","objlist","updateObject","customAttributesDirty","DYNAMIC_DRAW","areCustomAttributesDirty","clearCustomAttributes","removeObject","removeInstances","removeInstancesDirect","setMaterialShaders","shaders","setProgram","_usedTextureUnits","oldProgram","initMaterial","deallocateMaterial","maxMorphTargets","refreshMaterial","p_uniforms","m_uniforms","useProgram","uniformMatrix4fv","_supportsBoneTextures","textureUnit","getTextureUnit","uniform1i","setTexture","boneGlobalMatrices","refreshUniformsFog","setupLights","refreshUniformsLights","refreshUniformsCommon","refreshUniformsLine","refreshUniformsDash","refreshUniformsParticle","refreshUniformsPhong","refreshUniformsPhysical","refreshUniformsLambert","_shadowPass","refreshUniformsShadow","loadUniformsGeneric","uniformsList","cameraPosition","uniform3f","viewMatrix","loadUniformsMatrices","modelMatrix","WebGLRenderTargetCube","directional","distances","decayExponents","spot","directions","anglesCos","exponents","hemi","skyColors","groundColors","widths","heights","modelViewMatrix","uniformMatrix3fv","_maxTextures","uniform","location","uniform1f","uniform2f","uniform4f","uniform1iv","uniform3iv","uniform3fv","_array","uniform2fv","uniform4fv","setCubeTexture","setCubeTextureDynamic","setupMatrices","setColorLinear","zlights","dirColors","dirPositions","pointColors","pointPositions","pointDistances","pointDecayExponents","spotColors","spotPositions","spotDistances","spotDecayExponents","spotDirections","spotAnglesCos","spotExponents","hemiSkyColors","hemiGroundColors","hemiPositions","areaColors","areaPositions","areaDistances","areaDecayExponents","areaWidths","areaHeights","dirLength","pointLength","spotLength","hemiLength","areaLength","dirCount","pointCount","spotCount","hemiCount","areaCount","dirOffset","pointOffset","spotOffset","hemiOffset","areaOffset","_direction","_width","_height","_oldLineWidth","polygonoffset","factor","units","_oldPolygonOffset","enable","POLYGON_OFFSET_FILL","disable","_oldPolygonOffsetFactor","_oldPolygonOffsetUnits","generateDefines","chunk","buildProgram","pl","code","simpleChunks","simpleCode","_programs","programInfo","usedTimes","shadowMapTypeDefine","shadowMapType","customDefines","createProgram","supportsShaderTextureLOD","_glExtensionShaderTextureLOD","prefix_vertex","_precision","_supportsVertexTextures","gammaInput","gammaOutput","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","maxAreaLights","maxShadows","maxBones","shadowMapEnabled","shadowMapDebug","shadowMapCascade","prefix_fragment","useFog","fogExp","glVertexShader","getShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLogInfo","getProgramInfoLog","getProgramParameter","LINK_STATUS","gl_error_message","getError","glError","getProgramParameter_LINK_STATUS","getProgramParameter_VALIDATE_STATUS","VALIDATE_STATUS","getProgramParameter_ATTACHED_SHADERS","ATTACHED_SHADERS","getProgramParameter_ACTIVE_ATTRIBUTES","ACTIVE_ATTRIBUTES","getProgramParameter_ACTIVE_UNIFORMS","ACTIVE_UNIFORMS","gl_MAX_VARYING_VECTORS","MAX_VARYING_VECTORS","gl_MAX_VERTEX_ATTRIBS","MAX_VERTEX_ATTRIBS","gl_MAX_VERTEX_UNIFORM_VECTORS","MAX_VERTEX_UNIFORM_VECTORS","gl_MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","gl_MAX_FRAGMENT_UNIFORM_VECTORS","MAX_FRAGMENT_UNIFORM_VECTORS","gl_MAX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_IMAGE_UNITS","deleteShader","identifiers","cacheUniformLocations","maxMorphNormals","cacheAttributeLocations","_programs_counter","programs","getUniformLocation","getAttribLocation","addLineNumbers","string","createShader","FRAGMENT_SHADER","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","shaderInfoLog","getShaderInfoLog","shaderCode","setTextureParameters","textureType","isImagePowerOfTwo","texParameteri","TEXTURE_WRAP_S","paramThreeToGL","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","filterFallback","_glExtensionTextureFilterAnisotropic","__oldAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","_maxAnisotropy","clampToMaxSize","maxSize","maxDimension","newWidth","newHeight","slot","__webglTextureCube","onTextureDispose","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_CUBE_MAP","pixelStorei","UNPACK_FLIP_Y_WEBGL","cubeImage","autoScaleCubemaps","_maxCubemapSize","glFormat","glType","mipmap","compressedTexImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","texImage2D","generateMipmap","__webglTexture","setupFrameBuffer","framebuffer","renderTarget","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","setupRenderBuffer","renderbuffer","bindRenderbuffer","RENDERBUFFER","optionsString","depthBuffer","stencilBuffer","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","updateRenderTargetMipmap","TEXTURE_2D","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","_glExtensionCompressedTextureS3TC","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","allocateBones","nVertexUniforms","nVertexMatrices","allocateLights","dirLights","pointLights","spotLights","hemiLights","areaLights","allocateShadows","_alpha","_premultipliedAlpha","premultipliedAlpha","_antialias","antialias","_stencil","stencil","_preserveDrawingBuffer","preserveDrawingBuffer","autoClearColor","autoClearDepth","autoClearStencil","autoUpdateObjects","shadowMapAutoUpdate","shadowMapCullFace","renderPluginsPre","renderPluginsPost","calls","_glExtensionTextureFloat","_glExtensionTextureFloatLinear","_glExtensionStandardDerivatives","_currentFramebuffer","_oldBlendEquation","_oldBlendSrc","_oldBlendDst","_viewportX","_viewportY","_viewportWidth","_viewportHeight","getExtension","getShaderPrecisionFormat","rangeMin","rangeMax","DEPTH_TEST","depthFunc","LEQUAL","frontFace","CCW","cullFace","BACK","CULL_FACE","BLEND","blendFunc","viewport","_maxVertexTextures","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_TEXTURE_MAX_ANISOTROPY_EXT","_vertexShaderPrecisionHighpFloat","COMPRESSED_TEXTURE_FORMATS","HIGH_FLOAT","_vertexShaderPrecisionMediumpFloat","MEDIUM_FLOAT","_fragmentShaderPrecisionHighpFloat","LOW_FLOAT","_fragmentShaderPrecisionMediumpFloat","highpAvailable","HIGH_INT","MEDIUM_INT","LOW_INT","mediumpAvailable","supportsFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","getPrecision","setViewport","setScissor","scissor","enableScissorTest","SCISSOR_TEST","getClearColor","getClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","setRenderTarget","addPostPlugin","plugin","init","addPrePlugin","updateShadowMap","shadowMapPlugin","deallocateGeometry","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","onMaterialDispose","deleteBuffers","deleteBuffer","deleteTexture","deleteFramebuffer","__webglFramebuffer","deleteRenderbuffer","__webglRenderbuffer","optionalDisconnectedProgram","deleteProgram","newPrograms","renderBufferImmediate","hasPositions","hasNormals","hasUvs","__webglUvBuffer","hasColors","positionArray","nx","ny","nz","nax","nbx","ncx","nay","nby","ncy","naz","nbz","ncz","drawArrays","TRIANGLES","updateBuffers","wireframeBit","geometryHash","drawElements","POINTS","primitives","LINE_STRIP","LINES","geometryGroupHash","tangent","skinIndex","skinWeight","lineDistance","forceClear","initWebGLObjects","maxLightCount","base","frontFaceDirection","CW","FRONT","FRONT_AND_BACK","depthMask","blendEquationSeparate","blendFuncSeparate","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","isCube","isTargetPowerOfTwo","createFramebuffer","createRenderbuffer","shareDepthFrom","vx","vy","activeCubeFace","ShadowMapPlugin","SpritePlugin","LensFlarePlugin","WebGLRenderTarget","GeometryUtils","geometry1","object2","materialIndexOffset","vertexOffset","geometry2","vertices1","vertices2","faces1","faces2","uvs1","uvs2","vertexCopy","faceCopy","faceVertexColors","randomPointInTriangle","vectorA","vectorB","vectorC","randomPointInFace","useCachedAreas","randomPointsInGeometry","totalArea","cumulativeAreas","_area","triangleArea","stats","binarySearch","mid","vector1","vector2","triangulateQuads","response","dds","parseDDS","responseType","images","loadCount","rq","img","isCubemap","mipmapCount","loadDDSTexture","loadMipmaps","fourCCToInt32","charCodeAt","FOURCC_DXT1","FOURCC_DXT3","FOURCC_DXT5","header","blockBytes","fourCC","isRGBAUncompressed","String","fromCharCode","dataOffset","byteArray","dataLength","srcBuffer","dst","getNormalMap","subtract","imageData","createImageData","output","ly","uy","lx","ux","num_points","generateDataTexture","SceneUtils","createMultiMaterialObject","group","detach","attach","FontUtils","divisions","getFace","loadFace","family","familyName","ThreeFont","cssFontWeight","cssFontStyle","drawText","resolution","fontPaths","path","Path","ret","extractGlyphPoints","paths","outline","cpx","cpy","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","pts","glyph","glyphs","_cachedOutline","quadraticCurveTo","Shape","Utils","bezierCurveTo","b3","ha","generateShapes","curveSegments","font","shapes","toShapes","namespace","process","contour","verts","vertIndices","nv","snip","px","py","aX","aY","bX","bY","cX","cY","apx","apy","bpx","bpy","cCROSSap","bCROSScp","aCROSSbp","Triangulate","_typeface_js","typeface_js","Curve","getPointAt","getUtoTmapping","getPoints","getSpacedPoints","lengths","getLengths","__arcLengthDivisions","cacheArcLengths","current","cache","last","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","getTangentAt","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","getPointFunc","CurvePath","curves","bends","autoClose","curve","checkConnection","startPoint","endPoint","LineCurve","curveLengths","getCurveLengths","lens","cacheLengths","sums","maxX","maxY","maxZ","minX","minY","minZ","NEGATIVE_INFINITY","POSITIVE_INFINITY","createPointsGeometry","createGeometry","createSpacedPointsGeometry","addWrapPath","bendpath","getTransformedPoints","oldPts","getWrapPoints","getTransformedSpacedPoints","oldX","oldY","xNorm","bounds","pathPt","Gyroscope","translationWorld","quaternionWorld","scaleWorld","translationObject","quaternionObject","scaleObject","actions","fromPoints","PathActions","MOVE_TO","LINE_TO","QUADRATIC_CURVE_TO","BEZIER_CURVE_TO","CSPLINE_THRU","ARC","ELLIPSE","vectors","vlen","args","action","lastargs","aCPx","aCPy","QuadraticBezierCurve","aCP1x","aCP1y","aCP2x","aCP2y","CubicBezierCurve","splineThru","npts","SplineCurve","aRadius","aStartAngle","aEndAngle","aClockwise","absarc","absellipse","ellipse","xRadius","yRadius","EllipseCurve","lastPoint","closedPath","useSpacedPoints","item","spts","concat","spline","deltaAngle","tdivisions","isCCW","subPaths","lastPath","solid","tmpPath","tmpShape","holesFirst","isClockWise","tmpPoints","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambigious","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","inPt","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","froms","tos","hole","tmpHoles","holes","extrude","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","holesPts","getSpacedPointsHoles","extractAllPoints","shape","extractPoints","extractAllSpacedPoints","triangulateShape","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","allPointsMap","allpoints","hl","shapeWithoutHoles","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","indepHoles","failedCuts","h2","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","inShapePt","inHolePt","nextIdx","intersection","ihIdx","chkHole","triangles","b2p0","b2p1","b2p2","b3p0","b3p1","b3p2","b3p3","ArcCurve","LineCurve3","QuadraticBezierCurve3","tz","CubicBezierCurve3","SplineCurve3","pt0","pt2","pt3","ClosedSplineCurve3","AnimationHandler","playing","library","that","deltaTimeMS","addToUpdate","removeFromUpdate","initData","get","hierarchy","parseRecurseHierarchy","initialized","keys","usedMorphTargets","morphTargetName","morphTargetsInfluences","CATMULLROM","CATMULLROM_FORWARD","Animation","currentTime","timeScale","isPlaying","isPaused","loop","interpolationType","play","reset","pause","animationCache","prevKey","nextKey","originalMatrix","getNextKeyWith","interpolateCatmullRom","prevXYZ","nextXYZ","getPrevKeyWith","currentPoint","forwardPoint","KeyFrameAnimation","sids","sid","next","endTime","original","hasTarget","MorphAnimation","mesh","frames","lastFrame","currentFrame","interpolation","frame","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCubeMap","renderer","CombinedCamera","orthoNear","orthoFar","cameraO","cameraP","zoom","toPerspective","inPerspectiveMode","inOrthographicMode","toOrthographic","hyperfocus","halfHeight","planeHeight","planeWidth","halfWidth","setFov","setZoom","toFrontView","toBackView","toLeftView","toRightView","toTopView","toBottomView","buildPlane","udir","vdir","gridX","gridY","width_half","height_half","gridX1","gridY1","segment_width","segment_height","uva","uvb","uvc","uvd","depth_half","centerUV","segment","CubeGeometry","heightHalf","verticesRow","uvsRow","na","nb","tanTheta","v4","n4","uv4","shapebb","addShapeList","addShape","scalePt2","vec","getBevelVec","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","colinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","sidewalls","layeroffset","steps","bevelSegments","slen1","slen2","f4","f3","isBottom","shapesOffset","uvgen","generateBottomUV","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","extrudeMaterial","generateSideWallUV","extrudePts","splineTube","binormal","position2","bevelThickness","bevelSize","bevelEnabled","extrudePath","extrudeByPath","UVGenerator","WorldUVGenerator","TubeGeometry","FrenetFrames","ahole","shapePoints","bs","vert","flen","contourMovements","oneHoleMovements","holesMovements","verticesMovements","binormals","layer","extrudedShape","extrudeOptions","indexA","indexB","indexC","indexD","__v1","__v2","__v3","__v4","__v5","__v6","LatheGeometry","inversePointLength","inverseSegments","phi","np","gridZ","gridZ1","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegment","TextGeometry","textShapes","getPos","in_q","in_p","cu","su","quOverP","cs","grid","tang","bitan","ip","jp","closed","numpoints","pos2","smallest","epsilon","MAX_VALUE","PolyhedronGeometry","prepare","azimuth","inclination","make","azi","correctUV","cols","aj","bj","rows","OctahedronGeometry","TetrahedronGeometry","ParametricGeometry","func","slices","stacks","sliceCount","AxisHelper","ArrowHelper","dir","headLength","headWidth","lineGeometry","coneGeometry","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","CameraHelper","addLine","pointMap","projector","setPoint","DirectionalLightHelper","lightPlane","targetLine","EdgesHelper","edge","sortFunction","numEdges","vert1","vert2","face1","face2","FaceNormalsHelper","worldMatrix","GridHelper","setColors","colorCenterLine","colorGrid","HemisphereLightHelper","sphereSize","arrowLength","domeSize","lightSphere","PointLightHelper","SpotLightHelper","coneLength","coneWidth","VertexNormalsHelper","vertexId","VertexTangentsHelper","WireframeHelper","edges","index2","numTris","index1","renderCallback","lensFlares","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","MorphBlendMesh","animationsMap","animationsList","numFrames","endFrame","createAnimation","setAnimationWeight","startFrame","active","autoCreateAnimations","frameRanges","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","stopAnimation","prefix","_renderer","_lensFlare","vertexBuffer","elementBuffer","tempTexture","occlusionTexture","hasVertexTexture","ShaderFlares","renderType","occlusionMap","screenPosition","viewportWidth","viewportHeight","flares","nFlares","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","TEXTURE1","copyTexImage2D","createVirtualLight","cascade","virtualLight","isVirtual","pointsWorld","pointsFrustum","nearZ","farZ","updateVirtualLight","updateShadowCamera","_min","_max","__projector","getObjectMaterial","_depthMaterial","_depthMaterialMorph","_depthMaterialSkin","_depthMaterialMorphSkin","_matrixPosition","depthShader","depthUniforms","originalCamera","gyro","shadowFilter","pars","cameraHelper","objectMaterial","useMorphing","useSkinning","customDepthMaterial","clearAlpha","_texture","uvOffset","uvScale","fogType","sprites","nSprites","oldFogType","sceneFogType","DepthPassPlugin","enabled","lensFlareVertexTexture","lensFlare","1104","__webpack_exports__","_vm","_h","$createElement","_c","_self","staticClass","attrs","_v","href","span","_s","author","md","staticRenderFns","_withStripped","esExports","1105","872","injectStyle","ssrContext","disposed","defineProperty","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_1_vue_loader_lib_selector_type_script_index_0_Index_vue__","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_1_vue_loader_lib_selector_type_script_index_0_Index_vue___default","__WEBPACK_IMPORT_KEY__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_1_vue_loader_lib_template_compiler_index_id_data_v_eb8004ea_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_1_vue_loader_lib_selector_type_template_index_0_Index_vue__","normalizeComponent","__vue_styles__","Component","__file","875","version","keywords","repository","bugs","homepage","description","license","main","files","engines","npm","directories","example","scripts","dist:style","dist:dev","dist:prod","publish","clean","clean:example","example:dev","example:dist","dependencies","async-validator","axios","clipboard","core-js","deepmerge","element-resize-detector","fs","lodash.throttle","moment","parallax","popper.js","postcss-loader","prettify","prism","qs","resize-observer-polyfill","swiper","three","throttle-debounce","tinycolor2","vue","vue-i18n","vue-qart","vue-router","vuex","devDependencies","amd-optimize","autoprefixer","babel","babel-core","babel-helper-vue-jsx-merge-props","babel-loader","babel-plugin-syntax-jsx","babel-plugin-transform-vue-jsx","babel-preset-es2015","babel-preset-stage-2","babel-preset-stage-3","babel-runtime","chai","chalk","compression-webpack-plugin","copy-webpack-plugin","css-loader","es2015","extract-text-webpack-plugin","file-loader","friendly-errors-webpack-plugin","gulp","gulp-babel","gulp-clean-css","gulp-concat","gulp-minify-css","gulp-modify-css-urls","gulp-rename","gulp-sass","gulp-scss","gulp-sourcemaps","gulp-webpack","gulpfile","html-webpack-plugin","karma","karma-chrome-launcher","karma-coverage","karma-mocha","karma-sinon-chai","karma-sourcemap-loader","karma-spec-reporter","karma-webpack","node-notifier","node-sass","optimize-css-assets-webpack-plugin","ora","postcss-import","resolve-url-loader","rimraf","sass-loader","scss","scss-loader","semver","shelljs","style-loader","stylus-loader","url-loader","vue-hot-reload-api","vue-html-loader","vue-loader","vue-style-loader","vue-template-compiler","webpack","webpack-bundle-analyzer","webpack-dev-server","webpack-hot-middleware","webpack-merge","940","_package","_package2","__esModule","default","_three","computed","mounted","onWindowResize","window","getComputedStyle","container","replace","windowHalfX","windowHalfY","onDocumentMouseMove","mouseX","clientX","mouseY","clientY","animate","AMOUNTX","AMOUNTY","particles","SEPARATION","getElementById","innerWidth","innerHeight","appendChild"],"mappings":"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N,gBACA97D,EAAM87D,YAAN,aAEA97D,EAAM87D,YAAN,mBACA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,qBAEA,4CAEA97D,EAAM87D,YAAN,mBACA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,eAEA,mCAEA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,uBACA97D,EAAM87D,YAAN,iBAED,KAEC1nC,KAAK,MAEPwnB,gBAEC,8BACC,gDACD,SACA,mBACA,wBACA,yBAEA,wBACA,yBACA,6BACA,mCACA,yBACA,2BACA,0BACA,2BACA,oCAEA,6BACA,yCACA,yCACA,uCACA,uCAEA,4BACA,oCAEA57C,EAAM87D,YAAN,OACA97D,EAAM87D,YAAN,oBACA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,yBACA97D,EAAM87D,YAAN,yBACA97D,EAAM87D,YAAN,8BACA97D,EAAM87D,YAAN,uBACA97D,EAAM87D,YAAN,qBACA97D,EAAM87D,YAAN,4BACA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,8BACA97D,EAAM87D,YAAN,wBACA97D,EAAM87D,YAAN,sBACA97D,EAAM87D,YAAN,wBACA97D,EAAM87D,YAAN,0BACA97D,EAAM87D,YAAN,4BACA97D,EAAM87D,YAAN,oCACA97D,EAAM87D,YAAN,0BACA97D,EAAM87D,YAAN,2BACA97D,EAAM87D,YAAN,8BACA97D,EAAM87D,YAAN,+BAEA,gBAEC,gDACA,+BACA,yCACA,sCACA,mDAEA97D,EAAM87D,YAAN,aACA97D,EAAM87D,YAAN,oBACA97D,EAAM87D,YAAN,mBACA97D,EAAM87D,YAAN,qBACA97D,EAAM87D,YAAN,uBACA97D,EAAM87D,YAAN,+BACA97D,EAAM87D,YAAN,sBACA97D,EAAM87D,YAAN,qBACA97D,EAAM87D,YAAN,yBACA97D,EAAM87D,YAAN,yBAEA97D,EAAM87D,YAAN,yBAEA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,eACA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,mBAEA97D,EAAM87D,YAAN,yBAEA97D,EAAM87D,YAAN,aAEA,sCAED,KAEC1nC,KAAK,OAIRwvC,OAECroB,SAAUv7C,EAAMw7C,cAAcukB,OAE7B//D,EAAMogE,YAAN,OACApgE,EAAMogE,YAAN,IACApgE,EAAMogE,YAAN,YAIDvkB,cAEC77C,EAAM87D,YAAN,OACA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,qBACA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,wBACA97D,EAAM87D,YAAN,qBACA97D,EAAM87D,YAAN,sBAEA,gBAEC97D,EAAM87D,YAAN,WACA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,aACA97D,EAAM87D,YAAN,gBAEA,oBAEA97D,EAAM87D,YAAN,mBACA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,qBAEA,SAEA97D,EAAM87D,YAAN,mBACA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,eAEA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,iBAED,KAEC1nC,KAAK,MAEPwnB,gBAEC,wBACA,yBAEA57C,EAAM87D,YAAN,OACA97D,EAAM87D,YAAN,oBACA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,uBACA97D,EAAM87D,YAAN,qBACA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,wBACA97D,EAAM87D,YAAN,0BAEA,gBAEC,2CAEA97D,EAAM87D,YAAN,aACA97D,EAAM87D,YAAN,mBACA97D,EAAM87D,YAAN,qBACA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,eACA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,mBAEA97D,EAAM87D,YAAN,yBAEA97D,EAAM87D,YAAN,aAED,KAEC1nC,KAAK,OAIRyvC,SAECtoB,SAAUv7C,EAAMw7C,cAAcukB,OAE7B//D,EAAMogE,YAAN,OACApgE,EAAMogE,YAAN,IACApgE,EAAMogE,YAAN,OACApgE,EAAMogE,YAAN,WAGC9mB,SAAerf,KAAM,IAAKnyB,MAAO,GAAI9H,GAAMmH,MAAO,WAClDy4C,UAAe3lB,KAAM,IAAKnyB,MAAO,GAAI9H,GAAMmH,MAAO,IAClDykD,SAAe3xB,KAAM,KAAMnyB,MAAO,GAAI9H,GAAMya,QAAS,EAAG,EAAG,OAK7DohC,cAEC,kBAEA,4BAEA,sBAEC,2BAED,SAEA77C,EAAM87D,YAAN,OACA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,qBACA97D,EAAM87D,YAAN,2BACA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,wBACA97D,EAAM87D,YAAN,qBACA97D,EAAM87D,YAAN,sBACA97D,EAAM87D,YAAN,+BAEA,gBAEC97D,EAAM87D,YAAN,WACA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,aAEA97D,EAAM87D,YAAN,mBACA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,qBAEA97D,EAAM87D,YAAN,mBACA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,eAEA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,sBACA97D,EAAM87D,YAAN,iBAED,KAEC1nC,KAAK,MAEPwnB,gBAEC,yBAEA,4BAEA,sBAEC,2BAED,SAEA57C,EAAM87D,YAAN,OACA97D,EAAM87D,YAAN,oBACA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,uBACA97D,EAAM87D,YAAN,qBACA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,wBACA97D,EAAM87D,YAAN,0BAEA,gBAEC,gDAEA97D,EAAM87D,YAAN,aACA97D,EAAM87D,YAAN,mBACA97D,EAAM87D,YAAN,qBAEA,sBAKC,wBACC,mCACD,OACC,kCAEF,QAEC,mCAED,SAEA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,eACA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,mBAEA97D,EAAM87D,YAAN,yBAEA97D,EAAM87D,YAAN,aAED,KAEC1nC,KAAK,OAIR0vC,OAECvoB,SAAUv7C,EAAMw7C,cAAcukB,OAE7B//D,EAAMogE,YAAN,OACApgE,EAAMogE,YAAN,QACApgE,EAAMogE,YAAN,UACApgE,EAAMogE,YAAN,YACApgE,EAAMogE,YAAN,IACApgE,EAAMogE,YAAN,OACApgE,EAAMogE,YAAN,UACApgE,EAAMogE,YAAN,YAGC9mB,SAAerf,KAAM,IAAKnyB,MAAO,GAAI9H,GAAMmH,MAAO,WAClDy4C,UAAe3lB,KAAM,IAAKnyB,MAAO,GAAI9H,GAAMmH,MAAO,IAClDiyC,UAAenf,KAAM,IAAKnyB,MAAO,GAAI9H,GAAMmH,MAAO,UAClDsyC,WAAexf,KAAM,IAAKnyB,MAAO,IACjC8jD,SAAe3xB,KAAM,KAAMnyB,MAAO,GAAI9H,GAAMya,QAAS,EAAG,EAAG,OAK7DohC,cAEC,gBAEA,8BACA,wBAEA77C,EAAM87D,YAAN,OACA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,sBACA97D,EAAM87D,YAAN,oBACA97D,EAAM87D,YAAN,wBACA97D,EAAM87D,YAAN,uBACA97D,EAAM87D,YAAN,qBACA97D,EAAM87D,YAAN,yBACA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,wBACA97D,EAAM87D,YAAN,qBACA97D,EAAM87D,YAAN,sBAEA,gBAEC97D,EAAM87D,YAAN,WACA97D,EAAM87D,YAAN,iBACA97D,EAAM87D,YAAN,eACA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,mBACA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,aAEA97D,EAAM87D,YAAN,mBACA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,qBAEA,4CAEA97D,EAAM87D,YAAN,mBACA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,eAEA,mCAEA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,oBACA97D,EAAM87D,YAAN,iBAED,KAEC1nC,KAAK,MAEPwnB,gBAEC,gBAEA,wBACA,yBAEA,wBACA,yBACA,yBACA,2BAEA57C,EAAM87D,YAAN,OACA97D,EAAM87D,YAAN,oBACA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,yBACA97D,EAAM87D,YAAN,uBACA97D,EAAM87D,YAAN,qBACA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,2BACA97D,EAAM87D,YAAN,wBACA97D,EAAM87D,YAAN,sBACA97D,EAAM87D,YAAN,wBACA97D,EAAM87D,YAAN,0BACA97D,EAAM87D,YAAN,+BAEA,gBAEC,gDACA,+BAEA97D,EAAM87D,YAAN,aACA97D,EAAM87D,YAAN,oBACA97D,EAAM87D,YAAN,mBACA97D,EAAM87D,YAAN,qBAEA97D,EAAM87D,YAAN,sBAEA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,eACA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,mBAEA97D,EAAM87D,YAAN,yBAEA97D,EAAM87D,YAAN,aAED,KAEC1nC,KAAK,OAIR2vC,gBAECxoB,SAAWv7C,EAAMw7C,cAAcukB,OAE9B//D,EAAMogE,YAAN,SACApgE,EAAMogE,YAAN,YAIDvkB,cAEC,sBACA,uBAEA77C,EAAM87D,YAAN,OACA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,sBAEA,gBAEC97D,EAAM87D,YAAN,aAEA,6DAEA,6BACC,8DACD,QACC,uBACD,SAEA,+CAEA97D,EAAM87D,YAAN,gBACA97D,EAAM87D,YAAN,iBAED,KAEC1nC,KAAK,MAEPwnB,gBAEC,wBACA,yBAEA57C,EAAM87D,YAAN,OACA97D,EAAM87D,YAAN,oBACA97D,EAAM87D,YAAN,2BACA97D,EAAM87D,YAAN,kBACA97D,EAAM87D,YAAN,wBAEA,gBAEC,2CAEA97D,EAAM87D,YAAN,sBACA97D,EAAM87D,YAAN,mBACA97D,EAAM87D,YAAN,eACA97D,EAAM87D,YAAN,mBACA97D,EAAM87D,YAAN,aAED,KAEC1nC,KAAK,OAIR4vC,QAECzoB,SAAUv7C,EAAMw7C,cAAcukB,OAE7B//D,EAAMo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","file":"static/js/1.9765a905f9b7c65dbacb.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 1101:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1102);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(4)(\"5d4a8f24\", content, false, {});\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js?{\\\"sourceMap\\\":false}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-eb8004ea\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/_sass-loader@6.0.7@sass-loader/lib/loader.js?{\\\"sourceMap\\\":false}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector.js?type=styles&index=0!./Index.vue\", function() {\n     var newContent = require(\"!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js?{\\\"sourceMap\\\":false}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-eb8004ea\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/_sass-loader@6.0.7@sass-loader/lib/loader.js?{\\\"sourceMap\\\":false}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector.js?type=styles&index=0!./Index.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n\n/***/ 1102:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(3)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n#site-banner {\\n  height: 640px;\\n  overflow: hidden;\\n  background-color: #24292e;\\n  background-size: 100%;\\n  text-align: center;\\n  margin: 0;\\n}\\n#site-banner .image-layout-body {\\n    padding-top: 169px;\\n}\\n#site-banner .image-layout-body .site-description h1 {\\n      color: #fff;\\n}\\n#site-banner .image-layout-body .site-description h2 {\\n      color: #fff;\\n}\\n#site-banner .image-layout-body .site-description p {\\n      color: #fff;\\n}\\n#site-banner .canvas-box {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n    width: 100%;\\n    height: 100%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 1103:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar self=self||{};var THREE={REVISION:'66.81'};self.console=self.console||{info:function info(){},log:function log(){},debug:function debug(){},warn:function warn(){},error:function error(){}};(function(){var lastTime=0;var vendors=['ms','moz','webkit','o'];for(var x=0;x<vendors.length&&!self.requestAnimationFrame;++x){self.requestAnimationFrame=self[vendors[x]+'RequestAnimationFrame'];self.cancelAnimationFrame=self[vendors[x]+'CancelAnimationFrame']||self[vendors[x]+'CancelRequestAnimationFrame'];}if(self.requestAnimationFrame===undefined&&self['setTimeout']!==undefined){self.requestAnimationFrame=function(callback){var currTime=Date.now(),timeToCall=Math.max(0,16-(currTime-lastTime));var id=self.setTimeout(function(){callback(currTime+timeToCall);},timeToCall);lastTime=currTime+timeToCall;return id;};}if(self.cancelAnimationFrame===undefined&&self['clearTimeout']!==undefined){self.cancelAnimationFrame=function(id){self.clearTimeout(id);};}})();THREE.ExceptionErrorHandler=function(message,optionalData){console.error(message);console.error(optionalData);var error=new Error(message);error.optionalData=optionalData;throw error;};THREE.ConsoleErrorHandler=function(message,optionalData){console.error(message);console.error(optionalData);};THREE.ConsoleWarningHandler=function(message,optionalData){console.warn(message);console.warn(optionalData);};THREE.NullHandler=function(message,optionalData){};THREE.onerror=THREE.ExceptionErrorHandler;THREE.onwarning=THREE.ConsoleWarningHandler;THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1000;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.Linear=3000;THREE.sRGB=3001;THREE.RGBE=3002;THREE.LogLUV=3003;THREE.RGBM7=3004;THREE.RGBM16=3005;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.HalfType=2005;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(color){if(arguments.length===3){return this.setRGB(arguments[0],arguments[1],arguments[2]);}return this.set(color);};THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function set(value){if(value instanceof THREE.Color){this.copy(value);}else if(typeof value==='number'){this.setHex(value);}else if(typeof value==='string'){this.setStyle(value);}return this;},setHex:function setHex(hex){hex=Math.floor(hex);this.r=(hex>>16&255)/255;this.g=(hex>>8&255)/255;this.b=(hex&255)/255;return this;},setRGB:function setRGB(r,g,b){this.r=r;this.g=g;this.b=b;return this;},setHSL:function setHSL(h,s,l){if(s===0){this.r=this.g=this.b=l;}else{var hue2rgb=function hue2rgb(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*6*(2/3-t);return p;};var p=l<=0.5?l*(1+s):l+s-l*s;var q=2*l-p;this.r=hue2rgb(q,p,h+1/3);this.g=hue2rgb(q,p,h);this.b=hue2rgb(q,p,h-1/3);}return this;},setStyle:function setStyle(style){if(/^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(style)){var color=/^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(style);this.r=Math.min(255,parseInt(color[1],10))/255;this.g=Math.min(255,parseInt(color[2],10))/255;this.b=Math.min(255,parseInt(color[3],10))/255;return this;}if(/^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test(style)){var color=/^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec(style);this.r=Math.min(100,parseInt(color[1],10))/100;this.g=Math.min(100,parseInt(color[2],10))/100;this.b=Math.min(100,parseInt(color[3],10))/100;return this;}if(/^\\#([0-9a-f]{6})$/i.test(style)){var color=/^\\#([0-9a-f]{6})$/i.exec(style);this.setHex(parseInt(color[1],16));return this;}if(/^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(style)){var color=/^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(style);this.setHex(parseInt(color[1]+color[1]+color[2]+color[2]+color[3]+color[3],16));return this;}if(/^(\\w+)$/i.test(style)){this.setHex(THREE.ColorKeywords[style]);return this;}},copy:function copy(color){this.r=color.r;this.g=color.g;this.b=color.b;return this;},copyGammaToLinear:function copyGammaToLinear(color){this.r=color.r*color.r;this.g=color.g*color.g;this.b=color.b*color.b;return this;},copyLinearToGamma:function copyLinearToGamma(color){this.r=Math.sqrt(color.r);this.g=Math.sqrt(color.g);this.b=Math.sqrt(color.b);return this;},convertGammaToLinear:function convertGammaToLinear(){var r=this.r,g=this.g,b=this.b;this.r=r*r;this.g=g*g;this.b=b*b;return this;},convertLinearToGamma:function convertLinearToGamma(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this;},getHex:function getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0;},getHexString:function getHexString(){return('000000'+this.getHex().toString(16)).slice(-6);},getHSL:function getHSL(optionalTarget){var hsl=optionalTarget||{h:0,s:0,l:0};var r=this.r,g=this.g,b=this.b;var max=Math.max(r,g,b);var min=Math.min(r,g,b);var hue,saturation;var lightness=(min+max)/2.0;if(min===max){hue=0;saturation=0;}else{var delta=max-min;saturation=lightness<=0.5?delta/(max+min):delta/(2-max-min);switch(max){case r:hue=(g-b)/delta+(g<b?6:0);break;case g:hue=(b-r)/delta+2;break;case b:hue=(r-g)/delta+4;break;}hue/=6;}hsl.h=hue;hsl.s=saturation;hsl.l=lightness;return hsl;},getStyle:function getStyle(){return'rgb('+(this.r*255|0)+','+(this.g*255|0)+','+(this.b*255|0)+')';},offsetHSL:function offsetHSL(h,s,l){var hsl=this.getHSL();hsl.h+=h;hsl.s+=s;hsl.l+=l;this.setHSL(hsl.h,hsl.s,hsl.l);return this;},add:function add(color){this.r+=color.r;this.g+=color.g;this.b+=color.b;return this;},addColors:function addColors(color1,color2){this.r=color1.r+color2.r;this.g=color1.g+color2.g;this.b=color1.b+color2.b;return this;},addScalar:function addScalar(s){this.r+=s;this.g+=s;this.b+=s;return this;},multiply:function multiply(color){this.r*=color.r;this.g*=color.g;this.b*=color.b;return this;},multiplyScalar:function multiplyScalar(s){this.r*=s;this.g*=s;this.b*=s;return this;},lerp:function lerp(color,alpha){this.r+=(color.r-this.r)*alpha;this.g+=(color.g-this.g)*alpha;this.b+=(color.b-this.b)*alpha;return this;},equals:function equals(c){return c.r===this.r&&c.g===this.g&&c.b===this.b;},fromArray:function fromArray(array){this.r=array[0];this.g=array[1];this.b=array[2];return this;},toArray:function toArray(){return[this.r,this.g,this.b];},clone:function clone(){return new THREE.Color().setRGB(this.r,this.g,this.b);}};THREE.ColorKeywords={\"aliceblue\":0xF0F8FF,\"antiquewhite\":0xFAEBD7,\"aqua\":0x00FFFF,\"aquamarine\":0x7FFFD4,\"azure\":0xF0FFFF,\"beige\":0xF5F5DC,\"bisque\":0xFFE4C4,\"black\":0x000000,\"blanchedalmond\":0xFFEBCD,\"blue\":0x0000FF,\"blueviolet\":0x8A2BE2,\"brown\":0xA52A2A,\"burlywood\":0xDEB887,\"cadetblue\":0x5F9EA0,\"chartreuse\":0x7FFF00,\"chocolate\":0xD2691E,\"coral\":0xFF7F50,\"cornflowerblue\":0x6495ED,\"cornsilk\":0xFFF8DC,\"crimson\":0xDC143C,\"cyan\":0x00FFFF,\"darkblue\":0x00008B,\"darkcyan\":0x008B8B,\"darkgoldenrod\":0xB8860B,\"darkgray\":0xA9A9A9,\"darkgreen\":0x006400,\"darkgrey\":0xA9A9A9,\"darkkhaki\":0xBDB76B,\"darkmagenta\":0x8B008B,\"darkolivegreen\":0x556B2F,\"darkorange\":0xFF8C00,\"darkorchid\":0x9932CC,\"darkred\":0x8B0000,\"darksalmon\":0xE9967A,\"darkseagreen\":0x8FBC8F,\"darkslateblue\":0x483D8B,\"darkslategray\":0x2F4F4F,\"darkslategrey\":0x2F4F4F,\"darkturquoise\":0x00CED1,\"darkviolet\":0x9400D3,\"deeppink\":0xFF1493,\"deepskyblue\":0x00BFFF,\"dimgray\":0x696969,\"dimgrey\":0x696969,\"dodgerblue\":0x1E90FF,\"firebrick\":0xB22222,\"floralwhite\":0xFFFAF0,\"forestgreen\":0x228B22,\"fuchsia\":0xFF00FF,\"gainsboro\":0xDCDCDC,\"ghostwhite\":0xF8F8FF,\"gold\":0xFFD700,\"goldenrod\":0xDAA520,\"gray\":0x808080,\"green\":0x008000,\"greenyellow\":0xADFF2F,\"grey\":0x808080,\"honeydew\":0xF0FFF0,\"hotpink\":0xFF69B4,\"indianred\":0xCD5C5C,\"indigo\":0x4B0082,\"ivory\":0xFFFFF0,\"khaki\":0xF0E68C,\"lavender\":0xE6E6FA,\"lavenderblush\":0xFFF0F5,\"lawngreen\":0x7CFC00,\"lemonchiffon\":0xFFFACD,\"lightblue\":0xADD8E6,\"lightcoral\":0xF08080,\"lightcyan\":0xE0FFFF,\"lightgoldenrodyellow\":0xFAFAD2,\"lightgray\":0xD3D3D3,\"lightgreen\":0x90EE90,\"lightgrey\":0xD3D3D3,\"lightpink\":0xFFB6C1,\"lightsalmon\":0xFFA07A,\"lightseagreen\":0x20B2AA,\"lightskyblue\":0x87CEFA,\"lightslategray\":0x778899,\"lightslategrey\":0x778899,\"lightsteelblue\":0xB0C4DE,\"lightyellow\":0xFFFFE0,\"lime\":0x00FF00,\"limegreen\":0x32CD32,\"linen\":0xFAF0E6,\"magenta\":0xFF00FF,\"maroon\":0x800000,\"mediumaquamarine\":0x66CDAA,\"mediumblue\":0x0000CD,\"mediumorchid\":0xBA55D3,\"mediumpurple\":0x9370DB,\"mediumseagreen\":0x3CB371,\"mediumslateblue\":0x7B68EE,\"mediumspringgreen\":0x00FA9A,\"mediumturquoise\":0x48D1CC,\"mediumvioletred\":0xC71585,\"midnightblue\":0x191970,\"mintcream\":0xF5FFFA,\"mistyrose\":0xFFE4E1,\"moccasin\":0xFFE4B5,\"navajowhite\":0xFFDEAD,\"navy\":0x000080,\"oldlace\":0xFDF5E6,\"olive\":0x808000,\"olivedrab\":0x6B8E23,\"orange\":0xFFA500,\"orangered\":0xFF4500,\"orchid\":0xDA70D6,\"palegoldenrod\":0xEEE8AA,\"palegreen\":0x98FB98,\"paleturquoise\":0xAFEEEE,\"palevioletred\":0xDB7093,\"papayawhip\":0xFFEFD5,\"peachpuff\":0xFFDAB9,\"peru\":0xCD853F,\"pink\":0xFFC0CB,\"plum\":0xDDA0DD,\"powderblue\":0xB0E0E6,\"purple\":0x800080,\"red\":0xFF0000,\"rosybrown\":0xBC8F8F,\"royalblue\":0x4169E1,\"saddlebrown\":0x8B4513,\"salmon\":0xFA8072,\"sandybrown\":0xF4A460,\"seagreen\":0x2E8B57,\"seashell\":0xFFF5EE,\"sienna\":0xA0522D,\"silver\":0xC0C0C0,\"skyblue\":0x87CEEB,\"slateblue\":0x6A5ACD,\"slategray\":0x708090,\"slategrey\":0x708090,\"snow\":0xFFFAFA,\"springgreen\":0x00FF7F,\"steelblue\":0x4682B4,\"tan\":0xD2B48C,\"teal\":0x008080,\"thistle\":0xD8BFD8,\"tomato\":0xFF6347,\"turquoise\":0x40E0D0,\"violet\":0xEE82EE,\"wheat\":0xF5DEB3,\"white\":0xFFFFFF,\"whitesmoke\":0xF5F5F5,\"yellow\":0xFFFF00,\"yellowgreen\":0x9ACD32};THREE.Quaternion=function(x,y,z,w){this._x=x||0;this._y=y||0;this._z=z||0;this._w=w!==undefined?w:1;};THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:undefined,_updateEuler:function _updateEuler(callback){if(this._euler!==undefined){this._euler.setFromQuaternion(this,undefined,false);}},get x(){return this._x;},set x(value){this._x=value;this._updateEuler();},get y(){return this._y;},set y(value){this._y=value;this._updateEuler();},get z(){return this._z;},set z(value){this._z=value;this._updateEuler();},get w(){return this._w;},set w(value){this._w=value;this._updateEuler();},set:function set(x,y,z,w){this._x=x;this._y=y;this._z=z;this._w=w;this._updateEuler();return this;},copy:function copy(quaternion){this._x=quaternion._x;this._y=quaternion._y;this._z=quaternion._z;this._w=quaternion._w;this._updateEuler();return this;},setFromEuler:function setFromEuler(euler,update){if(!(euler instanceof THREE.Euler))return THREE.onerror('expecting a Euler',euler);var c1=Math.cos(euler._x/2);var c2=Math.cos(euler._y/2);var c3=Math.cos(euler._z/2);var s1=Math.sin(euler._x/2);var s2=Math.sin(euler._y/2);var s3=Math.sin(euler._z/2);if(euler.order==='XYZ'){this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;}else if(euler.order==='YXZ'){this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;}else if(euler.order==='ZXY'){this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;}else if(euler.order==='ZYX'){this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;}else if(euler.order==='YZX'){this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;}else if(euler.order==='XZY'){this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;}if(update!==false)this._updateEuler();return this;},setFromAxisAngle:function setFromAxisAngle(axis,angle){var halfAngle=angle/2,s=Math.sin(halfAngle);this._x=axis.x*s;this._y=axis.y*s;this._z=axis.z*s;this._w=Math.cos(halfAngle);this._updateEuler();return this;},setFromRotationMatrix:function setFromRotationMatrix(m){var te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10],trace=m11+m22+m33,s;if(trace>0){s=0.5/Math.sqrt(trace+1.0);this._w=0.25/s;this._x=(m32-m23)*s;this._y=(m13-m31)*s;this._z=(m21-m12)*s;}else if(m11>m22&&m11>m33){s=2.0*Math.sqrt(1.0+m11-m22-m33);this._w=(m32-m23)/s;this._x=0.25*s;this._y=(m12+m21)/s;this._z=(m13+m31)/s;}else if(m22>m33){s=2.0*Math.sqrt(1.0+m22-m11-m33);this._w=(m13-m31)/s;this._x=(m12+m21)/s;this._y=0.25*s;this._z=(m23+m32)/s;}else{s=2.0*Math.sqrt(1.0+m33-m11-m22);this._w=(m21-m12)/s;this._x=(m13+m31)/s;this._y=(m23+m32)/s;this._z=0.25*s;}this._updateEuler();return this;},inverse:function inverse(){this.conjugate().normalize();return this;},add:function add(q){this._x+=q._x;this._y+=q._y;this._z+=q._z;this._w+=q._w;return this;},sub:function sub(q){this._x-=q._x;this._y-=q._y;this._z-=q._z;this._w-=q._w;return this;},multiplyScalar:function multiplyScalar(s){this._x*=s;this._y*=s;this._z*=s;this._w*=s;return this;},conjugate:function conjugate(){this._x*=-1;this._y*=-1;this._z*=-1;this._updateEuler();return this;},lengthSq:function lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w;},length:function length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w);},normalize:function normalize(){var l=this.length();if(l===0){this._x=0;this._y=0;this._z=0;this._w=1;}else{l=1/l;this._x=this._x*l;this._y=this._y*l;this._z=this._z*l;this._w=this._w*l;}return this;},multiply:function multiply(q,p){if(p!==undefined){THREE.onwarning('DEPRECATED: Quaternion\\'s .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');return this.multiplyQuaternions(q,p);}return this.multiplyQuaternions(this,q);},multiplyQuaternions:function multiplyQuaternions(a,b){var qax=a._x,qay=a._y,qaz=a._z,qaw=a._w;var qbx=b._x,qby=b._y,qbz=b._z,qbw=b._w;this._x=qax*qbw+qaw*qbx+qay*qbz-qaz*qby;this._y=qay*qbw+qaw*qby+qaz*qbx-qax*qbz;this._z=qaz*qbw+qaw*qbz+qax*qby-qay*qbx;this._w=qaw*qbw-qax*qbx-qay*qby-qaz*qbz;this._updateEuler();return this;},multiplyVector3:function multiplyVector3(vector){THREE.onwarning('DEPRECATED: Quaternion\\'s .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');return vector.applyQuaternion(this);},slerp:function slerp(qb,t){var x=this._x,y=this._y,z=this._z,w=this._w;var cosHalfTheta=w*qb._w+x*qb._x+y*qb._y+z*qb._z;if(cosHalfTheta<0){this._w=-qb._w;this._x=-qb._x;this._y=-qb._y;this._z=-qb._z;cosHalfTheta=-cosHalfTheta;}else{this.copy(qb);}if(cosHalfTheta>=1.0){this._w=w;this._x=x;this._y=y;this._z=z;return this;}var halfTheta=Math.acos(cosHalfTheta);var sinHalfTheta=Math.sqrt(1.0-cosHalfTheta*cosHalfTheta);if(Math.abs(sinHalfTheta)<0.001){this._w=0.5*(w+this._w);this._x=0.5*(x+this._x);this._y=0.5*(y+this._y);this._z=0.5*(z+this._z);return this;}var ratioA=Math.sin((1-t)*halfTheta)/sinHalfTheta,ratioB=Math.sin(t*halfTheta)/sinHalfTheta;this._w=w*ratioA+this._w*ratioB;this._x=x*ratioA+this._x*ratioB;this._y=y*ratioA+this._y*ratioB;this._z=z*ratioA+this._z*ratioB;this._updateEuler();return this;},equals:function equals(quaternion){return quaternion._x===this._x&&quaternion._y===this._y&&quaternion._z===this._z&&quaternion._w===this._w;},fromArray:function fromArray(array){this._x=array[0];this._y=array[1];this._z=array[2];this._w=array[3];this._updateEuler();return this;},toArray:function toArray(){return[this._x,this._y,this._z,this._w];},clone:function clone(){return new THREE.Quaternion(this._x,this._y,this._z,this._w);}};THREE.Quaternion.slerp=function(qa,qb,qm,t){return qm.copy(qa).slerp(qb,t);};THREE.Vector2=function(x,y){this.x=x||0;this.y=y||0;};THREE.Vector2.prototype={constructor:THREE.Vector2,set:function set(x,y){this.x=x;this.y=y;return this;},setX:function setX(x){this.x=x;return this;},setY:function setY(y){this.y=y;return this;},setComponent:function setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;default:return THREE.onerror('index is out of range: '+index);}},getComponent:function getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;default:return THREE.onerror('index is out of range: '+index);}},copy:function copy(v){this.x=v.x;this.y=v.y;return this;},add:function add(v,w){if(w!==undefined){THREE.onwarning('DEPRECATED: Vector2\\'s .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;return this;},addVectors:function addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this;},addScalar:function addScalar(s){this.x+=s;this.y+=s;return this;},sub:function sub(v,w){if(w!==undefined){THREE.onwarning('DEPRECATED: Vector2\\'s .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;return this;},subVectors:function subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this;},multiplyScalar:function multiplyScalar(s){this.x*=s;this.y*=s;return this;},divideScalar:function divideScalar(scalar){if(scalar!==0){var invScalar=1/scalar;this.x*=invScalar;this.y*=invScalar;}else{this.x=0;this.y=0;}return this;},min:function min(v){if(this.x>v.x){this.x=v.x;}if(this.y>v.y){this.y=v.y;}return this;},max:function max(v){if(this.x<v.x){this.x=v.x;}if(this.y<v.y){this.y=v.y;}return this;},clamp:function clamp(min,max){if(this.x<min.x){this.x=min.x;}else if(this.x>max.x){this.x=max.x;}if(this.y<min.y){this.y=min.y;}else if(this.y>max.y){this.y=max.y;}return this;},clampScalar:function(){var min,max;return function(minVal,maxVal){if(min===undefined){min=new THREE.Vector2();max=new THREE.Vector2();}min.set(minVal,minVal);max.set(maxVal,maxVal);return this.clamp(min,max);};}(),floor:function floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this;},ceil:function ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this;},round:function round(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this;},roundToZero:function roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);return this;},negate:function negate(){return this.multiplyScalar(-1);},dot:function dot(v){return this.x*v.x+this.y*v.y;},lengthSq:function lengthSq(){return this.x*this.x+this.y*this.y;},length:function length(){return Math.sqrt(this.x*this.x+this.y*this.y);},normalize:function normalize(){return this.divideScalar(this.length());},distanceTo:function distanceTo(v){return Math.sqrt(this.distanceToSquared(v));},distanceToSquared:function distanceToSquared(v){var dx=this.x-v.x,dy=this.y-v.y;return dx*dx+dy*dy;},setLength:function setLength(l){var oldLength=this.length();if(oldLength!==0&&l!==oldLength){this.multiplyScalar(l/oldLength);}return this;},lerp:function lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;return this;},equals:function equals(v){return v.x===this.x&&v.y===this.y;},fromArray:function fromArray(array){this.x=array[0];this.y=array[1];return this;},toArray:function toArray(){return[this.x,this.y];},clone:function clone(){return new THREE.Vector2(this.x,this.y);}};THREE.Vector3=function(x,y,z){this.x=x||0;this.y=y||0;this.z=z||0;};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function set(x,y,z){this.x=x;this.y=y;this.z=z;return this;},setX:function setX(x){this.x=x;return this;},setY:function setY(y){this.y=y;return this;},setZ:function setZ(z){this.z=z;return this;},setComponent:function setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;default:return THREE.onerror('index is out of range: '+index);}},getComponent:function getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:return THREE.onerror('index is out of range: '+index);}},copy:function copy(v){this.x=v.x;this.y=v.y;this.z=v.z;return this;},add:function add(v,w){if(w!==undefined){THREE.onwarning('DEPRECATED: Vector3\\'s .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;this.z+=v.z;return this;},addScalar:function addScalar(s){this.x+=s;this.y+=s;this.z+=s;return this;},addVectors:function addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this;},sub:function sub(v,w){if(w!==undefined){THREE.onwarningn('DEPRECATED: Vector3\\'s .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;this.z-=v.z;return this;},subVectors:function subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this;},multiply:function multiply(v,w){if(w!==undefined){THREE.onwarning('DEPRECATED: Vector3\\'s .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');return this.multiplyVectors(v,w);}this.x*=v.x;this.y*=v.y;this.z*=v.z;return this;},multiplyScalar:function multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;return this;},multiplyVectors:function multiplyVectors(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this;},applyEuler:function(){var quaternion;return function(euler){if(!(euler instanceof THREE.Euler))return THREE.onerror('expecting an Euler',euler);if(quaternion===undefined)quaternion=new THREE.Quaternion();this.applyQuaternion(quaternion.setFromEuler(euler));return this;};}(),applyAxisAngle:function(){var quaternion;return function(axis,angle){if(quaternion===undefined)quaternion=new THREE.Quaternion();this.applyQuaternion(quaternion.setFromAxisAngle(axis,angle));return this;};}(),applyMatrix3:function applyMatrix3(m){var x=this.x;var y=this.y;var z=this.z;var e=m.elements;this.x=e[0]*x+e[3]*y+e[6]*z;this.y=e[1]*x+e[4]*y+e[7]*z;this.z=e[2]*x+e[5]*y+e[8]*z;return this;},applyMatrix4:function applyMatrix4(m){var x=this.x,y=this.y,z=this.z;var e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z+e[12];this.y=e[1]*x+e[5]*y+e[9]*z+e[13];this.z=e[2]*x+e[6]*y+e[10]*z+e[14];return this;},applyProjection:function applyProjection(m){var x=this.x,y=this.y,z=this.z;var e=m.elements;var d=1/(e[3]*x+e[7]*y+e[11]*z+e[15]);this.x=(e[0]*x+e[4]*y+e[8]*z+e[12])*d;this.y=(e[1]*x+e[5]*y+e[9]*z+e[13])*d;this.z=(e[2]*x+e[6]*y+e[10]*z+e[14])*d;return this;},applyQuaternion:function applyQuaternion(q){var x=this.x;var y=this.y;var z=this.z;var qx=q.x;var qy=q.y;var qz=q.z;var qw=q.w;var ix=qw*x+qy*z-qz*y;var iy=qw*y+qz*x-qx*z;var iz=qw*z+qx*y-qy*x;var iw=-qx*x-qy*y-qz*z;this.x=ix*qw+iw*-qx+iy*-qz-iz*-qy;this.y=iy*qw+iw*-qy+iz*-qx-ix*-qz;this.z=iz*qw+iw*-qz+ix*-qy-iy*-qx;return this;},transformDirection:function transformDirection(m){var x=this.x,y=this.y,z=this.z;var e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z;this.y=e[1]*x+e[5]*y+e[9]*z;this.z=e[2]*x+e[6]*y+e[10]*z;this.normalize();return this;},divide:function divide(v){this.x/=v.x;this.y/=v.y;this.z/=v.z;return this;},divideScalar:function divideScalar(scalar){if(scalar!==0){var invScalar=1/scalar;this.x*=invScalar;this.y*=invScalar;this.z*=invScalar;}else{this.x=0;this.y=0;this.z=0;}return this;},min:function min(v){if(this.x>v.x){this.x=v.x;}if(this.y>v.y){this.y=v.y;}if(this.z>v.z){this.z=v.z;}return this;},max:function max(v){if(this.x<v.x){this.x=v.x;}if(this.y<v.y){this.y=v.y;}if(this.z<v.z){this.z=v.z;}return this;},clamp:function clamp(min,max){if(this.x<min.x){this.x=min.x;}else if(this.x>max.x){this.x=max.x;}if(this.y<min.y){this.y=min.y;}else if(this.y>max.y){this.y=max.y;}if(this.z<min.z){this.z=min.z;}else if(this.z>max.z){this.z=max.z;}return this;},clampScalar:function(){var min,max;return function(minVal,maxVal){if(min===undefined){min=new THREE.Vector3();max=new THREE.Vector3();}min.set(minVal,minVal,minVal);max.set(maxVal,maxVal,maxVal);return this.clamp(min,max);};}(),floor:function floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this;},ceil:function ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this;},round:function round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this;},roundToZero:function roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);return this;},negate:function negate(){return this.multiplyScalar(-1);},dot:function dot(v){return this.x*v.x+this.y*v.y+this.z*v.z;},lengthSq:function lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z;},length:function length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);},lengthManhattan:function lengthManhattan(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z);},normalize:function normalize(){return this.divideScalar(this.length());},setLength:function setLength(l){var oldLength=this.length();if(oldLength!==0&&l!==oldLength){this.multiplyScalar(l/oldLength);}return this;},lerp:function lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;return this;},cross:function cross(v,w){if(w!==undefined){THREE.onwarning('DEPRECATED: Vector3\\'s .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');return this.crossVectors(v,w);}var x=this.x,y=this.y,z=this.z;this.x=y*v.z-z*v.y;this.y=z*v.x-x*v.z;this.z=x*v.y-y*v.x;return this;},crossVectors:function crossVectors(a,b){var ax=a.x,ay=a.y,az=a.z;var bx=b.x,by=b.y,bz=b.z;this.x=ay*bz-az*by;this.y=az*bx-ax*bz;this.z=ax*by-ay*bx;return this;},projectOnVector:function(){var v1,dot;return function(vector){if(v1===undefined)v1=new THREE.Vector3();v1.copy(vector).normalize();dot=this.dot(v1);return this.copy(v1).multiplyScalar(dot);};}(),projectOnPlane:function(){var v1;return function(planeNormal){if(v1===undefined)v1=new THREE.Vector3();v1.copy(this).projectOnVector(planeNormal);return this.sub(v1);};}(),reflect:function(){var v1;return function(normal){if(v1===undefined)v1=new THREE.Vector3();return this.sub(v1.copy(normal).multiplyScalar(2*this.dot(normal)));};}(),angleTo:function angleTo(v){var theta=this.dot(v)/(this.length()*v.length());return Math.acos(THREE.Math.clamp(theta,-1,1));},distanceTo:function distanceTo(v){return Math.sqrt(this.distanceToSquared(v));},distanceToSquared:function distanceToSquared(v){var dx=this.x-v.x;var dy=this.y-v.y;var dz=this.z-v.z;return dx*dx+dy*dy+dz*dz;},setEulerFromRotationMatrix:function setEulerFromRotationMatrix(m,order){THREE.onerror(\"REMOVED: Vector3\\'s setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.\");},setEulerFromQuaternion:function setEulerFromQuaternion(q,order){THREE.onerror(\"REMOVED: Vector3\\'s setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.\");},getPositionFromMatrix:function getPositionFromMatrix(m){THREE.onwarning(\"DEPRECATED: Vector3\\'s .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code.\");return this.setFromMatrixPosition(m);},getScaleFromMatrix:function getScaleFromMatrix(m){THREE.onwarning(\"DEPRECATED: Vector3\\'s .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code.\");return this.setFromMatrixScale(m);},getColumnFromMatrix:function getColumnFromMatrix(index,matrix){THREE.onwarning(\"DEPRECATED: Vector3\\'s .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code.\");return this.setFromMatrixColumn(index,matrix);},setFromMatrixPosition:function setFromMatrixPosition(m){this.x=m.elements[12];this.y=m.elements[13];this.z=m.elements[14];return this;},setFromMatrixScale:function setFromMatrixScale(m){var sx=this.set(m.elements[0],m.elements[1],m.elements[2]).length();var sy=this.set(m.elements[4],m.elements[5],m.elements[6]).length();var sz=this.set(m.elements[8],m.elements[9],m.elements[10]).length();this.x=sx;this.y=sy;this.z=sz;return this;},setFromMatrixColumn:function setFromMatrixColumn(index,matrix){var offset=index*4;var me=matrix.elements;this.x=me[offset];this.y=me[offset+1];this.z=me[offset+2];return this;},equals:function equals(v){return v.x===this.x&&v.y===this.y&&v.z===this.z;},fromArray:function fromArray(array){this.x=array[0];this.y=array[1];this.z=array[2];return this;},toArray:function toArray(){return[this.x,this.y,this.z];},clone:function clone(){return new THREE.Vector3(this.x,this.y,this.z);}};THREE.Vector4=function(x,y,z,w){this.x=x||0;this.y=y||0;this.z=z||0;this.w=w!==undefined?w:1;};THREE.Vector4.prototype={constructor:THREE.Vector4,set:function set(x,y,z,w){this.x=x;this.y=y;this.z=z;this.w=w;return this;},setX:function setX(x){this.x=x;return this;},setY:function setY(y){this.y=y;return this;},setZ:function setZ(z){this.z=z;return this;},setW:function setW(w){this.w=w;return this;},setComponent:function setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;case 3:this.w=value;break;default:return THREE.onerror('index is out of range: '+index);}},getComponent:function getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:return THREE.onerror('index is out of range: '+index);}},copy:function copy(v){this.x=v.x;this.y=v.y;this.z=v.z;this.w=v.w!==undefined?v.w:1;return this;},add:function add(v,w){if(w!==undefined){THREE.onwarning('DEPRECATED: Vector4\\'s .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;this.z+=v.z;this.w+=v.w;return this;},addScalar:function addScalar(s){this.x+=s;this.y+=s;this.z+=s;this.w+=s;return this;},addVectors:function addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this;},sub:function sub(v,w){if(w!==undefined){THREE.onwarning('DEPRECATED: Vector4\\'s .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;this.z-=v.z;this.w-=v.w;return this;},subVectors:function subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this;},multiplyScalar:function multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;this.w*=scalar;return this;},applyMatrix4:function applyMatrix4(m){var x=this.x;var y=this.y;var z=this.z;var w=this.w;var e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z+e[12]*w;this.y=e[1]*x+e[5]*y+e[9]*z+e[13]*w;this.z=e[2]*x+e[6]*y+e[10]*z+e[14]*w;this.w=e[3]*x+e[7]*y+e[11]*z+e[15]*w;return this;},divideScalar:function divideScalar(scalar){if(scalar!==0){var invScalar=1/scalar;this.x*=invScalar;this.y*=invScalar;this.z*=invScalar;this.w*=invScalar;}else{this.x=0;this.y=0;this.z=0;this.w=1;}return this;},setAxisAngleFromQuaternion:function setAxisAngleFromQuaternion(q){this.w=2*Math.acos(q.w);var s=Math.sqrt(1-q.w*q.w);if(s<0.0001){this.x=1;this.y=0;this.z=0;}else{this.x=q.x/s;this.y=q.y/s;this.z=q.z/s;}return this;},setAxisAngleFromRotationMatrix:function setAxisAngleFromRotationMatrix(m){var angle,x,y,z,epsilon=0.01,epsilon2=0.1,te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10];if(Math.abs(m12-m21)<epsilon&&Math.abs(m13-m31)<epsilon&&Math.abs(m23-m32)<epsilon){if(Math.abs(m12+m21)<epsilon2&&Math.abs(m13+m31)<epsilon2&&Math.abs(m23+m32)<epsilon2&&Math.abs(m11+m22+m33-3)<epsilon2){this.set(1,0,0,0);return this;}angle=Math.PI;var xx=(m11+1)/2;var yy=(m22+1)/2;var zz=(m33+1)/2;var xy=(m12+m21)/4;var xz=(m13+m31)/4;var yz=(m23+m32)/4;if(xx>yy&&xx>zz){if(xx<epsilon){x=0;y=0.707106781;z=0.707106781;}else{x=Math.sqrt(xx);y=xy/x;z=xz/x;}}else if(yy>zz){if(yy<epsilon){x=0.707106781;y=0;z=0.707106781;}else{y=Math.sqrt(yy);x=xy/y;z=yz/y;}}else{if(zz<epsilon){x=0.707106781;y=0.707106781;z=0;}else{z=Math.sqrt(zz);x=xz/z;y=yz/z;}}this.set(x,y,z,angle);return this;}var s=Math.sqrt((m32-m23)*(m32-m23)+(m13-m31)*(m13-m31)+(m21-m12)*(m21-m12));if(Math.abs(s)<0.001)s=1;this.x=(m32-m23)/s;this.y=(m13-m31)/s;this.z=(m21-m12)/s;this.w=Math.acos((m11+m22+m33-1)/2);return this;},min:function min(v){if(this.x>v.x){this.x=v.x;}if(this.y>v.y){this.y=v.y;}if(this.z>v.z){this.z=v.z;}if(this.w>v.w){this.w=v.w;}return this;},max:function max(v){if(this.x<v.x){this.x=v.x;}if(this.y<v.y){this.y=v.y;}if(this.z<v.z){this.z=v.z;}if(this.w<v.w){this.w=v.w;}return this;},clamp:function clamp(min,max){if(this.x<min.x){this.x=min.x;}else if(this.x>max.x){this.x=max.x;}if(this.y<min.y){this.y=min.y;}else if(this.y>max.y){this.y=max.y;}if(this.z<min.z){this.z=min.z;}else if(this.z>max.z){this.z=max.z;}if(this.w<min.w){this.w=min.w;}else if(this.w>max.w){this.w=max.w;}return this;},clampScalar:function(){var min,max;return function(minVal,maxVal){if(min===undefined){min=new THREE.Vector4();max=new THREE.Vector4();}min.set(minVal,minVal,minVal,minVal);max.set(maxVal,maxVal,maxVal,maxVal);return this.clamp(min,max);};}(),floor:function floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this;},ceil:function ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this;},round:function round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this;},roundToZero:function roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w);return this;},negate:function negate(){return this.multiplyScalar(-1);},dot:function dot(v){return this.x*v.x+this.y*v.y+this.z*v.z+this.w*v.w;},lengthSq:function lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w;},length:function length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);},lengthManhattan:function lengthManhattan(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w);},normalize:function normalize(){return this.divideScalar(this.length());},setLength:function setLength(l){var oldLength=this.length();if(oldLength!==0&&l!==oldLength){this.multiplyScalar(l/oldLength);}return this;},lerp:function lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;this.w+=(v.w-this.w)*alpha;return this;},equals:function equals(v){return v.x===this.x&&v.y===this.y&&v.z===this.z&&v.w===this.w;},fromArray:function fromArray(array){this.x=array[0];this.y=array[1];this.z=array[2];this.w=array[3];return this;},toArray:function toArray(){return[this.x,this.y,this.z,this.w];},clone:function clone(){return new THREE.Vector4(this.x,this.y,this.z,this.w);}};THREE.Euler=function(x,y,z,order){this._x=x||0;this._y=y||0;this._z=z||0;this._order=order||THREE.Euler.DefaultOrder;};THREE.Euler.RotationOrders=['XYZ','YZX','ZXY','XZY','YXZ','ZYX'];THREE.Euler.DefaultOrder='XYZ';THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,_quaternion:undefined,_updateQuaternion:function _updateQuaternion(){if(this._quaternion!==undefined){this._quaternion.setFromEuler(this,false);}},get x(){return this._x;},set x(value){this._x=value;this._updateQuaternion();},get y(){return this._y;},set y(value){this._y=value;this._updateQuaternion();},get z(){return this._z;},set z(value){this._z=value;this._updateQuaternion();},get order(){return this._order;},set order(value){this._order=value;this._updateQuaternion();},set:function set(x,y,z,order){this._x=x;this._y=y;this._z=z;this._order=order||this._order;this._updateQuaternion();return this;},setFromVector:function setFromVector(v,order){this._x=v.x;this._y=v.y;this._z=v.z;this._order=order||this._order;this._updateQuaternion();return this;},copy:function copy(euler){this._x=euler._x;this._y=euler._y;this._z=euler._z;this._order=euler._order;this._updateQuaternion();return this;},setFromRotationMatrix:function setFromRotationMatrix(m,order,update){function clamp(x){return Math.min(Math.max(x,-1),1);}var te=m.elements;var m11=te[0],m12=te[4],m13=te[8];var m21=te[1],m22=te[5],m23=te[9];var m31=te[2],m32=te[6],m33=te[10];order=order||this._order;if(order==='XYZ'){this._y=Math.asin(clamp(m13));if(Math.abs(m13)<0.99999){this._x=Math.atan2(-m23,m33);this._z=Math.atan2(-m12,m11);}else{this._x=Math.atan2(m32,m22);this._z=0;}}else if(order==='YXZ'){this._x=Math.asin(-clamp(m23));if(Math.abs(m23)<0.99999){this._y=Math.atan2(m13,m33);this._z=Math.atan2(m21,m22);}else{this._y=Math.atan2(-m31,m11);this._z=0;}}else if(order==='ZXY'){this._x=Math.asin(clamp(m32));if(Math.abs(m32)<0.99999){this._y=Math.atan2(-m31,m33);this._z=Math.atan2(-m12,m22);}else{this._y=0;this._z=Math.atan2(m21,m11);}}else if(order==='ZYX'){this._y=Math.asin(-clamp(m31));if(Math.abs(m31)<0.99999){this._x=Math.atan2(m32,m33);this._z=Math.atan2(m21,m11);}else{this._x=0;this._z=Math.atan2(-m12,m22);}}else if(order==='YZX'){this._z=Math.asin(clamp(m21));if(Math.abs(m21)<0.99999){this._x=Math.atan2(-m23,m22);this._y=Math.atan2(-m31,m11);}else{this._x=0;this._y=Math.atan2(m13,m33);}}else if(order==='XZY'){this._z=Math.asin(-clamp(m12));if(Math.abs(m12)<0.99999){this._x=Math.atan2(m32,m22);this._y=Math.atan2(m13,m11);}else{this._x=Math.atan2(-m23,m33);this._y=0;}}else{THREE.onwarning('WARNING: Euler.setFromRotationMatrix() given unsupported order: '+order);}this._order=order;if(update!==false)this._updateQuaternion();return this;},setFromQuaternion:function(){var mIntermediate=null;return function(q,order,update){mIntermediate=mIntermediate||new THREE.Matrix4();mIntermediate.makeRotationFromQuaternion(q);this.setFromRotationMatrix(mIntermediate,order,update);return this;};}(),reorder:function(){var q=new THREE.Quaternion();return function(newOrder){q.setFromEuler(this);this.setFromQuaternion(q,newOrder);};}(),fromArray:function fromArray(array){this._x=array[0];this._y=array[1];this._z=array[2];if(array[3]!==undefined)this._order=array[3];this._updateQuaternion();return this;},toArray:function toArray(){return[this._x,this._y,this._z,this._order];},equals:function equals(euler){return euler._x===this._x&&euler._y===this._y&&euler._z===this._z&&euler._order===this._order;},toVector3:function toVector3(optionalResult){if(optionalResult){return optionalResult.set(this._x,this._y,this._z);}else{return new THREE.Vector3(this._x,this._y,this._z);}},clone:function clone(){return new THREE.Euler(this._x,this._y,this._z,this._order);}};THREE.Line3=function(start,end){this.start=start!==undefined?start:new THREE.Vector3();this.end=end!==undefined?end:new THREE.Vector3();};THREE.Line3.prototype={constructor:THREE.Line3,set:function set(start,end){this.start.copy(start);this.end.copy(end);return this;},copy:function copy(line){this.start.copy(line.start);this.end.copy(line.end);return this;},center:function center(optionalTarget){var result=optionalTarget||new THREE.Vector3();return result.addVectors(this.start,this.end).multiplyScalar(0.5);},delta:function delta(optionalTarget){var result=optionalTarget||new THREE.Vector3();return result.subVectors(this.end,this.start);},distanceSq:function distanceSq(){return this.start.distanceToSquared(this.end);},distance:function distance(){return this.start.distanceTo(this.end);},at:function at(t,optionalTarget){var result=optionalTarget||new THREE.Vector3();return this.delta(result).multiplyScalar(t).add(this.start);},closestPointToPointParameter:function(){var startP=new THREE.Vector3();var startEnd=new THREE.Vector3();return function(point,clampToLine){startP.subVectors(point,this.start);startEnd.subVectors(this.end,this.start);var startEnd2=startEnd.dot(startEnd);var startEnd_startP=startEnd.dot(startP);var t=startEnd_startP/startEnd2;if(clampToLine){t=THREE.Math.clamp(t,0,1);}return t;};}(),closestPointToPoint:function closestPointToPoint(point,clampToLine,optionalTarget){var t=this.closestPointToPointParameter(point,clampToLine);var result=optionalTarget||new THREE.Vector3();return this.delta(result).multiplyScalar(t).add(this.start);},applyMatrix4:function applyMatrix4(matrix){this.start.applyMatrix4(matrix);this.end.applyMatrix4(matrix);return this;},equals:function equals(line){return line.start.equals(this.start)&&line.end.equals(this.end);},clone:function clone(){return new THREE.Line3().copy(this);}};THREE.Box2=function(min,max){this.min=min!==undefined?min:new THREE.Vector2(Infinity,Infinity);this.max=max!==undefined?max:new THREE.Vector2(-Infinity,-Infinity);};THREE.Box2.prototype={constructor:THREE.Box2,set:function set(min,max){this.min.copy(min);this.max.copy(max);return this;},setFromPoints:function setFromPoints(points){if(points.length>0){var point=points[0];this.min.copy(point);this.max.copy(point);for(var i=1,il=points.length;i<il;i++){point=points[i];if(point.x<this.min.x){this.min.x=point.x;}else if(point.x>this.max.x){this.max.x=point.x;}if(point.y<this.min.y){this.min.y=point.y;}else if(point.y>this.max.y){this.max.y=point.y;}}}else{this.makeEmpty();}return this;},setFromCenterAndSize:function(){var v1=new THREE.Vector2();return function(center,size){var halfSize=v1.copy(size).multiplyScalar(0.5);this.min.copy(center).sub(halfSize);this.max.copy(center).add(halfSize);return this;};}(),copy:function copy(box){this.min.copy(box.min);this.max.copy(box.max);return this;},makeEmpty:function makeEmpty(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this;},empty:function empty(){return this.max.x<this.min.x||this.max.y<this.min.y;},center:function center(optionalTarget){var result=optionalTarget||new THREE.Vector2();return result.addVectors(this.min,this.max).multiplyScalar(0.5);},size:function size(optionalTarget){var result=optionalTarget||new THREE.Vector2();return result.subVectors(this.max,this.min);},expandByPoint:function expandByPoint(point){this.min.min(point);this.max.max(point);return this;},expandByVector:function expandByVector(vector){this.min.sub(vector);this.max.add(vector);return this;},expandByScalar:function expandByScalar(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this;},containsPoint:function containsPoint(point){if(point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y){return false;}return true;},containsBox:function containsBox(box){if(this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y){return true;}return false;},getParameter:function getParameter(point,optionalTarget){var result=optionalTarget||new THREE.Vector2();return result.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y));},isIntersectionBox:function isIntersectionBox(box){if(box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y){return false;}return true;},clampPoint:function clampPoint(point,optionalTarget){var result=optionalTarget||new THREE.Vector2();return result.copy(point).clamp(this.min,this.max);},distanceToPoint:function(){var v1=new THREE.Vector2();return function(point){var clampedPoint=v1.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length();};}(),intersect:function intersect(box){this.min.max(box.min);this.max.min(box.max);return this;},union:function union(box){this.min.min(box.min);this.max.max(box.max);return this;},translate:function translate(offset){this.min.add(offset);this.max.add(offset);return this;},equals:function equals(box){return box.min.equals(this.min)&&box.max.equals(this.max);},clone:function clone(){return new THREE.Box2().copy(this);}};THREE.Box3=function(min,max){this.min=min!==undefined?min:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=max!==undefined?max:new THREE.Vector3(-Infinity,-Infinity,-Infinity);};THREE.Box3.prototype={constructor:THREE.Box3,set:function set(min,max){this.min.copy(min);this.max.copy(max);return this;},addPoint:function addPoint(point){if(point.x<this.min.x){this.min.x=point.x;}else if(point.x>this.max.x){this.max.x=point.x;}if(point.y<this.min.y){this.min.y=point.y;}else if(point.y>this.max.y){this.max.y=point.y;}if(point.z<this.min.z){this.min.z=point.z;}else if(point.z>this.max.z){this.max.z=point.z;}},setFromPoints:function setFromPoints(points){if(points.length>0){var point=points[0];this.min.copy(point);this.max.copy(point);for(var i=1,il=points.length;i<il;i++){this.addPoint(points[i]);}}else{this.makeEmpty();}return this;},setFromCenterAndSize:function(){var v1=new THREE.Vector3();return function(center,size){var halfSize=v1.copy(size).multiplyScalar(0.5);this.min.copy(center).sub(halfSize);this.max.copy(center).add(halfSize);return this;};}(),setFromObject:function(){var v1=new THREE.Vector3();return function(object){var scope=this;object.updateMatrixWorld(true);this.makeEmpty();object.traverse(function(node){if(node.geometry!==undefined&&node.geometry.vertices!==undefined){var vertices=node.geometry.vertices;for(var i=0,il=vertices.length;i<il;i++){v1.copy(vertices[i]);v1.applyMatrix4(node.matrixWorld);scope.expandByPoint(v1);}}});return this;};}(),copy:function copy(box){this.min.copy(box.min);this.max.copy(box.max);return this;},makeEmpty:function makeEmpty(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this;},empty:function empty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z;},center:function center(optionalTarget){var result=optionalTarget||new THREE.Vector3();return result.addVectors(this.min,this.max).multiplyScalar(0.5);},size:function size(optionalTarget){var result=optionalTarget||new THREE.Vector3();return result.subVectors(this.max,this.min);},expandByPoint:function expandByPoint(point){this.min.min(point);this.max.max(point);return this;},expandByVector:function expandByVector(vector){this.min.sub(vector);this.max.add(vector);return this;},expandByScalar:function expandByScalar(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this;},containsPoint:function containsPoint(point){if(point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y||point.z<this.min.z||point.z>this.max.z){return false;}return true;},containsBox:function containsBox(box){if(this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y&&this.min.z<=box.min.z&&box.max.z<=this.max.z){return true;}return false;},getParameter:function getParameter(point,optionalTarget){var result=optionalTarget||new THREE.Vector3();return result.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y),(point.z-this.min.z)/(this.max.z-this.min.z));},isIntersectionBox:function isIntersectionBox(box){if(box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y||box.max.z<this.min.z||box.min.z>this.max.z){return false;}return true;},clampPoint:function clampPoint(point,optionalTarget){var result=optionalTarget||new THREE.Vector3();return result.copy(point).clamp(this.min,this.max);},distanceToPoint:function(){var v1=new THREE.Vector3();return function(point){var clampedPoint=v1.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length();};}(),getBoundingSphere:function(){var v1=new THREE.Vector3();return function(optionalTarget){var result=optionalTarget||new THREE.Sphere();result.center=this.center();result.radius=this.size(v1).length()*0.5;return result;};}(),intersect:function intersect(box){this.min.max(box.min);this.max.min(box.max);return this;},union:function union(box){this.min.min(box.min);this.max.max(box.max);return this;},applyMatrix4:function(){var points=[new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3()];return function(matrix){points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(matrix);points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(matrix);points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(matrix);points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(matrix);points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(matrix);points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(matrix);points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(matrix);points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(matrix);this.makeEmpty();this.setFromPoints(points);return this;};}(),translate:function translate(offset){this.min.add(offset);this.max.add(offset);return this;},equals:function equals(box){return box.min.equals(this.min)&&box.max.equals(this.max);},clone:function clone(){return new THREE.Box3().copy(this);}};THREE.Matrix3=function(n11,n12,n13,n21,n22,n23,n31,n32,n33){this.elements=new Float32Array(9);this.set(n11!==undefined?n11:1,n12||0,n13||0,n21||0,n22!==undefined?n22:1,n23||0,n31||0,n32||0,n33!==undefined?n33:1);};THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function set(n11,n12,n13,n21,n22,n23,n31,n32,n33){var te=this.elements;te[0]=n11;te[3]=n12;te[6]=n13;te[1]=n21;te[4]=n22;te[7]=n23;te[2]=n31;te[5]=n32;te[8]=n33;return this;},identity:function identity(){this.set(1,0,0,0,1,0,0,0,1);return this;},copy:function copy(m){var me=m.elements;this.set(me[0],me[3],me[6],me[1],me[4],me[7],me[2],me[5],me[8]);return this;},multiplyVector3:function multiplyVector3(vector){THREE.onwarning('DEPRECATED: Matrix3\\'s .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');return vector.applyMatrix3(this);},multiplyVector3Array:function(){var v1=new THREE.Vector3();return function(a){for(var i=0,il=a.length;i<il;i+=3){v1.x=a[i];v1.y=a[i+1];v1.z=a[i+2];v1.applyMatrix3(this);a[i]=v1.x;a[i+1]=v1.y;a[i+2]=v1.z;}return a;};}(),multiplyScalar:function multiplyScalar(s){var te=this.elements;te[0]*=s;te[3]*=s;te[6]*=s;te[1]*=s;te[4]*=s;te[7]*=s;te[2]*=s;te[5]*=s;te[8]*=s;return this;},determinant:function determinant(){var te=this.elements;var a=te[0],b=te[1],c=te[2],d=te[3],e=te[4],f=te[5],g=te[6],h=te[7],i=te[8];return a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g;},getInverse:function getInverse(matrix,errorOnInvertible){if(!(matrix instanceof THREE.Matrix4))return THREE.onerror('expecting a Matrix4',matrix);var me=matrix.elements;var te=this.elements;te[0]=me[10]*me[5]-me[6]*me[9];te[1]=-me[10]*me[1]+me[2]*me[9];te[2]=me[6]*me[1]-me[2]*me[5];te[3]=-me[10]*me[4]+me[6]*me[8];te[4]=me[10]*me[0]-me[2]*me[8];te[5]=-me[6]*me[0]+me[2]*me[4];te[6]=me[9]*me[4]-me[5]*me[8];te[7]=-me[9]*me[0]+me[1]*me[8];te[8]=me[5]*me[0]-me[1]*me[4];var det=me[0]*te[0]+me[1]*te[3]+me[2]*te[6];if(det===0){if(errorOnInvertible===true){return THREE.onerror(\"Matrix3.getInverse(): can't invert matrix, determinant is 0\",this);}this.identity();return this;}this.multiplyScalar(1.0/det);return this;},transpose:function transpose(){var tmp,m=this.elements;tmp=m[1];m[1]=m[3];m[3]=tmp;tmp=m[2];m[2]=m[6];m[6]=tmp;tmp=m[5];m[5]=m[7];m[7]=tmp;return this;},getNormalMatrix:function getNormalMatrix(m){this.getInverse(m).transpose();return this;},transposeIntoArray:function transposeIntoArray(r){var m=this.elements;r[0]=m[0];r[1]=m[3];r[2]=m[6];r[3]=m[1];r[4]=m[4];r[5]=m[7];r[6]=m[2];r[7]=m[5];r[8]=m[8];return this;},fromArray:function fromArray(array){this.elements.set(array);return this;},toArray:function toArray(){var te=this.elements;return[te[0],te[1],te[2],te[3],te[4],te[5],te[6],te[7],te[8]];},clone:function clone(){var te=this.elements;return new THREE.Matrix3(te[0],te[3],te[6],te[1],te[4],te[7],te[2],te[5],te[8]);}};THREE.Matrix4=function(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){this.elements=new Float32Array(16);var te=this.elements;te[0]=n11!==undefined?n11:1;te[4]=n12||0;te[8]=n13||0;te[12]=n14||0;te[1]=n21||0;te[5]=n22!==undefined?n22:1;te[9]=n23||0;te[13]=n24||0;te[2]=n31||0;te[6]=n32||0;te[10]=n33!==undefined?n33:1;te[14]=n34||0;te[3]=n41||0;te[7]=n42||0;te[11]=n43||0;te[15]=n44!==undefined?n44:1;};THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function set(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){var te=this.elements;te[0]=n11;te[4]=n12;te[8]=n13;te[12]=n14;te[1]=n21;te[5]=n22;te[9]=n23;te[13]=n24;te[2]=n31;te[6]=n32;te[10]=n33;te[14]=n34;te[3]=n41;te[7]=n42;te[11]=n43;te[15]=n44;return this;},identity:function identity(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this;},copy:function copy(m){this.elements.set(m.elements);return this;},extractPosition:function extractPosition(m){THREE.onwarning('DEPRECATED: Matrix4\\'s .extractPosition() has been renamed to .copyPosition().');return this.copyPosition(m);},copyPosition:function copyPosition(m){var te=this.elements;var me=m.elements;te[12]=me[12];te[13]=me[13];te[14]=me[14];return this;},extractBasis:function extractBasis(xAxis,yAxis,zAxis){var te=this.elements;xAxis.set(te[0],te[1],te[2]);yAxis.set(te[4],te[5],te[6]);zAxis.set(te[8],te[9],te[10]);return this;},makeBasis:function makeBasis(xAxis,yAxis,zAxis){this.identity();var te=this.elements;te.elements[0]=xAxis.x;te.elements[1]=xAxis.y;te.elements[2]=xAxis.z;te.elements[4]=yAxis.x;te.elements[5]=yAxis.y;te.elements[6]=yAxis.z;te.elements[8]=zAxis.x;te.elements[9]=zAxis.y;te.elements[10]=zAxis.z;return this;},extractRotation:function(){var v1=new THREE.Vector3();return function(m){var te=this.elements;var me=m.elements;var scaleX=1/v1.set(me[0],me[1],me[2]).length();var scaleY=1/v1.set(me[4],me[5],me[6]).length();var scaleZ=1/v1.set(me[8],me[9],me[10]).length();te[0]=me[0]*scaleX;te[1]=me[1]*scaleX;te[2]=me[2]*scaleX;te[4]=me[4]*scaleY;te[5]=me[5]*scaleY;te[6]=me[6]*scaleY;te[8]=me[8]*scaleZ;te[9]=me[9]*scaleZ;te[10]=me[10]*scaleZ;return this;};}(),makeRotationFromEuler:function makeRotationFromEuler(euler){if(!(euler instanceof THREE.Euler))return THREE.onerror('expecting a Euler',euler);var te=this.elements;var x=euler.x,y=euler.y,z=euler.z;var a=Math.cos(x),b=Math.sin(x);var c=Math.cos(y),d=Math.sin(y);var e=Math.cos(z),f=Math.sin(z);if(euler.order==='XYZ'){var ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e;te[4]=-c*f;te[8]=d;te[1]=af+be*d;te[5]=ae-bf*d;te[9]=-b*c;te[2]=bf-ae*d;te[6]=be+af*d;te[10]=a*c;}else if(euler.order==='YXZ'){var ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce+df*b;te[4]=de*b-cf;te[8]=a*d;te[1]=a*f;te[5]=a*e;te[9]=-b;te[2]=cf*b-de;te[6]=df+ce*b;te[10]=a*c;}else if(euler.order==='ZXY'){var ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce-df*b;te[4]=-a*f;te[8]=de+cf*b;te[1]=cf+de*b;te[5]=a*e;te[9]=df-ce*b;te[2]=-a*d;te[6]=b;te[10]=a*c;}else if(euler.order==='ZYX'){var ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e;te[4]=be*d-af;te[8]=ae*d+bf;te[1]=c*f;te[5]=bf*d+ae;te[9]=af*d-be;te[2]=-d;te[6]=b*c;te[10]=a*c;}else if(euler.order==='YZX'){var ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e;te[4]=bd-ac*f;te[8]=bc*f+ad;te[1]=f;te[5]=a*e;te[9]=-b*e;te[2]=-d*e;te[6]=ad*f+bc;te[10]=ac-bd*f;}else if(euler.order==='XZY'){var ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e;te[4]=-f;te[8]=d*e;te[1]=ac*f+bd;te[5]=a*e;te[9]=ad*f-bc;te[2]=bc*f-ad;te[6]=b*e;te[10]=bd*f+ac;}te[3]=0;te[7]=0;te[11]=0;te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this;},setRotationFromQuaternion:function setRotationFromQuaternion(q){THREE.onwarning('DEPRECATED: Matrix4\\'s .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code.');return this.makeRotationFromQuaternion(q);},makeRotationFromQuaternion:function makeRotationFromQuaternion(q){var te=this.elements;var x=q.x,y=q.y,z=q.z,w=q.w;var x2=x+x,y2=y+y,z2=z+z;var xx=x*x2,xy=x*y2,xz=x*z2;var yy=y*y2,yz=y*z2,zz=z*z2;var wx=w*x2,wy=w*y2,wz=w*z2;te[0]=1-(yy+zz);te[4]=xy-wz;te[8]=xz+wy;te[1]=xy+wz;te[5]=1-(xx+zz);te[9]=yz-wx;te[2]=xz-wy;te[6]=yz+wx;te[10]=1-(xx+yy);te[3]=0;te[7]=0;te[11]=0;te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this;},lookAt:function(){var x=new THREE.Vector3();var y=new THREE.Vector3();var z=new THREE.Vector3();return function(eye,target,up){var te=this.elements;z.subVectors(eye,target).normalize();if(z.length()===0){z.z=1;}x.crossVectors(up,z).normalize();if(x.length()===0){z.x+=0.0001;x.crossVectors(up,z).normalize();}y.crossVectors(z,x);te[0]=x.x;te[4]=y.x;te[8]=z.x;te[1]=x.y;te[5]=y.y;te[9]=z.y;te[2]=x.z;te[6]=y.z;te[10]=z.z;return this;};}(),multiply:function multiply(m,n){if(n!==undefined){THREE.onwarning('DEPRECATED: Matrix4\\'s .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');return this.multiplyMatrices(m,n);}return this.multiplyMatrices(this,m);},multiplyList:function multiplyList(listOfMatrices){for(var i=0,il=listOfMatrices.length;i<il;i++){this.multiplyMatrices(this,listOfMatrices[i]);}return this;},multiplyMatricesList:function multiplyMatricesList(listOfMatrices){if(listOfMatrices.length>0){this.copy(listOfMatrices[0]);this.multiplyList(listOfMatrices.slice(1));}else{this.identity();}return this;},multiplyMatrices:function multiplyMatrices(a,b){if(!(a instanceof THREE.Matrix4))return THREE.onerror('expecting a Matrix4',a);if(!(b instanceof THREE.Matrix4))return THREE.onerror('expecting a Matrix4',b);var ae=a.elements;var be=b.elements;var te=this.elements;var a11=ae[0],a12=ae[4],a13=ae[8],a14=ae[12];var a21=ae[1],a22=ae[5],a23=ae[9],a24=ae[13];var a31=ae[2],a32=ae[6],a33=ae[10],a34=ae[14];var a41=ae[3],a42=ae[7],a43=ae[11],a44=ae[15];var b11=be[0],b12=be[4],b13=be[8],b14=be[12];var b21=be[1],b22=be[5],b23=be[9],b24=be[13];var b31=be[2],b32=be[6],b33=be[10],b34=be[14];var b41=be[3],b42=be[7],b43=be[11],b44=be[15];te[0]=a11*b11+a12*b21+a13*b31+a14*b41;te[4]=a11*b12+a12*b22+a13*b32+a14*b42;te[8]=a11*b13+a12*b23+a13*b33+a14*b43;te[12]=a11*b14+a12*b24+a13*b34+a14*b44;te[1]=a21*b11+a22*b21+a23*b31+a24*b41;te[5]=a21*b12+a22*b22+a23*b32+a24*b42;te[9]=a21*b13+a22*b23+a23*b33+a24*b43;te[13]=a21*b14+a22*b24+a23*b34+a24*b44;te[2]=a31*b11+a32*b21+a33*b31+a34*b41;te[6]=a31*b12+a32*b22+a33*b32+a34*b42;te[10]=a31*b13+a32*b23+a33*b33+a34*b43;te[14]=a31*b14+a32*b24+a33*b34+a34*b44;te[3]=a41*b11+a42*b21+a43*b31+a44*b41;te[7]=a41*b12+a42*b22+a43*b32+a44*b42;te[11]=a41*b13+a42*b23+a43*b33+a44*b43;te[15]=a41*b14+a42*b24+a43*b34+a44*b44;return this;},multiplyToArray:function multiplyToArray(a,b,r){var te=this.elements;this.multiplyMatrices(a,b);r[0]=te[0];r[1]=te[1];r[2]=te[2];r[3]=te[3];r[4]=te[4];r[5]=te[5];r[6]=te[6];r[7]=te[7];r[8]=te[8];r[9]=te[9];r[10]=te[10];r[11]=te[11];r[12]=te[12];r[13]=te[13];r[14]=te[14];r[15]=te[15];return this;},multiplyScalar:function multiplyScalar(s){var te=this.elements;te[0]*=s;te[4]*=s;te[8]*=s;te[12]*=s;te[1]*=s;te[5]*=s;te[9]*=s;te[13]*=s;te[2]*=s;te[6]*=s;te[10]*=s;te[14]*=s;te[3]*=s;te[7]*=s;te[11]*=s;te[15]*=s;return this;},multiplyVector3:function multiplyVector3(vector){THREE.onwarning('DEPRECATED: Matrix4\\'s .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.');return vector.applyProjection(this);},multiplyVector4:function multiplyVector4(vector){THREE.onwarning('DEPRECATED: Matrix4\\'s .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);},multiplyVector3Array:function(){var v1=new THREE.Vector3();return function(a){for(var i=0,il=a.length;i<il;i+=3){v1.x=a[i];v1.y=a[i+1];v1.z=a[i+2];v1.applyProjection(this);a[i]=v1.x;a[i+1]=v1.y;a[i+2]=v1.z;}return a;};}(),rotateAxis:function rotateAxis(v){THREE.onwarning('DEPRECATED: Matrix4\\'s .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');v.transformDirection(this);},crossVector:function crossVector(vector){THREE.onwarning('DEPRECATED: Matrix4\\'s .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);},determinant:function determinant(){var te=this.elements;var n11=te[0],n12=te[4],n13=te[8],n14=te[12];var n21=te[1],n22=te[5],n23=te[9],n24=te[13];var n31=te[2],n32=te[6],n33=te[10],n34=te[14];var n41=te[3],n42=te[7],n43=te[11],n44=te[15];return n41*(+n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34)+n42*(+n11*n23*n34-n11*n24*n33+n14*n21*n33-n13*n21*n34+n13*n24*n31-n14*n23*n31)+n43*(+n11*n24*n32-n11*n22*n34-n14*n21*n32+n12*n21*n34+n14*n22*n31-n12*n24*n31)+n44*(-n13*n22*n31-n11*n23*n32+n11*n22*n33+n13*n21*n32-n12*n21*n33+n12*n23*n31);},transpose:function transpose(){var te=this.elements;var tmp;tmp=te[1];te[1]=te[4];te[4]=tmp;tmp=te[2];te[2]=te[8];te[8]=tmp;tmp=te[6];te[6]=te[9];te[9]=tmp;tmp=te[3];te[3]=te[12];te[12]=tmp;tmp=te[7];te[7]=te[13];te[13]=tmp;tmp=te[11];te[11]=te[14];te[14]=tmp;return this;},flattenToArray:function flattenToArray(flat){var te=this.elements;flat[0]=te[0];flat[1]=te[1];flat[2]=te[2];flat[3]=te[3];flat[4]=te[4];flat[5]=te[5];flat[6]=te[6];flat[7]=te[7];flat[8]=te[8];flat[9]=te[9];flat[10]=te[10];flat[11]=te[11];flat[12]=te[12];flat[13]=te[13];flat[14]=te[14];flat[15]=te[15];return flat;},flattenToArrayOffset:function flattenToArrayOffset(flat,offset){var te=this.elements;flat[offset]=te[0];flat[offset+1]=te[1];flat[offset+2]=te[2];flat[offset+3]=te[3];flat[offset+4]=te[4];flat[offset+5]=te[5];flat[offset+6]=te[6];flat[offset+7]=te[7];flat[offset+8]=te[8];flat[offset+9]=te[9];flat[offset+10]=te[10];flat[offset+11]=te[11];flat[offset+12]=te[12];flat[offset+13]=te[13];flat[offset+14]=te[14];flat[offset+15]=te[15];return flat;},getPosition:function(){var v1=new THREE.Vector3();return function(){THREE.onwarning('DEPRECATED: Matrix4\\'s .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');var te=this.elements;return v1.set(te[12],te[13],te[14]);};}(),setPosition:function setPosition(v){var te=this.elements;te[12]=v.x;te[13]=v.y;te[14]=v.z;return this;},getInverse:function getInverse(m,errorOnInvertible){var te=this.elements;var me=m.elements;var n11=me[0],n12=me[4],n13=me[8],n14=me[12];var n21=me[1],n22=me[5],n23=me[9],n24=me[13];var n31=me[2],n32=me[6],n33=me[10],n34=me[14];var n41=me[3],n42=me[7],n43=me[11],n44=me[15];te[0]=n23*n34*n42-n24*n33*n42+n24*n32*n43-n22*n34*n43-n23*n32*n44+n22*n33*n44;te[4]=n14*n33*n42-n13*n34*n42-n14*n32*n43+n12*n34*n43+n13*n32*n44-n12*n33*n44;te[8]=n13*n24*n42-n14*n23*n42+n14*n22*n43-n12*n24*n43-n13*n22*n44+n12*n23*n44;te[12]=n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34;te[1]=n24*n33*n41-n23*n34*n41-n24*n31*n43+n21*n34*n43+n23*n31*n44-n21*n33*n44;te[5]=n13*n34*n41-n14*n33*n41+n14*n31*n43-n11*n34*n43-n13*n31*n44+n11*n33*n44;te[9]=n14*n23*n41-n13*n24*n41-n14*n21*n43+n11*n24*n43+n13*n21*n44-n11*n23*n44;te[13]=n13*n24*n31-n14*n23*n31+n14*n21*n33-n11*n24*n33-n13*n21*n34+n11*n23*n34;te[2]=n22*n34*n41-n24*n32*n41+n24*n31*n42-n21*n34*n42-n22*n31*n44+n21*n32*n44;te[6]=n14*n32*n41-n12*n34*n41-n14*n31*n42+n11*n34*n42+n12*n31*n44-n11*n32*n44;te[10]=n12*n24*n41-n14*n22*n41+n14*n21*n42-n11*n24*n42-n12*n21*n44+n11*n22*n44;te[14]=n14*n22*n31-n12*n24*n31-n14*n21*n32+n11*n24*n32+n12*n21*n34-n11*n22*n34;te[3]=n23*n32*n41-n22*n33*n41-n23*n31*n42+n21*n33*n42+n22*n31*n43-n21*n32*n43;te[7]=n12*n33*n41-n13*n32*n41+n13*n31*n42-n11*n33*n42-n12*n31*n43+n11*n32*n43;te[11]=n13*n22*n41-n12*n23*n41-n13*n21*n42+n11*n23*n42+n12*n21*n43-n11*n22*n43;te[15]=n12*n23*n31-n13*n22*n31+n13*n21*n32-n11*n23*n32-n12*n21*n33+n11*n22*n33;var det=n11*te[0]+n21*te[4]+n31*te[8]+n41*te[12];if(det==0){if(errorOnInvertible===true){return THREE.onerror(\"Matrix4.getInverse(): can't invert matrix, determinant is 0\",this);}this.identity();return this;}this.multiplyScalar(1/det);return this;},translate:function translate(v){THREE.onerror('DEPRECATED: Matrix4\\'s .translate() has been removed.');},rotateX:function rotateX(angle){THREE.onerror('DEPRECATED: Matrix4\\'s .rotateX() has been removed.');},rotateY:function rotateY(angle){THREE.onerror('DEPRECATED: Matrix4\\'s .rotateY() has been removed.');},rotateZ:function rotateZ(angle){THREE.onerror('DEPRECATED: Matrix4\\'s .rotateZ() has been removed.');},rotateByAxis:function rotateByAxis(axis,angle){THREE.onerror('DEPRECATED: Matrix4\\'s .rotateByAxis() has been removed.');},scale:function scale(v){var te=this.elements;var x=v.x,y=v.y,z=v.z;te[0]*=x;te[4]*=y;te[8]*=z;te[1]*=x;te[5]*=y;te[9]*=z;te[2]*=x;te[6]*=y;te[10]*=z;te[3]*=x;te[7]*=y;te[11]*=z;return this;},getMaxScaleOnAxis:function getMaxScaleOnAxis(){var te=this.elements;var scaleXSq=te[0]*te[0]+te[1]*te[1]+te[2]*te[2];var scaleYSq=te[4]*te[4]+te[5]*te[5]+te[6]*te[6];var scaleZSq=te[8]*te[8]+te[9]*te[9]+te[10]*te[10];return Math.sqrt(Math.max(scaleXSq,Math.max(scaleYSq,scaleZSq)));},makeTranslation:function makeTranslation(x,y,z){this.set(1,0,0,x,0,1,0,y,0,0,1,z,0,0,0,1);return this;},makeRotationX:function makeRotationX(theta){var c=Math.cos(theta),s=Math.sin(theta);this.set(1,0,0,0,0,c,-s,0,0,s,c,0,0,0,0,1);return this;},makeRotationY:function makeRotationY(theta){var c=Math.cos(theta),s=Math.sin(theta);this.set(c,0,s,0,0,1,0,0,-s,0,c,0,0,0,0,1);return this;},makeRotationZ:function makeRotationZ(theta){var c=Math.cos(theta),s=Math.sin(theta);this.set(c,-s,0,0,s,c,0,0,0,0,1,0,0,0,0,1);return this;},makeRotationAxis:function makeRotationAxis(axis,angle){var c=Math.cos(angle);var s=Math.sin(angle);var t=1-c;var x=axis.x,y=axis.y,z=axis.z;var tx=t*x,ty=t*y;this.set(tx*x+c,tx*y-s*z,tx*z+s*y,0,tx*y+s*z,ty*y+c,ty*z-s*x,0,tx*z-s*y,ty*z+s*x,t*z*z+c,0,0,0,0,1);return this;},makeScale:function makeScale(x,y,z){this.set(x,0,0,0,0,y,0,0,0,0,z,0,0,0,0,1);return this;},makeShear:function makeShear(vector3Shear,reverseStyle){var xy=vector3Shear.x;var xz=vector3Shear.y;var yz=vector3Shear.z;if(reverseStyle){this.set(1,0,0,0,xy,1,0,0,xz,yz,1,0,0,0,0,1);}else{this.set(1,xy,xz,0,0,1,yz,0,0,0,1,0,0,0,0,1);}return this;},compose:function compose(position,quaternion,scale){this.makeRotationFromQuaternion(quaternion);this.scale(scale);this.setPosition(position);return this;},decompose:function(){var vector=new THREE.Vector3();var matrix=new THREE.Matrix4();return function(position,quaternion,scale){var te=this.elements;var sx=vector.set(te[0],te[1],te[2]).length();var sy=vector.set(te[4],te[5],te[6]).length();var sz=vector.set(te[8],te[9],te[10]).length();var det=this.determinant();if(det<0){sx=-sx;}position.x=te[12];position.y=te[13];position.z=te[14];matrix.elements.set(this.elements);var invSX=1/sx;var invSY=1/sy;var invSZ=1/sz;matrix.elements[0]*=invSX;matrix.elements[1]*=invSX;matrix.elements[2]*=invSX;matrix.elements[4]*=invSY;matrix.elements[5]*=invSY;matrix.elements[6]*=invSY;matrix.elements[8]*=invSZ;matrix.elements[9]*=invSZ;matrix.elements[10]*=invSZ;quaternion.setFromRotationMatrix(matrix);scale.x=sx;scale.y=sy;scale.z=sz;return this;};}(),makeFrustum:function makeFrustum(left,right,bottom,top,near,far,filmOffset,filmSize){var te=this.elements;var x=2*near/(right-left);var y=2*near/(top-bottom);var a=(right+left)/(right-left);var b=(top+bottom)/(top-bottom);var c=-(far+near)/(far-near);var d=-2*far*near/(far-near);te[0]=x;te[4]=0;te[8]=a;te[12]=0;te[1]=0;te[5]=y;te[9]=b;te[13]=0;te[2]=0;te[6]=0;te[10]=c;te[14]=d;te[3]=0;te[7]=0;te[11]=-1;te[15]=0;if(filmOffset&&filmSize){if(filmSize.x!==0){te[8]+=2*filmOffset.x/filmSize.x;}if(filmSize.y!==0){te[9]+=2*filmOffset.y/filmSize.y;}}return this;},makePerspective:function makePerspective(fov,aspect,near,far,filmOffset,filmSize){var ymax=near*Math.tan(THREE.Math.degToRad(fov*0.5));var ymin=-ymax;var xmin=ymin*aspect;var xmax=ymax*aspect;return this.makeFrustum(xmin,xmax,ymin,ymax,near,far,filmOffset,filmSize);},makeOrthographic:function makeOrthographic(left,right,top,bottom,near,far){var te=this.elements;var w=right-left;var h=top-bottom;var p=far-near;var x=(right+left)/w;var y=(top+bottom)/h;var z=(far+near)/p;te[0]=2/w;te[4]=0;te[8]=0;te[12]=-x;te[1]=0;te[5]=2/h;te[9]=0;te[13]=-y;te[2]=0;te[6]=0;te[10]=-2/p;te[14]=-z;te[3]=0;te[7]=0;te[11]=0;te[15]=1;return this;},fromArray:function fromArray(array){this.elements.set(array);return this;},toArray:function toArray(){var te=this.elements;return[te[0],te[1],te[2],te[3],te[4],te[5],te[6],te[7],te[8],te[9],te[10],te[11],te[12],te[13],te[14],te[15]];},clone:function clone(){var te=this.elements;return new THREE.Matrix4(te[0],te[4],te[8],te[12],te[1],te[5],te[9],te[13],te[2],te[6],te[10],te[14],te[3],te[7],te[11],te[15]);}};THREE.Ray=function(origin,direction){this.origin=origin!==undefined?origin:new THREE.Vector3();this.direction=direction!==undefined?direction:new THREE.Vector3();};THREE.Ray.prototype={constructor:THREE.Ray,set:function set(origin,direction){this.origin.copy(origin);this.direction.copy(direction);return this;},copy:function copy(ray){this.origin.copy(ray.origin);this.direction.copy(ray.direction);return this;},at:function at(t,optionalTarget){var result=optionalTarget||new THREE.Vector3();return result.copy(this.direction).multiplyScalar(t).add(this.origin);},recast:function(){var v1=new THREE.Vector3();return function(t){this.origin.copy(this.at(t,v1));return this;};}(),closestPointToPoint:function closestPointToPoint(point,optionalTarget){var result=optionalTarget||new THREE.Vector3();result.subVectors(point,this.origin);var directionDistance=result.dot(this.direction);if(directionDistance<0){return result.copy(this.origin);}return result.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);},distanceToPoint:function(){var v1=new THREE.Vector3();return function(point){var directionDistance=v1.subVectors(point,this.origin).dot(this.direction);if(directionDistance<0){return this.origin.distanceTo(point);}v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);return v1.distanceTo(point);};}(),distanceSqToSegment:function distanceSqToSegment(v0,v1,optionalPointOnRay,optionalPointOnSegment){var segCenter=v0.clone().add(v1).multiplyScalar(0.5);var segDir=v1.clone().sub(v0).normalize();var segExtent=v0.distanceTo(v1)*0.5;var diff=this.origin.clone().sub(segCenter);var a01=-this.direction.dot(segDir);var b0=diff.dot(this.direction);var b1=-diff.dot(segDir);var c=diff.lengthSq();var det=Math.abs(1-a01*a01);var s0,s1,sqrDist,extDet;if(det>=0){s0=a01*b1-b0;s1=a01*b0-b1;extDet=segExtent*det;if(s0>=0){if(s1>=-extDet){if(s1<=extDet){var invDet=1/det;s0*=invDet;s1*=invDet;sqrDist=s0*(s0+a01*s1+2*b0)+s1*(a01*s0+s1+2*b1)+c;}else{s1=segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}else{s1=-segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}else{if(s1<=-extDet){s0=Math.max(0,-(-a01*segExtent+b0));s1=s0>0?-segExtent:Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=-s0*s0+s1*(s1+2*b1)+c;}else if(s1<=extDet){s0=0;s1=Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=s1*(s1+2*b1)+c;}else{s0=Math.max(0,-(a01*segExtent+b0));s1=s0>0?segExtent:Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}}else{s1=a01>0?-segExtent:segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}if(optionalPointOnRay){optionalPointOnRay.copy(this.direction.clone().multiplyScalar(s0).add(this.origin));}if(optionalPointOnSegment){optionalPointOnSegment.copy(segDir.clone().multiplyScalar(s1).add(segCenter));}return sqrDist;},isIntersectionSphere:function isIntersectionSphere(sphere){return this.distanceToPoint(sphere.center)<=sphere.radius;},isIntersectionPlane:function isIntersectionPlane(plane){var distToPoint=plane.distanceToPoint(this.origin);if(distToPoint===0){return true;}var denominator=plane.normal.dot(this.direction);if(denominator*distToPoint<0){return true;}return false;},distanceToPlane:function distanceToPlane(plane){var denominator=plane.normal.dot(this.direction);if(denominator==0){if(plane.distanceToPoint(this.origin)==0){return 0;}return null;}var t=-(this.origin.dot(plane.normal)+plane.constant)/denominator;return t>=0?t:null;},intersectPlane:function intersectPlane(plane,optionalTarget){var t=this.distanceToPlane(plane);if(t===null){return null;}return this.at(t,optionalTarget);},isIntersectionBox:function(){var v=new THREE.Vector3();return function(box){return this.intersectBox(box,v)!==null;};}(),intersectBox:function intersectBox(box,optionalTarget){var tmin,tmax,tymin,tymax,tzmin,tzmax;var invdirx=1/this.direction.x,invdiry=1/this.direction.y,invdirz=1/this.direction.z;var origin=this.origin;if(invdirx>=0){tmin=(box.min.x-origin.x)*invdirx;tmax=(box.max.x-origin.x)*invdirx;}else{tmin=(box.max.x-origin.x)*invdirx;tmax=(box.min.x-origin.x)*invdirx;}if(invdiry>=0){tymin=(box.min.y-origin.y)*invdiry;tymax=(box.max.y-origin.y)*invdiry;}else{tymin=(box.max.y-origin.y)*invdiry;tymax=(box.min.y-origin.y)*invdiry;}if(tmin>tymax||tymin>tmax)return null;if(tymin>tmin||tmin!==tmin)tmin=tymin;if(tymax<tmax||tmax!==tmax)tmax=tymax;if(invdirz>=0){tzmin=(box.min.z-origin.z)*invdirz;tzmax=(box.max.z-origin.z)*invdirz;}else{tzmin=(box.max.z-origin.z)*invdirz;tzmax=(box.min.z-origin.z)*invdirz;}if(tmin>tzmax||tzmin>tmax)return null;if(tzmin>tmin||tmin!==tmin)tmin=tzmin;if(tzmax<tmax||tmax!==tmax)tmax=tzmax;if(tmax<0)return null;return this.at(tmin>=0?tmin:tmax,optionalTarget);},intersectTriangle:function(){var diff=new THREE.Vector3();var edge1=new THREE.Vector3();var edge2=new THREE.Vector3();var normal=new THREE.Vector3();return function(a,b,c,backfaceCulling,optionalTarget){edge1.subVectors(b,a);edge2.subVectors(c,a);normal.crossVectors(edge1,edge2);var DdN=this.direction.dot(normal);var sign;if(DdN>0){if(backfaceCulling)return null;sign=1;}else if(DdN<0){sign=-1;DdN=-DdN;}else{return null;}diff.subVectors(this.origin,a);var DdQxE2=sign*this.direction.dot(edge2.crossVectors(diff,edge2));if(DdQxE2<0){return null;}var DdE1xQ=sign*this.direction.dot(edge1.cross(diff));if(DdE1xQ<0){return null;}if(DdQxE2+DdE1xQ>DdN){return null;}var QdN=-sign*diff.dot(normal);if(QdN<0){return null;}return this.at(QdN/DdN,optionalTarget);};}(),applyMatrix4:function applyMatrix4(matrix4){this.direction.add(this.origin).applyMatrix4(matrix4);this.origin.applyMatrix4(matrix4);this.direction.sub(this.origin);this.direction.normalize();return this;},equals:function equals(ray){return ray.origin.equals(this.origin)&&ray.direction.equals(this.direction);},clone:function clone(){return new THREE.Ray().copy(this);}};THREE.Sphere=function(center,radius){this.center=center!==undefined?center:new THREE.Vector3();this.radius=radius!==undefined?radius:0;};THREE.Sphere.prototype={constructor:THREE.Sphere,set:function set(center,radius){this.center.copy(center);this.radius=radius;return this;},setFromPoints:function(){var box=new THREE.Box3();return function(points,optionalCenter){var center=this.center;if(optionalCenter!==undefined){center.copy(optionalCenter);}else{box.setFromPoints(points).center(center);}var maxRadiusSq=0,cx=center.x,cy=center.y,cz=center.z;for(var i=0,il=points.length;i<il;i++){var pt=points[i];var dx=cx-pt.x;var dy=cy-pt.y;var dz=cz-pt.z;var distanceSquared=dx*dx+dy*dy+dz*dz;maxRadiusSq=Math.max(maxRadiusSq,distanceSquared);}this.radius=Math.sqrt(maxRadiusSq);return this;};}(),copy:function copy(sphere){this.center.copy(sphere.center);this.radius=sphere.radius;return this;},empty:function empty(){return this.radius<=0;},containsPoint:function containsPoint(point){return point.distanceToSquared(this.center)<=this.radius*this.radius;},distanceToPoint:function distanceToPoint(point){return point.distanceTo(this.center)-this.radius;},intersectsSphere:function intersectsSphere(sphere){var radiusSum=this.radius+sphere.radius;return sphere.center.distanceToSquared(this.center)<=radiusSum*radiusSum;},clampPoint:function clampPoint(point,optionalTarget){var deltaLengthSq=this.center.distanceToSquared(point);var result=optionalTarget||new THREE.Vector3();result.copy(point);if(deltaLengthSq>this.radius*this.radius){result.sub(this.center).normalize();result.multiplyScalar(this.radius).add(this.center);}return result;},getBoundingBox:function getBoundingBox(optionalTarget){var box=optionalTarget||new THREE.Box3();box.set(this.center,this.center);box.expandByScalar(this.radius);return box;},applyMatrix4:function applyMatrix4(matrix){this.center.applyMatrix4(matrix);this.radius=this.radius*matrix.getMaxScaleOnAxis();return this;},translate:function translate(offset){this.center.add(offset);return this;},equals:function equals(sphere){return sphere.center.equals(this.center)&&sphere.radius===this.radius;},clone:function clone(){return new THREE.Sphere().copy(this);}};THREE.Frustum=function(p0,p1,p2,p3,p4,p5){this.planes=[p0!==undefined?p0:new THREE.Plane(),p1!==undefined?p1:new THREE.Plane(),p2!==undefined?p2:new THREE.Plane(),p3!==undefined?p3:new THREE.Plane(),p4!==undefined?p4:new THREE.Plane(),p5!==undefined?p5:new THREE.Plane()];};THREE.Frustum.prototype={constructor:THREE.Frustum,set:function set(p0,p1,p2,p3,p4,p5){var planes=this.planes;planes[0].copy(p0);planes[1].copy(p1);planes[2].copy(p2);planes[3].copy(p3);planes[4].copy(p4);planes[5].copy(p5);return this;},copy:function copy(frustum){var planes=this.planes;for(var i=0;i<6;i++){planes[i].copy(frustum.planes[i]);}return this;},setFromMatrix:function setFromMatrix(m){var planes=this.planes;var me=m.elements;var me0=me[0],me1=me[1],me2=me[2],me3=me[3];var me4=me[4],me5=me[5],me6=me[6],me7=me[7];var me8=me[8],me9=me[9],me10=me[10],me11=me[11];var me12=me[12],me13=me[13],me14=me[14],me15=me[15];planes[0].setComponents(me3-me0,me7-me4,me11-me8,me15-me12).normalize();planes[1].setComponents(me3+me0,me7+me4,me11+me8,me15+me12).normalize();planes[2].setComponents(me3+me1,me7+me5,me11+me9,me15+me13).normalize();planes[3].setComponents(me3-me1,me7-me5,me11-me9,me15-me13).normalize();planes[4].setComponents(me3-me2,me7-me6,me11-me10,me15-me14).normalize();planes[5].setComponents(me3+me2,me7+me6,me11+me10,me15+me14).normalize();return this;},intersectsObject:function(){var sphere=new THREE.Sphere();return function(object){var geometry=object.geometry;if(geometry.boundingSphere===null)geometry.computeBoundingSphere();sphere.copy(geometry.boundingSphere);sphere.applyMatrix4(object.matrixWorld);return this.intersectsSphere(sphere);};}(),intersectsSphere:function intersectsSphere(sphere){var planes=this.planes;var center=sphere.center;var negRadius=-sphere.radius;for(var i=0;i<6;i++){var distance=planes[i].distanceToPoint(center);if(distance<negRadius){return false;}}return true;},intersectsBox:function(){var p1=new THREE.Vector3(),p2=new THREE.Vector3();return function(box){var planes=this.planes;for(var i=0;i<6;i++){var plane=planes[i];p1.x=plane.normal.x>0?box.min.x:box.max.x;p2.x=plane.normal.x>0?box.max.x:box.min.x;p1.y=plane.normal.y>0?box.min.y:box.max.y;p2.y=plane.normal.y>0?box.max.y:box.min.y;p1.z=plane.normal.z>0?box.min.z:box.max.z;p2.z=plane.normal.z>0?box.max.z:box.min.z;var d1=plane.distanceToPoint(p1);var d2=plane.distanceToPoint(p2);if(d1<0&&d2<0){return false;}}return true;};}(),containsPoint:function containsPoint(point){var planes=this.planes;for(var i=0;i<6;i++){if(planes[i].distanceToPoint(point)<0){return false;}}return true;},clone:function clone(){return new THREE.Frustum().copy(this);}};THREE.Plane=function(normal,constant){this.normal=normal!==undefined?normal:new THREE.Vector3(1,0,0);this.constant=constant!==undefined?constant:0;};THREE.Plane.prototype={constructor:THREE.Plane,set:function set(normal,constant){this.normal.copy(normal);this.constant=constant;return this;},setComponents:function setComponents(x,y,z,w){this.normal.set(x,y,z);this.constant=w;return this;},setFromNormalAndCoplanarPoint:function setFromNormalAndCoplanarPoint(normal,point){this.normal.copy(normal);this.constant=-point.dot(this.normal);return this;},setFromCoplanarPoints:function(){var v1=new THREE.Vector3();var v2=new THREE.Vector3();return function(a,b,c){var normal=v1.subVectors(c,b).cross(v2.subVectors(a,b)).normalize();this.setFromNormalAndCoplanarPoint(normal,a);return this;};}(),copy:function copy(plane){this.normal.copy(plane.normal);this.constant=plane.constant;return this;},normalize:function normalize(){var inverseNormalLength=1.0/this.normal.length();this.normal.multiplyScalar(inverseNormalLength);this.constant*=inverseNormalLength;return this;},negate:function negate(){this.constant*=-1;this.normal.negate();return this;},distanceToPoint:function distanceToPoint(point){return this.normal.dot(point)+this.constant;},distanceToSphere:function distanceToSphere(sphere){return this.distanceToPoint(sphere.center)-sphere.radius;},projectPoint:function projectPoint(point,optionalTarget){return this.orthoPoint(point,optionalTarget).sub(point).negate();},orthoPoint:function orthoPoint(point,optionalTarget){var perpendicularMagnitude=this.distanceToPoint(point);var result=optionalTarget||new THREE.Vector3();return result.copy(this.normal).multiplyScalar(perpendicularMagnitude);},isIntersectionLine:function isIntersectionLine(line){var startSign=this.distanceToPoint(line.start);var endSign=this.distanceToPoint(line.end);return startSign<0&&endSign>0||endSign<0&&startSign>0;},intersectLine:function(){var v1=new THREE.Vector3();return function(line,optionalTarget){var result=optionalTarget||new THREE.Vector3();var direction=line.delta(v1);var denominator=this.normal.dot(direction);if(denominator==0){if(this.distanceToPoint(line.start)==0){return result.copy(line.start);}return undefined;}var t=-(line.start.dot(this.normal)+this.constant)/denominator;if(t<0||t>1){return undefined;}return result.copy(direction).multiplyScalar(t).add(line.start);};}(),coplanarPoint:function coplanarPoint(optionalTarget){var result=optionalTarget||new THREE.Vector3();return result.copy(this.normal).multiplyScalar(-this.constant);},applyMatrix4:function(){var v1=new THREE.Vector3();var v2=new THREE.Vector3();var m1=new THREE.Matrix3();return function(matrix,optionalNormalMatrix){if(!(matrix instanceof THREE.Matrix4))return THREE.onerror('expecting a Matrix4',matrix);var normalMatrix=optionalNormalMatrix||m1.getNormalMatrix(matrix);var newNormal=v1.copy(this.normal).applyMatrix3(normalMatrix);var newCoplanarPoint=this.coplanarPoint(v2);newCoplanarPoint.applyMatrix4(matrix);this.setFromNormalAndCoplanarPoint(newNormal,newCoplanarPoint);return this;};}(),translate:function translate(offset){this.constant=this.constant-offset.dot(this.normal);return this;},equals:function equals(plane){return plane.normal.equals(this.normal)&&plane.constant==this.constant;},clone:function clone(){return new THREE.Plane().copy(this);}};THREE.Math={PI2:Math.PI*2,DegreeToRadiansFactor:Math.PI/180,RadianToDegreesFactor:180/Math.PI,generateUUID:function(){var chars='0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');var uuid=new Array(36);var rnd=0,r;return function(){for(var i=0;i<36;i++){if(i==8||i==13||i==18||i==23){uuid[i]='-';}else if(i==14){uuid[i]='4';}else{if(rnd<=0x02)rnd=0x2000000+Math.random()*0x1000000|0;r=rnd&0xf;rnd=rnd>>4;uuid[i]=chars[i==19?r&0x3|0x8:r];}}return uuid.join('');};}(),clamp:function clamp(x,a,b){return x<a?a:x>b?b:x;},clampBottom:function clampBottom(x,a){return x<a?a:x;},mapLinear:function mapLinear(x,a1,a2,b1,b2){return b1+(x-a1)*(b2-b1)/(a2-a1);},smoothstep:function smoothstep(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*(3-2*x);},smootherstep:function smootherstep(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*x*(x*(x*6-15)+10);},random16:function random16(){return(65280*Math.random()+255*Math.random())/65535;},randInt:function randInt(low,high){return low+Math.floor(Math.random()*(high-low+1));},randFloat:function randFloat(low,high){return low+Math.random()*(high-low);},randFloatSpread:function randFloatSpread(range){return range*(0.5-Math.random());},sign:function sign(x){return x<0?-1:x>0?1:0;},degToRad:function degToRad(degrees){return degrees*this.DegreeToRadiansFactor;},radToDeg:function radToDeg(radians){return radians*this.RadianToDegreesFactor;},isPowerOfTwo:function isPowerOfTwo(value){return(value&value-1)===0&&value!==0;}};THREE.Spline=function(points){this.points=points;var c=[],v3={x:0,y:0,z:0},point,intPoint,weight,w2,w3,pa,pb,pc,pd;this.initFromArray=function(a){this.points=[];for(var i=0;i<a.length;i++){this.points[i]={x:a[i][0],y:a[i][1],z:a[i][2]};}};this.getPoint=function(k){point=(this.points.length-1)*k;intPoint=Math.floor(point);weight=point-intPoint;c[0]=intPoint===0?intPoint:intPoint-1;c[1]=intPoint;c[2]=intPoint>this.points.length-2?this.points.length-1:intPoint+1;c[3]=intPoint>this.points.length-3?this.points.length-1:intPoint+2;pa=this.points[c[0]];pb=this.points[c[1]];pc=this.points[c[2]];pd=this.points[c[3]];w2=weight*weight;w3=weight*w2;v3.x=interpolate(pa.x,pb.x,pc.x,pd.x,weight,w2,w3);v3.y=interpolate(pa.y,pb.y,pc.y,pd.y,weight,w2,w3);v3.z=interpolate(pa.z,pb.z,pc.z,pd.z,weight,w2,w3);return v3;};this.getControlPointsArray=function(){var i,p,l=this.points.length,coords=[];for(i=0;i<l;i++){p=this.points[i];coords[i]=[p.x,p.y,p.z];}return coords;};this.getLength=function(nSubDivisions){var i,index,nSamples,position,point=0,intPoint=0,oldIntPoint=0,oldPosition=new THREE.Vector3(),tmpVec=new THREE.Vector3(),chunkLengths=[],totalLength=0;chunkLengths[0]=0;if(!nSubDivisions)nSubDivisions=100;nSamples=this.points.length*nSubDivisions;oldPosition.copy(this.points[0]);for(i=1;i<nSamples;i++){index=i/nSamples;position=this.getPoint(index);tmpVec.copy(position);totalLength+=tmpVec.distanceTo(oldPosition);oldPosition.copy(position);point=(this.points.length-1)*index;intPoint=Math.floor(point);if(intPoint!=oldIntPoint){chunkLengths[intPoint]=totalLength;oldIntPoint=intPoint;}}chunkLengths[chunkLengths.length]=totalLength;return{chunks:chunkLengths,total:totalLength};};this.reparametrizeByArcLength=function(samplingCoef){var i,j,index,indexCurrent,indexNext,linearDistance,realDistance,sampling,position,newpoints=[],tmpVec=new THREE.Vector3(),sl=this.getLength();newpoints.push(tmpVec.copy(this.points[0]).clone());for(i=1;i<this.points.length;i++){realDistance=sl.chunks[i]-sl.chunks[i-1];sampling=Math.ceil(samplingCoef*realDistance/sl.total);indexCurrent=(i-1)/(this.points.length-1);indexNext=i/(this.points.length-1);for(j=1;j<sampling-1;j++){index=indexCurrent+j*(1/sampling)*(indexNext-indexCurrent);position=this.getPoint(index);newpoints.push(tmpVec.copy(position).clone());}newpoints.push(tmpVec.copy(this.points[i]).clone());}this.points=newpoints;};function interpolate(p0,p1,p2,p3,t,t2,t3){var v0=(p2-p0)*0.5,v1=(p3-p1)*0.5;return(2*(p1-p2)+v0+v1)*t3+(-3*(p1-p2)-2*v0-v1)*t2+v0*t+p1;};};THREE.Triangle=function(a,b,c){this.a=a!==undefined?a:new THREE.Vector3();this.b=b!==undefined?b:new THREE.Vector3();this.c=c!==undefined?c:new THREE.Vector3();};THREE.Triangle.normal=function(){var v0=new THREE.Vector3();return function(a,b,c,optionalTarget){var result=optionalTarget||new THREE.Vector3();result.subVectors(c,b);v0.subVectors(a,b);result.cross(v0);var resultLengthSq=result.lengthSq();if(resultLengthSq>0){return result.multiplyScalar(1/Math.sqrt(resultLengthSq));}return result.set(0,0,0);};}();THREE.Triangle.barycoordFromPoint=function(){var v0=new THREE.Vector3();var v1=new THREE.Vector3();var v2=new THREE.Vector3();return function(point,a,b,c,optionalTarget){v0.subVectors(c,a);v1.subVectors(b,a);v2.subVectors(point,a);var dot00=v0.dot(v0);var dot01=v0.dot(v1);var dot02=v0.dot(v2);var dot11=v1.dot(v1);var dot12=v1.dot(v2);var denom=dot00*dot11-dot01*dot01;var result=optionalTarget||new THREE.Vector3();if(denom==0){return result.set(-2,-1,-1);}var invDenom=1/denom;var u=(dot11*dot02-dot01*dot12)*invDenom;var v=(dot00*dot12-dot01*dot02)*invDenom;return result.set(1-u-v,v,u);};}();THREE.Triangle.containsPoint=function(){var v1=new THREE.Vector3();return function(point,a,b,c){var result=THREE.Triangle.barycoordFromPoint(point,a,b,c,v1);return result.x>=0&&result.y>=0&&result.x+result.y<=1;};}();THREE.Triangle.prototype={constructor:THREE.Triangle,set:function set(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this;},setFromPointsAndIndices:function setFromPointsAndIndices(points,i0,i1,i2){this.a.copy(points[i0]);this.b.copy(points[i1]);this.c.copy(points[i2]);return this;},copy:function copy(triangle){this.a.copy(triangle.a);this.b.copy(triangle.b);this.c.copy(triangle.c);return this;},area:function(){var v0=new THREE.Vector3();var v1=new THREE.Vector3();return function(){v0.subVectors(this.c,this.b);v1.subVectors(this.a,this.b);return v0.cross(v1).length()*0.5;};}(),midpoint:function midpoint(optionalTarget){var result=optionalTarget||new THREE.Vector3();return result.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3);},normal:function normal(optionalTarget){return THREE.Triangle.normal(this.a,this.b,this.c,optionalTarget);},plane:function plane(optionalTarget){var result=optionalTarget||new THREE.Plane();return result.setFromCoplanarPoints(this.a,this.b,this.c);},barycoordFromPoint:function barycoordFromPoint(point,optionalTarget){return THREE.Triangle.barycoordFromPoint(point,this.a,this.b,this.c,optionalTarget);},containsPoint:function containsPoint(point){return THREE.Triangle.containsPoint(point,this.a,this.b,this.c);},equals:function equals(triangle){return triangle.a.equals(this.a)&&triangle.b.equals(this.b)&&triangle.c.equals(this.c);},clone:function clone(){return new THREE.Triangle().copy(this);}};THREE.Vertex=function(v){return THREE.onerror('THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.');};THREE.UV=function(u,v){THREE.onerror('THREE.UV has been DEPRECATED. Use THREE.Vector2 instead.');return new THREE.Vector2(u,v);};THREE.Clock=function(autoStart){this.autoStart=autoStart!==undefined?autoStart:true;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=false;};THREE.Clock.prototype={constructor:THREE.Clock,start:function start(){this.startTime=self.performance!==undefined&&self.performance.now!==undefined?self.performance.now():Date.now();this.oldTime=this.startTime;this.running=true;},stop:function stop(){this.getElapsedTime();this.running=false;},getElapsedTime:function getElapsedTime(){this.getDelta();return this.elapsedTime;},getDelta:function getDelta(){var diff=0;if(this.autoStart&&!this.running){this.start();}if(this.running){var newTime=self.performance!==undefined&&self.performance.now!==undefined?self.performance.now():Date.now();diff=0.001*(newTime-this.oldTime);this.oldTime=newTime;this.elapsedTime+=diff;}return diff;}};THREE.EventDispatcher=function(){};THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function apply(object){object.addEventListener=THREE.EventDispatcher.prototype.addEventListener;object.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;object.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;object.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent;},addEventListener:function addEventListener(type,listener){if(this._listeners===undefined)this._listeners={};var listeners=this._listeners;if(listeners[type]===undefined){listeners[type]=[];}if(listeners[type].indexOf(listener)===-1){listeners[type].push(listener);}},hasEventListener:function hasEventListener(type,listener){if(this._listeners===undefined)return false;var listeners=this._listeners;if(listeners[type]!==undefined&&listeners[type].indexOf(listener)!==-1){return true;}return false;},removeEventListener:function removeEventListener(type,listener){if(this._listeners===undefined)return;var listeners=this._listeners;var listenerArray=listeners[type];if(listenerArray!==undefined){var index=listenerArray.indexOf(listener);if(index!==-1){listenerArray.splice(index,1);}}},dispatchEvent:function(){var array=[];return function(event){if(this._listeners===undefined)return;var listeners=this._listeners;var listenerArray=listeners[event.type];if(listenerArray!==undefined){event.target=this;var length=listenerArray.length;for(var i=0;i<length;i++){array[i]=listenerArray[i];}for(var i=0;i<length;i++){array[i].call(this,event);}}};}()};(function(THREE){THREE.Raycaster=function(origin,direction,near,far){this.ray=new THREE.Ray(origin,direction);this.near=near||0;this.far=far||Infinity;};var sphere=new THREE.Sphere();var localRay=new THREE.Ray();var facePlane=new THREE.Plane();var intersectPoint=new THREE.Vector3();var matrixPosition=new THREE.Vector3();var inverseMatrix=new THREE.Matrix4();var descSort=function descSort(a,b){return a.distance-b.distance;};var vA=new THREE.Vector3();var vB=new THREE.Vector3();var vC=new THREE.Vector3();var intersectObject=function intersectObject(object,raycaster,intersects){if(object instanceof THREE.Sprite){matrixPosition.setFromMatrixPosition(object.matrixWorld);var distance=raycaster.ray.distanceToPoint(matrixPosition);if(distance>object.scale.x){return intersects;}intersects.push({distance:distance,point:object.position,face:null,object:object});}else if(object instanceof THREE.LOD){matrixPosition.setFromMatrixPosition(object.matrixWorld);var distance=raycaster.ray.origin.distanceTo(matrixPosition);intersectObject(object.getObjectForDistance(distance),raycaster,intersects);}else if(object instanceof THREE.Mesh){var geometry=object.geometry;if(geometry.boundingSphere===null)geometry.computeBoundingSphere();sphere.copy(geometry.boundingSphere);sphere.applyMatrix4(object.matrixWorld);if(raycaster.ray.isIntersectionSphere(sphere)===false){return intersects;}inverseMatrix.getInverse(object.matrixWorld);localRay.copy(raycaster.ray).applyMatrix4(inverseMatrix);if(geometry.boundingBox!==null){if(localRay.isIntersectionBox(geometry.boundingBox)===false){return intersects;}}if(geometry instanceof THREE.BufferGeometry){var material=object.material;if(material===undefined)return intersects;var attributes=geometry.attributes;var a,b,c;var precision=raycaster.precision;if(attributes.index!==undefined){var offsets=geometry.offsets;var indices=attributes.index.array;var positions=attributes.position.array;for(var oi=0,ol=offsets.length;oi<ol;++oi){var start=offsets[oi].start;var count=offsets[oi].count;var index=offsets[oi].index;for(var i=start,il=start+count;i<il;i+=3){a=index+indices[i];b=index+indices[i+1];c=index+indices[i+2];vA.set(positions[a*3],positions[a*3+1],positions[a*3+2]);vB.set(positions[b*3],positions[b*3+1],positions[b*3+2]);vC.set(positions[c*3],positions[c*3+1],positions[c*3+2]);if(material.side===THREE.BackSide){var intersectionPoint=localRay.intersectTriangle(vC,vB,vA,true);}else{var intersectionPoint=localRay.intersectTriangle(vA,vB,vC,material.side!==THREE.DoubleSide);}if(intersectionPoint===null)continue;intersectionPoint.applyMatrix4(object.matrixWorld);var distance=raycaster.ray.origin.distanceTo(intersectionPoint);if(distance<precision||distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,point:intersectionPoint,indices:[a,b,c],face:null,faceIndex:null,object:object});}}}else{var offsets=geometry.offsets;var positions=attributes.position.array;for(var i=0,il=attributes.position.array.length;i<il;i+=3){a=i;b=i+1;c=i+2;vA.set(positions[a*3],positions[a*3+1],positions[a*3+2]);vB.set(positions[b*3],positions[b*3+1],positions[b*3+2]);vC.set(positions[c*3],positions[c*3+1],positions[c*3+2]);if(material.side===THREE.BackSide){var intersectionPoint=localRay.intersectTriangle(vC,vB,vA,true);}else{var intersectionPoint=localRay.intersectTriangle(vA,vB,vC,material.side!==THREE.DoubleSide);}if(intersectionPoint===null)continue;intersectionPoint.applyMatrix4(object.matrixWorld);var distance=raycaster.ray.origin.distanceTo(intersectionPoint);if(distance<precision||distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,point:intersectionPoint,indices:[a,b,c],face:null,faceIndex:null,object:object});}}}else if(geometry instanceof THREE.Geometry){var isFaceMaterial=object.material instanceof THREE.MeshFaceMaterial;var objectMaterials=isFaceMaterial===true?object.material.materials:null;var a,b,c,d;var precision=raycaster.precision;var vertices=geometry.vertices;for(var f=0,fl=geometry.faces.length;f<fl;f++){var face=geometry.faces[f];var material=isFaceMaterial===true?objectMaterials[face.materialIndex]:object.material;if(material===undefined)continue;a=vertices[face.a];b=vertices[face.b];c=vertices[face.c];if(material.morphTargets===true){var morphTargets=geometry.morphTargets;var morphInfluences=object.morphTargetInfluences;vA.set(0,0,0);vB.set(0,0,0);vC.set(0,0,0);for(var t=0,tl=morphTargets.length;t<tl;t++){var influence=morphInfluences[t];if(influence===0)continue;var targets=morphTargets[t].vertices;vA.x+=(targets[face.a].x-a.x)*influence;vA.y+=(targets[face.a].y-a.y)*influence;vA.z+=(targets[face.a].z-a.z)*influence;vB.x+=(targets[face.b].x-b.x)*influence;vB.y+=(targets[face.b].y-b.y)*influence;vB.z+=(targets[face.b].z-b.z)*influence;vC.x+=(targets[face.c].x-c.x)*influence;vC.y+=(targets[face.c].y-c.y)*influence;vC.z+=(targets[face.c].z-c.z)*influence;}vA.add(a);vB.add(b);vC.add(c);a=vA;b=vB;c=vC;}if(material.side===THREE.BackSide){var intersectionPoint=localRay.intersectTriangle(c,b,a,true);}else{var intersectionPoint=localRay.intersectTriangle(a,b,c,material.side!==THREE.DoubleSide);}if(intersectionPoint===null)continue;intersectionPoint.applyMatrix4(object.matrixWorld);var distance=raycaster.ray.origin.distanceTo(intersectionPoint);if(distance<precision||distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,point:intersectionPoint,face:face,faceIndex:f,object:object});}}}else if(object instanceof THREE.Line){var precision=raycaster.linePrecision;var precisionSq=precision*precision;var geometry=object.geometry;if(geometry.boundingSphere===null)geometry.computeBoundingSphere();sphere.copy(geometry.boundingSphere);sphere.applyMatrix4(object.matrixWorld);if(raycaster.ray.isIntersectionSphere(sphere)===false){return intersects;}inverseMatrix.getInverse(object.matrixWorld);localRay.copy(raycaster.ray).applyMatrix4(inverseMatrix);if(geometry instanceof THREE.Geometry){var vertices=geometry.vertices;var nbVertices=vertices.length;var interSegment=new THREE.Vector3();var interRay=new THREE.Vector3();var step=object.type===THREE.LineStrip?1:2;for(var i=0;i<nbVertices-1;i=i+step){var distSq=localRay.distanceSqToSegment(vertices[i],vertices[i+1],interRay,interSegment);if(distSq>precisionSq)continue;var distance=localRay.origin.distanceTo(interRay);if(distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,point:interSegment.clone().applyMatrix4(object.matrixWorld),face:null,faceIndex:null,object:object});}}}};var intersectDescendants=function intersectDescendants(object,raycaster,intersects){var descendants=object.getDescendants();for(var i=0,l=descendants.length;i<l;i++){intersectObject(descendants[i],raycaster,intersects);}};THREE.Raycaster.prototype.precision=0.0001;THREE.Raycaster.prototype.linePrecision=1;THREE.Raycaster.prototype.set=function(origin,direction){this.ray.set(origin,direction);};THREE.Raycaster.prototype.intersectObject=function(object,recursive){var intersects=[];if(recursive===true){intersectDescendants(object,this,intersects);}intersectObject(object,this,intersects);intersects.sort(descSort);return intersects;};THREE.Raycaster.prototype.intersectObjects=function(objects,recursive){var intersects=[];for(var i=0,l=objects.length;i<l;i++){intersectObject(objects[i],this,intersects);if(recursive===true){intersectDescendants(objects[i],this,intersects);}}intersects.sort(descSort);return intersects;};})(THREE);THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.uuid=THREE.Math.generateUUID();this.className=\"Object3D\";this.name='';this.parent=undefined;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3();this._rotation=new THREE.Euler();this._quaternion=new THREE.Quaternion();this.scale=new THREE.Vector3(1,1,1);this._rotation._quaternion=this.quaternion;this._quaternion._euler=this.rotation;this.renderDepth=null;this.rotationAutoUpdate=true;this.matrix=new THREE.Matrix4();this.matrixWorld=new THREE.Matrix4();this.matrixAutoUpdate=true;this.matrixWorldNeedsUpdate=true;this.visible=true;this.castShadow=false;this.receiveShadow=false;this.frustumCulled=true;this.userData={};};THREE.Object3D.prototype={constructor:THREE.Object3D,get rotation(){return this._rotation;},set rotation(value){this._rotation=value;this._rotation._quaternion=this._quaternion;this._quaternion._euler=this._rotation;this._rotation._updateQuaternion();},get quaternion(){return this._quaternion;},set quaternion(value){this._quaternion=value;this._quaternion._euler=this._rotation;this._rotation._quaternion=this._quaternion;this._quaternion._updateEuler();},get eulerOrder(){THREE.onwarning('DEPRECATED: Object3D\\'s .eulerOrder has been moved to Object3D\\'s .rotation.order.');return this.rotation.order;},set eulerOrder(value){THREE.onwarning('DEPRECATED: Object3D\\'s .eulerOrder has been moved to Object3D\\'s .rotation.order.');this.rotation.order=value;},get useQuaternion(){THREE.onwarning('DEPRECATED: Object3D\\'s .useQuaternion has been removed. The library now uses quaternions by default.');},set useQuaternion(value){THREE.onwarning('DEPRECATED: Object3D\\'s .useQuaternion has been removed. The library now uses quaternions by default.');},applyMatrix:function applyMatrix(matrix){this.matrix.multiplyMatrices(matrix,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale);},setRotationFromAxisAngle:function setRotationFromAxisAngle(axis,angle){this.quaternion.setFromAxisAngle(axis,angle);},setRotationFromEuler:function setRotationFromEuler(euler){this.quaternion.setFromEuler(euler,true);},setRotationFromMatrix:function setRotationFromMatrix(m){this.quaternion.setFromRotationMatrix(m);},setRotationFromQuaternion:function setRotationFromQuaternion(q){this.quaternion.copy(q);},rotateOnAxis:function(){var q1=new THREE.Quaternion();return function(axis,angle){q1.setFromAxisAngle(axis,angle);this.quaternion.multiply(q1);return this;};}(),rotateX:function(){var v1=new THREE.Vector3(1,0,0);return function(angle){return this.rotateOnAxis(v1,angle);};}(),rotateY:function(){var v1=new THREE.Vector3(0,1,0);return function(angle){return this.rotateOnAxis(v1,angle);};}(),rotateZ:function(){var v1=new THREE.Vector3(0,0,1);return function(angle){return this.rotateOnAxis(v1,angle);};}(),translateOnAxis:function(){var v1=new THREE.Vector3();return function(axis,distance){v1.copy(axis);v1.applyQuaternion(this.quaternion);this.position.add(v1.multiplyScalar(distance));return this;};}(),translate:function translate(distance,axis){THREE.onwarning('DEPRECATED: Object3D\\'s .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed.');return this.translateOnAxis(axis,distance);},translateX:function(){var v1=new THREE.Vector3(1,0,0);return function(distance){return this.translateOnAxis(v1,distance);};}(),translateY:function(){var v1=new THREE.Vector3(0,1,0);return function(distance){return this.translateOnAxis(v1,distance);};}(),translateZ:function(){var v1=new THREE.Vector3(0,0,1);return function(distance){return this.translateOnAxis(v1,distance);};}(),localToWorld:function localToWorld(vector){return vector.applyMatrix4(this.matrixWorld);},worldToLocal:function(){var m1=new THREE.Matrix4();return function(vector){return vector.applyMatrix4(m1.getInverse(this.matrixWorld));};}(),lookAt:function(){var m1=new THREE.Matrix4();return function(vector){m1.lookAt(vector,this.position,this.up);this.quaternion.setFromRotationMatrix(m1);};}(),add:function add(object){if(object===this){THREE.onwarning('THREE.Object3D.add: An object can\\'t be added as a child of itself.');return;}if(object instanceof THREE.Object3D){if(object.parent!==undefined){object.parent.remove(object);}object.parent=this;object.dispatchEvent({type:'added'});this.children.push(object);var scene=this;while(scene.parent!==undefined){scene=scene.parent;}if(scene!==undefined&&scene instanceof THREE.Scene){scene.__addObject(object);}}},remove:function remove(object){var index=this.children.indexOf(object);if(index!==-1){object.parent=undefined;object.dispatchEvent({type:'removed'});this.children.splice(index,1);var scene=this;while(scene.parent!==undefined){scene=scene.parent;}if(scene!==undefined&&scene instanceof THREE.Scene){scene.__removeObject(object);}}},traverse:function traverse(callback){callback(this);for(var i=0,l=this.children.length;i<l;i++){this.children[i].traverse(callback);}},getObjectById:function getObjectById(id,recursive){for(var i=0,l=this.children.length;i<l;i++){var child=this.children[i];if(child.id===id){return child;}if(recursive===true){child=child.getObjectById(id,recursive);if(child!==undefined){return child;}}}return undefined;},getObjectByName:function getObjectByName(name,recursive){for(var i=0,l=this.children.length;i<l;i++){var child=this.children[i];if(child.name===name){return child;}if(recursive===true){child=child.getObjectByName(name,recursive);if(child!==undefined){return child;}}}return undefined;},getChildByName:function getChildByName(name,recursive){THREE.onwarning('DEPRECATED: Object3D\\'s .getChildByName() has been renamed to .getObjectByName().');return this.getObjectByName(name,recursive);},getDescendants:function getDescendants(array){if(array===undefined)array=[];Array.prototype.push.apply(array,this.children);for(var i=0,l=this.children.length;i<l;i++){this.children[i].getDescendants(array);}return array;},updateMatrix:function updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true;},updateMatrixWorld:function updateMatrixWorld(force){if(this.matrixAutoUpdate===true)this.updateMatrix();if(this.matrixWorldNeedsUpdate===true||force===true){if(this.parent===undefined){this.matrixWorld.copy(this.matrix);}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}this.matrixWorldNeedsUpdate=false;force=true;}for(var i=0,l=this.children.length;i<l;i++){this.children[i].updateMatrixWorld(force);}},clone:function clone(object,recursive){if(object===undefined)object=new THREE.Object3D();if(recursive===undefined)recursive=true;object.name=this.name;object.up.copy(this.up);object.position.copy(this.position);object.quaternion.copy(this.quaternion);object.scale.copy(this.scale);object.renderDepth=this.renderDepth;object.rotationAutoUpdate=this.rotationAutoUpdate;object.matrix.copy(this.matrix);object.matrixWorld.copy(this.matrixWorld);object.matrixAutoUpdate=this.matrixAutoUpdate;object.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;object.visible=this.visible;object.castShadow=this.castShadow;object.receiveShadow=this.receiveShadow;object.frustumCulled=this.frustumCulled;object.userData=JSON.parse(JSON.stringify(this.userData));if(recursive===true){for(var i=0;i<this.children.length;i++){var child=this.children[i];object.add(child.clone());}}return object;}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;THREE.Projector=function(){var _object,_objectCount,_objectPool=[],_objectPoolLength=0,_vertex,_vertexCount,_vertexPool=[],_vertexPoolLength=0,_face,_faceCount,_facePool=[],_facePoolLength=0,_line,_lineCount,_linePool=[],_linePoolLength=0,_sprite,_spriteCount,_spritePool=[],_spritePoolLength=0,_renderData={objects:[],lights:[],elements:[]},_vA=new THREE.Vector3(),_vB=new THREE.Vector3(),_vC=new THREE.Vector3(),_vector3=new THREE.Vector3(),_vector4=new THREE.Vector4(),_clipBox=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),_boundingBox=new THREE.Box3(),_points3=new Array(3),_points4=new Array(4),_viewMatrix=new THREE.Matrix4(),_viewProjectionMatrix=new THREE.Matrix4(),_modelMatrix,_modelViewProjectionMatrix=new THREE.Matrix4(),_normalMatrix=new THREE.Matrix3(),_frustum=new THREE.Frustum(),_clippedVertex1PositionScreen=new THREE.Vector4(),_clippedVertex2PositionScreen=new THREE.Vector4();this.projectVector=function(vector,camera){camera.matrixWorldInverse.getInverse(camera.matrixWorld);_viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);return vector.applyProjection(_viewProjectionMatrix);};this.unprojectVector=function(){var projectionMatrixInverse=new THREE.Matrix4();return function(vector,camera){projectionMatrixInverse.getInverse(camera.projectionMatrix);_viewProjectionMatrix.multiplyMatrices(camera.matrixWorld,projectionMatrixInverse);return vector.applyProjection(_viewProjectionMatrix);};}();this.pickingRay=function(vector,camera){vector.z=-1.0;var end=new THREE.Vector3(vector.x,vector.y,1.0);this.unprojectVector(vector,camera);this.unprojectVector(end,camera);end.sub(vector).normalize();return new THREE.Raycaster(vector,end);};var projectObject=function projectObject(object){if(object.visible===false)return;if(object instanceof THREE.Light){_renderData.lights.push(object);}else if(object instanceof THREE.Mesh||object instanceof THREE.Line||object instanceof THREE.Sprite){if(object.frustumCulled===false||_frustum.intersectsObject(object)===true){_object=getNextObjectInPool();_object.id=object.id;_object.object=object;if(object.renderDepth!==null){_object.z=object.renderDepth;}else{_vector3.setFromMatrixPosition(object.matrixWorld);_vector3.applyProjection(_viewProjectionMatrix);_object.z=_vector3.z;}_renderData.objects.push(_object);}}for(var i=0,l=object.children.length;i<l;i++){projectObject(object.children[i]);}};var projectGraph=function projectGraph(root,sortObjects){_objectCount=0;_renderData.objects.length=0;_renderData.lights.length=0;projectObject(root);if(sortObjects===true){_renderData.objects.sort(painterSort);}};var RenderList=function RenderList(){var normals=[];var object=null;var normalMatrix=new THREE.Matrix3();var setObject=function setObject(value){object=value;normalMatrix.getNormalMatrix(object.matrixWorld);normals.length=0;};var projectVertex=function projectVertex(vertex){var position=vertex.position;var positionWorld=vertex.positionWorld;var positionScreen=vertex.positionScreen;positionWorld.copy(position).applyMatrix4(_modelMatrix);positionScreen.copy(positionWorld).applyMatrix4(_viewProjectionMatrix);var invW=1/positionScreen.w;positionScreen.x*=invW;positionScreen.y*=invW;positionScreen.z*=invW;vertex.visible=positionScreen.x>=-1&&positionScreen.x<=1&&positionScreen.y>=-1&&positionScreen.y<=1&&positionScreen.z>=-1&&positionScreen.z<=1;};var pushVertex=function pushVertex(x,y,z){_vertex=getNextVertexInPool();_vertex.position.set(x,y,z);projectVertex(_vertex);};var pushNormal=function pushNormal(x,y,z){normals.push(x,y,z);};var checkTriangleVisibility=function checkTriangleVisibility(v1,v2,v3){_points3[0]=v1.positionScreen;_points3[1]=v2.positionScreen;_points3[2]=v3.positionScreen;if(v1.visible===true||v2.visible===true||v3.visible===true||_clipBox.isIntersectionBox(_boundingBox.setFromPoints(_points3))){return(v3.positionScreen.x-v1.positionScreen.x)*(v2.positionScreen.y-v1.positionScreen.y)-(v3.positionScreen.y-v1.positionScreen.y)*(v2.positionScreen.x-v1.positionScreen.x)<0;}return false;};var pushLine=function pushLine(a,b){var v1=_vertexPool[a];var v2=_vertexPool[b];_line=getNextLineInPool();_line.id=object.id;_line.v1.copy(v1);_line.v2.copy(v2);_line.z=(v1.positionScreen.z+v2.positionScreen.z)/2;_line.material=object.material;_renderData.elements.push(_line);};var pushTriangle=function pushTriangle(a,b,c){var v1=_vertexPool[a];var v2=_vertexPool[b];var v3=_vertexPool[c];if(checkTriangleVisibility(v1,v2,v3)===true){_face=getNextFaceInPool();_face.id=object.id;_face.v1.copy(v1);_face.v2.copy(v2);_face.v3.copy(v3);_face.z=(v1.positionScreen.z+v2.positionScreen.z+v3.positionScreen.z)/3;for(var i=0;i<3;i++){var offset=arguments[i]*3;var normal=_face.vertexNormalsModel[i];normal.set(normals[offset+0],normals[offset+1],normals[offset+2]);normal.applyMatrix3(normalMatrix).normalize();}_face.vertexNormalsLength=3;_face.material=object.material;_renderData.elements.push(_face);}};return{setObject:setObject,projectVertex:projectVertex,checkTriangleVisibility:checkTriangleVisibility,pushVertex:pushVertex,pushNormal:pushNormal,pushLine:pushLine,pushTriangle:pushTriangle};};var renderList=new RenderList();this.projectScene=function(scene,camera,sortObjects,sortElements){var object,geometry,vertices,faces,face,faceVertexNormals,faceVertexUvs,uvs,isFaceMaterial,objectMaterials;_faceCount=0;_lineCount=0;_spriteCount=0;_renderData.elements.length=0;if(scene.autoUpdate===true)scene.updateMatrixWorld();if(camera.parent===undefined)camera.updateMatrixWorld();_viewMatrix.copy(camera.matrixWorldInverse.getInverse(camera.matrixWorld));_viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix,_viewMatrix);_frustum.setFromMatrix(_viewProjectionMatrix);projectGraph(scene,sortObjects);for(var o=0,ol=_renderData.objects.length;o<ol;o++){object=_renderData.objects[o].object;geometry=object.geometry;renderList.setObject(object);_modelMatrix=object.matrixWorld;_vertexCount=0;if(object instanceof THREE.Mesh){if(geometry instanceof THREE.BufferGeometry){var attributes=geometry.attributes;var offsets=geometry.offsets;if(attributes.position===undefined)continue;var positions=attributes.position.array;for(var i=0,l=positions.length;i<l;i+=3){renderList.pushVertex(positions[i],positions[i+1],positions[i+2]);}var normals=attributes.normal.array;for(var i=0,l=normals.length;i<l;i+=3){renderList.pushNormal(normals[i],normals[i+1],normals[i+2]);}if(attributes.index!==undefined){var indices=attributes.index.array;if(offsets.length>0){for(var o=0;o<offsets.length;o++){var offset=offsets[o];var index=offset.index;for(var i=offset.start,l=offset.start+offset.count;i<l;i+=3){renderList.pushTriangle(indices[i]+index,indices[i+1]+index,indices[i+2]+index);}}}else{for(var i=0,l=indices.length;i<l;i+=3){renderList.pushTriangle(indices[i],indices[i+1],indices[i+2]);}}}else{for(var i=0,l=positions.length/3;i<l;i+=3){renderList.pushTriangle(i,i+1,i+2);}}}else if(geometry instanceof THREE.Geometry){vertices=geometry.vertices;faces=geometry.faces;faceVertexUvs=geometry.faceVertexUvs;_normalMatrix.getNormalMatrix(_modelMatrix);isFaceMaterial=object.material instanceof THREE.MeshFaceMaterial;objectMaterials=isFaceMaterial===true?object.material:null;for(var v=0,vl=vertices.length;v<vl;v++){var vertex=vertices[v];renderList.pushVertex(vertex.x,vertex.y,vertex.z);}for(var f=0,fl=faces.length;f<fl;f++){face=faces[f];var material=isFaceMaterial===true?objectMaterials.materials[face.materialIndex]:object.material;if(material===undefined)continue;var side=material.side;var v1=_vertexPool[face.a];var v2=_vertexPool[face.b];var v3=_vertexPool[face.c];if(material.morphTargets===true){var morphTargets=geometry.morphTargets;var morphInfluences=object.morphTargetInfluences;var v1p=v1.position;var v2p=v2.position;var v3p=v3.position;_vA.set(0,0,0);_vB.set(0,0,0);_vC.set(0,0,0);for(var t=0,tl=morphTargets.length;t<tl;t++){var influence=morphInfluences[t];if(influence===0)continue;var targets=morphTargets[t].vertices;_vA.x+=(targets[face.a].x-v1p.x)*influence;_vA.y+=(targets[face.a].y-v1p.y)*influence;_vA.z+=(targets[face.a].z-v1p.z)*influence;_vB.x+=(targets[face.b].x-v2p.x)*influence;_vB.y+=(targets[face.b].y-v2p.y)*influence;_vB.z+=(targets[face.b].z-v2p.z)*influence;_vC.x+=(targets[face.c].x-v3p.x)*influence;_vC.y+=(targets[face.c].y-v3p.y)*influence;_vC.z+=(targets[face.c].z-v3p.z)*influence;}v1.position.add(_vA);v2.position.add(_vB);v3.position.add(_vC);renderList.projectVertex(v1);renderList.projectVertex(v2);renderList.projectVertex(v3);}var visible=renderList.checkTriangleVisibility(v1,v2,v3);if(visible===false&&side===THREE.FrontSide||visible===true&&side===THREE.BackSide)continue;_face=getNextFaceInPool();_face.id=object.id;_face.v1.copy(v1);_face.v2.copy(v2);_face.v3.copy(v3);_face.normalModel.copy(face.normal);if(visible===false&&(side===THREE.BackSide||side===THREE.DoubleSide)){_face.normalModel.negate();}_face.normalModel.applyMatrix3(_normalMatrix).normalize();_face.centroidModel.copy(face.centroid).applyMatrix4(_modelMatrix);faceVertexNormals=face.vertexNormals;for(var n=0,nl=Math.min(faceVertexNormals.length,3);n<nl;n++){var normalModel=_face.vertexNormalsModel[n];normalModel.copy(faceVertexNormals[n]);if(visible===false&&(side===THREE.BackSide||side===THREE.DoubleSide)){normalModel.negate();}normalModel.applyMatrix3(_normalMatrix).normalize();}_face.vertexNormalsLength=faceVertexNormals.length;for(var c=0,cl=Math.min(faceVertexUvs.length,3);c<cl;c++){uvs=faceVertexUvs[c][f];if(uvs===undefined)continue;for(var u=0,ul=uvs.length;u<ul;u++){_face.uvs[c][u]=uvs[u];}}_face.color=face.color;_face.material=material;_face.z=(v1.positionScreen.z+v2.positionScreen.z+v3.positionScreen.z)/3;_renderData.elements.push(_face);}}}else if(object instanceof THREE.Line){if(geometry instanceof THREE.BufferGeometry){var attributes=geometry.attributes;if(attributes.position!==undefined){var positions=attributes.position.array;for(var i=0,l=positions.length;i<l;i+=3){renderList.pushVertex(positions[i],positions[i+1],positions[i+2]);}if(attributes.index!==undefined){var indices=attributes.index.array;for(var i=0,l=indices.length;i<l;i+=2){renderList.pushLine(indices[i],indices[i+1]);}}else{for(var i=0,l=positions.length/3-1;i<l;i++){renderList.pushLine(i,i+1);}}}}else if(geometry instanceof THREE.Geometry){_modelViewProjectionMatrix.multiplyMatrices(_viewProjectionMatrix,_modelMatrix);vertices=object.geometry.vertices;if(vertices.length===0)continue;v1=getNextVertexInPool();v1.positionScreen.copy(vertices[0]).applyMatrix4(_modelViewProjectionMatrix);var step=object.type===THREE.LinePieces?2:1;for(var v=1,vl=vertices.length;v<vl;v++){v1=getNextVertexInPool();v1.positionScreen.copy(vertices[v]).applyMatrix4(_modelViewProjectionMatrix);if((v+1)%step>0)continue;v2=_vertexPool[_vertexCount-2];_clippedVertex1PositionScreen.copy(v1.positionScreen);_clippedVertex2PositionScreen.copy(v2.positionScreen);if(clipLine(_clippedVertex1PositionScreen,_clippedVertex2PositionScreen)===true){_clippedVertex1PositionScreen.multiplyScalar(1/_clippedVertex1PositionScreen.w);_clippedVertex2PositionScreen.multiplyScalar(1/_clippedVertex2PositionScreen.w);_line=getNextLineInPool();_line.id=object.id;_line.v1.positionScreen.copy(_clippedVertex1PositionScreen);_line.v2.positionScreen.copy(_clippedVertex2PositionScreen);_line.z=Math.max(_clippedVertex1PositionScreen.z,_clippedVertex2PositionScreen.z);_line.material=object.material;if(object.material.vertexColors===THREE.VertexColors){_line.vertexColors[0].copy(object.geometry.colors[v]);_line.vertexColors[1].copy(object.geometry.colors[v-1]);}_renderData.elements.push(_line);}}}}else if(object instanceof THREE.Sprite){_vector4.set(_modelMatrix.elements[12],_modelMatrix.elements[13],_modelMatrix.elements[14],1);_vector4.applyMatrix4(_viewProjectionMatrix);var invW=1/_vector4.w;_vector4.z*=invW;if(_vector4.z>=-1&&_vector4.z<=1){_sprite=getNextSpriteInPool();_sprite.id=object.id;_sprite.x=_vector4.x*invW;_sprite.y=_vector4.y*invW;_sprite.z=_vector4.z;_sprite.object=object;_sprite.rotation=object.rotation;_sprite.scale.x=object.scale.x*Math.abs(_sprite.x-(_vector4.x+camera.projectionMatrix.elements[0])/(_vector4.w+camera.projectionMatrix.elements[12]));_sprite.scale.y=object.scale.y*Math.abs(_sprite.y-(_vector4.y+camera.projectionMatrix.elements[5])/(_vector4.w+camera.projectionMatrix.elements[13]));_sprite.material=object.material;_renderData.elements.push(_sprite);}}}if(sortElements===true)_renderData.elements.sort(painterSort);return _renderData;};function getNextObjectInPool(){if(_objectCount===_objectPoolLength){var object=new THREE.RenderableObject();_objectPool.push(object);_objectPoolLength++;_objectCount++;return object;}return _objectPool[_objectCount++];}function getNextVertexInPool(){if(_vertexCount===_vertexPoolLength){var vertex=new THREE.RenderableVertex();_vertexPool.push(vertex);_vertexPoolLength++;_vertexCount++;return vertex;}return _vertexPool[_vertexCount++];}function getNextFaceInPool(){if(_faceCount===_facePoolLength){var face=new THREE.RenderableFace();_facePool.push(face);_facePoolLength++;_faceCount++;return face;}return _facePool[_faceCount++];}function getNextLineInPool(){if(_lineCount===_linePoolLength){var line=new THREE.RenderableLine();_linePool.push(line);_linePoolLength++;_lineCount++;return line;}return _linePool[_lineCount++];}function getNextSpriteInPool(){if(_spriteCount===_spritePoolLength){var sprite=new THREE.RenderableSprite();_spritePool.push(sprite);_spritePoolLength++;_spriteCount++;return sprite;}return _spritePool[_spriteCount++];}function painterSort(a,b){if(a.z!==b.z){return b.z-a.z;}else if(a.id!==b.id){return a.id-b.id;}else{return 0;}}function clipLine(s1,s2){var alpha1=0,alpha2=1,bc1near=s1.z+s1.w,bc2near=s2.z+s2.w,bc1far=-s1.z+s1.w,bc2far=-s2.z+s2.w;if(bc1near>=0&&bc2near>=0&&bc1far>=0&&bc2far>=0){return true;}else if(bc1near<0&&bc2near<0||bc1far<0&&bc2far<0){return false;}else{if(bc1near<0){alpha1=Math.max(alpha1,bc1near/(bc1near-bc2near));}else if(bc2near<0){alpha2=Math.min(alpha2,bc1near/(bc1near-bc2near));}if(bc1far<0){alpha1=Math.max(alpha1,bc1far/(bc1far-bc2far));}else if(bc2far<0){alpha2=Math.min(alpha2,bc1far/(bc1far-bc2far));}if(alpha2<alpha1){return false;}else{s1.lerp(s2,alpha1);s2.lerp(s1,1-alpha2);return true;}}}};THREE.Face3=function(a,b,c,normal,color,materialIndex){this.a=a;this.b=b;this.c=c;this.normal=normal instanceof THREE.Vector3?normal:new THREE.Vector3();this.vertexNormals=normal instanceof Array?normal:[];this.color=color instanceof THREE.Color?color:new THREE.Color();this.vertexColors=color instanceof Array?color:[];this.vertexTangents=[];this.materialIndex=materialIndex!==undefined?materialIndex:0;this.centroid=new THREE.Vector3();};THREE.Face3.prototype={constructor:THREE.Face3,clone:function clone(){var face=new THREE.Face3(this.a,this.b,this.c);face.normal.copy(this.normal);face.color.copy(this.color);face.centroid.copy(this.centroid);face.materialIndex=this.materialIndex;var i,il;for(i=0,il=this.vertexNormals.length;i<il;i++){face.vertexNormals[i]=this.vertexNormals[i].clone();}for(i=0,il=this.vertexColors.length;i<il;i++){face.vertexColors[i]=this.vertexColors[i].clone();}for(i=0,il=this.vertexTangents.length;i<il;i++){face.vertexTangents[i]=this.vertexTangents[i].clone();}return face;}};THREE.Face4=function(a,b,c,d,normal,color,materialIndex){THREE.onwarning('THREE.Face4 has been removed. A THREE.Face3 will be created instead.');return new THREE.Face3(a,b,c,normal,color,materialIndex);};THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.className=\"BufferGeometry\";this.name='';this.attributes={};this.offsets=[];this.boundingBox=null;this.boundingSphere=null;};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function addAttribute(name,type,numItems,itemSize){this.attributes[name]={array:new type(numItems*itemSize),itemSize:itemSize};return this.attributes[name];},applyMatrix:function applyMatrix(matrix){var position=this.attributes.position;if(position!==undefined){matrix.multiplyVector3Array(position.array);position.needsUpdate=true;}var normal=this.attributes.normal;if(normal!==undefined){var normalMatrix=new THREE.Matrix3().getNormalMatrix(matrix);normalMatrix.multiplyVector3Array(normal.array);normal.needsUpdate=true;}},computeBoundingBox:function computeBoundingBox(){if(this.boundingBox===null){this.boundingBox=new THREE.Box3();}var positions=this.attributes[\"position\"].array;if(positions){var bb=this.boundingBox;if(positions.length>=3){bb.min.x=bb.max.x=positions[0];bb.min.y=bb.max.y=positions[1];bb.min.z=bb.max.z=positions[2];}for(var i=3,il=positions.length;i<il;i+=3){var x=positions[i];var y=positions[i+1];var z=positions[i+2];if(x<bb.min.x){bb.min.x=x;}else if(x>bb.max.x){bb.max.x=x;}if(y<bb.min.y){bb.min.y=y;}else if(y>bb.max.y){bb.max.y=y;}if(z<bb.min.z){bb.min.z=z;}else if(z>bb.max.z){bb.max.z=z;}}}if(positions===undefined||positions.length===0){this.boundingBox.min.set(0,0,0);this.boundingBox.max.set(0,0,0);}},computeBoundingSphere:function(){var box=new THREE.Box3();var vector=new THREE.Vector3();return function(){if(this.boundingSphere===null){this.boundingSphere=new THREE.Sphere();}var positions=this.attributes[\"position\"].array;if(positions){box.makeEmpty();var center=this.boundingSphere.center;for(var i=0,il=positions.length;i<il;i+=3){vector.set(positions[i],positions[i+1],positions[i+2]);box.addPoint(vector);}box.center(center);var maxRadiusSq=0;for(var i=0,il=positions.length;i<il;i+=3){vector.set(positions[i],positions[i+1],positions[i+2]);maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(vector));}this.boundingSphere.radius=Math.sqrt(maxRadiusSq);}};}(),computeVertexNormals:function computeVertexNormals(){if(this.attributes[\"position\"]){var i,il;var j,jl;var nVertexElements=this.attributes[\"position\"].array.length;if(this.attributes[\"normal\"]===undefined){this.attributes[\"normal\"]={itemSize:3,array:new Float32Array(nVertexElements)};}else{for(i=0,il=this.attributes[\"normal\"].array.length;i<il;i++){this.attributes[\"normal\"].array[i]=0;}}var positions=this.attributes[\"position\"].array;var normals=this.attributes[\"normal\"].array;var vA,vB,vC,x,y,z,pA=new THREE.Vector3(),pB=new THREE.Vector3(),pC=new THREE.Vector3(),cb=new THREE.Vector3(),ab=new THREE.Vector3();if(this.attributes[\"index\"]){var indices=this.attributes[\"index\"].array;var offsets=this.offsets;for(j=0,jl=offsets.length;j<jl;++j){var start=offsets[j].start;var count=offsets[j].count;var index=offsets[j].index;for(i=start,il=start+count;i<il;i+=3){vA=index+indices[i];vB=index+indices[i+1];vC=index+indices[i+2];x=positions[vA*3];y=positions[vA*3+1];z=positions[vA*3+2];pA.set(x,y,z);x=positions[vB*3];y=positions[vB*3+1];z=positions[vB*3+2];pB.set(x,y,z);x=positions[vC*3];y=positions[vC*3+1];z=positions[vC*3+2];pC.set(x,y,z);cb.subVectors(pC,pB);ab.subVectors(pA,pB);cb.cross(ab);normals[vA*3]+=cb.x;normals[vA*3+1]+=cb.y;normals[vA*3+2]+=cb.z;normals[vB*3]+=cb.x;normals[vB*3+1]+=cb.y;normals[vB*3+2]+=cb.z;normals[vC*3]+=cb.x;normals[vC*3+1]+=cb.y;normals[vC*3+2]+=cb.z;}}}else{for(i=0,il=positions.length;i<il;i+=9){x=positions[i];y=positions[i+1];z=positions[i+2];pA.set(x,y,z);x=positions[i+3];y=positions[i+4];z=positions[i+5];pB.set(x,y,z);x=positions[i+6];y=positions[i+7];z=positions[i+8];pC.set(x,y,z);cb.subVectors(pC,pB);ab.subVectors(pA,pB);cb.cross(ab);normals[i]=cb.x;normals[i+1]=cb.y;normals[i+2]=cb.z;normals[i+3]=cb.x;normals[i+4]=cb.y;normals[i+5]=cb.z;normals[i+6]=cb.x;normals[i+7]=cb.y;normals[i+8]=cb.z;}}this.normalizeNormals();this.normalsNeedUpdate=true;}},normalizeNormals:function normalizeNormals(){var normals=this.attributes[\"normal\"].array;var x,y,z,n;for(var i=0,il=normals.length;i<il;i+=3){x=normals[i];y=normals[i+1];z=normals[i+2];n=1.0/Math.sqrt(x*x+y*y+z*z);normals[i]*=n;normals[i+1]*=n;normals[i+2]*=n;}},computeTangents:function computeTangents(){if(this.attributes[\"index\"]===undefined||this.attributes[\"position\"]===undefined||this.attributes[\"normal\"]===undefined||this.attributes[\"uv\"]===undefined){THREE.onwarning(\"Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()\");return;}var indices=this.attributes[\"index\"].array;var positions=this.attributes[\"position\"].array;var normals=this.attributes[\"normal\"].array;var uvs=this.attributes[\"uv\"].array;var nVertices=positions.length/3;if(this.attributes[\"tangent\"]===undefined){var nTangentElements=4*nVertices;this.attributes[\"tangent\"]={itemSize:4,array:new Float32Array(nTangentElements)};}var tangents=this.attributes[\"tangent\"].array;var tan1=[],tan2=[];for(var k=0;k<nVertices;k++){tan1[k]=new THREE.Vector3();tan2[k]=new THREE.Vector3();}var xA,yA,zA,xB,yB,zB,xC,yC,zC,uA,vA,uB,vB,uC,vC,x1,x2,y1,y2,z1,z2,s1,s2,t1,t2,r;var sdir=new THREE.Vector3(),tdir=new THREE.Vector3();function handleTriangle(a,b,c){xA=positions[a*3];yA=positions[a*3+1];zA=positions[a*3+2];xB=positions[b*3];yB=positions[b*3+1];zB=positions[b*3+2];xC=positions[c*3];yC=positions[c*3+1];zC=positions[c*3+2];uA=uvs[a*2];vA=uvs[a*2+1];uB=uvs[b*2];vB=uvs[b*2+1];uC=uvs[c*2];vC=uvs[c*2+1];x1=xB-xA;x2=xC-xA;y1=yB-yA;y2=yC-yA;z1=zB-zA;z2=zC-zA;s1=uB-uA;s2=uC-uA;t1=vB-vA;t2=vC-vA;r=1.0/(s1*t2-s2*t1);sdir.set((t2*x1-t1*x2)*r,(t2*y1-t1*y2)*r,(t2*z1-t1*z2)*r);tdir.set((s1*x2-s2*x1)*r,(s1*y2-s2*y1)*r,(s1*z2-s2*z1)*r);tan1[a].add(sdir);tan1[b].add(sdir);tan1[c].add(sdir);tan2[a].add(tdir);tan2[b].add(tdir);tan2[c].add(tdir);}var i,il;var j,jl;var iA,iB,iC;var offsets=this.offsets;for(j=0,jl=offsets.length;j<jl;++j){var start=offsets[j].start;var count=offsets[j].count;var index=offsets[j].index;for(i=start,il=start+count;i<il;i+=3){iA=index+indices[i];iB=index+indices[i+1];iC=index+indices[i+2];handleTriangle(iA,iB,iC);}}var tmp=new THREE.Vector3(),tmp2=new THREE.Vector3();var n=new THREE.Vector3(),n2=new THREE.Vector3();var w,t,test;function handleVertex(v){n.x=normals[v*3];n.y=normals[v*3+1];n.z=normals[v*3+2];n2.copy(n);t=tan1[v];tmp.copy(t);tmp.sub(n.multiplyScalar(n.dot(t))).normalize();tmp2.crossVectors(n2,t);test=tmp2.dot(tan2[v]);w=test<0.0?-1.0:1.0;tangents[v*4]=tmp.x;tangents[v*4+1]=tmp.y;tangents[v*4+2]=tmp.z;tangents[v*4+3]=w;}for(j=0,jl=offsets.length;j<jl;++j){var start=offsets[j].start;var count=offsets[j].count;var index=offsets[j].index;for(i=start,il=start+count;i<il;i+=3){iA=index+indices[i];iB=index+indices[i+1];iC=index+indices[i+2];handleVertex(iA);handleVertex(iB);handleVertex(iC);}}},computeOffsets:function computeOffsets(indexBufferSize){var size=indexBufferSize;if(indexBufferSize===undefined)size=65535;var s=Date.now();var indices=this.attributes['index'].array;var vertices=this.attributes['position'].array;var verticesCount=vertices.length/3;var facesCount=indices.length/3;var sortedIndices=new Uint16Array(indices.length);var indexPtr=0;var vertexPtr=0;var offsets=[{start:0,count:0,index:0}];var offset=offsets[0];var duplicatedVertices=0;var newVerticeMaps=0;var faceVertices=new Int32Array(6);var vertexMap=new Int32Array(vertices.length);var revVertexMap=new Int32Array(vertices.length);for(var j=0;j<vertices.length;j++){vertexMap[j]=-1;revVertexMap[j]=-1;}for(var findex=0;findex<facesCount;findex++){newVerticeMaps=0;for(var vo=0;vo<3;vo++){var vid=indices[findex*3+vo];if(vertexMap[vid]==-1){faceVertices[vo*2]=vid;faceVertices[vo*2+1]=-1;newVerticeMaps++;}else if(vertexMap[vid]<offset.index){faceVertices[vo*2]=vid;faceVertices[vo*2+1]=-1;duplicatedVertices++;}else{faceVertices[vo*2]=vid;faceVertices[vo*2+1]=vertexMap[vid];}}var faceMax=vertexPtr+newVerticeMaps;if(faceMax>offset.index+size){var new_offset={start:indexPtr,count:0,index:vertexPtr};offsets.push(new_offset);offset=new_offset;for(var v=0;v<6;v+=2){var new_vid=faceVertices[v+1];if(new_vid>-1&&new_vid<offset.index)faceVertices[v+1]=-1;}}for(var v=0;v<6;v+=2){var vid=faceVertices[v];var new_vid=faceVertices[v+1];if(new_vid===-1)new_vid=vertexPtr++;vertexMap[vid]=new_vid;revVertexMap[new_vid]=vid;sortedIndices[indexPtr++]=new_vid-offset.index;offset.count++;}}this.reorderBuffers(sortedIndices,revVertexMap,vertexPtr);this.offsets=offsets;return offsets;},reorderBuffers:function reorderBuffers(indexBuffer,indexMap,vertexCount){var sortedAttributes={};var types=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(var attr in this.attributes){if(attr=='index')continue;var sourceArray=this.attributes[attr].array;for(var i=0,il=types.length;i<il;i++){var type=types[i];if(sourceArray instanceof type){sortedAttributes[attr]=new type(this.attributes[attr].itemSize*vertexCount);break;}}}for(var new_vid=0;new_vid<vertexCount;new_vid++){var vid=indexMap[new_vid];for(var attr in this.attributes){if(attr=='index')continue;var attrArray=this.attributes[attr].array;var attrSize=this.attributes[attr].itemSize;var sortedAttr=sortedAttributes[attr];for(var k=0;k<attrSize;k++){sortedAttr[new_vid*attrSize+k]=attrArray[vid*attrSize+k];}}}this.attributes['index'].array=indexBuffer;for(var attr in this.attributes){if(attr=='index')continue;this.attributes[attr].array=sortedAttributes[attr];this.attributes[attr].numItems=this.attributes[attr].itemSize*vertexCount;}},clone:function clone(){var geometry=new THREE.BufferGeometry();var types=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(var attr in this.attributes){var sourceAttr=this.attributes[attr];var sourceArray=sourceAttr.array;var attribute={itemSize:sourceAttr.itemSize,array:null};for(var i=0,il=types.length;i<il;i++){var type=types[i];if(sourceArray instanceof type){attribute.array=new type(sourceArray);break;}}geometry.attributes[attr]=attribute;}for(var i=0,il=this.offsets.length;i<il;i++){var offset=this.offsets[i];geometry.offsets.push({start:offset.start,index:offset.index,count:offset.count});}return geometry;},dispose:function dispose(){this.dispatchEvent({type:'dispose'});}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);THREE.Geometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.className=\"Geometry\";this.name='';this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingBox=null;this.boundingSphere=null;this.hasTangents=true;this.dynamic=true;this.verticesNeedUpdate=false;this.elementsNeedUpdate=false;this.uvsNeedUpdate=false;this.normalsNeedUpdate=false;this.tangentsNeedUpdate=false;this.colorsNeedUpdate=false;this.lineDistancesNeedUpdate=false;this.buffersNeedUpdate=false;};THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function applyMatrix(matrix){var normalMatrix=new THREE.Matrix3().getNormalMatrix(matrix);for(var i=0,il=this.vertices.length;i<il;i++){var vertex=this.vertices[i];vertex.applyMatrix4(matrix);}for(var i=0,il=this.faces.length;i<il;i++){var face=this.faces[i];face.normal.applyMatrix3(normalMatrix).normalize();for(var j=0,jl=face.vertexNormals.length;j<jl;j++){face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();}face.centroid.applyMatrix4(matrix);}if(this.boundingBox instanceof THREE.Box3){this.computeBoundingBox();}if(this.boundingSphere instanceof THREE.Sphere){this.computeBoundingSphere();}},computeCentroids:function computeCentroids(){var f,fl,face;for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];face.centroid.set(0,0,0);face.centroid.add(this.vertices[face.a]);face.centroid.add(this.vertices[face.b]);face.centroid.add(this.vertices[face.c]);face.centroid.divideScalar(3);}},computeFaceNormals:function computeFaceNormals(){var cb=new THREE.Vector3(),ab=new THREE.Vector3();for(var f=0,fl=this.faces.length;f<fl;f++){var face=this.faces[f];var vA=this.vertices[face.a];var vB=this.vertices[face.b];var vC=this.vertices[face.c];cb.subVectors(vC,vB);ab.subVectors(vA,vB);cb.cross(ab);cb.normalize();face.normal.copy(cb);}},computeVertexNormals:function computeVertexNormals(areaWeighted){var v,vl,f,fl,face,vertices;vertices=new Array(this.vertices.length);for(v=0,vl=this.vertices.length;v<vl;v++){vertices[v]=new THREE.Vector3();}if(areaWeighted){var vA,vB,vC,vD;var cb=new THREE.Vector3(),ab=new THREE.Vector3(),db=new THREE.Vector3(),dc=new THREE.Vector3(),bc=new THREE.Vector3();for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];vA=this.vertices[face.a];vB=this.vertices[face.b];vC=this.vertices[face.c];cb.subVectors(vC,vB);ab.subVectors(vA,vB);cb.cross(ab);vertices[face.a].add(cb);vertices[face.b].add(cb);vertices[face.c].add(cb);}}else{for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];vertices[face.a].add(face.normal);vertices[face.b].add(face.normal);vertices[face.c].add(face.normal);}}for(v=0,vl=this.vertices.length;v<vl;v++){vertices[v].normalize();}for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];face.vertexNormals[0]=vertices[face.a].clone();face.vertexNormals[1]=vertices[face.b].clone();face.vertexNormals[2]=vertices[face.c].clone();}},computeMorphNormals:function computeMorphNormals(){var i,il,f,fl,face;for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];if(!face.__originalFaceNormal){face.__originalFaceNormal=face.normal.clone();}else{face.__originalFaceNormal.copy(face.normal);}if(!face.__originalVertexNormals)face.__originalVertexNormals=[];for(i=0,il=face.vertexNormals.length;i<il;i++){if(!face.__originalVertexNormals[i]){face.__originalVertexNormals[i]=face.vertexNormals[i].clone();}else{face.__originalVertexNormals[i].copy(face.vertexNormals[i]);}}}var tmpGeo=new THREE.Geometry();tmpGeo.faces=this.faces;for(i=0,il=this.morphTargets.length;i<il;i++){if(!this.morphNormals[i]){this.morphNormals[i]={};this.morphNormals[i].faceNormals=[];this.morphNormals[i].vertexNormals=[];var dstNormalsFace=this.morphNormals[i].faceNormals;var dstNormalsVertex=this.morphNormals[i].vertexNormals;var faceNormal,vertexNormals;for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];faceNormal=new THREE.Vector3();vertexNormals={a:new THREE.Vector3(),b:new THREE.Vector3(),c:new THREE.Vector3()};dstNormalsFace.push(faceNormal);dstNormalsVertex.push(vertexNormals);}}var morphNormals=this.morphNormals[i];tmpGeo.vertices=this.morphTargets[i].vertices;tmpGeo.computeFaceNormals();tmpGeo.computeVertexNormals();var faceNormal,vertexNormals;for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];faceNormal=morphNormals.faceNormals[f];vertexNormals=morphNormals.vertexNormals[f];faceNormal.copy(face.normal);vertexNormals.a.copy(face.vertexNormals[0]);vertexNormals.b.copy(face.vertexNormals[1]);vertexNormals.c.copy(face.vertexNormals[2]);}}for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];face.normal=face.__originalFaceNormal;face.vertexNormals=face.__originalVertexNormals;}},computeTangents:function computeTangents(){var f,fl,v,vl,i,il,vertexIndex,face,uv,vA,vB,vC,uvA,uvB,uvC,x1,x2,y1,y2,z1,z2,s1,s2,t1,t2,r,t,test,tan1=[],tan2=[],sdir=new THREE.Vector3(),tdir=new THREE.Vector3(),tmp=new THREE.Vector3(),tmp2=new THREE.Vector3(),n=new THREE.Vector3(),w;for(v=0,vl=this.vertices.length;v<vl;v++){tan1[v]=new THREE.Vector3();tan2[v]=new THREE.Vector3();}function handleTriangle(context,a,b,c,ua,ub,uc){vA=context.vertices[a];vB=context.vertices[b];vC=context.vertices[c];uvA=uv[ua];uvB=uv[ub];uvC=uv[uc];x1=vB.x-vA.x;x2=vC.x-vA.x;y1=vB.y-vA.y;y2=vC.y-vA.y;z1=vB.z-vA.z;z2=vC.z-vA.z;s1=uvB.x-uvA.x;s2=uvC.x-uvA.x;t1=uvB.y-uvA.y;t2=uvC.y-uvA.y;r=1.0/(s1*t2-s2*t1);sdir.set((t2*x1-t1*x2)*r,(t2*y1-t1*y2)*r,(t2*z1-t1*z2)*r);tdir.set((s1*x2-s2*x1)*r,(s1*y2-s2*y1)*r,(s1*z2-s2*z1)*r);tan1[a].add(sdir);tan1[b].add(sdir);tan1[c].add(sdir);tan2[a].add(tdir);tan2[b].add(tdir);tan2[c].add(tdir);}for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];uv=this.faceVertexUvs[0][f];handleTriangle(this,face.a,face.b,face.c,0,1,2);}var faceIndex=['a','b','c','d'];for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];for(i=0;i<Math.min(face.vertexNormals.length,3);i++){n.copy(face.vertexNormals[i]);vertexIndex=face[faceIndex[i]];t=tan1[vertexIndex];tmp.copy(t);tmp.sub(n.multiplyScalar(n.dot(t))).normalize();tmp2.crossVectors(face.vertexNormals[i],t);test=tmp2.dot(tan2[vertexIndex]);w=test<0.0?-1.0:1.0;face.vertexTangents[i]=new THREE.Vector4(tmp.x,tmp.y,tmp.z,w);}}this.hasTangents=true;},computeLineDistances:function computeLineDistances(){var d=0;var vertices=this.vertices;for(var i=0,il=vertices.length;i<il;i++){if(i>0){d+=vertices[i].distanceTo(vertices[i-1]);}this.lineDistances[i]=d;}},computeBoundingBox:function computeBoundingBox(){if(this.boundingBox===null){this.boundingBox=new THREE.Box3();}this.boundingBox.setFromPoints(this.vertices);},computeBoundingSphere:function computeBoundingSphere(){if(this.boundingSphere===null){this.boundingSphere=new THREE.Sphere();}this.boundingSphere.setFromPoints(this.vertices);},mergeVertices:function mergeVertices(){var verticesMap={};var unique=[],changes=[];var v,key;var precisionPoints=4;var precision=Math.pow(10,precisionPoints);var i,il,face;var indices,k,j,jl,u;for(i=0,il=this.vertices.length;i<il;i++){v=this.vertices[i];key=Math.round(v.x*precision)+'_'+Math.round(v.y*precision)+'_'+Math.round(v.z*precision);if(verticesMap[key]===undefined){verticesMap[key]=i;unique.push(this.vertices[i]);changes[i]=unique.length-1;}else{changes[i]=changes[verticesMap[key]];}};var faceIndicesToRemove=[];for(i=0,il=this.faces.length;i<il;i++){face=this.faces[i];face.a=changes[face.a];face.b=changes[face.b];face.c=changes[face.c];indices=[face.a,face.b,face.c];var dupIndex=-1;for(var n=0;n<3;n++){if(indices[n]==indices[(n+1)%3]){dupIndex=n;faceIndicesToRemove.push(i);break;}}}for(i=faceIndicesToRemove.length-1;i>=0;i--){var idx=faceIndicesToRemove[i];this.faces.splice(idx,1);for(j=0,jl=this.faceVertexUvs.length;j<jl;j++){this.faceVertexUvs[j].splice(idx,1);}}var diff=this.vertices.length-unique.length;this.vertices=unique;return diff;},makeGroups:function(){var geometryGroupCounter=0;return function(usesFaceMaterial){var f,fl,face,materialIndex,groupHash,hash_map={};var numMorphTargets=this.morphTargets.length;var numMorphNormals=this.morphNormals.length;this.geometryGroups={};for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];materialIndex=usesFaceMaterial?face.materialIndex:0;if(!(materialIndex in hash_map)){hash_map[materialIndex]={'hash':materialIndex,'counter':0};}groupHash=hash_map[materialIndex].hash+'_'+hash_map[materialIndex].counter;if(!(groupHash in this.geometryGroups)){this.geometryGroups[groupHash]={'faces3':[],'materialIndex':materialIndex,'vertices':0,'numMorphTargets':numMorphTargets,'numMorphNormals':numMorphNormals};}if(this.geometryGroups[groupHash].vertices+3>65535){hash_map[materialIndex].counter+=1;groupHash=hash_map[materialIndex].hash+'_'+hash_map[materialIndex].counter;if(!(groupHash in this.geometryGroups)){this.geometryGroups[groupHash]={'faces3':[],'materialIndex':materialIndex,'vertices':0,'numMorphTargets':numMorphTargets,'numMorphNormals':numMorphNormals};}}this.geometryGroups[groupHash].faces3.push(f);this.geometryGroups[groupHash].vertices+=3;}this.geometryGroupsList=[];for(var g in this.geometryGroups){this.geometryGroups[g].id=geometryGroupCounter++;this.geometryGroupsList.push(this.geometryGroups[g]);}};}(),clone:function clone(){var geometry=new THREE.Geometry();var vertices=this.vertices;for(var i=0,il=vertices.length;i<il;i++){geometry.vertices.push(vertices[i].clone());}var faces=this.faces;for(var i=0,il=faces.length;i<il;i++){geometry.faces.push(faces[i].clone());}var uvs=this.faceVertexUvs[0];for(var i=0,il=uvs.length;i<il;i++){var uv=uvs[i],uvCopy=[];for(var j=0,jl=uv.length;j<jl;j++){uvCopy.push(new THREE.Vector2(uv[j].x,uv[j].y));}geometry.faceVertexUvs[0].push(uvCopy);}geometry.morphTargets=this.morphTargets.slice(0);geometry.morphColors=this.morphColors.slice(0);geometry.morphNormals=this.morphNormals.slice(0);geometry.skinWeights=this.skinWeights.slice(0);geometry.skinIndices=this.skinIndices.slice(0);geometry.lineDistances=this.lineDistances.slice(0);if(this.boundingBox)geometry.boundingBox=this.boundingBox.clone();if(this.boundingSphere)geometry.boundingSphere=this.boundingSphere.clone();geometry.hasTangents=this.hasTangents;geometry.dynamic=this.dynamic;return geometry;},dispose:function dispose(){this.dispatchEvent({type:'dispose'});}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;THREE.Geometry2=function(size){THREE.BufferGeometry.call(this);this.className=\"Geometry2\";this.vertices=this.addAttribute('position',Float32Array,size,3).array;this.normals=this.addAttribute('normal',Float32Array,size,3).array;this.uvs=this.addAttribute('uv',Float32Array,size,2).array;this.boundingBox=null;this.boundingSphere=null;};THREE.Geometry2.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4();this.projectionMatrix=new THREE.Matrix4();this.normalizedViewport={x:0,y:0,width:1.0,height:1.0};};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(){var m1=new THREE.Matrix4();return function(vector){m1.lookAt(this.position,vector,this.up);this.quaternion.setFromRotationMatrix(m1);};}();THREE.Camera.prototype.clone=function(camera){if(camera===undefined)camera=new THREE.Camera();THREE.Object3D.prototype.clone.call(this,camera);camera.matrixWorldInverse.copy(this.matrixWorldInverse);camera.projectionMatrix.copy(this.projectionMatrix);camera.normalizedViewport={x:this.normalizedViewport.x,y:this.normalizedViewport.y,width:this.normalizedViewport.width,height:this.normalizedViewport.height};return camera;};THREE.OrthographicCamera=function(left,right,top,bottom,near,far){THREE.Camera.call(this);this.left=left;this.right=right;this.top=top;this.bottom=bottom;this.near=near!==undefined?near:0.1;this.far=far!==undefined?far:2000;this.updateProjectionMatrix();};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far);var viewportMatrix=new THREE.Matrix4();viewportMatrix.elements[0]*=this.normalizedViewport.width;viewportMatrix.elements[1]*=this.normalizedViewport.height;viewportMatrix.elements[12]+=this.normalizedViewport.x;viewportMatrix.elements[13]+=this.normalizedViewport.y;this.projectionMatrix=viewportMatrix.multiply(this.projectionMatrix);};THREE.OrthographicCamera.prototype.clone=function(){var camera=new THREE.OrthographicCamera();THREE.Camera.prototype.clone.call(this,camera);camera.left=this.left;camera.right=this.right;camera.top=this.top;camera.bottom=this.bottom;camera.near=this.near;camera.far=this.far;return camera;};THREE.PerspectiveCamera=function(fov,aspect,near,far,filmSize,filmOffset){THREE.Camera.call(this);this.fov=fov!==undefined?fov:50;this.aspect=aspect!==undefined?aspect:1;this.near=near!==undefined?near:0.1;this.far=far!==undefined?far:2000;this.filmSize=filmSize!==undefined?filmSize:new THREE.Vector2(1,1);this.filmOffset=filmOffset!==undefined?filmOffset:new THREE.Vector2(0,0);this.updateProjectionMatrix();};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(focalLength,frameHeight){if(frameHeight===undefined)frameHeight=24;this.fov=2*THREE.Math.radToDeg(Math.atan(frameHeight/(focalLength*2)));this.updateProjectionMatrix();};THREE.PerspectiveCamera.prototype.setViewOffset=function(fullWidth,fullHeight,x,y,width,height){this.fullWidth=fullWidth;this.fullHeight=fullHeight;this.x=x;this.y=y;this.width=width;this.height=height;this.updateProjectionMatrix();};THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var aspect=this.fullWidth/this.fullHeight;var top=Math.tan(THREE.Math.degToRad(this.fov*0.5))*this.near;var bottom=-top;var left=aspect*bottom;var right=aspect*top;var width=Math.abs(right-left);var height=Math.abs(top-bottom);this.projectionMatrix.makeFrustum(left+this.x*width/this.fullWidth,left+(this.x+this.width)*width/this.fullWidth,top-(this.y+this.height)*height/this.fullHeight,top-this.y*height/this.fullHeight,this.near,this.far,this.filmOffset,this.filmSize);}else{this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far,this.filmOffset,this.filmSize);}var viewportMatrix=new THREE.Matrix4();viewportMatrix.elements[0]*=this.normalizedViewport.width;viewportMatrix.elements[1]*=this.normalizedViewport.height;viewportMatrix.elements[12]+=this.normalizedViewport.x;viewportMatrix.elements[13]+=this.normalizedViewport.y;this.projectionMatrix=viewportMatrix.multiply(this.projectionMatrix);};THREE.PerspectiveCamera.prototype.clone=function(){var camera=new THREE.PerspectiveCamera();THREE.Camera.prototype.clone.call(this,camera);camera.fov=this.fov;camera.aspect=this.aspect;camera.near=this.near;camera.far=this.far;camera.filmSize=this.filmSize;camera.filmOffset=this.filmOffset;return camera;};THREE.Light=function(color){THREE.Object3D.call(this);this.color=new THREE.Color(color);};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.clone=function(light){if(light===undefined)light=new THREE.Light();THREE.Object3D.prototype.clone.call(this,light);light.color.copy(this.color);return light;};THREE.AmbientLight=function(color){THREE.Light.call(this,color);};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.clone=function(){var light=new THREE.AmbientLight();THREE.Light.prototype.clone.call(this,light);return light;};THREE.AreaLight=function(color,intensity,distance,decayExponent,physicalFalloff){THREE.Light.call(this,color);this.position.set(0,1,0);this.target=new THREE.Object3D();this.intensity=intensity!==undefined?intensity:1;this.distance=distance!==undefined?distance:0;this.decayExponent=decayExponent!==undefined?decayExponent:0;this.physicalFalloff=physicalFalloff!==undefined?physicalFalloff:false;this.width=1.0;this.height=1.0;};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.AreaLight.prototype.clone=function(){var light=new THREE.AreaLight();THREE.Light.prototype.clone.call(this,light);light.target=this.target.clone();light.intensity=this.intensity;light.distance=this.distance;light.decayExponent=this.decayExponent;light.physicalFalloff=this.physicalFalloff;light.width=this.width;light.height=this.height;return light;};THREE.DirectionalLight=function(color,intensity){THREE.Light.call(this,color);this.position.set(0,1,0);this.target=new THREE.Object3D();this.intensity=intensity!==undefined?intensity:1;this.castShadow=false;this.onlyShadow=false;this.shadowCameraNear=50;this.shadowCameraFar=5000;this.shadowCameraLeft=-500;this.shadowCameraRight=500;this.shadowCameraTop=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=false;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapWidth=512;this.shadowMapHeight=512;this.shadowCascade=false;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1000);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1.000,0.990,0.998];this.shadowCascadeFarZ=[0.990,0.998,1.000];this.shadowCascadeArray=[];this.shadowMap=null;this.shadowMapSize=null;this.shadowCamera=null;this.shadowMatrix=null;};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.clone=function(){var light=new THREE.DirectionalLight();THREE.Light.prototype.clone.call(this,light);light.target=this.target.clone();light.intensity=this.intensity;light.castShadow=this.castShadow;light.onlyShadow=this.onlyShadow;return light;};THREE.HemisphereLight=function(skyColor,groundColor,intensity){THREE.Light.call(this,skyColor);this.position.set(0,100,0);this.groundColor=new THREE.Color(groundColor);this.intensity=intensity!==undefined?intensity:1;};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.clone=function(){var light=new THREE.HemisphereLight();THREE.Light.prototype.clone.call(this,light);light.groundColor.copy(this.groundColor);light.intensity=this.intensity;return light;};THREE.PointLight=function(color,intensity,distance,decayExponent,physicalFalloff){THREE.Light.call(this,color);this.intensity=intensity!==undefined?intensity:1;this.distance=distance!==undefined?distance:0;this.decayExponent=decayExponent!==undefined?decayExponent:0;;this.physicalFalloff=physicalFalloff!==undefined?physicalFalloff:false;};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.clone=function(){var light=new THREE.PointLight();THREE.Light.prototype.clone.call(this,light);light.intensity=this.intensity;light.distance=this.distance;light.decayExponent=this.decayExponent;light.physicalFalloff=this.physicalFalloff;return light;};THREE.SpotLight=function(color,intensity,distance,angle,exponent,decayExponent,physicalFalloff){THREE.Light.call(this,color);this.position.set(0,1,0);this.target=new THREE.Object3D();this.intensity=intensity!==undefined?intensity:1;this.distance=distance!==undefined?distance:0;this.decayExponent=decayExponent!==undefined?decayExponent:0;;this.physicalFalloff=physicalFalloff!==undefined?physicalFalloff:false;this.angle=angle!==undefined?angle:Math.PI/3;this.exponent=exponent!==undefined?exponent:10;this.castShadow=false;this.onlyShadow=false;this.shadowCameraNear=50;this.shadowCameraFar=5000;this.shadowCameraFov=50;this.shadowCameraVisible=false;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapWidth=512;this.shadowMapHeight=512;this.shadowMap=null;this.shadowMapSize=null;this.shadowCamera=null;this.shadowMatrix=null;};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.clone=function(){var light=new THREE.SpotLight();THREE.Light.prototype.clone.call(this,light);light.target=this.target.clone();light.intensity=this.intensity;light.distance=this.distance;light.angle=this.angle;light.exponent=this.exponent;light.decayExponent=this.decayExponent;light.physicalFalloff=this.physicalFalloff;light.castShadow=this.castShadow;light.onlyShadow=this.onlyShadow;return light;};THREE.Loader=function(showStatus){this.showStatus=showStatus;this.statusDomElement=showStatus?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};};THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:undefined,addStatusElement:function addStatusElement(){var e=document.createElement(\"div\");e.style.position=\"absolute\";e.style.right=\"0px\";e.style.top=\"0px\";e.style.fontSize=\"0.8em\";e.style.textAlign=\"left\";e.style.background=\"rgba(0,0,0,0.25)\";e.style.color=\"#fff\";e.style.width=\"120px\";e.style.padding=\"0.5em 0.5em 0.5em 0.5em\";e.style.zIndex=1000;e.innerHTML=\"Loading ...\";return e;},updateProgress:function updateProgress(progress){var message=\"Loaded \";if(progress.total){message+=(100*progress.loaded/progress.total).toFixed(0)+\"%\";}else{message+=(progress.loaded/1000).toFixed(2)+\" KB\";}this.statusDomElement.innerHTML=message;},extractUrlBase:function extractUrlBase(url){var parts=url.split('/');if(parts.length===1)return'./';parts.pop();return parts.join('/')+'/';},initMaterials:function initMaterials(materials,texturePath){var array=[];for(var i=0;i<materials.length;++i){array[i]=THREE.Loader.prototype.createMaterial(materials[i],texturePath);}return array;},needsTangents:function needsTangents(materials){for(var i=0,il=materials.length;i<il;i++){var m=materials[i];if(m instanceof THREE.ShaderMaterial)return true;}return false;},createMaterial:function createMaterial(m,texturePath){var _this=this;function is_pow2(n){var l=Math.log(n)/Math.LN2;return Math.floor(l)==l;}function nearest_pow2(n){var l=Math.log(n)/Math.LN2;return Math.pow(2,Math.round(l));}function load_image(where,url){var image=new Image();image.onload=function(){if(!is_pow2(this.width)||!is_pow2(this.height)){var width=nearest_pow2(this.width);var height=nearest_pow2(this.height);where.image.width=width;where.image.height=height;where.image.getContext('2d').drawImage(this,0,0,width,height);}else{where.image=this;}where.needsUpdate=true;};if(_this.crossOrigin!==undefined)image.crossOrigin=_this.crossOrigin;image.src=url;}function create_texture(where,name,sourceFile,repeat,offset,wrap,anisotropy){var isCompressed=/\\.dds$/i.test(sourceFile);var fullPath=texturePath+sourceFile;if(isCompressed){var texture=THREE.ImageUtils.loadCompressedTexture(fullPath);where[name]=texture;}else{var texture=document.createElement('canvas');where[name]=new THREE.Texture(texture);}where[name].sourceFile=sourceFile;if(repeat){where[name].repeat.set(repeat[0],repeat[1]);if(repeat[0]!==1)where[name].wrapS=THREE.RepeatWrapping;if(repeat[1]!==1)where[name].wrapT=THREE.RepeatWrapping;}if(offset){where[name].offset.set(offset[0],offset[1]);}if(wrap){var wrapMap={\"repeat\":THREE.RepeatWrapping,\"mirror\":THREE.MirroredRepeatWrapping};if(wrapMap[wrap[0]]!==undefined)where[name].wrapS=wrapMap[wrap[0]];if(wrapMap[wrap[1]]!==undefined)where[name].wrapT=wrapMap[wrap[1]];}if(anisotropy){where[name].anisotropy=anisotropy;}if(!isCompressed){load_image(where[name],fullPath);}}function rgb2hex(rgb){return(rgb[0]*255<<16)+(rgb[1]*255<<8)+rgb[2]*255;}var mtype=\"MeshLambertMaterial\";var mpars={color:0xeeeeee,opacity:1.0,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:false};if(m.shading){var shading=m.shading.toLowerCase();if(shading===\"phong\")mtype=\"MeshPhongMaterial\";else if(shading===\"basic\")mtype=\"MeshBasicMaterial\";else if(shading===\"physical\")mtype=\"MeshPhysicalMaterial\";}if(m.blending!==undefined&&THREE[m.blending]!==undefined){mpars.blending=THREE[m.blending];}if(m.transparent!==undefined||m.opacity<1.0){mpars.transparent=m.transparent;}if(m.depthTest!==undefined){mpars.depthTest=m.depthTest;}if(m.depthWrite!==undefined){mpars.depthWrite=m.depthWrite;}if(m.visible!==undefined){mpars.visible=m.visible;}if(m.flipSided!==undefined){mpars.side=THREE.BackSide;}if(m.doubleSided!==undefined){mpars.side=THREE.DoubleSide;}if(m.wireframe!==undefined){mpars.wireframe=m.wireframe;}if(m.vertexColors!==undefined){if(m.vertexColors===\"face\"){mpars.vertexColors=THREE.FaceColors;}else if(m.vertexColors){mpars.vertexColors=THREE.VertexColors;}}if(m.colorDiffuse){mpars.color=rgb2hex(m.colorDiffuse);}else if(m.DbgColor){mpars.color=m.DbgColor;}if(m.colorSpecular){mpars.specular=rgb2hex(m.colorSpecular);}if(m.colorAmbient){mpars.ambient=rgb2hex(m.colorAmbient);}if(m.transparency){mpars.opacity=m.transparency;}if(m.specularCoef){mpars.shininess=m.specularCoef;}if(m.mapDiffuse&&texturePath){create_texture(mpars,\"map\",m.mapDiffuse,m.mapDiffuseRepeat,m.mapDiffuseOffset,m.mapDiffuseWrap,m.mapDiffuseAnisotropy);}if(m.mapLight&&texturePath){create_texture(mpars,\"lightMap\",m.mapLight,m.mapLightRepeat,m.mapLightOffset,m.mapLightWrap,m.mapLightAnisotropy);}if(m.mapBump&&texturePath){create_texture(mpars,\"bumpMap\",m.mapBump,m.mapBumpRepeat,m.mapBumpOffset,m.mapBumpWrap,m.mapBumpAnisotropy);}if(m.mapNormal&&texturePath){create_texture(mpars,\"normalMap\",m.mapNormal,m.mapNormalRepeat,m.mapNormalOffset,m.mapNormalWrap,m.mapNormalAnisotropy);}if(m.mapSpecular&&texturePath){create_texture(mpars,\"specularMap\",m.mapSpecular,m.mapSpecularRepeat,m.mapSpecularOffset,m.mapSpecularWrap,m.mapSpecularAnisotropy);}if(m.mapBumpScale){mpars.bumpScale=m.mapBumpScale;}if(m.mapNormal){var shader=THREE.ShaderLib[\"normalmap\"];var uniforms=THREE.UniformsUtils.clone(shader.uniforms);uniforms[\"tNormal\"].value=mpars.normalMap;if(m.mapNormalFactor){uniforms[\"uNormalScale\"].value.set(m.mapNormalFactor,m.mapNormalFactor);}if(mpars.map){uniforms[\"tDiffuse\"].value=mpars.map;uniforms[\"enableDiffuse\"].value=true;}if(mpars.specularMap){uniforms[\"tSpecular\"].value=mpars.specularMap;uniforms[\"enableSpecular\"].value=true;}if(mpars.lightMap){uniforms[\"tAO\"].value=mpars.lightMap;uniforms[\"enableAO\"].value=true;}uniforms[\"diffuse\"].value.setHex(mpars.color);uniforms[\"specular\"].value.setHex(mpars.specular);uniforms[\"ambient\"].value.setHex(mpars.ambient);uniforms[\"shininess\"].value=mpars.shininess;if(mpars.opacity!==undefined){uniforms[\"opacity\"].value=mpars.opacity;}var parameters={fragmentShader:shader.fragmentShader,vertexShader:shader.vertexShader,uniforms:uniforms,lights:true,fog:true};var material=new THREE.ShaderMaterial(parameters);if(mpars.transparent){material.transparent=true;}}else{var material=new THREE[mtype](mpars);}if(m.DbgName!==undefined)material.name=m.DbgName;return material;}};THREE.XHRLoader=function(manager){this.manager=manager!==undefined?manager:THREE.DefaultLoadingManager;};THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function load(url,onLoad,onProgress,onError){var scope=this;var request=new XMLHttpRequest();if(onLoad!==undefined){request.addEventListener('load',function(event){onLoad(event.target.responseText);scope.manager.itemEnd(url);},false);}if(onProgress!==undefined){request.addEventListener('progress',function(event){onProgress(event);},false);}if(onError!==undefined){request.addEventListener('error',function(event){onError(event);},false);}if(this.crossOrigin!==undefined)request.crossOrigin=this.crossOrigin;request.open('GET',url,true);request.send(null);scope.manager.itemStart(url);},setCrossOrigin:function setCrossOrigin(value){this.crossOrigin=value;}};THREE.ImageLoader=function(manager){this.manager=manager!==undefined?manager:THREE.DefaultLoadingManager;};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function load(url,onLoad,onProgress,onError){var scope=this;var image=document.createElement('img');if(onLoad!==undefined){image.addEventListener('load',function(event){scope.manager.itemEnd(url);onLoad(this);},false);}if(onProgress!==undefined){image.addEventListener('progress',function(event){onProgress(event);},false);}if(onError!==undefined){image.addEventListener('error',function(event){onError(event);},false);}if(this.crossOrigin!==undefined)image.crossOrigin=this.crossOrigin;image.src=url;scope.manager.itemStart(url);return image;},setCrossOrigin:function setCrossOrigin(value){this.crossOrigin=value;}};THREE.JSONLoader=function(showStatus){THREE.Loader.call(this,showStatus);this.withCredentials=false;};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(url,callback,texturePath){var scope=this;texturePath=texturePath&&typeof texturePath===\"string\"?texturePath:this.extractUrlBase(url);this.onLoadStart();this.loadAjaxJSON(this,url,callback,texturePath);};THREE.JSONLoader.prototype.loadAjaxJSON=function(context,url,callback,texturePath,callbackProgress){var xhr=new XMLHttpRequest();var length=0;xhr.onreadystatechange=function(){if(xhr.readyState===xhr.DONE){if(xhr.status===200||xhr.status===0){if(xhr.responseText){var json=JSON.parse(xhr.responseText);if(json.metadata.type==='scene'){THREE.onerror('THREE.JSONLoader: \"'+url+'\" seems to be a Scene. Use THREE.SceneLoader instead.');return;}var result=context.parse(json,texturePath);callback(result.geometry,result.materials);}else{THREE.onerror('THREE.JSONLoader: \"'+url+'\" seems to be unreachable or the file is empty.');}context.onLoadComplete();}else{THREE.onerror('THREE.JSONLoader: Couldn\\'t load \"'+url+'\" ('+xhr.status+')');}}else if(xhr.readyState===xhr.LOADING){if(callbackProgress){if(length===0){length=xhr.getResponseHeader('Content-Length');}callbackProgress({total:length,loaded:xhr.responseText.length});}}else if(xhr.readyState===xhr.HEADERS_RECEIVED){if(callbackProgress!==undefined){length=xhr.getResponseHeader(\"Content-Length\");}}};xhr.open(\"GET\",url,true);xhr.withCredentials=this.withCredentials;xhr.send(null);};THREE.JSONLoader.prototype.parse=function(json,texturePath){var scope=this,geometry=new THREE.Geometry(),scale=json.scale!==undefined?1.0/json.scale:1.0;parseModel(scale);parseSkin();parseMorphing(scale);geometry.computeCentroids();geometry.computeFaceNormals();geometry.computeBoundingSphere();function parseModel(scale){function isBitSet(value,position){return value&1<<position;}var i,j,fi,offset,zLength,colorIndex,normalIndex,uvIndex,materialIndex,type,isQuad,hasMaterial,hasFaceVertexUv,hasFaceNormal,hasFaceVertexNormal,hasFaceColor,hasFaceVertexColor,vertex,face,faceA,faceB,color,hex,normal,uvLayer,uv,u,v,faces=json.faces,vertices=json.vertices,normals=json.normals,colors=json.colors,nUvLayers=0;if(json.uvs!==undefined){for(i=0;i<json.uvs.length;i++){if(json.uvs[i].length)nUvLayers++;}for(i=0;i<nUvLayers;i++){geometry.faceVertexUvs[i]=[];}}offset=0;zLength=vertices.length;while(offset<zLength){vertex=new THREE.Vector3();vertex.x=vertices[offset++]*scale;vertex.y=vertices[offset++]*scale;vertex.z=vertices[offset++]*scale;geometry.vertices.push(vertex);}offset=0;zLength=faces.length;while(offset<zLength){type=faces[offset++];isQuad=isBitSet(type,0);hasMaterial=isBitSet(type,1);hasFaceVertexUv=isBitSet(type,3);hasFaceNormal=isBitSet(type,4);hasFaceVertexNormal=isBitSet(type,5);hasFaceColor=isBitSet(type,6);hasFaceVertexColor=isBitSet(type,7);if(isQuad){faceA=new THREE.Face3();faceA.a=faces[offset];faceA.b=faces[offset+1];faceA.c=faces[offset+3];faceB=new THREE.Face3();faceB.a=faces[offset+1];faceB.b=faces[offset+2];faceB.c=faces[offset+3];offset+=4;if(hasMaterial){materialIndex=faces[offset++];faceA.materialIndex=materialIndex;faceB.materialIndex=materialIndex;}fi=geometry.faces.length;if(hasFaceVertexUv){for(i=0;i<nUvLayers;i++){uvLayer=json.uvs[i];geometry.faceVertexUvs[i][fi]=[];geometry.faceVertexUvs[i][fi+1]=[];for(j=0;j<4;j++){uvIndex=faces[offset++];u=uvLayer[uvIndex*2];v=uvLayer[uvIndex*2+1];uv=new THREE.Vector2(u,v);if(j!==2)geometry.faceVertexUvs[i][fi].push(uv);if(j!==0)geometry.faceVertexUvs[i][fi+1].push(uv);}}}if(hasFaceNormal){normalIndex=faces[offset++]*3;faceA.normal.set(normals[normalIndex++],normals[normalIndex++],normals[normalIndex]);faceB.normal.copy(faceA.normal);}if(hasFaceVertexNormal){for(i=0;i<4;i++){normalIndex=faces[offset++]*3;normal=new THREE.Vector3(normals[normalIndex++],normals[normalIndex++],normals[normalIndex]);if(i!==2)faceA.vertexNormals.push(normal);if(i!==0)faceB.vertexNormals.push(normal);}}if(hasFaceColor){colorIndex=faces[offset++];hex=colors[colorIndex];faceA.color.setHex(hex);faceB.color.setHex(hex);}if(hasFaceVertexColor){for(i=0;i<4;i++){colorIndex=faces[offset++];hex=colors[colorIndex];if(i!==2)faceA.vertexColors.push(new THREE.Color(hex));if(i!==0)faceB.vertexColors.push(new THREE.Color(hex));}}geometry.faces.push(faceA);geometry.faces.push(faceB);}else{face=new THREE.Face3();face.a=faces[offset++];face.b=faces[offset++];face.c=faces[offset++];if(hasMaterial){materialIndex=faces[offset++];face.materialIndex=materialIndex;}fi=geometry.faces.length;if(hasFaceVertexUv){for(i=0;i<nUvLayers;i++){uvLayer=json.uvs[i];geometry.faceVertexUvs[i][fi]=[];for(j=0;j<3;j++){uvIndex=faces[offset++];u=uvLayer[uvIndex*2];v=uvLayer[uvIndex*2+1];uv=new THREE.Vector2(u,v);geometry.faceVertexUvs[i][fi].push(uv);}}}if(hasFaceNormal){normalIndex=faces[offset++]*3;face.normal.set(normals[normalIndex++],normals[normalIndex++],normals[normalIndex]);}if(hasFaceVertexNormal){for(i=0;i<3;i++){normalIndex=faces[offset++]*3;normal=new THREE.Vector3(normals[normalIndex++],normals[normalIndex++],normals[normalIndex]);face.vertexNormals.push(normal);}}if(hasFaceColor){colorIndex=faces[offset++];face.color.setHex(colors[colorIndex]);}if(hasFaceVertexColor){for(i=0;i<3;i++){colorIndex=faces[offset++];face.vertexColors.push(new THREE.Color(colors[colorIndex]));}}geometry.faces.push(face);}}};function parseSkin(){if(json.skinWeights){for(var i=0,l=json.skinWeights.length;i<l;i+=2){var x=json.skinWeights[i];var y=json.skinWeights[i+1];var z=0;var w=0;geometry.skinWeights.push(new THREE.Vector4(x,y,z,w));}}if(json.skinIndices){for(var i=0,l=json.skinIndices.length;i<l;i+=2){var a=json.skinIndices[i];var b=json.skinIndices[i+1];var c=0;var d=0;geometry.skinIndices.push(new THREE.Vector4(a,b,c,d));}}geometry.bones=json.bones;if(geometry.bones&&geometry.bones.length>0&&(geometry.skinWeights.length!==geometry.skinIndices.length||geometry.skinIndices.length!==geometry.vertices.length)){THREE.onwarning('When skinning, number of vertices ('+geometry.vertices.length+'), skinIndices ('+geometry.skinIndices.length+'), and skinWeights ('+geometry.skinWeights.length+') should match.');}geometry.animation=json.animation;geometry.animations=json.animations;};function parseMorphing(scale){if(json.morphTargets!==undefined){var i,l,v,vl,dstVertices,srcVertices;for(i=0,l=json.morphTargets.length;i<l;i++){geometry.morphTargets[i]={};geometry.morphTargets[i].name=json.morphTargets[i].name;geometry.morphTargets[i].vertices=[];dstVertices=geometry.morphTargets[i].vertices;srcVertices=json.morphTargets[i].vertices;for(v=0,vl=srcVertices.length;v<vl;v+=3){var vertex=new THREE.Vector3();vertex.x=srcVertices[v]*scale;vertex.y=srcVertices[v+1]*scale;vertex.z=srcVertices[v+2]*scale;dstVertices.push(vertex);}}}if(json.morphColors!==undefined){var i,l,c,cl,dstColors,srcColors,color;for(i=0,l=json.morphColors.length;i<l;i++){geometry.morphColors[i]={};geometry.morphColors[i].name=json.morphColors[i].name;geometry.morphColors[i].colors=[];dstColors=geometry.morphColors[i].colors;srcColors=json.morphColors[i].colors;for(c=0,cl=srcColors.length;c<cl;c+=3){color=new THREE.Color(0xffaa00);color.setRGB(srcColors[c],srcColors[c+1],srcColors[c+2]);dstColors.push(color);}}}};if(json.materials===undefined){return{geometry:geometry};}else{var materials=this.initMaterials(json.materials,texturePath);if(this.needsTangents(materials)){geometry.computeTangents();}return{geometry:geometry,materials:materials};}};THREE.LoadingManager=function(onLoad,onProgress,onError){var scope=this;var loaded=0,total=0;this.onLoad=onLoad;this.onProgress=onProgress;this.onError=onError;this.itemStart=function(url){total++;};this.itemEnd=function(url){loaded++;if(scope.onProgress!==undefined){scope.onProgress(url,loaded,total);}if(loaded===total&&scope.onLoad!==undefined){scope.onLoad();}};};THREE.DefaultLoadingManager=new THREE.LoadingManager();THREE.BufferGeometryLoader=function(manager){this.manager=manager!==undefined?manager:THREE.DefaultLoadingManager;};THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function load(url,onLoad,onProgress,onError){var scope=this;var loader=new THREE.XHRLoader();loader.setCrossOrigin(this.crossOrigin);loader.load(url,function(text){onLoad(scope.parse(JSON.parse(text)));});},setCrossOrigin:function setCrossOrigin(value){this.crossOrigin=value;},parse:function parse(json){var geometry=new THREE.BufferGeometry();var attributes=json.attributes;var offsets=json.offsets;var boundingSphere=json.boundingSphere;for(var key in attributes){var attribute=attributes[key];geometry.attributes[key]={itemSize:attribute.itemSize,array:new self[attribute.type](attribute.array)};}if(offsets!==undefined){geometry.offsets=JSON.parse(JSON.stringify(offsets));}if(boundingSphere!==undefined){geometry.boundingSphere=new THREE.Sphere(new THREE.Vector3().fromArray(boundingSphere.center!==undefined?boundingSphere.center:[0,0,0]),boundingSphere.radius);}return geometry;}};THREE.Geometry2Loader=function(manager){this.manager=manager!==undefined?manager:THREE.DefaultLoadingManager;};THREE.Geometry2Loader.prototype={constructor:THREE.Geometry2Loader,load:function load(url,onLoad,onProgress,onError){var scope=this;var loader=new THREE.XHRLoader();loader.setCrossOrigin(this.crossOrigin);loader.load(url,function(text){onLoad(scope.parse(JSON.parse(text)));});},setCrossOrigin:function setCrossOrigin(value){this.crossOrigin=value;},parse:function parse(json){var geometry=new THREE.Geometry2(json.vertices.length/3);var attributes=['vertices','normals','uvs'];var boundingSphere=json.boundingSphere;for(var key in attributes){var attribute=attributes[key];geometry[attribute].set(json[attribute]);}if(boundingSphere!==undefined){geometry.boundingSphere=new THREE.Sphere(new THREE.Vector3().fromArray(boundingSphere.center!==undefined?boundingSphere.center:[0,0,0]),boundingSphere.radius);}return geometry;}};THREE.MaterialLoader=function(manager){this.manager=manager!==undefined?manager:THREE.DefaultLoadingManager;};THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function load(url,onLoad,onProgress,onError){var scope=this;var loader=new THREE.XHRLoader();loader.setCrossOrigin(this.crossOrigin);loader.load(url,function(text){onLoad(scope.parse(JSON.parse(text)));});},setCrossOrigin:function setCrossOrigin(value){this.crossOrigin=value;},parse:function parse(json){var material=new THREE[json.type]();if(json.color!==undefined)material.color.setHex(json.color);if(json.ambient!==undefined)material.ambient.setHex(json.ambient);if(json.emissive!==undefined)material.emissive.setHex(json.emissive);if(json.specular!==undefined)material.specular.setHex(json.specular);if(json.falloff!==undefined)material.falloff=json.falloff;if(json.falloffColor!==undefined)material.falloffColor.setHex(json.falloffColor);if(json.roughness!==undefined)material.roughness=json.roughness;if(json.metallic!==undefined)material.metallic=json.metallic;if(json.clearCoat!==undefined)material.clearCoat=json.clearCoat;if(json.clearCoatRoughness!==undefined)material.clearCoatRoughness=json.clearCoatRoughness;if(json.anisotropy!==undefined)material.anisotropy=json.anisotropy;if(json.anisotropyRotation!==undefined)material.anisotropyRotation=json.anisotropyRotation;if(json.translucency!==undefined)material.translucency.setHex(json.translucency);if(json.translucencyNormalAlpha!==undefined)material.translucencyNormalAlpha=json.translucencyNormalAlpha;if(json.translucencyNormalPower!==undefined)material.translucencyNormalPower=json.translucencyNormalPower;if(json.translucencyViewAlpha!==undefined)material.translucencyViewAlpha=json.translucencyViewAlpha;if(json.translucencyViewPower!==undefined)material.translucencyViewPower=json.translucencyViewPower;if(json.shininess!==undefined)material.shininess=json.shininess;if(json.vertexColors!==undefined)material.vertexColors=json.vertexColors;if(json.blending!==undefined)material.blending=json.blending;if(json.side!==undefined)material.side=json.side;if(json.opacity!==undefined)material.opacity=json.opacity;if(json.transparent!==undefined)material.transparent=json.transparent;if(json.wireframe!==undefined)material.wireframe=json.wireframe;if(json.materials!==undefined){for(var i=0,l=json.materials.length;i<l;i++){material.materials.push(this.parse(json.materials[i]));}}return material;}};THREE.ObjectLoader=function(manager){this.manager=manager!==undefined?manager:THREE.DefaultLoadingManager;};THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function load(url,onLoad,onProgress,onError){var scope=this;var loader=new THREE.XHRLoader(scope.manager);loader.setCrossOrigin(this.crossOrigin);loader.load(url,function(text){onLoad(scope.parse(JSON.parse(text)));});},setCrossOrigin:function setCrossOrigin(value){this.crossOrigin=value;},parse:function parse(json){var geometries=this.parseGeometries(json.geometries);var materials=this.parseMaterials(json.materials);var object=this.parseObject(json.object,geometries,materials);return object;},parseGeometries:function parseGeometries(json){var geometries={};if(json!==undefined){var geometryLoader=new THREE.JSONLoader();var geometry2Loader=new THREE.Geometry2Loader();var bufferGeometryLoader=new THREE.BufferGeometryLoader();for(var i=0,l=json.length;i<l;i++){var geometry;var data=json[i];switch(data.type){case'PlaneGeometry':geometry=new THREE.PlaneGeometry(data.width,data.height,data.widthSegments,data.heightSegments);break;case'BoxGeometry':case'CubeGeometry':geometry=new THREE.BoxGeometry(data.width,data.height,data.depth,data.widthSegments,data.heightSegments,data.depthSegments);break;case'CircleGeometry':geometry=new THREE.CircleGeometry(data.radius,data.segments);break;case'CylinderGeometry':geometry=new THREE.CylinderGeometry(data.radiusTop,data.radiusBottom,data.height,data.radialSegments,data.heightSegments,data.openEnded);break;case'SphereGeometry':geometry=new THREE.SphereGeometry(data.radius,data.widthSegments,data.heightSegments,data.phiStart,data.phiLength,data.thetaStart,data.thetaLength);break;case'IcosahedronGeometry':geometry=new THREE.IcosahedronGeometry(data.radius,data.detail);break;case'TorusGeometry':geometry=new THREE.TorusGeometry(data.radius,data.tube,data.radialSegments,data.tubularSegments,data.arc);break;case'TorusKnotGeometry':geometry=new THREE.TorusKnotGeometry(data.radius,data.tube,data.radialSegments,data.tubularSegments,data.p,data.q,data.heightScale);break;case'BufferGeometry':geometry=bufferGeometryLoader.parse(data.data);break;case'Geometry2':geometry=geometry2Loader.parse(data.data);break;case'Geometry':geometry=geometryLoader.parse(data.data).geometry;break;}geometry.uuid=data.uuid;if(data.name!==undefined)geometry.name=data.name;geometries[data.uuid]=geometry;}}return geometries;},parseMaterials:function parseMaterials(json){var materials={};if(json!==undefined){var loader=new THREE.MaterialLoader();for(var i=0,l=json.length;i<l;i++){var data=json[i];var material=loader.parse(data);material.uuid=data.uuid;if(data.name!==undefined)material.name=data.name;materials[data.uuid]=material;}}return materials;},parseObject:function(){var matrix=new THREE.Matrix4();return function(data,geometries,materials){var object;switch(data.type){case'Scene':object=new THREE.Scene();break;case'PerspectiveCamera':object=new THREE.PerspectiveCamera(data.fov,data.aspect,data.near,data.far);break;case'OrthographicCamera':object=new THREE.OrthographicCamera(data.left,data.right,data.top,data.bottom,data.near,data.far);break;case'AmbientLight':object=new THREE.AmbientLight(data.color);break;case'DirectionalLight':object=new THREE.DirectionalLight(data.color,data.intensity);break;case'PointLight':object=new THREE.PointLight(data.color,data.intensity,data.distance,data.decay,data.physicalFalloff);break;case'SpotLight':object=new THREE.SpotLight(data.color,data.intensity,data.distance,data.angle,data.exponent,data.decay,data.physicalFalloff);break;case'HemisphereLight':object=new THREE.HemisphereLight(data.color,data.groundColor,data.intensity);break;case'AreaLight':object=new THREE.AreaLight(data.color,data.intensity,data.distance,data.decayExponent,data.decay,data.physicalFalloff);object.width=data.width||1;object.height=data.height||1;break;case'Mesh':var geometry=geometries[data.geometry];var material=materials[data.material];if(geometry===undefined){THREE.onerror('THREE.ObjectLoader: Undefined geometry '+data.geometry);}if(material===undefined){THREE.onerror('THREE.ObjectLoader: Undefined material '+data.material);}object=new THREE.Mesh(geometry,material);break;case'Sprite':var material=materials[data.material];if(material===undefined){THREE.onerror('THREE.ObjectLoader: Undefined material '+data.material);}object=new THREE.Sprite(material);break;default:object=new THREE.Object3D();}object.uuid=data.uuid;if(data.name!==undefined)object.name=data.name;if(data.matrix!==undefined){matrix.fromArray(data.matrix);matrix.decompose(object.position,object.quaternion,object.scale);}else{if(data.position!==undefined)object.position.fromArray(data.position);if(data.rotation!==undefined)object.rotation.fromArray(data.rotation);if(data.scale!==undefined)object.scale.fromArray(data.scale);}if(data.visible!==undefined)object.visible=data.visible;if(data.userData!==undefined)object.userData=data.userData;if(data.children!==undefined){for(var child in data.children){object.add(this.parseObject(data.children[child],geometries,materials));}}return object;};}()};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlers={};this.hierarchyHandlers={};this.addGeometryHandler(\"ascii\",THREE.JSONLoader);};THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function load(url,onLoad,onProgress,onError){var scope=this;var loader=new THREE.XHRLoader(scope.manager);loader.setCrossOrigin(this.crossOrigin);loader.load(url,function(text){scope.parse(JSON.parse(text),onLoad,url);});},setCrossOrigin:function setCrossOrigin(value){this.crossOrigin=value;},addGeometryHandler:function addGeometryHandler(typeID,loaderClass){this.geometryHandlers[typeID]={\"loaderClass\":loaderClass};},addHierarchyHandler:function addHierarchyHandler(typeID,loaderClass){this.hierarchyHandlers[typeID]={\"loaderClass\":loaderClass};},parse:function parse(json,callbackFinished,url){var scope=this;var urlBase=THREE.Loader.prototype.extractUrlBase(url);var geometry,material,camera,fog,texture,images,color,light,hex,intensity,counter_models,counter_textures,total_models,total_textures,result;var target_array=[];var data=json;for(var typeID in this.geometryHandlers){var loaderClass=this.geometryHandlers[typeID][\"loaderClass\"];this.geometryHandlers[typeID][\"loaderObject\"]=new loaderClass();}for(var typeID in this.hierarchyHandlers){var loaderClass=this.hierarchyHandlers[typeID][\"loaderClass\"];this.hierarchyHandlers[typeID][\"loaderObject\"]=new loaderClass();}counter_models=0;counter_textures=0;result={scene:new THREE.Scene(),geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}};if(data.transform){var position=data.transform.position,rotation=data.transform.rotation,scale=data.transform.scale;if(position){result.scene.position.fromArray(position);}if(rotation){result.scene.rotation.fromArray(rotation);}if(scale){result.scene.scale.fromArray(scale);}if(position||rotation||scale){result.scene.updateMatrix();result.scene.updateMatrixWorld();}}function get_url(source_url,url_type){if(url_type==\"relativeToHTML\"){return source_url;}else{return urlBase+source_url;}};function handle_objects(){handle_children(result.scene,data.objects);}function handle_children(parent,children){var mat,dst,pos,rot,scl,quat;for(var objID in children){var object=result.objects[objID];var objJSON=children[objID];if(object===undefined){if(objJSON.type&&objJSON.type in scope.hierarchyHandlers){if(objJSON.loading===undefined){var reservedTypes={\"type\":1,\"url\":1,\"material\":1,\"position\":1,\"rotation\":1,\"scale\":1,\"visible\":1,\"children\":1,\"userData\":1,\"skin\":1,\"morph\":1,\"mirroredLoop\":1,\"duration\":1};var loaderParameters={};for(var parType in objJSON){if(!(parType in reservedTypes)){loaderParameters[parType]=objJSON[parType];}}material=result.materials[objJSON.material];objJSON.loading=true;var loader=scope.hierarchyHandlers[objJSON.type][\"loaderObject\"];if(loader.options){loader.load(get_url(objJSON.url,data.urlBaseType),create_callback_hierachy(objID,parent,material,objJSON));}else{loader.load(get_url(objJSON.url,data.urlBaseType),create_callback_hierachy(objID,parent,material,objJSON),loaderParameters);}}}else if(objJSON.geometry!==undefined){geometry=result.geometries[objJSON.geometry];if(geometry){var needsTangents=false;material=result.materials[objJSON.material];needsTangents=material instanceof THREE.ShaderMaterial;pos=objJSON.position;rot=objJSON.rotation;scl=objJSON.scale;mat=objJSON.matrix;quat=objJSON.quaternion;if(!objJSON.material){material=new THREE.MeshFaceMaterial(result.face_materials[objJSON.geometry]);}if(material instanceof THREE.MeshFaceMaterial&&material.materials.length===0){material=new THREE.MeshFaceMaterial(result.face_materials[objJSON.geometry]);}if(material instanceof THREE.MeshFaceMaterial){for(var i=0;i<material.materials.length;i++){needsTangents=needsTangents||material.materials[i]instanceof THREE.ShaderMaterial;}}if(needsTangents){geometry.computeTangents();}if(objJSON.skin){object=new THREE.SkinnedMesh(geometry,material);}else if(objJSON.morph){object=new THREE.MorphAnimMesh(geometry,material);if(objJSON.duration!==undefined){object.duration=objJSON.duration;}if(objJSON.time!==undefined){object.time=objJSON.time;}if(objJSON.mirroredLoop!==undefined){object.mirroredLoop=objJSON.mirroredLoop;}if(material.morphNormals){geometry.computeMorphNormals();}}else{object=new THREE.Mesh(geometry,material);}object.name=objID;if(mat){object.matrixAutoUpdate=false;object.matrix.set(mat[0],mat[1],mat[2],mat[3],mat[4],mat[5],mat[6],mat[7],mat[8],mat[9],mat[10],mat[11],mat[12],mat[13],mat[14],mat[15]);}else{object.position.fromArray(pos);if(quat){object.quaternion.fromArray(quat);}else{object.rotation.fromArray(rot);}object.scale.fromArray(scl);}object.visible=objJSON.visible;object.castShadow=objJSON.castShadow;object.receiveShadow=objJSON.receiveShadow;parent.add(object);result.objects[objID]=object;}}else if(objJSON.type===\"AmbientLight\"||objJSON.type===\"PointLight\"||objJSON.type===\"DirectionalLight\"||objJSON.type===\"SpotLight\"||objJSON.type===\"HemisphereLight\"||objJSON.type===\"AreaLight\"){var color=objJSON.color;var intensity=objJSON.intensity;var distance=objJSON.distance;var position=objJSON.position;var rotation=objJSON.rotation;switch(objJSON.type){case'AmbientLight':light=new THREE.AmbientLight(color);break;case'PointLight':light=new THREE.PointLight(color,intensity,distance);light.position.fromArray(position);break;case'DirectionalLight':light=new THREE.DirectionalLight(color,intensity);light.position.fromArray(objJSON.direction);break;case'SpotLight':light=new THREE.SpotLight(color,intensity,distance,1);light.angle=objJSON.angle;light.position.fromArray(position);light.target.set(position[0],position[1]-distance,position[2]);light.target.applyEuler(new THREE.Euler(rotation[0],rotation[1],rotation[2],'XYZ'));break;case'HemisphereLight':light=new THREE.DirectionalLight(color,intensity,distance);light.target.set(position[0],position[1]-distance,position[2]);light.target.applyEuler(new THREE.Euler(rotation[0],rotation[1],rotation[2],'XYZ'));break;case'AreaLight':light=new THREE.AreaLight(color,intensity);light.position.fromArray(position);light.width=objJSON.size;light.height=objJSON.size_y;break;}parent.add(light);light.name=objID;result.lights[objID]=light;result.objects[objID]=light;}else if(objJSON.type===\"PerspectiveCamera\"||objJSON.type===\"OrthographicCamera\"){pos=objJSON.position;rot=objJSON.rotation;quat=objJSON.quaternion;if(objJSON.type===\"PerspectiveCamera\"){camera=new THREE.PerspectiveCamera(objJSON.fov,objJSON.aspect,objJSON.near,objJSON.far);}else if(objJSON.type===\"OrthographicCamera\"){camera=new THREE.OrthographicCamera(objJSON.left,objJSON.right,objJSON.top,objJSON.bottom,objJSON.near,objJSON.far);}camera.name=objID;camera.position.fromArray(pos);if(quat!==undefined){camera.quaternion.fromArray(quat);}else if(rot!==undefined){camera.rotation.fromArray(rot);}parent.add(camera);result.cameras[objID]=camera;result.objects[objID]=camera;}else{pos=objJSON.position;rot=objJSON.rotation;scl=objJSON.scale;quat=objJSON.quaternion;object=new THREE.Object3D();object.name=objID;object.position.fromArray(pos);if(quat){object.quaternion.fromArray(quat);}else{object.rotation.fromArray(rot);}object.scale.fromArray(scl);object.visible=objJSON.visible!==undefined?objJSON.visible:false;parent.add(object);result.objects[objID]=object;result.empties[objID]=object;}if(object){if(objJSON.userData!==undefined){for(var key in objJSON.userData){var value=objJSON.userData[key];object.userData[key]=value;}}if(objJSON.groups!==undefined){for(var i=0;i<objJSON.groups.length;i++){var groupID=objJSON.groups[i];if(result.groups[groupID]===undefined){result.groups[groupID]=[];}result.groups[groupID].push(objID);}}}}if(object!==undefined&&objJSON.children!==undefined){handle_children(object,objJSON.children);}}};function handle_mesh(geo,mat,id){result.geometries[id]=geo;result.face_materials[id]=mat;handle_objects();};function handle_hierarchy(node,id,parent,material,obj){var p=obj.position;var r=obj.rotation;var q=obj.quaternion;var s=obj.scale;node.position.fromArray(p);if(q){node.quaternion.fromArray(q);}else{node.rotation.fromArray(r);}node.scale.fromArray(s);if(material){node.traverse(function(child){child.material=material;});}var visible=obj.visible!==undefined?obj.visible:true;node.traverse(function(child){child.visible=visible;});parent.add(node);node.name=id;result.objects[id]=node;handle_objects();};function create_callback_geometry(id){return function(geo,mat){geo.name=id;handle_mesh(geo,mat,id);counter_models-=1;scope.onLoadComplete();async_callback_gate();};};function create_callback_hierachy(id,parent,material,obj){return function(event){var result;if(event.content){result=event.content;}else if(event.dae){result=event.scene;}else{result=event;}handle_hierarchy(result,id,parent,material,obj);counter_models-=1;scope.onLoadComplete();async_callback_gate();};};function create_callback_embed(id){return function(geo,mat){geo.name=id;result.geometries[id]=geo;result.face_materials[id]=mat;};};function async_callback_gate(){var progress={totalModels:total_models,totalTextures:total_textures,loadedModels:total_models-counter_models,loadedTextures:total_textures-counter_textures};scope.callbackProgress(progress,result);scope.onLoadProgress();if(counter_models===0&&counter_textures===0){finalize();callbackFinished(result);}};function finalize(){for(var i=0;i<target_array.length;i++){var ta=target_array[i];var target=result.objects[ta.targetName];if(target){ta.object.target=target;}else{ta.object.target=new THREE.Object3D();result.scene.add(ta.object.target);}ta.object.target.userData.targetInverse=ta.object;}};var callbackTexture=function callbackTexture(count){counter_textures-=count;async_callback_gate();scope.onLoadComplete();};var generateTextureCallback=function generateTextureCallback(count){return function(){callbackTexture(count);};};function traverse_json_hierarchy(objJSON,callback){callback(objJSON);if(objJSON.children!==undefined){for(var objChildID in objJSON.children){traverse_json_hierarchy(objJSON.children[objChildID],callback);}}};var fogID,fogJSON;for(fogID in data.fogs){fogJSON=data.fogs[fogID];if(fogJSON.type===\"linear\"){fog=new THREE.Fog(0x000000,fogJSON.near,fogJSON.far);}else if(fogJSON.type===\"exp2\"){fog=new THREE.FogExp2(0x000000,fogJSON.density);}color=fogJSON.color;fog.color.setRGB(color[0],color[1],color[2]);result.fogs[fogID]=fog;}var geoID,geoJSON;for(geoID in data.geometries){geoJSON=data.geometries[geoID];if(geoJSON.type in this.geometryHandlers){counter_models+=1;scope.onLoadStart();}}for(var objID in data.objects){traverse_json_hierarchy(data.objects[objID],function(objJSON){if(objJSON.type&&objJSON.type in scope.hierarchyHandlers){counter_models+=1;scope.onLoadStart();}});}total_models=counter_models;for(geoID in data.geometries){geoJSON=data.geometries[geoID];if(geoJSON.type===\"cube\"){geometry=new THREE.BoxGeometry(geoJSON.width,geoJSON.height,geoJSON.depth,geoJSON.widthSegments,geoJSON.heightSegments,geoJSON.depthSegments);geometry.name=geoID;result.geometries[geoID]=geometry;}else if(geoJSON.type===\"plane\"){geometry=new THREE.PlaneGeometry(geoJSON.width,geoJSON.height,geoJSON.widthSegments,geoJSON.heightSegments);geometry.name=geoID;result.geometries[geoID]=geometry;}else if(geoJSON.type===\"sphere\"){geometry=new THREE.SphereGeometry(geoJSON.radius,geoJSON.widthSegments,geoJSON.heightSegments);geometry.name=geoID;result.geometries[geoID]=geometry;}else if(geoJSON.type===\"cylinder\"){geometry=new THREE.CylinderGeometry(geoJSON.topRad,geoJSON.botRad,geoJSON.height,geoJSON.radSegs,geoJSON.heightSegs);geometry.name=geoID;result.geometries[geoID]=geometry;}else if(geoJSON.type===\"torus\"){geometry=new THREE.TorusGeometry(geoJSON.radius,geoJSON.tube,geoJSON.segmentsR,geoJSON.segmentsT);geometry.name=geoID;result.geometries[geoID]=geometry;}else if(geoJSON.type===\"icosahedron\"){geometry=new THREE.IcosahedronGeometry(geoJSON.radius,geoJSON.subdivisions);geometry.name=geoID;result.geometries[geoID]=geometry;}else if(geoJSON.type in this.geometryHandlers){var loaderParameters={};for(var parType in geoJSON){if(parType!==\"type\"&&parType!==\"url\"){loaderParameters[parType]=geoJSON[parType];}}var loader=this.geometryHandlers[geoJSON.type][\"loaderObject\"];loader.load(get_url(geoJSON.url,data.urlBaseType),create_callback_geometry(geoID),loaderParameters);}else if(geoJSON.type===\"embedded\"){var modelJson=data.embeds[geoJSON.id],texture_path=\"\";modelJson.metadata=data.metadata;if(modelJson){var jsonLoader=this.geometryHandlers[\"ascii\"][\"loaderObject\"];var model=jsonLoader.parse(modelJson,texture_path);create_callback_embed(geoID)(model.geometry,model.materials);}}}var textureID,textureJSON;for(textureID in data.textures){textureJSON=data.textures[textureID];if(textureJSON.url instanceof Array){counter_textures+=textureJSON.url.length;for(var n=0;n<textureJSON.url.length;n++){scope.onLoadStart();}}else{counter_textures+=1;scope.onLoadStart();}}total_textures=counter_textures;for(textureID in data.textures){textureJSON=data.textures[textureID];if(textureJSON.mapping!==undefined&&THREE[textureJSON.mapping]!==undefined){textureJSON.mapping=new THREE[textureJSON.mapping]();}if(textureJSON.url instanceof Array){var count=textureJSON.url.length;var url_array=[];for(var i=0;i<count;i++){url_array[i]=get_url(textureJSON.url[i],data.urlBaseType);}var isCompressed=/\\.dds$/i.test(url_array[0]);if(isCompressed){texture=THREE.ImageUtils.loadCompressedTextureCube(url_array,textureJSON.mapping,generateTextureCallback(count));}else{texture=THREE.ImageUtils.loadTextureCube(url_array,textureJSON.mapping,generateTextureCallback(count));}}else{var isCompressed=/\\.dds$/i.test(textureJSON.url);var fullUrl=get_url(textureJSON.url,data.urlBaseType);var textureCallback=generateTextureCallback(1);if(isCompressed){texture=THREE.ImageUtils.loadCompressedTexture(fullUrl,textureJSON.mapping,textureCallback);}else{texture=THREE.ImageUtils.loadTexture(fullUrl,textureJSON.mapping,textureCallback);}if(THREE[textureJSON.minFilter]!==undefined)texture.minFilter=THREE[textureJSON.minFilter];if(THREE[textureJSON.magFilter]!==undefined)texture.magFilter=THREE[textureJSON.magFilter];if(textureJSON.anisotropy)texture.anisotropy=textureJSON.anisotropy;if(textureJSON.repeat){texture.repeat.set(textureJSON.repeat[0],textureJSON.repeat[1]);if(textureJSON.repeat[0]!==1)texture.wrapS=THREE.RepeatWrapping;if(textureJSON.repeat[1]!==1)texture.wrapT=THREE.RepeatWrapping;}if(textureJSON.offset){texture.offset.set(textureJSON.offset[0],textureJSON.offset[1]);}if(textureJSON.wrap){var wrapMap={\"repeat\":THREE.RepeatWrapping,\"mirror\":THREE.MirroredRepeatWrapping};if(wrapMap[textureJSON.wrap[0]]!==undefined)texture.wrapS=wrapMap[textureJSON.wrap[0]];if(wrapMap[textureJSON.wrap[1]]!==undefined)texture.wrapT=wrapMap[textureJSON.wrap[1]];}}result.textures[textureID]=texture;}var matID,matJSON;var parID;for(matID in data.materials){matJSON=data.materials[matID];for(parID in matJSON.parameters){if(parID===\"envMap\"||parID===\"map\"||parID===\"lightMap\"||parID===\"bumpMap\"){matJSON.parameters[parID]=result.textures[matJSON.parameters[parID]];}else if(parID===\"shading\"){matJSON.parameters[parID]=matJSON.parameters[parID]===\"flat\"?THREE.FlatShading:THREE.SmoothShading;}else if(parID===\"side\"){if(matJSON.parameters[parID]==\"double\"){matJSON.parameters[parID]=THREE.DoubleSide;}else if(matJSON.parameters[parID]==\"back\"){matJSON.parameters[parID]=THREE.BackSide;}else{matJSON.parameters[parID]=THREE.FrontSide;}}else if(parID===\"blending\"){matJSON.parameters[parID]=matJSON.parameters[parID]in THREE?THREE[matJSON.parameters[parID]]:THREE.NormalBlending;}else if(parID===\"combine\"){matJSON.parameters[parID]=matJSON.parameters[parID]in THREE?THREE[matJSON.parameters[parID]]:THREE.MultiplyOperation;}else if(parID===\"vertexColors\"){if(matJSON.parameters[parID]==\"face\"){matJSON.parameters[parID]=THREE.FaceColors;}else if(matJSON.parameters[parID]){matJSON.parameters[parID]=THREE.VertexColors;}}else if(parID===\"wrapRGB\"){var v3=matJSON.parameters[parID];matJSON.parameters[parID]=new THREE.Vector3(v3[0],v3[1],v3[2]);}}if(matJSON.parameters.opacity!==undefined&&matJSON.parameters.opacity<1.0){matJSON.parameters.transparent=true;}if(matJSON.parameters.normalMap){var shader=THREE.ShaderLib[\"normalmap\"];var uniforms=THREE.UniformsUtils.clone(shader.uniforms);var diffuse=matJSON.parameters.color;var specular=matJSON.parameters.specular;var ambient=matJSON.parameters.ambient;var shininess=matJSON.parameters.shininess;uniforms[\"tNormal\"].value=result.textures[matJSON.parameters.normalMap];if(matJSON.parameters.normalScale){uniforms[\"uNormalScale\"].value.set(matJSON.parameters.normalScale[0],matJSON.parameters.normalScale[1]);}if(matJSON.parameters.map){uniforms[\"tDiffuse\"].value=matJSON.parameters.map;uniforms[\"enableDiffuse\"].value=true;}if(matJSON.parameters.envMap){uniforms[\"tCube\"].value=matJSON.parameters.envMap;uniforms[\"enableReflection\"].value=true;uniforms[\"reflectivity\"].value=matJSON.parameters.reflectivity;}if(matJSON.parameters.lightMap){uniforms[\"tAO\"].value=matJSON.parameters.lightMap;uniforms[\"enableAO\"].value=true;}if(matJSON.parameters.specularMap){uniforms[\"tSpecular\"].value=result.textures[matJSON.parameters.specularMap];uniforms[\"enableSpecular\"].value=true;}if(matJSON.parameters.displacementMap){uniforms[\"tDisplacement\"].value=result.textures[matJSON.parameters.displacementMap];uniforms[\"enableDisplacement\"].value=true;uniforms[\"uDisplacementBias\"].value=matJSON.parameters.displacementBias;uniforms[\"uDisplacementScale\"].value=matJSON.parameters.displacementScale;}uniforms[\"diffuse\"].value.setHex(diffuse);uniforms[\"specular\"].value.setHex(specular);uniforms[\"ambient\"].value.setHex(ambient);uniforms[\"shininess\"].value=shininess;if(matJSON.parameters.opacity){uniforms[\"opacity\"].value=matJSON.parameters.opacity;}var parameters={fragmentShader:shader.fragmentShader,vertexShader:shader.vertexShader,uniforms:uniforms,lights:true,fog:true};material=new THREE.ShaderMaterial(parameters);}else{material=new THREE[matJSON.type](matJSON.parameters);}material.name=matID;result.materials[matID]=material;}for(matID in data.materials){matJSON=data.materials[matID];if(matJSON.parameters.materials){var materialArray=[];for(var i=0;i<matJSON.parameters.materials.length;i++){var label=matJSON.parameters.materials[i];materialArray.push(result.materials[label]);}result.materials[matID].materials=materialArray;}}handle_objects();if(result.cameras&&data.defaults.camera){result.currentCamera=result.cameras[data.defaults.camera];}if(result.fogs&&data.defaults.fog){result.scene.fog=result.fogs[data.defaults.fog];}scope.callbackSync(result);async_callback_gate();}};THREE.TextureLoader=function(manager){this.manager=manager!==undefined?manager:THREE.DefaultLoadingManager;};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function load(url,onLoad,onProgress,onError){var scope=this;var loader=new THREE.ImageLoader(scope.manager);loader.setCrossOrigin(this.crossOrigin);loader.load(url,function(image){var texture=new THREE.Texture(image);texture.needsUpdate=true;if(onLoad!==undefined){onLoad(texture);}});},setCrossOrigin:function setCrossOrigin(value){this.crossOrigin=value;}};THREE.Material=function(){this.id=THREE.MaterialIdCount++;this.uuid=THREE.Math.generateUUID();this.name='';this.side=THREE.FrontSide;this.opacity=1;this.transparent=false;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthTest=true;this.depthWrite=true;this.polygonOffset=false;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.alphaTest=0;this.overdraw=0;this.visible=true;this.needsUpdate=true;};THREE.Material.prototype={constructor:THREE.Material,setValues:function setValues(values){if(values===undefined)return;for(var key in values){var newValue=values[key];if(newValue===undefined){THREE.onwarning('THREE.Material: \\''+key+'\\' parameter is undefined.');continue;}if(key in this){var currentValue=this[key];if(currentValue instanceof THREE.Color){currentValue.set(newValue);}else if(currentValue instanceof THREE.Vector3&&newValue instanceof THREE.Vector3){currentValue.copy(newValue);}else if(key=='overdraw'){this[key]=Number(newValue);}else{this[key]=newValue;}}}},clone:function clone(material){if(material===undefined)material=new THREE.Material();material.name=this.name;material.side=this.side;material.opacity=this.opacity;material.transparent=this.transparent;material.blending=this.blending;material.blendSrc=this.blendSrc;material.blendDst=this.blendDst;material.blendEquation=this.blendEquation;material.depthTest=this.depthTest;material.depthWrite=this.depthWrite;material.polygonOffset=this.polygonOffset;material.polygonOffsetFactor=this.polygonOffsetFactor;material.polygonOffsetUnits=this.polygonOffsetUnits;material.alphaTest=this.alphaTest;material.overdraw=this.overdraw;material.visible=this.visible;return material;},dispose:function dispose(){this.dispatchEvent({type:'dispose'});}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(parameters){THREE.Material.call(this);this.color=new THREE.Color(0xffffff);this.linewidth=1;this.linecap='round';this.linejoin='round';this.vertexColors=false;this.fog=true;this.setValues(parameters);};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.clone=function(){var material=new THREE.LineBasicMaterial();THREE.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.linewidth=this.linewidth;material.linecap=this.linecap;material.linejoin=this.linejoin;material.vertexColors=this.vertexColors;material.fog=this.fog;return material;};THREE.LineDashedMaterial=function(parameters){THREE.Material.call(this);this.color=new THREE.Color(0xffffff);this.linewidth=1;this.scale=1;this.dashSize=3;this.gapSize=1;this.vertexColors=false;this.fog=true;this.setValues(parameters);};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var material=new THREE.LineDashedMaterial();THREE.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.linewidth=this.linewidth;material.scale=this.scale;material.dashSize=this.dashSize;material.gapSize=this.gapSize;material.vertexColors=this.vertexColors;material.fog=this.fog;return material;};THREE.MeshBasicMaterial=function(parameters){THREE.Material.call(this);this.color=new THREE.Color(0xffffff);this.map=null;this.lightMap=null;this.specularMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.setValues(parameters);};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.clone=function(){var material=new THREE.MeshBasicMaterial();THREE.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.map=this.map;material.lightMap=this.lightMap;material.specularMap=this.specularMap;material.envMap=this.envMap;material.combine=this.combine;material.reflectivity=this.reflectivity;material.refractionRatio=this.refractionRatio;material.fog=this.fog;material.shading=this.shading;material.wireframe=this.wireframe;material.wireframeLinewidth=this.wireframeLinewidth;material.wireframeLinecap=this.wireframeLinecap;material.wireframeLinejoin=this.wireframeLinejoin;material.vertexColors=this.vertexColors;material.skinning=this.skinning;material.morphTargets=this.morphTargets;return material;};THREE.MeshLambertMaterial=function(parameters){THREE.Material.call(this);this.color=new THREE.Color(0xffffff);this.ambient=new THREE.Color(0xffffff);this.emissive=new THREE.Color(0x000000);this.wrapAround=false;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=null;this.lightMap=null;this.specularMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.clone=function(){var material=new THREE.MeshLambertMaterial();THREE.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.ambient.copy(this.ambient);material.emissive.copy(this.emissive);material.wrapAround=this.wrapAround;material.wrapRGB.copy(this.wrapRGB);material.map=this.map;material.lightMap=this.lightMap;material.specularMap=this.specularMap;material.envMap=this.envMap;material.combine=this.combine;material.reflectivity=this.reflectivity;material.refractionRatio=this.refractionRatio;material.fog=this.fog;material.shading=this.shading;material.wireframe=this.wireframe;material.wireframeLinewidth=this.wireframeLinewidth;material.wireframeLinecap=this.wireframeLinecap;material.wireframeLinejoin=this.wireframeLinejoin;material.vertexColors=this.vertexColors;material.skinning=this.skinning;material.morphTargets=this.morphTargets;material.morphNormals=this.morphNormals;return material;};THREE.MeshPhongMaterial=function(parameters){THREE.Material.call(this);this.color=new THREE.Color(0xffffff);this.ambient=new THREE.Color(0x000000);this.emissive=new THREE.Color(0x000000);this.specular=new THREE.Color(0xffffff);this.shininess=30;this.wrapAround=false;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=null;this.opacityMap=null;this.lightMap=null;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.specularMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.clone=function(){var material=new THREE.MeshPhongMaterial();THREE.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.ambient.copy(this.ambient);material.emissive.copy(this.emissive);material.specular.copy(this.specular);material.shininess=this.shininess;material.wrapAround=this.wrapAround;material.wrapRGB.copy(this.wrapRGB);material.map=this.map;material.opacityMap=this.opacityMap;material.lightMap=this.lightMap;material.emissiveMap=this.emissiveMap;material.bumpMap=this.bumpMap;material.bumpScale=this.bumpScale;material.normalMap=this.normalMap;material.normalScale.copy(this.normalScale);material.specularMap=this.specularMap;material.envMap=this.envMap;material.combine=this.combine;material.reflectivity=this.reflectivity;material.refractionRatio=this.refractionRatio;material.fog=this.fog;material.shading=this.shading;material.wireframe=this.wireframe;material.wireframeLinewidth=this.wireframeLinewidth;material.wireframeLinecap=this.wireframeLinecap;material.wireframeLinejoin=this.wireframeLinejoin;material.vertexColors=this.vertexColors;material.skinning=this.skinning;material.morphTargets=this.morphTargets;material.morphNormals=this.morphNormals;return material;};THREE.MeshPhysicalMaterial=function(parameters){THREE.Material.call(this);this.color=new THREE.Color(0xffffff);this.map=null;this.opacityMap=null;this.fog=true;this.falloff=false;this.falloffColor=new THREE.Color(0xffffff);this.falloffMap=null;this.falloffBlendParams=new THREE.Vector4(1.0,0.0,0.0,1.0);this.specular=new THREE.Color(0xffffff);this.specularMap=null;this.roughness=0.5;this.roughnessMap=null;this.metallic=0.0;this.metallicMap=null;this.clearCoat=0.0;this.clearCoatRoughness=0.2;this.anisotropy=0.0;this.anisotropyMap=null;this.anisotropyRotation=0.0;this.anisotropyRotationMap=null;this.translucency=new THREE.Color(0x000000);this.translucencyMap=null;this.translucencyNormalAlpha=0.75;this.translucencyNormalPower=1.0;this.translucencyViewPower=2.0;this.translucencyViewAlpha=0.75;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.emissive=new THREE.Color(0x000000);this.emissiveMap=null;this.ambient=new THREE.Color(0x000000);this.lightMap=null;this.envMap=null;this.diffuseEnvMap=null;this.combine=THREE.AddOperation;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.blending=THREE.CustomBlending;this.blendSrc=THREE.OneFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);};THREE.MeshPhysicalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhysicalMaterial.prototype.clone=function(){var material=new THREE.MeshPhysicalMaterial();THREE.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.map=this.map;material.opacityMap=this.opacityMap;material.fog=this.fog;material.falloff=this.falloff;material.falloffColor.copy(this.falloffColor);material.falloffMap=this.falloffMap;material.falloffBlendParams.copy(this.falloffBlendParams);material.specular.copy(this.specular);material.specularMap=this.specularMap;material.roughness=this.roughness;material.roughnessMap=this.roughnessMap;material.metallic=this.metallic;material.metallicMap=this.metallicMap;material.shading=this.shading;material.translucency.copy(this.translucency);material.translucencyMap=this.translucencyMap;material.translucencyNormalAlpha=this.translucencyNormalAlpha;material.translucencyNormalPower=this.translucencyNormalPower;material.translucencyViewPower=this.translucencyViewPower;material.translucencyViewAlpha=this.translucencyViewAlpha;material.bumpMap=this.bumpMap;material.bumpScale=this.bumpScale;material.normalMap=this.normalMap;material.normalScale.copy(this.normalScale);material.emissive.copy(this.emissive);material.emissiveMap=this.emissiveMap;material.ambient.copy(this.ambient);material.lightMap=this.lightMap;material.envMap=this.envMap;material.diffuseEnvMap=this.diffuseEnvMap;material.combine=this.combine;material.wireframe=this.wireframe;material.wireframeLinewidth=this.wireframeLinewidth;material.wireframeLinecap=this.wireframeLinecap;material.wireframeLinejoin=this.wireframeLinejoin;material.vertexColors=this.vertexColors;material.skinning=this.skinning;material.morphTargets=this.morphTargets;material.morphNormals=this.morphNormals;return material;};THREE.MeshDepthMaterial=function(parameters){THREE.Material.call(this);this.wireframe=false;this.wireframeLinewidth=1;this.setValues(parameters);};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var material=new THREE.MeshDepthMaterial();THREE.Material.prototype.clone.call(this,material);material.wireframe=this.wireframe;material.wireframeLinewidth=this.wireframeLinewidth;return material;};THREE.MeshNormalMaterial=function(parameters){THREE.Material.call(this,parameters);this.shading=THREE.FlatShading;this.wireframe=false;this.wireframeLinewidth=1;this.morphTargets=false;this.setValues(parameters);};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var material=new THREE.MeshNormalMaterial();THREE.Material.prototype.clone.call(this,material);material.shading=this.shading;material.wireframe=this.wireframe;material.wireframeLinewidth=this.wireframeLinewidth;return material;};THREE.MeshFaceMaterial=function(materials){this.materials=materials instanceof Array?materials:[];};THREE.MeshFaceMaterial.prototype.clone=function(){var material=new THREE.MeshFaceMaterial();for(var i=0;i<this.materials.length;i++){material.materials.push(this.materials[i].clone());}return material;};THREE.ParticleSystemMaterial=function(parameters){THREE.Material.call(this);this.color=new THREE.Color(0xffffff);this.map=null;this.size=1;this.sizeAttenuation=true;this.vertexColors=false;this.fog=true;this.setValues(parameters);};THREE.ParticleSystemMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleSystemMaterial.prototype.clone=function(){var material=new THREE.ParticleSystemMaterial();THREE.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.map=this.map;material.size=this.size;material.sizeAttenuation=this.sizeAttenuation;material.vertexColors=this.vertexColors;material.fog=this.fog;return material;};THREE.ParticleBasicMaterial=THREE.ParticleSystemMaterial;THREE.ShaderMaterial=function(parameters){THREE.Material.call(this);this.shaderID=null;this.fragmentShader=\"void main() {}\";this.vertexShader=\"void main() {}\";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.lights=false;this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.defaultAttributeValues={\"color\":[1,1,1],\"uv\":[0,0],\"uv2\":[0,0]};this.index0AttributeName=\"position\";this.setValues(parameters);};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.clone=function(){var material=new THREE.ShaderMaterial();THREE.Material.prototype.clone.call(this,material);material.fragmentShader=this.fragmentShader;material.vertexShader=this.vertexShader;material.uniforms=THREE.UniformsUtils.clone(this.uniforms);material.attributes=this.attributes;material.defines=this.defines;material.shading=this.shading;material.wireframe=this.wireframe;material.wireframeLinewidth=this.wireframeLinewidth;material.fog=this.fog;material.lights=this.lights;material.vertexColors=this.vertexColors;material.skinning=this.skinning;material.morphTargets=this.morphTargets;material.morphNormals=this.morphNormals;return material;};THREE.SpriteMaterial=function(parameters){THREE.Material.call(this);this.color=new THREE.Color(0xffffff);this.map=null;this.rotation=0;this.fog=false;this.setValues(parameters);};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.clone=function(){var material=new THREE.SpriteMaterial();THREE.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.map=this.map;material.rotation=this.rotation;material.fog=this.fog;return material;};THREE.SpriteCanvasMaterial=function(parameters){THREE.Material.call(this);this.color=new THREE.Color(0xffffff);this.program=function(context,color){};this.setValues(parameters);};THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteCanvasMaterial.prototype.clone=function(){var material=new THREE.SpriteCanvasMaterial();THREE.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.program=this.program;return material;};THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial;THREE.Texture=function(image,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){this.id=THREE.TextureIdCount++;this.uuid=THREE.Math.generateUUID();this.name='';this.image=image;this.mipmaps=[];this.mapping=mapping!==undefined?mapping:new THREE.UVMapping();this.wrapS=wrapS!==undefined?wrapS:THREE.ClampToEdgeWrapping;this.wrapT=wrapT!==undefined?wrapT:THREE.ClampToEdgeWrapping;this.magFilter=magFilter!==undefined?magFilter:THREE.LinearFilter;this.minFilter=minFilter!==undefined?minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=anisotropy!==undefined?anisotropy:1;this.format=format!==undefined?format:THREE.RGBAFormat;this.type=type!==undefined?type:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.invert=false;this.gainPivot=0.0;this.gain=1.0;this.brightness=0.0;this.encoding=THREE.sRGB;this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.unpackAlignment=4;this._needsUpdate=false;this.onUpdate=null;};THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate;},set needsUpdate(value){if(value===true)this.update();this._needsUpdate=value;},clone:function clone(texture){if(texture===undefined)texture=new THREE.Texture();texture.image=this.image;texture.mipmaps=this.mipmaps.slice(0);texture.mapping=this.mapping;texture.wrapS=this.wrapS;texture.wrapT=this.wrapT;texture.magFilter=this.magFilter;texture.minFilter=this.minFilter;texture.anisotropy=this.anisotropy;texture.format=this.format;texture.type=this.type;texture.offset.copy(this.offset);texture.repeat.copy(this.repeat);texture.invert=this.invert;texture.gainPivot=this.gainPivot;texture.gain=this.gain;texture.brightness=this.brightness;texture.encoding=this.encoding;texture.generateMipmaps=this.generateMipmaps;texture.premultiplyAlpha=this.premultiplyAlpha;texture.flipY=this.flipY;texture.unpackAlignment=this.unpackAlignment;return texture;},update:function update(){this.dispatchEvent({type:'update'});},dispose:function dispose(){this.dispatchEvent({type:'dispose'});}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CompressedTexture=function(mipmaps,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy){THREE.Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.image={width:width,height:height};this.mipmaps=mipmaps;this.generateMipmaps=false;};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var texture=new THREE.CompressedTexture();THREE.Texture.prototype.clone.call(this,texture);return texture;};THREE.DataTexture=function(data,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy){THREE.Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.image={data:data,width:width,height:height};};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var texture=new THREE.DataTexture();THREE.Texture.prototype.clone.call(this,texture);return texture;};THREE.ParticleSystem=function(geometry,material){THREE.Object3D.call(this);this.geometry=geometry!==undefined?geometry:new THREE.Geometry();this.material=material!==undefined?material:new THREE.ParticleSystemMaterial({color:Math.random()*0xffffff});this.sortParticles=false;this.frustumCulled=false;};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);THREE.ParticleSystem.prototype.clone=function(object){if(object===undefined)object=new THREE.ParticleSystem(this.geometry,this.material);object.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,object);return object;};THREE.Line=function(geometry,material,type){THREE.Object3D.call(this);this.geometry=geometry!==undefined?geometry:new THREE.Geometry();this.material=material!==undefined?material:new THREE.LineBasicMaterial({color:Math.random()*0xffffff});this.type=type!==undefined?type:THREE.LineStrip;};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.clone=function(object){if(object===undefined)object=new THREE.Line(this.geometry,this.material,this.type);THREE.Object3D.prototype.clone.call(this,object);return object;};THREE.Mesh=function(geometry,material){THREE.Object3D.call(this);this.geometry=geometry!==undefined?geometry:new THREE.Geometry();this.material=material!==undefined?material:new THREE.MeshBasicMaterial({color:Math.random()*0xffffff});this.updateMorphTargets();};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets!==undefined&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var m=0,ml=this.geometry.morphTargets.length;m<ml;m++){this.morphTargetInfluences.push(0);this.morphTargetDictionary[this.geometry.morphTargets[m].name]=m;}}};THREE.Mesh.prototype.getMorphTargetIndexByName=function(name){if(this.morphTargetDictionary[name]!==undefined){return this.morphTargetDictionary[name];}THREE.onwarning(\"THREE.Mesh.getMorphTargetIndexByName: morph target \"+name+\" does not exist. Returning 0.\");return 0;};THREE.Mesh.prototype.clone=function(object){if(object===undefined)object=new THREE.Mesh(this.geometry,this.material);THREE.Object3D.prototype.clone.call(this,object);return object;};THREE.Bone=function(belongsToSkin){THREE.Object3D.call(this);this.skin=belongsToSkin;this.skinMatrix=new THREE.Matrix4();};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(parentSkinMatrix,forceUpdate){if(this.matrixAutoUpdate){forceUpdate|=this.updateMatrix();}if(forceUpdate||this.matrixWorldNeedsUpdate){if(parentSkinMatrix){this.skinMatrix.multiplyMatrices(parentSkinMatrix,this.matrix);}else{this.skinMatrix.copy(this.matrix);}this.matrixWorldNeedsUpdate=false;forceUpdate=true;}var child,i,l=this.children.length;for(i=0;i<l;i++){this.children[i].update(this.skinMatrix,forceUpdate);}};THREE.SkinnedMesh=function(geometry,material,useVertexTexture){THREE.Mesh.call(this,geometry,material);this.useVertexTexture=useVertexTexture!==undefined?useVertexTexture:true;this.identityMatrix=new THREE.Matrix4();this.bones=[];this.boneMatrices=[];var b,bone,gbone,p,q,s;if(this.geometry&&this.geometry.bones!==undefined){for(b=0;b<this.geometry.bones.length;b++){gbone=this.geometry.bones[b];p=gbone.pos;q=gbone.rotq;s=gbone.scl;bone=this.addBone();bone.name=gbone.name;bone.position.set(p[0],p[1],p[2]);bone.quaternion.set(q[0],q[1],q[2],q[3]);if(s!==undefined){bone.scale.set(s[0],s[1],s[2]);}else{bone.scale.set(1,1,1);}}for(b=0;b<this.bones.length;b++){gbone=this.geometry.bones[b];bone=this.bones[b];if(gbone.parent===-1){this.add(bone);}else{this.bones[gbone.parent].add(bone);}}var nBones=this.bones.length;if(this.useVertexTexture){var size;if(nBones>256)size=64;else if(nBones>64)size=32;else if(nBones>16)size=16;else size=8;this.boneTextureWidth=size;this.boneTextureHeight=size;this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4);this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType);this.boneTexture.minFilter=THREE.NearestFilter;this.boneTexture.magFilter=THREE.NearestFilter;this.boneTexture.generateMipmaps=false;this.boneTexture.flipY=false;}else{this.boneMatrices=new Float32Array(16*nBones);}this.pose();}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(bone){if(bone===undefined){bone=new THREE.Bone(this);}this.bones.push(bone);return bone;};THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var offsetMatrix=new THREE.Matrix4();return function(force){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||force){if(this.parent){this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}else{this.matrixWorld.copy(this.matrix);}this.matrixWorldNeedsUpdate=false;force=true;}for(var i=0,l=this.children.length;i<l;i++){var child=this.children[i];if(child instanceof THREE.Bone){child.update(this.identityMatrix,false);}else{child.updateMatrixWorld(true);}}if(this.boneInverses==undefined){this.boneInverses=[];for(var b=0,bl=this.bones.length;b<bl;b++){var inverse=new THREE.Matrix4();inverse.getInverse(this.bones[b].skinMatrix);this.boneInverses.push(inverse);}}for(var b=0,bl=this.bones.length;b<bl;b++){offsetMatrix.multiplyMatrices(this.bones[b].skinMatrix,this.boneInverses[b]);offsetMatrix.flattenToArrayOffset(this.boneMatrices,b*16);}if(this.useVertexTexture){this.boneTexture.needsUpdate=true;}};}();THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(true);this.normalizeSkinWeights();};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry){for(var i=0;i<this.geometry.skinIndices.length;i++){var sw=this.geometry.skinWeights[i];var scale=1.0/sw.lengthManhattan();if(scale!==Infinity){sw.multiplyScalar(scale);}else{sw.set(1);}}}else{}};THREE.SkinnedMesh.prototype.clone=function(object){if(object===undefined){object=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture);}THREE.Mesh.prototype.clone.call(this,object);return object;};THREE.MorphAnimMesh=function(geometry,material){THREE.Mesh.call(this,geometry,material);this.duration=1000;this.mirroredLoop=false;this.time=0;this.lastKeyframe=0;this.currentKeyframe=0;this.direction=1;this.directionBackwards=false;this.setFrameRange(0,this.geometry.morphTargets.length-1);};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(start,end){this.startKeyframe=start;this.endKeyframe=end;this.length=this.endKeyframe-this.startKeyframe+1;};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=false;};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=true;};THREE.MorphAnimMesh.prototype.parseAnimations=function(){var geometry=this.geometry;if(!geometry.animations)geometry.animations={};var firstAnimation,animations=geometry.animations;var pattern=/([a-z]+)(\\d+)/;for(var i=0,il=geometry.morphTargets.length;i<il;i++){var morph=geometry.morphTargets[i];var parts=morph.name.match(pattern);if(parts&&parts.length>1){var label=parts[1];var num=parts[2];if(!animations[label])animations[label]={start:Infinity,end:-Infinity};var animation=animations[label];if(i<animation.start)animation.start=i;if(i>animation.end)animation.end=i;if(!firstAnimation)firstAnimation=label;}}geometry.firstAnimation=firstAnimation;};THREE.MorphAnimMesh.prototype.setAnimationLabel=function(label,start,end){if(!this.geometry.animations)this.geometry.animations={};this.geometry.animations[label]={start:start,end:end};};THREE.MorphAnimMesh.prototype.playAnimation=function(label,fps){var animation=this.geometry.animations[label];if(animation){this.setFrameRange(animation.start,animation.end);this.duration=1000*((animation.end-animation.start)/fps);this.time=0;}else{THREE.onwarning(\"animation[\"+label+\"] undefined\");}};THREE.MorphAnimMesh.prototype.updateAnimation=function(delta){var frameTime=this.duration/this.length;this.time+=this.direction*delta;if(this.mirroredLoop){if(this.time>this.duration||this.time<0){this.direction*=-1;if(this.time>this.duration){this.time=this.duration;this.directionBackwards=true;}if(this.time<0){this.time=0;this.directionBackwards=false;}}}else{this.time=this.time%this.duration;if(this.time<0)this.time+=this.duration;}var keyframe=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/frameTime),0,this.length-1);if(keyframe!==this.currentKeyframe){this.morphTargetInfluences[this.lastKeyframe]=0;this.morphTargetInfluences[this.currentKeyframe]=1;this.morphTargetInfluences[keyframe]=0;this.lastKeyframe=this.currentKeyframe;this.currentKeyframe=keyframe;}var mix=this.time%frameTime/frameTime;if(this.directionBackwards){mix=1-mix;}this.morphTargetInfluences[this.currentKeyframe]=mix;this.morphTargetInfluences[this.lastKeyframe]=1-mix;};THREE.MorphAnimMesh.prototype.clone=function(object){if(object===undefined)object=new THREE.MorphAnimMesh(this.geometry,this.material);object.duration=this.duration;object.mirroredLoop=this.mirroredLoop;object.time=this.time;object.lastKeyframe=this.lastKeyframe;object.currentKeyframe=this.currentKeyframe;object.direction=this.direction;object.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,object);return object;};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[];};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(object,distance){if(distance===undefined)distance=0;distance=Math.abs(distance);for(var l=0;l<this.objects.length;l++){if(distance<this.objects[l].distance){break;}}this.objects.splice(l,0,{distance:distance,object:object});this.add(object);};THREE.LOD.prototype.getObjectForDistance=function(distance){for(var i=1,l=this.objects.length;i<l;i++){if(distance<this.objects[i].distance){break;}}return this.objects[i-1].object;};THREE.LOD.prototype.update=function(){var v1=new THREE.Vector3();var v2=new THREE.Vector3();return function(camera){if(this.objects.length>1){v1.setFromMatrixPosition(camera.matrixWorld);v2.setFromMatrixPosition(this.matrixWorld);var distance=v1.distanceTo(v2);this.objects[0].object.visible=true;for(var i=1,l=this.objects.length;i<l;i++){if(distance>=this.objects[i].distance){this.objects[i-1].object.visible=false;this.objects[i].object.visible=true;}else{break;}}for(;i<l;i++){this.objects[i].object.visible=false;}}};}();THREE.LOD.prototype.clone=function(object){if(object===undefined)object=new THREE.LOD();THREE.Object3D.prototype.clone.call(this,object);for(var i=0,l=this.objects.length;i<l;i++){var x=this.objects[i].object.clone();x.visible=i===0;object.addLevel(x,this.objects[i].distance);}return object;};THREE.Sprite=function(){var geometry=new THREE.Geometry2(3);geometry.vertices.set([-0.5,-0.5,0,0.5,-0.5,0,0.5,0.5,0]);return function(material){THREE.Object3D.call(this);this.geometry=geometry;this.material=material!==undefined?material:new THREE.SpriteMaterial();};}();THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true;};THREE.Sprite.prototype.clone=function(object){if(object===undefined)object=new THREE.Sprite(this.material);THREE.Object3D.prototype.clone.call(this,object);return object;};THREE.Particle=THREE.Sprite;THREE.Scene=function(){THREE.Object3D.call(this);this.fog=null;this.overrideMaterial=null;this.autoUpdate=true;this.matrixAutoUpdate=false;this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[];};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.__addObject=function(object){if(object instanceof THREE.Light){if(this.__lights.indexOf(object)===-1){this.__lights.push(object);}if(object.target&&object.target.parent===undefined){this.add(object.target);}}else if(!(object instanceof THREE.Camera||object instanceof THREE.Bone)){this.__objectsAdded.push(object);var i=this.__objectsRemoved.indexOf(object);if(i!==-1){this.__objectsRemoved.splice(i,1);}}this.dispatchEvent({type:'objectAdded',object:object});object.dispatchEvent({type:'addedToScene',scene:this});for(var c=0;c<object.children.length;c++){this.__addObject(object.children[c]);}};THREE.Scene.prototype.__removeObject=function(object){if(object instanceof THREE.Light){var i=this.__lights.indexOf(object);if(i!==-1){this.__lights.splice(i,1);}if(object.shadowCascadeArray){for(var x=0;x<object.shadowCascadeArray.length;x++){this.__removeObject(object.shadowCascadeArray[x]);}}}else if(!(object instanceof THREE.Camera)){this.__objectsRemoved.push(object);var i=this.__objectsAdded.indexOf(object);if(i!==-1){this.__objectsAdded.splice(i,1);}}this.dispatchEvent({type:'objectRemoved',object:object});object.dispatchEvent({type:'removedFromScene',scene:this});for(var c=0;c<object.children.length;c++){this.__removeObject(object.children[c]);}};THREE.Scene.prototype.clone=function(object){if(object===undefined)object=new THREE.Scene();THREE.Object3D.prototype.clone.call(this,object);if(this.fog!==null)object.fog=this.fog.clone();if(this.overrideMaterial!==null)object.overrideMaterial=this.overrideMaterial.clone();object.autoUpdate=this.autoUpdate;object.matrixAutoUpdate=this.matrixAutoUpdate;return object;};THREE.Fog=function(color,near,far){this.name='';this.color=new THREE.Color(color);this.near=near!==undefined?near:1;this.far=far!==undefined?far:1000;};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far);};THREE.FogExp2=function(color,density){this.name='';this.color=new THREE.Color(color);this.density=density!==undefined?density:0.00025;};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density);};THREE.CanvasRenderer=function(parameters){console.log('THREE.CanvasRenderer',THREE.REVISION);var smoothstep=THREE.Math.smoothstep;parameters=parameters||{};var _this=this,_renderData,_elements,_lights,_projector=new THREE.Projector(),_canvas=parameters.canvas!==undefined?parameters.canvas:document.createElement('canvas'),_canvasWidth=_canvas.width,_canvasHeight=_canvas.height,_canvasWidthHalf=Math.floor(_canvasWidth/2),_canvasHeightHalf=Math.floor(_canvasHeight/2),_context=_canvas.getContext('2d',{alpha:parameters.alpha===true}),_clearColor=new THREE.Color(0x000000),_clearAlpha=0,_contextGlobalAlpha=1,_contextGlobalCompositeOperation=0,_contextStrokeStyle=null,_contextFillStyle=null,_contextLineWidth=null,_contextLineCap=null,_contextLineJoin=null,_contextDashSize=null,_contextGapSize=0,_camera,_v1,_v2,_v3,_v4,_v5=new THREE.RenderableVertex(),_v6=new THREE.RenderableVertex(),_v1x,_v1y,_v2x,_v2y,_v3x,_v3y,_v4x,_v4y,_v5x,_v5y,_v6x,_v6y,_color=new THREE.Color(),_color1=new THREE.Color(),_color2=new THREE.Color(),_color3=new THREE.Color(),_color4=new THREE.Color(),_diffuseColor=new THREE.Color(),_emissiveColor=new THREE.Color(),_lightColor=new THREE.Color(),_patterns={},_near,_far,_image,_uvs,_uv1x,_uv1y,_uv2x,_uv2y,_uv3x,_uv3y,_clipBox=new THREE.Box2(),_clearBox=new THREE.Box2(),_elemBox=new THREE.Box2(),_ambientLight=new THREE.Color(),_directionalLights=new THREE.Color(),_pointLights=new THREE.Color(),_vector3=new THREE.Vector3(),_normal=new THREE.Vector3(),_normalViewMatrix=new THREE.Matrix3(),_pixelMap,_pixelMapContext,_pixelMapImage,_pixelMapData,_gradientMap,_gradientMapContext,_gradientMapQuality=16;_pixelMap=document.createElement('canvas');_pixelMap.width=_pixelMap.height=2;_pixelMapContext=_pixelMap.getContext('2d');_pixelMapContext.fillStyle='rgba(0,0,0,1)';_pixelMapContext.fillRect(0,0,2,2);_pixelMapImage=_pixelMapContext.getImageData(0,0,2,2);_pixelMapData=_pixelMapImage.data;_gradientMap=document.createElement('canvas');_gradientMap.width=_gradientMap.height=_gradientMapQuality;_gradientMapContext=_gradientMap.getContext('2d');_gradientMapContext.translate(-_gradientMapQuality/2,-_gradientMapQuality/2);_gradientMapContext.scale(_gradientMapQuality,_gradientMapQuality);_gradientMapQuality--;if(_context.setLineDash===undefined){if(_context.mozDash!==undefined){_context.setLineDash=function(values){_context.mozDash=values[0]!==null?values:null;};}else{_context.setLineDash=function(){};}}this.domElement=_canvas;this.devicePixelRatio=parameters.devicePixelRatio!==undefined?parameters.devicePixelRatio:self.devicePixelRatio!==undefined?self.devicePixelRatio:1;this.autoClear=true;this.sortObjects=true;this.sortElements=true;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.setSize=function(width,height,updateStyle){_canvasWidth=width*this.devicePixelRatio;_canvasHeight=height*this.devicePixelRatio;_canvasWidthHalf=Math.floor(_canvasWidth/2);_canvasHeightHalf=Math.floor(_canvasHeight/2);_canvas.width=_canvasWidth;_canvas.height=_canvasHeight;if(this.devicePixelRatio!==1&&updateStyle!==false){_canvas.style.width=width+'px';_canvas.style.height=height+'px';}_clipBox.min.set(-_canvasWidthHalf,-_canvasHeightHalf),_clipBox.max.set(_canvasWidthHalf,_canvasHeightHalf);_clearBox.min.set(-_canvasWidthHalf,-_canvasHeightHalf);_clearBox.max.set(_canvasWidthHalf,_canvasHeightHalf);_contextGlobalAlpha=1;_contextGlobalCompositeOperation=0;_contextStrokeStyle=null;_contextFillStyle=null;_contextLineWidth=null;_contextLineCap=null;_contextLineJoin=null;};this.setClearColor=function(color,alpha){_clearColor.set(color);_clearAlpha=alpha!==undefined?alpha:1;_clearBox.min.set(-_canvasWidthHalf,-_canvasHeightHalf);_clearBox.max.set(_canvasWidthHalf,_canvasHeightHalf);};this.setClearColorHex=function(hex,alpha){THREE.onwarning('DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.');this.setClearColor(hex,alpha);};this.getMaxAnisotropy=function(){return 0;};this.clear=function(){_context.setTransform(1,0,0,-1,_canvasWidthHalf,_canvasHeightHalf);if(_clearBox.empty()===false){_clearBox.intersect(_clipBox);_clearBox.expandByScalar(2);if(_clearAlpha<1){_context.clearRect(_clearBox.min.x|0,_clearBox.min.y|0,_clearBox.max.x-_clearBox.min.x|0,_clearBox.max.y-_clearBox.min.y|0);}if(_clearAlpha>0){setBlending(THREE.NormalBlending);setOpacity(1);setFillStyle('rgba('+Math.floor(_clearColor.r*255)+','+Math.floor(_clearColor.g*255)+','+Math.floor(_clearColor.b*255)+','+_clearAlpha+')');_context.fillRect(_clearBox.min.x|0,_clearBox.min.y|0,_clearBox.max.x-_clearBox.min.x|0,_clearBox.max.y-_clearBox.min.y|0);}_clearBox.makeEmpty();}};this.clearColor=function(){};this.clearDepth=function(){};this.clearStencil=function(){};this.render=function(scene,camera){if(camera instanceof THREE.Camera===false){THREE.onerror('THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.');return;}if(this.autoClear===true)this.clear();_context.setTransform(1,0,0,-1,_canvasWidthHalf,_canvasHeightHalf);_this.info.render.vertices=0;_this.info.render.faces=0;_renderData=_projector.projectScene(scene,camera,this.sortObjects,this.sortElements);_elements=_renderData.elements;_lights=_renderData.lights;_camera=camera;_normalViewMatrix.getNormalMatrix(camera.matrixWorldInverse);calculateLights();for(var e=0,el=_elements.length;e<el;e++){var element=_elements[e];var material=element.material;if(material===undefined||material.visible===false)continue;_elemBox.makeEmpty();if(element instanceof THREE.RenderableSprite){_v1=element;_v1.x*=_canvasWidthHalf;_v1.y*=_canvasHeightHalf;renderSprite(_v1,element,material);}else if(element instanceof THREE.RenderableLine){_v1=element.v1;_v2=element.v2;_v1.positionScreen.x*=_canvasWidthHalf;_v1.positionScreen.y*=_canvasHeightHalf;_v2.positionScreen.x*=_canvasWidthHalf;_v2.positionScreen.y*=_canvasHeightHalf;_elemBox.setFromPoints([_v1.positionScreen,_v2.positionScreen]);if(_clipBox.isIntersectionBox(_elemBox)===true){renderLine(_v1,_v2,element,material);}}else if(element instanceof THREE.RenderableFace){_v1=element.v1;_v2=element.v2;_v3=element.v3;if(_v1.positionScreen.z<-1||_v1.positionScreen.z>1)continue;if(_v2.positionScreen.z<-1||_v2.positionScreen.z>1)continue;if(_v3.positionScreen.z<-1||_v3.positionScreen.z>1)continue;_v1.positionScreen.x*=_canvasWidthHalf;_v1.positionScreen.y*=_canvasHeightHalf;_v2.positionScreen.x*=_canvasWidthHalf;_v2.positionScreen.y*=_canvasHeightHalf;_v3.positionScreen.x*=_canvasWidthHalf;_v3.positionScreen.y*=_canvasHeightHalf;if(material.overdraw>0){expand(_v1.positionScreen,_v2.positionScreen,material.overdraw);expand(_v2.positionScreen,_v3.positionScreen,material.overdraw);expand(_v3.positionScreen,_v1.positionScreen,material.overdraw);}_elemBox.setFromPoints([_v1.positionScreen,_v2.positionScreen,_v3.positionScreen]);if(_clipBox.isIntersectionBox(_elemBox)===true){renderFace3(_v1,_v2,_v3,0,1,2,element,material);}}_clearBox.union(_elemBox);}_context.setTransform(1,0,0,1,0,0);};function calculateLights(){_ambientLight.setRGB(0,0,0);_directionalLights.setRGB(0,0,0);_pointLights.setRGB(0,0,0);for(var l=0,ll=_lights.length;l<ll;l++){var light=_lights[l];var lightColor=light.color;if(light instanceof THREE.AmbientLight){_ambientLight.add(lightColor);}else if(light instanceof THREE.DirectionalLight){_directionalLights.add(lightColor);}else if(light instanceof THREE.PointLight){_pointLights.add(lightColor);}}}function calculateLight(position,normal,color){for(var l=0,ll=_lights.length;l<ll;l++){var light=_lights[l];_lightColor.copy(light.color);if(light instanceof THREE.DirectionalLight){var lightPosition=_vector3.setFromMatrixPosition(light.matrixWorld).normalize();var amount=normal.dot(lightPosition);if(amount<=0)continue;amount*=light.intensity;color.add(_lightColor.multiplyScalar(amount));}else if(light instanceof THREE.PointLight){var lightPosition=_vector3.setFromMatrixPosition(light.matrixWorld);var amount=normal.dot(_vector3.subVectors(lightPosition,position).normalize());if(amount<=0)continue;amount*=light.distance==0?1:1-Math.min(position.distanceTo(lightPosition)/light.distance,1);if(amount==0)continue;amount*=light.intensity;color.add(_lightColor.multiplyScalar(amount));}}}function renderSprite(v1,element,material){setOpacity(material.opacity);setBlending(material.blending);var scaleX=element.scale.x*_canvasWidthHalf;var scaleY=element.scale.y*_canvasHeightHalf;var dist=0.5*Math.sqrt(scaleX*scaleX+scaleY*scaleY);_elemBox.min.set(v1.x-dist,v1.y-dist);_elemBox.max.set(v1.x+dist,v1.y+dist);if(material instanceof THREE.SpriteMaterial||material instanceof THREE.ParticleSystemMaterial){var texture=material.map;if(texture!==null){if(texture.hasEventListener('update',onTextureUpdate)===false){if(texture.image!==undefined&&texture.image.width>0){textureToPattern(texture);}texture.addEventListener('update',onTextureUpdate);}var pattern=_patterns[texture.id];if(pattern!==undefined){setFillStyle(pattern);}else{setFillStyle('rgba( 0, 0, 0, 1 )');}var bitmap=texture.image;var ox=bitmap.width*texture.offset.x;var oy=bitmap.height*texture.offset.y;var sx=bitmap.width*texture.repeat.x;var sy=bitmap.height*texture.repeat.y;var cx=scaleX/sx;var cy=scaleY/sy;_context.save();_context.translate(v1.x,v1.y);if(material.rotation!==0)_context.rotate(material.rotation);_context.translate(-scaleX/2,-scaleY/2);_context.scale(cx,cy);_context.translate(-ox,-oy);_context.fillRect(ox,oy,sx,sy);_context.restore();}else{setFillStyle(material.color.getStyle());_context.save();_context.translate(v1.x,v1.y);if(material.rotation!==0)_context.rotate(material.rotation);_context.scale(scaleX,-scaleY);_context.fillRect(-0.5,-0.5,1,1);_context.restore();}}else if(material instanceof THREE.SpriteCanvasMaterial){setStrokeStyle(material.color.getStyle());setFillStyle(material.color.getStyle());_context.save();_context.translate(v1.x,v1.y);if(material.rotation!==0)_context.rotate(material.rotation);_context.scale(scaleX,scaleY);material.program(_context);_context.restore();}}function renderLine(v1,v2,element,material){setOpacity(material.opacity);setBlending(material.blending);_context.beginPath();_context.moveTo(v1.positionScreen.x,v1.positionScreen.y);_context.lineTo(v2.positionScreen.x,v2.positionScreen.y);if(material instanceof THREE.LineBasicMaterial){setLineWidth(material.linewidth);setLineCap(material.linecap);setLineJoin(material.linejoin);if(material.vertexColors!==THREE.VertexColors){setStrokeStyle(material.color.getStyle());}else{var colorStyle1=element.vertexColors[0].getStyle();var colorStyle2=element.vertexColors[1].getStyle();if(colorStyle1===colorStyle2){setStrokeStyle(colorStyle1);}else{try{var grad=_context.createLinearGradient(v1.positionScreen.x,v1.positionScreen.y,v2.positionScreen.x,v2.positionScreen.y);grad.addColorStop(0,colorStyle1);grad.addColorStop(1,colorStyle2);}catch(exception){grad=colorStyle1;}setStrokeStyle(grad);}}_context.stroke();_elemBox.expandByScalar(material.linewidth*2);}else if(material instanceof THREE.LineDashedMaterial){setLineWidth(material.linewidth);setLineCap(material.linecap);setLineJoin(material.linejoin);setStrokeStyle(material.color.getStyle());setDashAndGap(material.dashSize,material.gapSize);_context.stroke();_elemBox.expandByScalar(material.linewidth*2);setDashAndGap(null,null);}}function renderFace3(v1,v2,v3,uv1,uv2,uv3,element,material){_this.info.render.vertices+=3;_this.info.render.faces++;setOpacity(material.opacity);setBlending(material.blending);_v1x=v1.positionScreen.x;_v1y=v1.positionScreen.y;_v2x=v2.positionScreen.x;_v2y=v2.positionScreen.y;_v3x=v3.positionScreen.x;_v3y=v3.positionScreen.y;drawTriangle(_v1x,_v1y,_v2x,_v2y,_v3x,_v3y);if((material instanceof THREE.MeshLambertMaterial||material instanceof THREE.MeshPhongMaterial||material instanceof THREE.MeshPhysicalMaterial)&&material.map===null){_diffuseColor.copy(material.color);_emissiveColor.copy(material.emissive);if(material.vertexColors===THREE.FaceColors){_diffuseColor.multiply(element.color);}if(material.wireframe===false&&material.shading===THREE.SmoothShading&&element.vertexNormalsLength===3){_color1.copy(_ambientLight);_color2.copy(_ambientLight);_color3.copy(_ambientLight);calculateLight(element.v1.positionWorld,element.vertexNormalsModel[0],_color1);calculateLight(element.v2.positionWorld,element.vertexNormalsModel[1],_color2);calculateLight(element.v3.positionWorld,element.vertexNormalsModel[2],_color3);_color1.multiply(_diffuseColor).add(_emissiveColor);_color2.multiply(_diffuseColor).add(_emissiveColor);_color3.multiply(_diffuseColor).add(_emissiveColor);_color4.addColors(_color2,_color3).multiplyScalar(0.5);_image=getGradientTexture(_color1,_color2,_color3,_color4);clipImage(_v1x,_v1y,_v2x,_v2y,_v3x,_v3y,0,0,1,0,0,1,_image);}else{_color.copy(_ambientLight);calculateLight(element.centroidModel,element.normalModel,_color);_color.multiply(_diffuseColor).add(_emissiveColor);material.wireframe===true?strokePath(_color,material.wireframeLinewidth,material.wireframeLinecap,material.wireframeLinejoin):fillPath(_color);}}else if(material instanceof THREE.MeshBasicMaterial||material instanceof THREE.MeshLambertMaterial||material instanceof THREE.MeshPhongMaterial){if(material.map!==null){if(material.map.mapping instanceof THREE.UVMapping){_uvs=element.uvs[0];patternPath(_v1x,_v1y,_v2x,_v2y,_v3x,_v3y,_uvs[uv1].x,_uvs[uv1].y,_uvs[uv2].x,_uvs[uv2].y,_uvs[uv3].x,_uvs[uv3].y,material.map);}}else if(material.envMap!==null){if(material.envMap.mapping instanceof THREE.SphericalReflectionMapping){_normal.copy(element.vertexNormalsModel[uv1]).applyMatrix3(_normalViewMatrix);_uv1x=0.5*_normal.x+0.5;_uv1y=0.5*_normal.y+0.5;_normal.copy(element.vertexNormalsModel[uv2]).applyMatrix3(_normalViewMatrix);_uv2x=0.5*_normal.x+0.5;_uv2y=0.5*_normal.y+0.5;_normal.copy(element.vertexNormalsModel[uv3]).applyMatrix3(_normalViewMatrix);_uv3x=0.5*_normal.x+0.5;_uv3y=0.5*_normal.y+0.5;patternPath(_v1x,_v1y,_v2x,_v2y,_v3x,_v3y,_uv1x,_uv1y,_uv2x,_uv2y,_uv3x,_uv3y,material.envMap);}}else{_color.copy(material.color);if(material.vertexColors===THREE.FaceColors){_color.multiply(element.color);}material.wireframe===true?strokePath(_color,material.wireframeLinewidth,material.wireframeLinecap,material.wireframeLinejoin):fillPath(_color);}}else if(material instanceof THREE.MeshDepthMaterial){_near=_camera.near;_far=_camera.far;_color1.r=_color1.g=_color1.b=1-smoothstep(v1.positionScreen.z*v1.positionScreen.w,_near,_far);_color2.r=_color2.g=_color2.b=1-smoothstep(v2.positionScreen.z*v2.positionScreen.w,_near,_far);_color3.r=_color3.g=_color3.b=1-smoothstep(v3.positionScreen.z*v3.positionScreen.w,_near,_far);_color4.addColors(_color2,_color3).multiplyScalar(0.5);_image=getGradientTexture(_color1,_color2,_color3,_color4);clipImage(_v1x,_v1y,_v2x,_v2y,_v3x,_v3y,0,0,1,0,0,1,_image);}else if(material instanceof THREE.MeshNormalMaterial){if(material.shading===THREE.FlatShading){_normal.copy(element.normalModel).applyMatrix3(_normalViewMatrix);_color.setRGB(_normal.x,_normal.y,_normal.z).multiplyScalar(0.5).addScalar(0.5);material.wireframe===true?strokePath(_color,material.wireframeLinewidth,material.wireframeLinecap,material.wireframeLinejoin):fillPath(_color);}else if(material.shading===THREE.SmoothShading){_normal.copy(element.vertexNormalsModel[uv1]).applyMatrix3(_normalViewMatrix);_color1.setRGB(_normal.x,_normal.y,_normal.z).multiplyScalar(0.5).addScalar(0.5);_normal.copy(element.vertexNormalsModel[uv2]).applyMatrix3(_normalViewMatrix);_color2.setRGB(_normal.x,_normal.y,_normal.z).multiplyScalar(0.5).addScalar(0.5);_normal.copy(element.vertexNormalsModel[uv3]).applyMatrix3(_normalViewMatrix);_color3.setRGB(_normal.x,_normal.y,_normal.z).multiplyScalar(0.5).addScalar(0.5);_color4.addColors(_color2,_color3).multiplyScalar(0.5);_image=getGradientTexture(_color1,_color2,_color3,_color4);clipImage(_v1x,_v1y,_v2x,_v2y,_v3x,_v3y,0,0,1,0,0,1,_image);}}}function drawTriangle(x0,y0,x1,y1,x2,y2){_context.beginPath();_context.moveTo(x0,y0);_context.lineTo(x1,y1);_context.lineTo(x2,y2);_context.closePath();}function strokePath(color,linewidth,linecap,linejoin){setLineWidth(linewidth);setLineCap(linecap);setLineJoin(linejoin);setStrokeStyle(color.getStyle());_context.stroke();_elemBox.expandByScalar(linewidth*2);}function fillPath(color){setFillStyle(color.getStyle());_context.fill();}function onTextureUpdate(event){textureToPattern(event.target);}function textureToPattern(texture){var repeatX=texture.wrapS===THREE.RepeatWrapping;var repeatY=texture.wrapT===THREE.RepeatWrapping;var image=texture.image;var canvas=document.createElement('canvas');canvas.width=image.width;canvas.height=image.height;var context=canvas.getContext('2d');context.setTransform(1,0,0,-1,0,image.height);context.drawImage(image,0,0);_patterns[texture.id]=_context.createPattern(canvas,repeatX===true&&repeatY===true?'repeat':repeatX===true&&repeatY===false?'repeat-x':repeatX===false&&repeatY===true?'repeat-y':'no-repeat');}function patternPath(x0,y0,x1,y1,x2,y2,u0,v0,u1,v1,u2,v2,texture){if(texture instanceof THREE.DataTexture)return;if(texture.hasEventListener('update',onTextureUpdate)===false){if(texture.image!==undefined&&texture.image.width>0){textureToPattern(texture);}texture.addEventListener('update',onTextureUpdate);}var pattern=_patterns[texture.id];if(pattern!==undefined){setFillStyle(pattern);}else{setFillStyle('rgba(0,0,0,1)');_context.fill();return;}var a,b,c,d,e,f,det,idet,offsetX=texture.offset.x/texture.repeat.x,offsetY=texture.offset.y/texture.repeat.y,width=texture.image.width*texture.repeat.x,height=texture.image.height*texture.repeat.y;u0=(u0+offsetX)*width;v0=(v0+offsetY)*height;u1=(u1+offsetX)*width;v1=(v1+offsetY)*height;u2=(u2+offsetX)*width;v2=(v2+offsetY)*height;x1-=x0;y1-=y0;x2-=x0;y2-=y0;u1-=u0;v1-=v0;u2-=u0;v2-=v0;det=u1*v2-u2*v1;if(det===0)return;idet=1/det;a=(v2*x1-v1*x2)*idet;b=(v2*y1-v1*y2)*idet;c=(u1*x2-u2*x1)*idet;d=(u1*y2-u2*y1)*idet;e=x0-a*u0-c*v0;f=y0-b*u0-d*v0;_context.save();_context.transform(a,b,c,d,e,f);_context.fill();_context.restore();}function clipImage(x0,y0,x1,y1,x2,y2,u0,v0,u1,v1,u2,v2,image){var a,b,c,d,e,f,det,idet,width=image.width-1,height=image.height-1;u0*=width;v0*=height;u1*=width;v1*=height;u2*=width;v2*=height;x1-=x0;y1-=y0;x2-=x0;y2-=y0;u1-=u0;v1-=v0;u2-=u0;v2-=v0;det=u1*v2-u2*v1;idet=1/det;a=(v2*x1-v1*x2)*idet;b=(v2*y1-v1*y2)*idet;c=(u1*x2-u2*x1)*idet;d=(u1*y2-u2*y1)*idet;e=x0-a*u0-c*v0;f=y0-b*u0-d*v0;_context.save();_context.transform(a,b,c,d,e,f);_context.clip();_context.drawImage(image,0,0);_context.restore();}function getGradientTexture(color1,color2,color3,color4){_pixelMapData[0]=color1.r*255|0;_pixelMapData[1]=color1.g*255|0;_pixelMapData[2]=color1.b*255|0;_pixelMapData[4]=color2.r*255|0;_pixelMapData[5]=color2.g*255|0;_pixelMapData[6]=color2.b*255|0;_pixelMapData[8]=color3.r*255|0;_pixelMapData[9]=color3.g*255|0;_pixelMapData[10]=color3.b*255|0;_pixelMapData[12]=color4.r*255|0;_pixelMapData[13]=color4.g*255|0;_pixelMapData[14]=color4.b*255|0;_pixelMapContext.putImageData(_pixelMapImage,0,0);_gradientMapContext.drawImage(_pixelMap,0,0);return _gradientMap;}function expand(v1,v2,pixels){var x=v2.x-v1.x,y=v2.y-v1.y,det=x*x+y*y,idet;if(det===0)return;idet=pixels/Math.sqrt(det);x*=idet;y*=idet;v2.x+=x;v2.y+=y;v1.x-=x;v1.y-=y;}function setOpacity(value){if(_contextGlobalAlpha!==value){_context.globalAlpha=value;_contextGlobalAlpha=value;}}function setBlending(value){if(_contextGlobalCompositeOperation!==value){if(value===THREE.NormalBlending){_context.globalCompositeOperation='source-over';}else if(value===THREE.AdditiveBlending){_context.globalCompositeOperation='lighter';}else if(value===THREE.SubtractiveBlending){_context.globalCompositeOperation='darker';}_contextGlobalCompositeOperation=value;}}function setLineWidth(value){if(_contextLineWidth!==value){_context.lineWidth=value;_contextLineWidth=value;}}function setLineCap(value){if(_contextLineCap!==value){_context.lineCap=value;_contextLineCap=value;}}function setLineJoin(value){if(_contextLineJoin!==value){_context.lineJoin=value;_contextLineJoin=value;}}function setStrokeStyle(value){if(_contextStrokeStyle!==value){_context.strokeStyle=value;_contextStrokeStyle=value;}}function setFillStyle(value){if(_contextFillStyle!==value){_context.fillStyle=value;_contextFillStyle=value;}}function setDashAndGap(dashSizeValue,gapSizeValue){if(_contextDashSize!==dashSizeValue||_contextGapSize!==gapSizeValue){_context.setLineDash([dashSizeValue,gapSizeValue]);_contextDashSize=dashSizeValue;_contextGapSize=gapSizeValue;}}};THREE.ShaderChunk={common:[\"#define PI 3.14159\",\"#define PI2 6.28318\",\"#define LOG2 1.442695\",\"#define ENCODING_Linear 3000\",\"#define ENCODING_sRGB 3001\",\"#define ENCODING_RGBE 3002\",\"#define ENCODING_RGBM7 3004\",\"#define ENCODING_RGBM16 3005\",\"#define SPECULAR_COEFF 0.18\",\"float square( float a ) { return a*a; }\",\"vec2  square( vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\",\"vec3  square( vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\",\"vec4  square( vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\",\"float saturate( float a ) { return clamp( a, 0.0, 1.0 ); }\",\"vec2  saturate( vec2 a )  { return clamp( a, 0.0, 1.0 ); }\",\"vec3  saturate( vec3 a )  { return clamp( a, 0.0, 1.0 ); }\",\"vec4  saturate( vec4 a )  { return clamp( a, 0.0, 1.0 ); }\",\"float average( float a ) { return a; }\",\"float average( vec2 a )  { return ( a.x + a.y) * 0.5; }\",\"float average( vec3 a )  { return ( a.x + a.y + a.z) * 0.3333333333; }\",\"float average( vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\",\"float whiteCompliment( float a ) { return saturate( 1.0 - a ); }\",\"vec2  whiteCompliment( vec2 a )  { return saturate( vec2(1.0) - a ); }\",\"vec3  whiteCompliment( vec3 a )  { return saturate( vec3(1.0) - a ); }\",\"vec4  whiteCompliment( vec4 a )  { return saturate( vec4(1.0) - a ); }\",\"vec3 projectOnPlane( vec3 point, vec3 pointOnPlane, vec3 planeNormal) {\",\"float distance = dot( planeNormal, point-pointOnPlane );\",\"return point - distance * planeNormal;\",\"}\",\"float sideOfPlane( vec3 point, vec3 pointOnPlane, vec3 planeNormal ) {\",\"return sign( dot( point - pointOnPlane, planeNormal ) );\",\"}\",\"vec2 applyUVOffsetRepeat( vec2 uv, vec4 offsetRepeat ) {\",\"return uv * offsetRepeat.zw + offsetRepeat.xy;\",\"}\",\"vec3 linePlaneIntersect( vec3 pointOnLine, vec3 lineDirection, vec3 pointOnPlane, vec3 planeNormal ) {\",\"return pointOnLine + lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) );\",\"}\",\"vec4 applyGainBrightness( vec4 texel, vec4 gainBrightnessCoeff ) {\",\"if( gainBrightnessCoeff.w < 0.0 ) {\",\"texel.xyz = whiteCompliment( texel.xyz );\",\"}\",\"texel.xyz = ( texel.xyz - vec3( gainBrightnessCoeff.x ) ) * gainBrightnessCoeff.y + vec3( gainBrightnessCoeff.z + gainBrightnessCoeff.x );\",\"return texel;\",\"}\",\"vec4 texelDecode( vec4 texel, int encoding ) {\",\"if( encoding == 3001 ) {\",\"texel = vec4( pow( max( texel.xyz, vec3( 0.0 ) ), vec3( 2.2 ) ), texel.w );\",\"}\",\"else if( encoding == 3002 ) {\",\"texel = vec4( texel.xyz * pow( 2.0, texel.w*256.0 - 128.0 ), 1.0 );\",\"}\",\"else if( encoding == 3004 ) {\",\"texel = vec4( texel.xyz * texel.w * 7.0, 1.0 );\",\"}\",\"else if( encoding == 3005 ) {\",\"texel = vec4( texel.xyz * texel.w * 16.0, 1.0 );\",\"}\",\"return texel;\",\"}\"].join(\"\\n\"),fog_pars_fragment:[\"#ifdef USE_FOG\",\"uniform vec3 fogColor;\",\"#ifdef FOG_EXP2\",\"uniform float fogDensity;\",\"#else\",\"uniform float fogNear;\",\"uniform float fogFar;\",\"#endif\",\"#endif\"].join(\"\\n\"),fog_fragment:[\"#ifdef USE_FOG\",\"float depth = gl_FragCoord.z / gl_FragCoord.w;\",\"#ifdef FOG_EXP2\",\"float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\",\"fogFactor = 1.0 - saturate( fogFactor );\",\"#else\",\"float fogFactor = smoothstep( fogNear, fogFar, depth );\",\"#endif\",\"gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\",\"#endif\"].join(\"\\n\"),diffuseenvmap_pars_fragment:[\"#if defined( USE_DIFFUSEENVMAP )\",\"uniform samplerCube diffuseEnvMap;\",\"uniform int diffuseEnvEncoding;\",\"#endif\"].join(\"\\n\"),envmap_pars_fragment:[\"#if defined( USE_DIFFUSEENVMAP ) || defined( USE_ENVMAP )\",\"uniform float flipEnvMap;\",\"#endif\",\"#ifdef USE_ENVMAP\",\"uniform float reflectivity;\",\"uniform samplerCube envMap;\",\"uniform int combine;\",\"uniform int envEncoding;\",\"#endif\"].join(\"\\n\"),envmap_fragment:[\"#if defined( USE_ENVMAP ) && ! defined( PHYSICAL )\",\"vec3 worldNormal = vec3( normalize( ( vec4( normal, 0.0 ) * viewMatrix ).xyz ) );\",\"vec3 worldView = -vec3( normalize( ( vec4( viewDirection, 0.0 ) * viewMatrix ).xyz ) );\",\"vec3 reflectVec = reflect( worldView, worldNormal );\",\"#ifdef DOUBLE_SIDED\",\"float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\",\"vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\",\"#else\",\"vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\",\"#endif\",\"cubeColor = texelDecode( cubeColor, envEncoding );\",\"float fresnelReflectivity = saturate( reflectivity );\",\"if ( combine == 1 ) {\",\"gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, fresnelReflectivity );\",\"} else if ( combine == 2 ) {\",\"gl_FragColor.xyz += cubeColor.xyz * fresnelReflectivity;\",\"} else {\",\"gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, fresnelReflectivity );\",\"}\",\"#endif\"].join(\"\\n\"),worldpos_vertex:[\"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\",\"#ifdef USE_SKINNING\",\"vec4 worldPosition = modelMatrix * skinned;\",\"#endif\",\"#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\",\"vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\",\"#endif\",\"#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\",\"vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\",\"#endif\",\"#endif\"].join(\"\\n\"),map_particle_pars_fragment:[\"#ifdef USE_MAP\",\"uniform sampler2D map;\",\"#endif\"].join(\"\\n\"),map_particle_fragment:[\"#ifdef USE_MAP\",\"gl_FragColor = gl_FragColor * texelDecode( texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) ), ENCODING_sRGB );\",\"#endif\"].join(\"\\n\"),map_pars_vertex:[\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_REFLECTIVITYMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALLICMAP ) || defined( USE_OPACITYMAP ) || defined( USE_FALLOFFMAP ) || defined( USE_TRANSLUCENCYMAP ) || defined( USE_ANISOTROPYMAP ) || defined( USE_ANISOTROPYROTATIONMAP )\",\"varying vec2 vUv;\",\"#endif\"].join(\"\\n\"),map_pars_fragment:[\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_REFLECTIVITYMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALLICMAP ) || defined( USE_OPACITYMAP ) || defined( USE_FALLOFFMAP ) || defined( USE_TRANSLUCENCYMAP ) || defined( USE_ANISOTROPYMAP ) || defined( USE_ANISOTROPYROTATIONMAP )\",\"varying vec2 vUv;\",\"uniform vec4 offsetRepeat;\",\"uniform vec4 gainBrightness;\",\"#endif\",\"#ifdef USE_MAP\",\"uniform sampler2D map;\",\"#endif\"].join(\"\\n\"),map_vertex:[\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_REFLECTIVITYMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALLICMAP ) || defined( USE_OPACITYMAP ) || defined( USE_FALLOFFMAP ) || defined( USE_TRANSLUCENCYMAP ) || defined( USE_ANISOTROPYMAP ) || defined( USE_ANISOTROPYROTATIONMAP )\",\"vUv = uv;\",\"#endif\"].join(\"\\n\"),map_fragment:[\"#if defined( USE_MAP ) || defined( USE_FALLOFFMAP )\",\"vec2 vUvLocal = applyUVOffsetRepeat( vUv, offsetRepeat );\",\"#endif\",\"#ifdef USE_MAP\",\"vec4 texelColor = clamp( applyGainBrightness( texelDecode( texture2D( map, vUvLocal ), ENCODING_sRGB ), gainBrightness ), vec4(0.0), vec4(1.0) );\",\"gl_FragColor = gl_FragColor * texelColor;\",\"#if defined( PHYSICAL ) || defined( PHONG )\",\"diffuseColor *= texelColor.xyz;\",\"#endif\",\"#endif\"].join(\"\\n\"),falloffmap_pars_fragment:[\"#ifdef USE_FALLOFFMAP\",\"uniform sampler2D falloffMap;\",\"#endif\"].join(\"\\n\"),opacitymap_pars_fragment:[\"#ifdef USE_OPACITYMAP\",\"uniform sampler2D opacityMap;\",\"uniform vec4 opacityOffsetRepeat;\",\"uniform vec4 opacityGainBrightness;\",\"#endif\"].join(\"\\n\"),opacitymap_fragment:[\"#ifdef USE_OPACITYMAP\",\"vec2 vOpacityUv = applyUVOffsetRepeat( vUv, opacityOffsetRepeat );\",\"vec4 texelOpacity = applyGainBrightness( texture2D( opacityMap, vOpacityUv ), opacityGainBrightness );\",\"gl_FragColor.w = clamp( gl_FragColor.w * texelOpacity.r, 0.0, 1.0 );\",\"#endif\"].join(\"\\n\"),translucencymap_pars_fragment:[\"#ifdef USE_TRANSLUCENCYMAP\",\"uniform sampler2D translucencyMap;\",\"uniform vec4 translucencyOffsetRepeat;\",\"uniform vec4 translucencyGainBrightness;\",\"#endif\"].join(\"\\n\"),translucencymap_fragment:[\"#ifdef USE_TRANSLUCENCYMAP\",\"vec2 vTranslucencyUv = applyUVOffsetRepeat( vUv, translucencyOffsetRepeat );\",\"vec4 texelTranslucency = applyGainBrightness( texture2D( translucencyMap, vTranslucencyUv ), translucencyGainBrightness );\",\"translucencyColor.xyz = clamp( translucencyColor.xyz * texelTranslucency.xyz, vec3( 0.0 ), vec3( 1.0 ) );\",\"#endif\"].join(\"\\n\"),lightmap_pars_fragment:[\"#if defined( USE_LIGHTMAP ) || defined( USE_EMISSIVEMAP )\",\"varying vec2 vUv2;\",\"#endif\",\"#if defined( USE_LIGHTMAP )\",\"uniform sampler2D lightMap;\",\"#endif\",\"#if defined( USE_EMISSIVEMAP )\",\"uniform sampler2D emissiveMap;\",\"#endif\"].join(\"\\n\"),lightmap_pars_vertex:[\"#if defined( USE_LIGHTMAP ) || defined( USE_EMISSIVEMAP )\",\"varying vec2 vUv2;\",\"#endif\"].join(\"\\n\"),lightmap_fragment:[\"#ifdef USE_LIGHTMAP\",\"#endif\"].join(\"\\n\"),lightmap_vertex:[\"#if defined( USE_LIGHTMAP ) || defined( USE_EMISSIVEMAP )\",\"vUv2 = uv2;\",\"#endif\"].join(\"\\n\"),bumpmap_pars_fragment:[\"#ifdef USE_BUMPMAP\",\"uniform sampler2D bumpMap;\",\"uniform vec4 bumpOffsetRepeat;\",\"uniform float bumpScale;\",\"vec2 dHdxy_fwd() {\",\"#ifdef GL_OES_standard_derivatives\",\"vec2 vBumpUv = applyUVOffsetRepeat( vUv, bumpOffsetRepeat );\",\"vec2 dSTdx = dFdx( vBumpUv );\",\"vec2 dSTdy = dFdy( vBumpUv );\",\"float Hll = bumpScale * texture2D( bumpMap, vBumpUv ).x;\",\"float dBx = bumpScale * texture2D( bumpMap, vBumpUv + dSTdx ).x - Hll;\",\"float dBy = bumpScale * texture2D( bumpMap, vBumpUv + dSTdy ).x - Hll;\",\"return vec2( dBx, dBy );\",\"#else\",\"return vec2( 0.0, 0.0 );\",\"#endif\",\"}\",\"vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\",\"#ifdef GL_OES_standard_derivatives\",\"vec3 vSigmaX = dFdx( surf_pos );\",\"vec3 vSigmaY = dFdy( surf_pos );\",\"vec3 vN = surf_norm;\",\"vec3 R1 = cross( vSigmaY, vN );\",\"vec3 R2 = cross( vN, vSigmaX );\",\"float fDet = dot( vSigmaX, R1 );\",\"vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\",\"return normalize( abs( fDet ) * surf_norm - vGrad );\",\"#else\",\"return surf_norm;\",\"#endif\",\"}\",\"#endif\"].join(\"\\n\"),lightattenuation_func_fragment:[\"float calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\",\"if ( decayExponent > 0.0 && cutoffDistance > 0.0 ) {\",\"return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\",\"}\",\"else if ( decayExponent < 0.0 ) {\",\"float numerator = 1.0;\",\"if( cutoffDistance > 0.0 ) {\",\"numerator = ( saturate( 1.0 - pow( lightDistance / cutoffDistance, 4.0 ) ) );\",\"numerator *= numerator;\",\"} \",\"return numerator / ( ( lightDistance * lightDistance ) + 1.0 );\",\"}\",\"else {\",\"return 1.0;\",\"}\",\"}\"].join(\"\\n\"),normalmap_pars_fragment:[\"#ifdef USE_NORMALMAP\",\"uniform sampler2D normalMap;\",\"uniform vec4 normalOffsetRepeat;\",\"uniform vec2 normalScale;\",\"vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\",\"#ifdef GL_OES_standard_derivatives\",\"vec2 vNormalUv = applyUVOffsetRepeat( vUv, normalOffsetRepeat );\",\"vec3 q0 = dFdx( eye_pos.xyz );\",\"vec3 q1 = dFdy( eye_pos.xyz );\",\"vec2 st0 = dFdx( vNormalUv.st );\",\"vec2 st1 = dFdy( vNormalUv.st );\",\"vec3 S = normalize(  q0 * st1.t - q1 * st0.t );\",\"vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\",\"vec3 N = normalize( surf_norm );\",\"vec3 mapN = texture2D( normalMap, vNormalUv ).xyz * 2.0 - 1.0;\",\"mapN.xy = normalScale * mapN.xy;\",\"mat3 tsn = mat3( S, T, N );\",\"return normalize( tsn * mapN );\",\"#else\",\"return surf_norm;\",\"#endif\",\"}\",\"#endif\"].join(\"\\n\"),anisotropymap_pars_fragment:[\"#ifdef USE_ANISOTROPYMAP\",\"uniform sampler2D anisotropyMap;\",\"uniform vec4 anisotropyGainBrightness;\",\"uniform vec4 anisotropyOffsetRepeat;\",\"#endif\"].join(\"\\n\"),anisotropymap_fragment:[\"#ifdef USE_ANISOTROPYMAP\",\"vec2 vAnisotropyUv = applyUVOffsetRepeat( vUv, anisotropyOffsetRepeat );\",\"#else\",\"#ifdef ANISOTROPY\",\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_REFLECTIVITYMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALLICMAP ) || defined( USE_OPACITYMAP ) || defined( USE_FALLOFFMAP ) || defined( USE_TRANSLUCENCYMAP ) || defined( USE_ANISOTROPYMAP ) || defined( USE_ANISOTROPYROTATIONMAP )\",\"vec2 vAnisotropyUv = vUv;\",\"#else\",\"vec2 vAnisotropyUv = vec2( 0, 0 );\",\"#endif\",\"#endif\",\"#endif\",\"float anisotropyStrength = anisotropy;\",\"#ifdef USE_ANISOTROPYMAP\",\"vec4 texelAnisotropy = applyGainBrightness( texture2D( anisotropyMap, vAnisotropyUv ), anisotropyGainBrightness );\",\"anisotropyStrength = clamp( anisotropyStrength + texelAnisotropy.r, -1.0, 1.0 );\",\"#endif\"].join(\"\\n\"),anisotropyrotationmap_pars_fragment:[\"#ifdef USE_ANISOTROPYROTATIONMAP\",\"uniform sampler2D anisotropyRotationMap;\",\"uniform vec4 anisotropyRotationGainBrightness;\",\"uniform vec4 anisotropyRotationOffsetRepeat;\",\"#endif\"].join(\"\\n\"),anisotropyrotationmap_fragment:[\"float anisotropyRotationStrength = anisotropyRotation;\",\"#ifdef USE_ANISOTROPYROTATIONMAP\",\"vec2 vAnisotropyRotationUv = applyUVOffsetRepeat( vUv, anisotropyRotationOffsetRepeat );\",\"vec4 texelAnisotropyRotation = applyGainBrightness( texture2D( anisotropyRotationMap, vAnisotropyRotationUv ), anisotropyRotationGainBrightness );\",\"anisotropyRotationStrength += texelAnisotropyRotation.r;\",\"#endif\"].join(\"\\n\"),metallicmap_pars_fragment:[\"#ifdef USE_METALLICMAP\",\"uniform sampler2D metallicMap;\",\"uniform vec4 metallicGainBrightness;\",\"uniform vec4 metallicOffsetRepeat;\",\"#endif\"].join(\"\\n\"),metallicmap_fragment:[\"float metallicStrength = metallic;\",\"#ifdef USE_METALLICMAP\",\"vec2 vMetallicUv = applyUVOffsetRepeat( vUv, metallicOffsetRepeat );\",\"vec4 texelMetallic = applyGainBrightness( texture2D( metallicMap, vMetallicUv ), metallicGainBrightness );\",\"metallicStrength = clamp( metallicStrength * texelMetallic.r, 0.0, 1.0 );\",\"#endif\"].join(\"\\n\"),roughnessmap_pars_fragment:[\"#ifdef USE_ROUGHNESSMAP\",\"uniform sampler2D roughnessMap;\",\"uniform vec4 roughnessOffsetRepeat;\",\"uniform vec4 roughnessGainBrightness;\",\"#endif\"].join(\"\\n\"),roughnessmap_fragment:[\"float roughnessStrength = roughness;\",\"#ifdef USE_ROUGHNESSMAP\",\"vec2 vRoughnessUv = applyUVOffsetRepeat( vUv, roughnessOffsetRepeat );\",\"vec4 texelRoughness = applyGainBrightness( texture2D( roughnessMap, vRoughnessUv ), roughnessGainBrightness );\",\"roughnessStrength = clamp( roughnessStrength * texelRoughness.r, 0.0, 1.0 );\",\"#endif\"].join(\"\\n\"),specularmap_pars_fragment:[\"#ifdef USE_SPECULARMAP\",\"uniform sampler2D specularMap;\",\"uniform vec4 specularGainBrightness;\",\"uniform vec4 specularOffsetRepeat;\",\"#endif\"].join(\"\\n\"),specularmap_fragment:[\"#ifdef PHYSICAL\",\"vec3 specularColor = specular;\",\"#else\",\"float specularStrength = 1.0;\",\"#endif\",\"#ifdef USE_SPECULARMAP\",\"vec2 vSpecularUv = applyUVOffsetRepeat( vUv, specularOffsetRepeat );\",\"vec4 texelSpecular = applyGainBrightness( texelDecode( texture2D( specularMap, vSpecularUv ), ENCODING_sRGB ), specularGainBrightness );\",\"#ifdef PHYSICAL\",\"specularColor.rgb = clamp( specularColor.rgb * texelSpecular.rgb, vec3( 0.0 ), vec3( 1.0 ) );\",\"#else\",\"specularStrength = clamp( specularStrength * texelSpecular.r, 0.0, 1.0 );\",\"#endif\",\"#endif\"].join(\"\\n\"),lights_lambert_pars_vertex:[\"uniform vec3 ambient;\",\"uniform vec3 diffuse;\",\"uniform vec3 emissive;\",\"uniform vec3 ambientLightColor;\",\"#if MAX_DIR_LIGHTS > 0\",\"uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\",\"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\",\"#endif\",\"#if MAX_HEMI_LIGHTS > 0\",\"uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\",\"uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\",\"uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\",\"#endif\",\"#if MAX_POINT_LIGHTS > 0\",\"uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\",\"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\",\"uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\",\"uniform float pointLightDecayExponent[ MAX_POINT_LIGHTS ];\",\"#endif\",\"#if MAX_SPOT_LIGHTS > 0\",\"uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\",\"uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\",\"uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\",\"uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\",\"uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\",\"uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\",\"uniform float spotLightDecayExponent[ MAX_SPOT_LIGHTS ];\",\"#endif\",\"#if MAX_AREA_LIGHTS > 0\",\"uniform vec3 areaLightColor[ MAX_AREA_LIGHTS ];\",\"uniform vec3 areaLightPosition[ MAX_AREA_LIGHTS ];\",\"uniform vec3 areaLightWidth[ MAX_AREA_LIGHTS ];\",\"uniform vec3 areaLightHeight[ MAX_AREA_LIGHTS ];\",\"uniform float areaLightDistance[ MAX_AREA_LIGHTS ];\",\"uniform float areaLightDecayExponent[ MAX_AREA_LIGHTS ];\",\"#endif\",\"#ifdef WRAP_AROUND\",\"uniform vec3 wrapRGB;\",\"#endif\"].join(\"\\n\"),lights_lambert_vertex:[\"vLightFront = vec3( 0.0 );\",\"#ifdef DOUBLE_SIDED\",\"vLightBack = vec3( 0.0 );\",\"#endif\",\"transformedNormal = normalize( transformedNormal );\",\"#if MAX_DIR_LIGHTS > 0\",\"for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\",\"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\",\"vec3 dirVector = normalize( lDirection.xyz );\",\"float dotProduct = dot( transformedNormal, dirVector );\",\"vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\",\"#ifdef DOUBLE_SIDED\",\"vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\",\"#ifdef WRAP_AROUND\",\"vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\",\"#endif\",\"#endif\",\"#ifdef WRAP_AROUND\",\"vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\",\"directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\",\"#ifdef DOUBLE_SIDED\",\"directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\",\"#endif\",\"#endif\",\"vLightFront += directionalLightColor[ i ] * directionalLightWeighting;\",\"#ifdef DOUBLE_SIDED\",\"vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\",\"#endif\",\"}\",\"#endif\",\"#if MAX_POINT_LIGHTS > 0\",\"for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\",\"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\",\"vec3 lVector = lPosition.xyz - mvPosition.xyz;\",\"float distanceAttenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecayExponent[i] );\",\"lVector = normalize( lVector );\",\"float dotProduct = dot( transformedNormal, lVector );\",\"vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\",\"#ifdef DOUBLE_SIDED\",\"vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\",\"#ifdef WRAP_AROUND\",\"vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\",\"#endif\",\"#endif\",\"#ifdef WRAP_AROUND\",\"vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\",\"pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\",\"#ifdef DOUBLE_SIDED\",\"pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\",\"#endif\",\"#endif\",\"vLightFront += pointLightColor[ i ] * pointLightWeighting * distanceAttenuation;\",\"#ifdef DOUBLE_SIDED\",\"vLightBack += pointLightColor[ i ] * pointLightWeightingBack * distanceAttenuation;\",\"#endif\",\"}\",\"#endif\",\"#if MAX_SPOT_LIGHTS > 0\",\"for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\",\"vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\",\"vec3 lVector = lPosition.xyz - mvPosition.xyz;\",\"float distanceAttenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecayExponent[i] );\",\"float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\",\"if ( spotEffect > spotLightAngleCos[ i ] ) {\",\"spotEffect = pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] );\",\"lVector = normalize( lVector );\",\"float dotProduct = dot( transformedNormal, lVector );\",\"vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\",\"#ifdef DOUBLE_SIDED\",\"vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\",\"#ifdef WRAP_AROUND\",\"vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\",\"#endif\",\"#endif\",\"#ifdef WRAP_AROUND\",\"vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\",\"spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\",\"#ifdef DOUBLE_SIDED\",\"spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\",\"#endif\",\"#endif\",\"vLightFront += spotLightColor[ i ] * spotLightWeighting * distanceAttenuation * spotEffect;\",\"#ifdef DOUBLE_SIDED\",\"vLightBack += spotLightColor[ i ] * spotLightWeightingBack * distanceAttenuation * spotEffect;\",\"#endif\",\"}\",\"}\",\"#endif\",\"#if MAX_HEMI_LIGHTS > 0\",\"for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\",\"vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\",\"vec3 lVector = normalize( lDirection.xyz );\",\"float dotProduct = dot( transformedNormal, lVector );\",\"float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\",\"float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\",\"vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\",\"#ifdef DOUBLE_SIDED\",\"vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\",\"#endif\",\"}\",\"#endif\",\"vLightFront = ( vLightFront + ambientLightColor + ambient) * diffuse + emissive;\",\"#ifdef DOUBLE_SIDED\",\"vLightBack = ( vLightFront + ambientLightColor + ambient) * diffuse + emissive;\",\"#endif\"].join(\"\\n\"),lights_physical_pars_vertex:[\"#if MAX_SPOT_LIGHTS > 0 || MAX_AREA_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\",\"varying vec3 vWorldPosition;\",\"#endif\"].join(\"\\n\"),lights_physical_vertex:[\"#if MAX_SPOT_LIGHTS > 0 || MAX_AREA_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\",\"vWorldPosition = worldPosition.xyz;\",\"#endif\",\"#ifdef USE_SKINNING\",\"vNormal = normalize( normalMatrix * skinnedNormal.xyz );\",\"vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\",\"vTangent = normalize( normalMatrix * skinnedTangent.xyz );\",\"#else\",\"vNormal = normalize( normalMatrix * normal );\",\"vTangent = normalize( normalMatrix * tangent.xyz );\",\"#endif\",\"vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\"].join(\"\\n\"),lights_physical_pars_fragment:[\"uniform vec3 ambientLightColor;\",\"#if MAX_DIR_LIGHTS > 0\",\"uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\",\"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\",\"#endif\",\"#if MAX_HEMI_LIGHTS > 0\",\"uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\",\"uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\",\"uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\",\"#endif\",\"#if MAX_POINT_LIGHTS > 0\",\"uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\",\"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\",\"uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\",\"uniform float pointLightDecayExponent[ MAX_POINT_LIGHTS ];\",\"#endif\",\"#if MAX_SPOT_LIGHTS > 0\",\"uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\",\"uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\",\"uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\",\"uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\",\"uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\",\"uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\",\"uniform float spotLightDecayExponent[ MAX_SPOT_LIGHTS ];\",\"#endif\",\"#if MAX_AREA_LIGHTS > 0\",\"uniform vec3 areaLightColor[ MAX_AREA_LIGHTS ];\",\"uniform vec3 areaLightPosition[ MAX_AREA_LIGHTS ];\",\"uniform vec3 areaLightWidth[ MAX_AREA_LIGHTS ];\",\"uniform vec3 areaLightHeight[ MAX_AREA_LIGHTS ];\",\"uniform float areaLightDistance[ MAX_AREA_LIGHTS ];\",\"uniform float areaLightDecayExponent[ MAX_AREA_LIGHTS ];\",\"#endif\",\"#if MAX_SPOT_LIGHTS > 0 || MAX_AREA_LIGHTS > 0 || defined( USE_BUMPMAP )\",\"varying vec3 vWorldPosition;\",\"#endif\",\"#ifdef WRAP_AROUND\",\"uniform vec3 wrapRGB;\",\"#endif\",\"varying vec3 vViewPosition;\",\"varying vec3 vTangent;\",\"varying vec3 vBinormal;\",\"varying vec3 vNormal;\",\"vec3 Fresnel_Schlick_SpecularBlendToWhite(vec3 specularColor, float hDotV) {\",\"float Fc = pow(max( 1.0 - hDotV, 0.0 ), 5.0);\",\"return saturate( 50.0 * average( specularColor ) ) * Fc + (1.0 - Fc) * specularColor;\",\"}\",\"vec3 Fresnel_Schlick_SpecularBlendToWhiteRoughness(vec3 specularColor, float hDotV, float roughness) {\",\"float Fc = pow(max( 1.0 - hDotV, 0.0 ), 5.0) / ( 1.0 + 3.0 * roughness );\",\"return mix( specularColor, vec3( saturate( 50.0 * average( specularColor ) ) ), Fc );\",\"}\",\"float Distribution_GGX( float roughness2, float nDotH ) {\",\"float denom = nDotH * nDotH * (roughness2 - 1.0) + 1.0;\",\"return roughness2 / ( PI * square( denom ) + 0.0000001 );\",\"}\",\"float Distribution_GGXAniso( vec2 anisotropicM, vec2 xyDotH, float nDotH ) {\",\"float anisoTerm = ( xyDotH.x * xyDotH.x / ( anisotropicM.x * anisotropicM.x ) + xyDotH.y * xyDotH.y / ( anisotropicM.y * anisotropicM.y ) + nDotH * nDotH );\",\"return 1.0 / ( PI * anisotropicM.x * anisotropicM.y * anisoTerm * anisoTerm + 0.0000001 );\",\"}\",\"float Visibility_Kelemen( float vDotH ) {\",\"return 1.0 / ( 4.0 * vDotH * vDotH + 0.0000001 );\",\"}\",\"float Visibility_Schlick( float roughness2, float nDotL, float nDotV) {\",\"float termL = (nDotL + sqrt(roughness2 + (1.0 - roughness2) * nDotL * nDotL));\",\"float termV = (nDotV + sqrt(roughness2 + (1.0 - roughness2) * nDotV * nDotV));\",\"return 1.0 / ( abs( termL * termV ) + 0.0000001 );\",\"}\",\"float Diffuse_Lambert() {\",\"return 1.0 / PI;\",\"}\",\"float Diffuse_OrenNayer( float m2, float nDotV, float nDotL, float vDotH ) {\",\"float termA = 1.0 - 0.5 * m2 / (m2 + 0.33);\",\"float Cosri = 2.0 * vDotH - 1.0 - nDotV * nDotL;\",\"float termB = 0.45 * m2 / (m2 + 0.09) * Cosri * ( Cosri >= 0.0 ? min( 1.0, nDotL / nDotV ) : nDotL );\",\"return 1.0 / PI * ( nDotL * termA + termB );\",\"}\",\"mat2 createRotationMat2( float rads) {\",\"float cos_rads = cos( rads );\",\"float sin_rads = sin( rads );\",\"return mat2( vec2( cos_rads, sin_rads ), vec2( -sin_rads, cos_rads ) );\",\"}\",\"vec2 calcAnisotropyUV( float anisotropyLocal) {\",\"float oneMinusAbsAnisotropy = 1.0 - min( abs( anisotropyLocal ) * 0.9, 0.9 );\",\"vec2 anisotropyUV = vec2 ( 1.0 / oneMinusAbsAnisotropy, oneMinusAbsAnisotropy );\",\"if( anisotropy < 0.0 ) {\",\"anisotropyUV.xy = anisotropyUV.yx;\",\"}\",\"return anisotropyUV;\",\"}\"].join(\"\\n\"),lights_physical_fragment:[\"mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normal );\",\"#ifdef USE_NORMALMAP\",\"normal = perturbNormal2Arb( -vViewPosition, normal );\",\"#endif\",\"#if defined( USE_BUMPMAP )\",\"normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\",\"#endif\",\"#ifdef DOUBLE_SIDED\",\"normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\",\"#endif\",\"#ifdef FALLOFF\",\"vec3 modulatedFalloffColor = falloffColor;\",\"#ifdef USE_FALLOFFMAP\",\"vec4 falloffTexelColor = texelDecode( texture2D( falloffMap, vUvLocal ), ENCODING_sRGB );\",\"modulatedFalloffColor = modulatedFalloffColor * falloffTexelColor.xyz;\",\"#endif\",\"float fm = abs( dot( normal, viewDirection ) );\",\"fm = /*falloffBlendParams.x * fm + falloffBlendParams.y * */ ( fm * fm * ( 3.0 - 2.0 * fm ) );\",\"diffuseColor = mix( modulatedFalloffColor, diffuseColor, fm );\",\"#endif\",\"float nDotV = saturate( dot( normal, viewDirection ) );\",\"float m2 = pow( clamp( roughnessStrength, 0.02, 1.0 ), 4.0 );\",\"float m2ClearCoat = pow( clamp( clearCoatRoughness, 0.02, 1.0 ), 4.0 );\",\"specularColor = mix( specularColor * SPECULAR_COEFF, diffuseColor, metallicStrength );\",\"diffuseColor *= ( 1.0 - metallicStrength );\",\"#ifdef ANISOTROPY\",\"vec2 anisotropicM = calcAnisotropyUV( anisotropyStrength ) * sqrt( m2 );\",\"#ifdef ANISOTROPYROTATION\",\"mat2 anisotropicRotationMatrix = createRotationMat2( anisotropyRotationStrength * 2.0 * PI );\",\"#endif\",\"vec3 anisotropicS = tsb[1];\",\"vec3 anisotropicT = tsb[0];\",\"#endif\",\"vec3 totalLighting  = vec3( 0.0 );\",\"#if ( defined( USE_ENVMAP ) || defined( USE_DIFFUSEENVMAP ) ) && defined( PHYSICAL )\",\"{\",\"vec3 worldNormal = vec3( normalize( ( vec4( normal, 0.0 ) * viewMatrix ).xyz ) );\",\"vec3 worldView = -vec3( normalize( ( vec4( viewDirection, 0.0 ) * viewMatrix ).xyz ) );\",\"vec3 reflectVec = reflect( worldView, worldNormal );\",\"vec3 hVector = normal;//normalize( viewDirection.xyz + lVector.xyz );\",\"float nDotH = saturate( dot( normal, normal ) );\",\"float hDotV = saturate( dot( normal, viewDirection ) );\",\"float nDotL = hDotV;//saturate( dot( normal, lVector ) );\",\"vec3 queryVector = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\",\"#ifdef DOUBLE_SIDED\",\"queryVector *= ( -1.0 + 2.0 * float( gl_FrontFacing ) );\",\"#endif\",\"vec3 worldEnvNormal = vec3( normalize( ( vec4( normal, 0.0 ) * viewMatrix ).xyz ) );\",\"worldEnvNormal = vec3( flipEnvMap * worldEnvNormal.x, worldEnvNormal.yz );\",\"#ifdef DOUBLE_SIDED\",\"worldEnvNormal *= ( -1.0 + 2.0 * float( gl_FrontFacing ) );\",\"#endif\",\"vec4 diffuseEnvColor = vec4( 0.0, 0.0, 0.0, 1.0 );\",\"#if defined( USE_DIFFUSEENVMAP )\",\"diffuseEnvColor = texelDecode( textureCube( diffuseEnvMap, worldEnvNormal ), diffuseEnvEncoding );\",\"#elif defined( USE_ENVMAP )\",\"#if defined( TEXTURE_CUBE_LOD_EXT )\",\"diffuseEnvColor = texelDecode( textureCubeLodEXT( envMap, worldEnvNormal, 9.5 ), envEncoding );\",\"#else\",\"diffuseEnvColor = texelDecode( textureCube( envMap, worldEnvNormal, 10.0 ), envEncoding );\",\"#endif\",\"#endif\",\"vec4 specularEnvColor = vec4( 0.0, 0.0, 0.0, 1.0 );\",\"#if defined( USE_ENVMAP )\",\"#if defined( TEXTURE_CUBE_LOD_EXT )\",\"specularEnvColor = texelDecode( textureCubeLodEXT( envMap, queryVector, roughnessStrength * 9.5 ), envEncoding );\",\"#else\",\"specularEnvColor = mix( texelDecode( textureCube( envMap, queryVector ), envEncoding ), texelDecode( textureCube( envMap, queryVector, 10.0 ), envEncoding ), roughnessStrength );\",\"#endif\",\"#endif\",\"vec3 specClearCoat = vec3(0, 0, 0);\",\"#if defined( CLEARCOAT ) && defined( USE_ENVMAP )\",\"#if defined( TEXTURE_CUBE_LOD_EXT )\",\"vec4 specularClearCoatEnvColor = texelDecode( textureCubeLodEXT( envMap, queryVector, clearCoatRoughness * 9.5 ), envEncoding );\",\"#else\",\"vec4 specularClearCoatEnvColor = mix( texelDecode( textureCube( envMap, queryVector ), envEncoding ), texelDecode( textureCube( envMap, queryVector, 10.0 ), envEncoding ), clearCoatRoughness );\",\"#endif\",\"vec3 fresnelClearCoat = Fresnel_Schlick_SpecularBlendToWhiteRoughness( vec3( SPECULAR_COEFF ), nDotL, m2ClearCoat );\",\"specClearCoat = specularClearCoatEnvColor.rgb * fresnelClearCoat;\",\"#endif\",\"vec3 fresnelColor = Fresnel_Schlick_SpecularBlendToWhiteRoughness( specularColor, nDotL, m2 );\",\"vec3 spec = fresnelColor * specularEnvColor.rgb;\",\"vec3 diff = diffuseColor * diffuseEnvColor.rgb;\",\"vec3 shadingResult = spec + diff;\",\"#ifdef CLEARCOAT\",\"shadingResult = mix( shadingResult, specClearCoat, clearCoat );\",\"#endif\",\"totalLighting  += shadingResult;\",\"}\",\"#endif\",\"#if MAX_POINT_LIGHTS > 0\",\"for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\",\"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\",\"vec3 lVector = lPosition.xyz + vViewPosition.xyz;\",\"float distanceAttenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecayExponent[i] );\",\"vec3 incidentLight = pointLightColor[ i ] * distanceAttenuation;\",\"lVector = normalize( lVector );\",\"vec3 hVector = normalize( viewDirection.xyz + lVector.xyz );\",\"float nDotH = saturate( dot( normal, hVector ) );\",\"float nDotL = saturate( dot( normal, lVector ) );\",\"float hDotV = saturate( dot( hVector, viewDirection ) );\",\"#ifdef CLEARCOAT\",\"float dClearCoat = Distribution_GGX( m2ClearCoat, nDotH );\",\"float visClearCoat = Visibility_Kelemen( hDotV );\",\"vec3 fresnelClearCoat = Fresnel_Schlick_SpecularBlendToWhite( vec3( SPECULAR_COEFF ), hDotV );\",\"vec3 specClearCoat = clamp( nDotL * dClearCoat * visClearCoat, 0.0, 10.0 ) * fresnelClearCoat;\",\"#endif\",\"#ifdef ANISOTROPY\",\"vec2 xyDotH = vec2( dot( anisotropicS, hVector ), dot( anisotropicT, hVector ) );\",\"#ifdef ANISOTROPYROTATION\",\"xyDotH = anisotropicRotationMatrix * xyDotH;\",\"#endif\",\"float d = Distribution_GGXAniso( anisotropicM, xyDotH, nDotH );\",\"#else\",\"float d = Distribution_GGX( m2, nDotH );\",\"#endif\",\"float vis = Visibility_Schlick(m2, nDotL, nDotV);\",\"vec3 fresnelColor = Fresnel_Schlick_SpecularBlendToWhite( specularColor, hDotV );\",\"vec3 spec = clamp( nDotL * d * vis, 0.0, 10.0 ) * fresnelColor;\",\"vec3 diff = nDotL * Diffuse_Lambert() * diffuseColor;\",\"#ifdef TRANSLUCENCY\",\"diff *= whiteCompliment( translucencyColor.xyz );\",\"#endif\",\"vec3 shadingResult = spec + diff;\",\"#ifdef CLEARCOAT\",\"shadingResult = mix( shadingResult, specClearCoat, clearCoat );\",\"#endif\",\"totalLighting  += incidentLight * shadingResult;\",\"#ifdef TRANSLUCENCY\",\"float lightNormalTL = mix( 1.0, pow( abs( dot( lVector.xyz, normal ) ), translucencyNormalPower ), translucencyNormalAlpha );\",\"float viewNormalTL = mix( 1.0, pow( abs( dot( viewDirection.xyz, lVector.xyz) ), translucencyViewPower ), translucencyViewAlpha );\",\"totalLighting += lightNormalTL * viewNormalTL * translucencyColor.rgb * incidentLight;\",\"#endif\",\"}\",\"#endif\",\"#if MAX_SPOT_LIGHTS > 0\",\"for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\",\"vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\",\"vec3 lVector = lPosition.xyz + vViewPosition.xyz;\",\"float distanceAttenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecayExponent[i] );\",\"vec3 incidentLight = spotLightColor[ i ] * distanceAttenuation;\",\"lVector = normalize( lVector );\",\"float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\",\"if ( spotEffect > spotLightAngleCos[ i ] ) {\",\"spotEffect = pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] );\",\"incidentLight *= spotEffect;\",\"vec3 hVector = normalize( viewDirection.xyz + lVector.xyz );\",\"float nDotH = saturate( dot( normal, hVector ) );\",\"float nDotL = saturate( dot( normal, lVector ) );\",\"float hDotV = saturate( dot( hVector, viewDirection ) );\",\"#ifdef CLEARCOAT\",\"float dClearCoat = Distribution_GGX( m2ClearCoat, nDotH );\",\"float visClearCoat = Visibility_Kelemen( hDotV );\",\"vec3 fresnelClearCoat = Fresnel_Schlick_SpecularBlendToWhite( vec3( SPECULAR_COEFF ), hDotV );\",\"vec3 specClearCoat = clamp( nDotL * dClearCoat * visClearCoat, 0.0, 10.0 ) * fresnelClearCoat;\",\"#endif\",\"#ifdef ANISOTROPY\",\"vec2 xyDotH = vec2( dot( anisotropicS, hVector ), dot( anisotropicT, hVector ) );\",\"#ifdef ANISOTROPYROTATION\",\"xyDotH = anisotropicRotationMatrix * xyDotH;\",\"#endif\",\"float d = Distribution_GGXAniso( anisotropicM, xyDotH, nDotH );\",\"#else\",\"float d = Distribution_GGX( m2, nDotH );\",\"#endif\",\"float vis = Visibility_Schlick(m2, nDotL, nDotV);\",\"vec3 fresnelColor = Fresnel_Schlick_SpecularBlendToWhite( specularColor, hDotV );\",\"vec3 spec = clamp( nDotL * d * vis, 0.0, 10.0 ) * fresnelColor;\",\"vec3 diff = nDotL * Diffuse_Lambert() * diffuseColor;\",\"#ifdef TRANSLUCENCY\",\"diff *= whiteCompliment( translucencyColor.xyz );\",\"#endif\",\"vec3 shadingResult = spec + diff;\",\"#ifdef CLEARCOAT\",\"shadingResult = mix( shadingResult, specClearCoat, clearCoat );\",\"#endif\",\"totalLighting  += incidentLight * shadingResult;\",\"#ifdef TRANSLUCENCY\",\"float lightNormalTL = mix( 1.0, pow( abs( dot( lVector.xyz, normal ) ), translucencyNormalPower ), translucencyNormalAlpha );\",\"float viewNormalTL = mix( 1.0, pow( abs( dot( viewDirection.xyz, lVector.xyz) ), translucencyViewPower ), translucencyViewAlpha );\",\"totalLighting += lightNormalTL * viewNormalTL * translucencyColor.rgb * incidentLight;\",\"#endif\",\"}\",\"}\",\"#endif\",\"#if MAX_DIR_LIGHTS > 0\",\"for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\",\"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\",\"vec3 lVector = normalize( lDirection.xyz );\",\"vec3 incidentLight = directionalLightColor[ i ];\",\"vec3 hVector = normalize( viewDirection.xyz + lVector.xyz );\",\"float nDotH = saturate( dot( normal, hVector ) );\",\"float nDotL = saturate( dot( normal, lVector ) );\",\"float hDotV = saturate( dot( hVector, viewDirection ) );\",\"#ifdef CLEARCOAT\",\"float dClearCoat = Distribution_GGX( m2ClearCoat, nDotH );\",\"float visClearCoat = Visibility_Kelemen( hDotV );\",\"vec3 fresnelClearCoat = Fresnel_Schlick_SpecularBlendToWhite( vec3( SPECULAR_COEFF ), hDotV );\",\"vec3 specClearCoat = clamp( nDotL * dClearCoat * visClearCoat, 0.0, 10.0 ) * fresnelClearCoat;\",\"#endif\",\"#ifdef ANISOTROPY\",\"vec2 xyDotH = vec2( dot( anisotropicS, hVector ), dot( anisotropicT, hVector ) );\",\"#ifdef ANISOTROPYROTATION\",\"xyDotH = anisotropicRotationMatrix * xyDotH;\",\"#endif\",\"float d = Distribution_GGXAniso( anisotropicM, xyDotH, nDotH );\",\"#else\",\"float d = Distribution_GGX( m2, nDotH );\",\"#endif\",\"float vis = Visibility_Schlick(m2, nDotL, nDotV);\",\"vec3 fresnelColor = Fresnel_Schlick_SpecularBlendToWhite( specularColor, hDotV );\",\"vec3 spec = clamp( nDotL * d * vis, 0.0, 10.0 ) * fresnelColor;\",\"vec3 diff = nDotL * Diffuse_Lambert() * diffuseColor;\",\"#ifdef TRANSLUCENCY\",\"diff *= whiteCompliment( translucencyColor.xyz );\",\"#endif\",\"vec3 shadingResult = spec + diff;\",\"#ifdef CLEARCOAT\",\"shadingResult = mix( shadingResult, specClearCoat, clearCoat );\",\"#endif\",\"totalLighting  += incidentLight * shadingResult;\",\"#ifdef TRANSLUCENCY\",\"float lightNormalTL = mix( 1.0, pow( abs( dot( lVector.xyz, normal ) ), translucencyNormalPower ), translucencyNormalAlpha );\",\"float viewNormalTL = mix( 1.0, pow( abs( dot( viewDirection.xyz, lVector.xyz) ), translucencyViewPower ), translucencyViewAlpha );\",\"totalLighting += lightNormalTL * viewNormalTL * translucencyColor.rgb * incidentLight;\",\"#endif\",\"}\",\"#endif\",\"#if MAX_HEMI_LIGHTS > 0\",\"for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\",\"vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\",\"vec3 lVector = normalize( lDirection.xyz );\",\"float nDotL = dot( normal, lVector );\",\"vec3 hemiColor = ( PI / 2.0 ) * ( ( 1.0 + nDotL ) * hemisphereLightSkyColor[ i ] + ( 1.0 - nDotL ) * hemisphereLightGroundColor[ i ] );\",\"totalLighting += diffuseColor * hemiColor;\",\"}\",\"#endif\",\"#if MAX_AREA_LIGHTS > 0\",\"for( int i = 0; i < MAX_AREA_LIGHTS; i ++ ) {\",\"vec3 lPosition = ( viewMatrix * vec4( areaLightPosition[ i ], 1.0 ) ).xyz;\",\"vec3 width = areaLightWidth[ i ];\",\"vec3 height = areaLightHeight[ i ];\",\"vec3 up = normalize( ( viewMatrix * vec4( height, 0.0 ) ).xyz );\",\"vec3 right = normalize( ( viewMatrix * vec4( width, 0.0 ) ).xyz );\",\"vec3 pnormal = normalize( cross( right, up ) );\",\"float widthScalar = length( width );\",\"float heightScalar = length( height );\",\"vec3 projection = projectOnPlane( -vViewPosition.xyz, lPosition, pnormal );\",\"vec3 dir = projection - lPosition;\",\"vec2 diagonal = vec2( dot( dir, right ), dot( dir, up ) );\",\"vec2 nearest2D = vec2( clamp( diagonal.x, -widthScalar, widthScalar ), clamp( diagonal.y, -heightScalar, heightScalar ) );\",\"vec3 nearestPointInside = lPosition + ( right *nearest2D.x + up * nearest2D.y );\",\"vec3 lVector = ( nearestPointInside + vViewPosition.xyz );\",\"float distanceAttenuation = calcLightAttenuation( length( lVector ), areaLightDistance[ i ], areaLightDecayExponent[i] );\",\"lVector = normalize( lVector );\",\"vec3 incidentLight = areaLightColor[ i ] * distanceAttenuation * 0.01;\",\"float nDotLDiffuse = saturate( dot( normal, lVector ) );\",\"vec3 diff = Diffuse_Lambert() * diffuseColor * widthScalar * heightScalar;\",\"vec3 viewReflection = reflect( viewDirection.xyz, normal );\",\"vec3 reflectionLightPlaneIntersection = linePlaneIntersect( -vViewPosition.xyz, viewReflection, lPosition, pnormal );\",\"float specAngle = dot( viewReflection, pnormal );\",\"if ( specAngle < 0.0 ) {\",\"vec3 dirSpec = reflectionLightPlaneIntersection - lPosition;\",\"vec2 dirSpec2D = vec2( dot( dirSpec, right ), dot( dirSpec, up ) );\",\"vec2 nearestSpec2D = vec2( clamp( dirSpec2D.x, -widthScalar, widthScalar ), clamp( dirSpec2D.y, -heightScalar, heightScalar ) );\",\"lVector = normalize( lPosition + ( right *nearestSpec2D.x + up * nearestSpec2D.y ) + vViewPosition.xyz );\",\"} else { \",\"lVector = vec3( 0 );\",\"}\",\"vec3 hVector = normalize( viewDirection.xyz + lVector.xyz );\",\"float nDotH = saturate( dot( normal, hVector ) );\",\"float nDotL = saturate( dot( normal, lVector ) );\",\"float hDotV = saturate( dot( hVector, viewDirection ) );\",\"#ifdef CLEARCOAT\",\"float dClearCoat = Distribution_GGX( m2ClearCoat, nDotH );\",\"float visClearCoat = Visibility_Kelemen( hDotV );\",\"vec3 fresnelClearCoat = Fresnel_Schlick_SpecularBlendToWhite( vec3( SPECULAR_COEFF ), hDotV );\",\"vec3 specClearCoat = clamp( nDotL * dClearCoat * visClearCoat, 0.0, 10.0 ) * fresnelClearCoat;\",\"#endif\",\"#ifdef TRANSLUCENCY\",\"diff *= whiteCompliment( translucencyColor.xyz );\",\"#endif\",\"#ifdef CLEARCOAT\",\"diff = mix( diff, specClearCoat, clearCoat );\",\"#endif\",\"#ifdef ANISOTROPY\",\"vec2 xyDotH = vec2( dot( anisotropicS, hVector ), dot( anisotropicT, hVector ) );\",\"#ifdef ANISOTROPYROTATION\",\"xyDotH = anisotropicRotationMatrix * xyDotH;\",\"#endif\",\"float d = Distribution_GGXAniso( anisotropicM, xyDotH, nDotH );\",\"#else\",\"float d = Distribution_GGX( m2, nDotH );\",\"#endif\",\"float vis = Visibility_Schlick(m2, nDotL, nDotV);\",\"vec3 fresnelColor = Fresnel_Schlick_SpecularBlendToWhite( specularColor, hDotV );\",\"vec3 spec = clamp( nDotL * d * vis, 0.0, 10.0 ) * fresnelColor;\",\"totalLighting  += incidentLight * spec;\",\"totalLighting  += incidentLight * nDotLDiffuse * diff;\",\"#ifdef TRANSLUCENCY\",\"float lightNormalTL = mix( 1.0, pow( abs( dot( lVector.xyz, normal ) ), translucencyNormalPower ), translucencyNormalAlpha );\",\"float viewNormalTL = mix( 1.0, pow( abs( dot( viewDirection.xyz, lVector.xyz) ), translucencyViewPower ), translucencyViewAlpha );\",\"totalLighting += lightNormalTL * viewNormalTL * translucencyColor.rgb * incidentLight;\",\"#endif\",\"}\",\"#endif\",\"#ifdef CLEARCOAT\",\"totalLighting += diffuseColor * ( ambientLightColor * ( 1.0 - clearCoat ) );\",\"#else\",\"totalLighting += diffuseColor * ambientLightColor;\",\"#endif\",\"gl_FragColor.xyz += totalLighting;\",\"vec3 emissiveLocal = emissive;\",\"#ifdef USE_EMISSIVEMAP\",\"vec3 emissiveColor = texture2D( emissiveMap, vUv2 ).xyz;\",\"#ifdef GAMMA_INPUT\",\"emissiveColor *= emissiveColor;\",\"#endif\",\"emissiveLocal *= emissiveColor;\",\"#endif\",\"gl_FragColor.xyz += emissiveLocal;\",\"vec3 ambientLocal = ambient;\",\"#ifdef USE_LIGHTMAP\",\"vec3 ambientColor = texture2D( lightMap, vUv2 ).xyz;\",\"#ifdef GAMMA_INPUT\",\"ambientColor *= ambientColor;\",\"#endif\",\"ambientLocal *= ambientColor;\",\"#ifdef CLEARCOAT\",\"ambientLocal *= ( 1.0 - clearCoat );\",\"#endif\",\"#endif\",\"gl_FragColor.xyz += diffuseColor * ambientLocal;\"].join(\"\\n\"),lights_phong_pars_vertex:[\"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\",\"varying vec3 vWorldPosition;\",\"#endif\"].join(\"\\n\"),lights_phong_vertex:[\"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\",\"vWorldPosition = worldPosition.xyz;\",\"#endif\"].join(\"\\n\"),lights_phong_pars_fragment:[\"uniform vec3 ambientLightColor;\",\"#if MAX_DIR_LIGHTS > 0\",\"uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\",\"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\",\"#endif\",\"#if MAX_HEMI_LIGHTS > 0\",\"uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\",\"uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\",\"uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\",\"#endif\",\"#if MAX_POINT_LIGHTS > 0\",\"uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\",\"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\",\"uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\",\"uniform float pointLightDecayExponent[ MAX_POINT_LIGHTS ];\",\"#endif\",\"#if MAX_SPOT_LIGHTS > 0\",\"uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\",\"uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\",\"uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\",\"uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\",\"uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\",\"uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\",\"uniform float spotLightDecayExponent[ MAX_SPOT_LIGHTS ];\",\"#endif\",\"#if MAX_AREA_LIGHTS > 0\",\"uniform vec3 areaLightColor[ MAX_AREA_LIGHTS ];\",\"uniform vec3 areaLightPosition[ MAX_AREA_LIGHTS ];\",\"uniform vec3 areaLightWidth[ MAX_AREA_LIGHTS ];\",\"uniform vec3 areaLightHeight[ MAX_AREA_LIGHTS ];\",\"uniform float areaLightDistance[ MAX_AREA_LIGHTS ];\",\"uniform float areaLightDecayExponent[ MAX_AREA_LIGHTS ];\",\"#endif\",\"#if MAX_SPOT_LIGHTS > 0 || MAX_AREA_LIGHTS > 0 || defined( USE_BUMPMAP )\",\"varying vec3 vWorldPosition;\",\"#endif\",\"#ifdef WRAP_AROUND\",\"uniform vec3 wrapRGB;\",\"#endif\",\"varying vec3 vViewPosition;\",\"varying vec3 vNormal;\"].join(\"\\n\"),lights_phong_fragment:[\"vec3 normal = normalize( vNormal );\",\"vec3 viewDirection = normalize( vViewPosition );\",\"#ifdef DOUBLE_SIDED\",\"normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\",\"#endif\",\"#ifdef USE_NORMALMAP\",\"normal = perturbNormal2Arb( -vViewPosition, normal );\",\"#elif defined( USE_BUMPMAP )\",\"normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\",\"#endif\",\"#if MAX_POINT_LIGHTS > 0\",\"vec3 pointDiffuse  = vec3( 0.0 );\",\"vec3 pointSpecular = vec3( 0.0 );\",\"for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\",\"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\",\"vec3 lVector = lPosition.xyz + vViewPosition.xyz;\",\"float distanceAttenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecayExponent[i] );\",\"lVector = normalize( lVector );\",\"float dotProduct = dot( normal, lVector );\",\"float pointDiffuseWeight = max( dotProduct, 0.0 );\",\"pointDiffuse  += pointLightColor[ i ] * pointDiffuseWeight * distanceAttenuation;\",\"vec3 pointHalfVector = normalize( lVector + viewDirection );\",\"float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\",\"float pointSpecularWeight = specularStrength * pow( max( pointDotNormalHalf, 0.0 ), shininess );\",\"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\",\"pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * distanceAttenuation * specularNormalization;\",\"}\",\"#endif\",\"#if MAX_SPOT_LIGHTS > 0\",\"vec3 spotDiffuse  = vec3( 0.0 );\",\"vec3 spotSpecular = vec3( 0.0 );\",\"for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\",\"vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\",\"vec3 lVector = lPosition.xyz + vViewPosition.xyz;\",\"float distanceAttenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecayExponent[i] );\",\"lVector = normalize( lVector );\",\"float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\",\"if ( spotEffect > spotLightAngleCos[ i ] ) {\",\"spotEffect = pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] );\",\"float dotProduct = dot( normal, lVector );\",\"#ifdef WRAP_AROUND\",\"float spotDiffuseWeightFull = max( dotProduct, 0.0 );\",\"float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\",\"vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\",\"#else\",\"float spotDiffuseWeight = max( dotProduct, 0.0 );\",\"#endif\",\"spotDiffuse += spotLightColor[ i ] * spotDiffuseWeight * distanceAttenuation * spotEffect;\",\"vec3 spotHalfVector = normalize( lVector + viewDirection );\",\"float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\",\"float spotSpecularWeight = specularStrength * pow( max( spotDotNormalHalf, 0.0 ), shininess );\",\"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\",\"spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * distanceAttenuation * specularNormalization * spotEffect;\",\"}\",\"}\",\"#endif\",\"#if MAX_DIR_LIGHTS > 0\",\"vec3 dirDiffuse  = vec3( 0.0 );\",\"vec3 dirSpecular = vec3( 0.0 );\",\"for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\",\"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\",\"vec3 dirVector = normalize( lDirection.xyz );\",\"float dotProduct = dot( normal, dirVector );\",\"#ifdef WRAP_AROUND\",\"float dirDiffuseWeightFull = max( dotProduct, 0.0 );\",\"float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\",\"vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\",\"#else\",\"float dirDiffuseWeight = max( dotProduct, 0.0 );\",\"#endif\",\"dirDiffuse  += directionalLightColor[ i ] * dirDiffuseWeight;\",\"vec3 dirHalfVector = normalize( dirVector + viewDirection );\",\"float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\",\"float dirSpecularWeight = specularStrength * pow( max( dirDotNormalHalf, 0.0 ), shininess );\",\"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\",\"dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\",\"}\",\"#endif\",\"#if MAX_HEMI_LIGHTS > 0\",\"vec3 hemiDiffuse  = vec3( 0.0 );\",\"vec3 hemiSpecular = vec3( 0.0 );\",\"for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\",\"vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\",\"vec3 lVector = normalize( lDirection.xyz );\",\"float dotProduct = dot( normal, lVector );\",\"float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\",\"vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\",\"hemiDiffuse += hemiColor;\",\"vec3 hemiHalfVectorSky = normalize( lVector + viewDirection );\",\"float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\",\"float hemiSpecularWeightSky = specularStrength * pow( max( hemiDotNormalHalfSky, 0.0 ), shininess );\",\"vec3 lVectorGround = -lVector;\",\"vec3 hemiHalfVectorGround = normalize( lVectorGround + viewDirection );\",\"float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\",\"float hemiSpecularWeightGround = specularStrength * pow( max( hemiDotNormalHalfGround, 0.0 ), shininess );\",\"float dotProductGround = dot( normal, lVectorGround );\",\"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\"vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\",\"vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\",\"hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\",\"}\",\"#endif\",\"#if MAX_AREA_LIGHTS > 0\",\"vec3 areaDiffuse  = vec3( 0.0 );\",\"vec3 areaSpecular = vec3( 0.0 );\",\"for( int i = 0; i < MAX_AREA_LIGHTS; i ++ ) {\",\"vec3 lPosition = ( viewMatrix * vec4( areaLightPosition[ i ], 1.0 ) ).xyz;\",\"vec3 width = areaLightWidth[ i ];\",\"vec3 height = areaLightHeight[ i ];\",\"vec3 up = normalize( ( viewMatrix * vec4( height, 0.0 ) ).xyz );\",\"vec3 right = normalize( ( viewMatrix * vec4( width, 0.0 ) ).xyz );\",\"vec3 pnormal = normalize( cross( right, up ) );\",\"float widthScalar = length( width );\",\"float heightScalar = length( height );\",\"vec3 projection = projectOnPlane( -vViewPosition.xyz, lPosition, pnormal );\",\"vec3 dir = projection - lPosition;\",\"vec2 diagonal = vec2( dot( dir, right ), dot( dir, up ) );\",\"vec2 nearest2D = vec2( clamp( diagonal.x, -widthScalar, widthScalar ), clamp( diagonal.y, -heightScalar, heightScalar ) );\",\"vec3 nearestPointInside = lPosition + ( right *nearest2D.x + up * nearest2D.y );\",\"vec3 lVector = ( nearestPointInside + vViewPosition.xyz );\",\"float distanceAttenuation = calcLightAttenuation( length( lVector ), areaLightDistance[ i ], areaLightDecayExponent[i] );\",\"lVector = normalize( lVector );\",\"float nDotLDiffuse = saturate( dot( normal, lVector ) );\",\"vec3 viewReflection = reflect( viewDirection.xyz, normal );\",\"vec3 reflectionLightPlaneIntersection = linePlaneIntersect( -vViewPosition.xyz, viewReflection, lPosition, pnormal );\",\"float specAngle = dot( viewReflection, pnormal );\",\"if ( specAngle < 0.0 ) {\",\"vec3 dirSpec = reflectionLightPlaneIntersection - lPosition;\",\"vec2 dirSpec2D = vec2( dot( dirSpec, right ), dot( dirSpec, up ) );\",\"vec2 nearestSpec2D = vec2( clamp( dirSpec2D.x, -widthScalar, widthScalar ), clamp( dirSpec2D.y, -heightScalar, heightScalar ) );\",\"lVector = normalize( lPosition + ( right *nearestSpec2D.x + up * nearestSpec2D.y ) + vViewPosition.xyz );\",\"} else { \",\"lVector = vec3( 0 );\",\"}\",\"float dotProduct = nDotLDiffuse;\",\"float areaDiffuseWeight = max( dotProduct, 0.0 );\",\"areaDiffuse  += areaLightColor[ i ] * areaDiffuseWeight * distanceAttenuation * widthScalar * heightScalar * 0.01;\",\"vec3 areaHalfVector = normalize( lVector + viewDirection );\",\"float areaDotNormalHalf = max( dot( normal, areaHalfVector ), 0.0 );\",\"float areaSpecularWeight = specularStrength * pow( max( areaDotNormalHalf, 0.0 ), shininess );\",\"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, areaHalfVector ), 0.0 ), 5.0 );\",\"areaSpecular += schlick * areaLightColor[ i ] * areaSpecularWeight * areaDiffuseWeight * distanceAttenuation * specularNormalization * 0.01;\",\"}\",\"#endif\",\"vec3 totalDiffuse = vec3( 0.0 );\",\"vec3 totalSpecular = vec3( 0.0 );\",\"#if MAX_DIR_LIGHTS > 0\",\"totalDiffuse += dirDiffuse;\",\"totalSpecular += dirSpecular;\",\"#endif\",\"#if MAX_HEMI_LIGHTS > 0\",\"totalDiffuse += hemiDiffuse;\",\"totalSpecular += hemiSpecular;\",\"#endif\",\"#if MAX_POINT_LIGHTS > 0\",\"totalDiffuse += pointDiffuse;\",\"totalSpecular += pointSpecular;\",\"#endif\",\"#if MAX_SPOT_LIGHTS > 0\",\"totalDiffuse += spotDiffuse;\",\"totalSpecular += spotSpecular;\",\"#endif\",\"#if MAX_AREA_LIGHTS > 0\",\"totalDiffuse += areaDiffuse;\",\"totalSpecular += areaSpecular;\",\"#endif\",\"vec3 ambientLocal = ambient;\",\"#ifdef USE_LIGHTMAP\",\"vec3 ambientColor = texture2D( lightMap, vUv2 ).xyz;\",\"#ifdef GAMMA_INPUT\",\"ambientColor *= ambientColor;\",\"#endif\",\"ambientLocal *= ambientColor;\",\"#endif\",\"gl_FragColor.xyz = diffuseColor * ( totalDiffuse + ambientLightColor + ambientLocal ) + totalSpecular;\",\"vec3 emissiveLocal = emissive;\",\"#ifdef USE_EMISSIVEMAP\",\"vec3 emissiveColor = texture2D( emissiveMap, vUv2 ).xyz;\",\"#ifdef GAMMA_INPUT\",\"emissiveColor *= emissiveColor;\",\"#endif\",\"emissiveLocal *= emissiveColor;\",\"#endif\",\"gl_FragColor.xyz += emissiveLocal.xyz;\"].join(\"\\n\"),color_pars_fragment:[\"#ifdef USE_COLOR\",\"varying vec3 vColor;\",\"#endif\"].join(\"\\n\"),color_fragment:[\"#ifdef USE_COLOR\",\"gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\",\"#endif\"].join(\"\\n\"),color_pars_vertex:[\"#ifdef USE_COLOR\",\"varying vec3 vColor;\",\"#endif\"].join(\"\\n\"),color_vertex:[\"#ifdef USE_COLOR\",\"#ifdef GAMMA_INPUT\",\"vColor = color * color;\",\"#else\",\"vColor = color;\",\"#endif\",\"#endif\"].join(\"\\n\"),skinning_pars_vertex:[\"#ifdef USE_SKINNING\",\"#ifdef BONE_TEXTURE\",\"uniform sampler2D boneTexture;\",\"uniform int boneTextureWidth;\",\"uniform int boneTextureHeight;\",\"mat4 getBoneMatrix( const float i ) {\",\"float j = i * 4.0;\",\"float x = mod( j, float( boneTextureWidth ) );\",\"float y = floor( j / float( boneTextureWidth ) );\",\"float dx = 1.0 / float( boneTextureWidth );\",\"float dy = 1.0 / float( boneTextureHeight );\",\"y = dy * ( y + 0.5 );\",\"vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\",\"vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\",\"vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\",\"vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\",\"mat4 bone = mat4( v1, v2, v3, v4 );\",\"return bone;\",\"}\",\"#else\",\"uniform mat4 boneGlobalMatrices[ MAX_BONES ];\",\"mat4 getBoneMatrix( const float i ) {\",\"mat4 bone = boneGlobalMatrices[ int(i) ];\",\"return bone;\",\"}\",\"#endif\",\"#endif\"].join(\"\\n\"),skinbase_vertex:[\"#ifdef USE_SKINNING\",\"mat4 boneMatX = getBoneMatrix( skinIndex.x );\",\"mat4 boneMatY = getBoneMatrix( skinIndex.y );\",\"mat4 boneMatZ = getBoneMatrix( skinIndex.z );\",\"mat4 boneMatW = getBoneMatrix( skinIndex.w );\",\"#endif\"].join(\"\\n\"),skinning_vertex:[\"#ifdef USE_SKINNING\",\"#ifdef USE_MORPHTARGETS\",\"vec4 skinVertex = vec4( morphed, 1.0 );\",\"#else\",\"vec4 skinVertex = vec4( position, 1.0 );\",\"#endif\",\"vec4 skinned  = boneMatX * skinVertex * skinWeight.x;\",\"skinned      += boneMatY * skinVertex * skinWeight.y;\",\"skinned      += boneMatZ * skinVertex * skinWeight.z;\",\"skinned      += boneMatW * skinVertex * skinWeight.w;\",\"#endif\"].join(\"\\n\"),morphtarget_pars_vertex:[\"#ifdef USE_MORPHTARGETS\",\"#ifndef USE_MORPHNORMALS\",\"uniform float morphTargetInfluences[ 8 ];\",\"#else\",\"uniform float morphTargetInfluences[ 4 ];\",\"#endif\",\"#endif\"].join(\"\\n\"),morphtarget_vertex:[\"#ifdef USE_MORPHTARGETS\",\"vec3 morphed = vec3( 0.0 );\",\"morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\",\"morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\",\"morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\",\"morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\",\"#ifndef USE_MORPHNORMALS\",\"morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\",\"morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\",\"morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\",\"morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\",\"#endif\",\"morphed += position;\",\"#endif\"].join(\"\\n\"),default_vertex:[\"vec4 mvPosition;\",\"#ifdef USE_SKINNING\",\"mvPosition = modelViewMatrix * skinned;\",\"#endif\",\"#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\",\"mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\",\"#endif\",\"#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\",\"mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\"#endif\",\"gl_Position = projectionMatrix * mvPosition;\"].join(\"\\n\"),morphnormal_vertex:[\"#ifdef USE_MORPHNORMALS\",\"vec3 morphedNormal = vec3( 0.0 );\",\"morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\",\"morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\",\"morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\",\"morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\",\"morphedNormal += normal;\",\"#endif\"].join(\"\\n\"),skinnormal_vertex:[\"#ifdef USE_SKINNING\",\"mat4 skinMatrix = skinWeight.x * boneMatX;\",\"skinMatrix \t+= skinWeight.y * boneMatY;\",\"#ifdef USE_MORPHNORMALS\",\"vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\",\"#else\",\"vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\",\"#endif\",\"#endif\"].join(\"\\n\"),defaultnormal_vertex:[\"vec3 objectNormal;\",\"#ifdef USE_SKINNING\",\"objectNormal = skinnedNormal.xyz;\",\"#endif\",\"#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\",\"objectNormal = morphedNormal;\",\"#endif\",\"#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\",\"objectNormal = normal;\",\"#endif\",\"#ifdef FLIP_SIDED\",\"objectNormal = -objectNormal;\",\"#endif\",\"vec3 transformedNormal = normalMatrix * objectNormal;\"].join(\"\\n\"),shadowmap_pars_fragment:[\"#ifdef USE_SHADOWMAP\",\"uniform sampler2D shadowMap[ MAX_SHADOWS ];\",\"uniform vec2 shadowMapSize[ MAX_SHADOWS ];\",\"uniform float shadowDarkness[ MAX_SHADOWS ];\",\"uniform float shadowBias[ MAX_SHADOWS ];\",\"varying vec4 vShadowCoord[ MAX_SHADOWS ];\",\"float unpackDepth( const vec4 rgba_depth ) {\",\"const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\",\"float depth = dot( rgba_depth, bit_shift );\",\"return depth;\",\"}\",\"#endif\"].join(\"\\n\"),shadowmap_fragment:[\"#ifdef USE_SHADOWMAP\",\"#ifdef SHADOWMAP_DEBUG\",\"vec3 frustumColors[3];\",\"frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\",\"frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\",\"frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\",\"#endif\",\"#ifdef SHADOWMAP_CASCADE\",\"int inFrustumCount = 0;\",\"#endif\",\"float fDepth;\",\"vec3 shadowColor = vec3( 1.0 );\",\"for( int i = 0; i < MAX_SHADOWS; i ++ ) {\",\"vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\",\"bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\",\"bool inFrustum = all( inFrustumVec );\",\"#ifdef SHADOWMAP_CASCADE\",\"inFrustumCount += int( inFrustum );\",\"bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\",\"#else\",\"bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\",\"#endif\",\"bool frustumTest = all( frustumTestVec );\",\"if ( frustumTest ) {\",\"shadowCoord.z += shadowBias[ i ];\",\"#if defined( SHADOWMAP_TYPE_PCF )\",\"float shadow = 0.0;\",\"const float shadowDelta = 1.0 / 9.0;\",\"float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\",\"float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\",\"float dx0 = -1.25 * xPixelOffset;\",\"float dy0 = -1.25 * yPixelOffset;\",\"float dx1 = 1.25 * xPixelOffset;\",\"float dy1 = 1.25 * yPixelOffset;\",\"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\",\"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\",\"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\",\"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\",\"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\",\"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\",\"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\",\"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\",\"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\",\"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\"shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\",\"#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\",\"float shadow = 0.0;\",\"float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\",\"float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\",\"float dx0 = -1.0 * xPixelOffset;\",\"float dy0 = -1.0 * yPixelOffset;\",\"float dx1 = 1.0 * xPixelOffset;\",\"float dy1 = 1.0 * yPixelOffset;\",\"mat3 shadowKernel;\",\"mat3 depthKernel;\",\"depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\",\"depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\",\"depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\",\"depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\",\"depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\",\"depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\",\"depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\",\"depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\",\"depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\",\"vec3 shadowZ = vec3( shadowCoord.z );\",\"shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\",\"shadowKernel[0] *= vec3(0.25);\",\"shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\",\"shadowKernel[1] *= vec3(0.25);\",\"shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\",\"shadowKernel[2] *= vec3(0.25);\",\"vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\",\"shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\",\"shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\",\"vec4 shadowValues;\",\"shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\",\"shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\",\"shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\",\"shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\",\"shadow = dot( shadowValues, vec4( 1.0 ) );\",\"shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\",\"#else\",\"vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\",\"float fDepth = unpackDepth( rgbaDepth );\",\"if ( fDepth < shadowCoord.z )\",\"shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\",\"#endif\",\"}\",\"#ifdef SHADOWMAP_DEBUG\",\"#ifdef SHADOWMAP_CASCADE\",\"if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\",\"#else\",\"if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\",\"#endif\",\"#endif\",\"}\",\"#ifdef GAMMA_OUTPUT\",\"shadowColor *= shadowColor;\",\"#endif\",\"gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\",\"#endif\"].join(\"\\n\"),shadowmap_pars_vertex:[\"#ifdef USE_SHADOWMAP\",\"varying vec4 vShadowCoord[ MAX_SHADOWS ];\",\"uniform mat4 shadowMatrix[ MAX_SHADOWS ];\",\"#endif\"].join(\"\\n\"),shadowmap_vertex:[\"#ifdef USE_SHADOWMAP\",\"for( int i = 0; i < MAX_SHADOWS; i ++ ) {\",\"vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\",\"}\",\"#endif\"].join(\"\\n\"),alphatest_fragment:[\"#ifdef ALPHATEST\",\"if ( gl_FragColor.a < ALPHATEST ) discard;\",\"#endif\"].join(\"\\n\"),linear_to_gamma_fragment:[\"#ifdef GAMMA_OUTPUT\",\"gl_FragColor.xyz = sqrt( gl_FragColor.xyz );\",\"#endif\"].join(\"\\n\")};THREE.UniformsUtils={merge:function merge(uniforms){var u,p,tmp,merged={};for(u=0;u<uniforms.length;u++){tmp=this.clone(uniforms[u]);for(p in tmp){merged[p]=tmp[p];}}return merged;},clone:function clone(uniforms_src){var u,p,parameter,parameter_src,uniforms_dst={};for(u in uniforms_src){uniforms_dst[u]={};for(p in uniforms_src[u]){parameter_src=uniforms_src[u][p];if(parameter_src instanceof THREE.Color||parameter_src instanceof THREE.Vector2||parameter_src instanceof THREE.Vector3||parameter_src instanceof THREE.Vector4||parameter_src instanceof THREE.Matrix4||parameter_src instanceof THREE.Texture){uniforms_dst[u][p]=parameter_src.clone();}else if(parameter_src instanceof Array){uniforms_dst[u][p]=parameter_src.slice();}else{uniforms_dst[u][p]=parameter_src;}}}return uniforms_dst;}};THREE.UniformsLib={common:{\"diffuse\":{type:\"c\",value:new THREE.Color(0xeeeeee)},\"opacity\":{type:\"f\",value:1.0},\"map\":{type:\"t\",value:null},\"offsetRepeat\":{type:\"v4\",value:new THREE.Vector4(0,0,1,1)},\"gainBrightness\":{type:\"v4\",value:new THREE.Vector4(0,1,0,1)},\"lightMap\":{type:\"t\",value:null},\"emissiveMap\":{type:\"t\",value:null},\"envMap\":{type:\"t\",value:null},\"envEncoding\":{type:\"i\",value:0},\"diffuseEnvMap\":{type:\"t\",value:null},\"diffuseEnvEncoding\":{type:\"i\",value:0},\"flipEnvMap\":{type:\"f\",value:-1},\"useRefract\":{type:\"i\",value:0},\"reflectivity\":{type:\"f\",value:1.0},\"refractionRatio\":{type:\"f\",value:0.98},\"combine\":{type:\"i\",value:0},\"morphTargetInfluences\":{type:\"f\",value:0}},specularmap:{\"specularMap\":{type:\"t\",value:null},\"specularOffsetRepeat\":{type:\"v4\",value:new THREE.Vector4(0,0,1,1)},\"specularGainBrightness\":{type:\"v4\",value:new THREE.Vector4(0,1,0,1)}},bumpmap:{\"bumpMap\":{type:\"t\",value:null},\"bumpScale\":{type:\"f\",value:1},\"bumpOffsetRepeat\":{type:\"v4\",value:new THREE.Vector4(0,0,1,1)}},opacitymap:{\"opacityMap\":{type:\"t\",value:null},\"opacityOffsetRepeat\":{type:\"v4\",value:new THREE.Vector4(0,0,1,1)},\"opacityGainBrightness\":{type:\"v4\",value:new THREE.Vector4(0,1,0,1)}},normalmap:{\"normalMap\":{type:\"t\",value:null},\"normalScale\":{type:\"v2\",value:new THREE.Vector2(1,1)},\"normalOffsetRepeat\":{type:\"v4\",value:new THREE.Vector4(0,0,1,1)}},fog:{\"fogDensity\":{type:\"f\",value:0.00025},\"fogNear\":{type:\"f\",value:1},\"fogFar\":{type:\"f\",value:2000},\"fogColor\":{type:\"c\",value:new THREE.Color(0xffffff)}},lights:{\"ambientLightColor\":{type:\"fv\",value:[]},\"directionalLightDirection\":{type:\"fv\",value:[]},\"directionalLightColor\":{type:\"fv\",value:[]},\"hemisphereLightDirection\":{type:\"fv\",value:[]},\"hemisphereLightSkyColor\":{type:\"fv\",value:[]},\"hemisphereLightGroundColor\":{type:\"fv\",value:[]},\"pointLightColor\":{type:\"fv\",value:[]},\"pointLightPosition\":{type:\"fv\",value:[]},\"pointLightDistance\":{type:\"fv1\",value:[]},\"pointLightDecayExponent\":{type:\"fv1\",value:[]},\"spotLightColor\":{type:\"fv\",value:[]},\"spotLightPosition\":{type:\"fv\",value:[]},\"spotLightDirection\":{type:\"fv\",value:[]},\"spotLightDistance\":{type:\"fv1\",value:[]},\"spotLightDecayExponent\":{type:\"fv1\",value:[]},\"spotLightAngleCos\":{type:\"fv1\",value:[]},\"spotLightExponent\":{type:\"fv1\",value:[]},\"areaLightColor\":{type:\"fv\",value:[]},\"areaLightPosition\":{type:\"fv\",value:[]},\"areaLightDistance\":{type:\"fv1\",value:[]},\"areaLightDecayExponent\":{type:\"fv1\",value:[]},\"areaLightWidth\":{type:\"fv\",value:[]},\"areaLightHeight\":{type:\"fv\",value:[]}},particle:{\"psColor\":{type:\"c\",value:new THREE.Color(0xeeeeee)},\"opacity\":{type:\"f\",value:1.0},\"size\":{type:\"f\",value:1.0},\"scale\":{type:\"f\",value:1.0},\"map\":{type:\"t\",value:null},\"fogDensity\":{type:\"f\",value:0.00025},\"fogNear\":{type:\"f\",value:1},\"fogFar\":{type:\"f\",value:2000},\"fogColor\":{type:\"c\",value:new THREE.Color(0xffffff)}},shadowmap:{\"shadowMap\":{type:\"tv\",value:[]},\"shadowMapSize\":{type:\"v2v\",value:[]},\"shadowBias\":{type:\"fv1\",value:[]},\"shadowDarkness\":{type:\"fv1\",value:[]},\"shadowMatrix\":{type:\"m4v\",value:[]}}};THREE.ShaderLib={'physical':{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"],THREE.UniformsLib[\"bumpmap\"],THREE.UniformsLib[\"normalmap\"],THREE.UniformsLib[\"fog\"],THREE.UniformsLib[\"lights\"],THREE.UniformsLib[\"shadowmap\"],THREE.UniformsLib[\"opacitymap\"],THREE.UniformsLib[\"specularmap\"],{\"ambient\":{type:\"c\",value:new THREE.Color(0xffffff)},\"emissive\":{type:\"c\",value:new THREE.Color(0x000000)},\"specular\":{type:\"c\",value:new THREE.Color(0xFFFFFF)},\"falloffColor\":{type:\"c\",value:new THREE.Color(0xFFFFFF)},\"falloffMap\":{type:\"t\",value:null},\"falloffBlendParams\":{type:\"v4\",value:new THREE.Vector4(1,0,0,1)},\"clearCoat\":{type:\"f\",value:0.0},\"clearCoatRoughness\":{type:\"f\",value:0.25},\"roughness\":{type:\"f\",value:0.5},\"roughnessMap\":{type:\"t\",value:null},\"roughnessOffsetRepeat\":{type:\"v4\",value:new THREE.Vector4(0,0,1,1)},\"roughnessGainBrightness\":{type:\"v4\",value:new THREE.Vector4(0,1,0,1)},\"metallic\":{type:\"f\",value:0.5},\"metallicMap\":{type:\"t\",value:null},\"metallicOffsetRepeat\":{type:\"v4\",value:new THREE.Vector4(0,0,1,1)},\"metallicGainBrightness\":{type:\"v4\",value:new THREE.Vector4(0,1,0,1)},\"anisotropy\":{type:\"f\",value:0.0},\"anisotropyMap\":{type:\"t\",value:null},\"anisotropyOffsetRepeat\":{type:\"v4\",value:new THREE.Vector4(0,0,1,1)},\"anisotropyGainBrightness\":{type:\"v4\",value:new THREE.Vector4(0,1,0,1)},\"anisotropyRotation\":{type:\"f\",value:0.0},\"anisotropyRotationMap\":{type:\"t\",value:null},\"anisotropyRotationOffsetRepeat\":{type:\"v4\",value:new THREE.Vector4(0,0,1,1)},\"anisotropyRotationGainBrightness\":{type:\"v4\",value:new THREE.Vector4(0,1,0,1)},\"translucency\":{type:\"c\",value:new THREE.Color(0x000000)},\"translucencyMap\":{type:\"t\",value:null},\"translucencyNormalAlpha\":{type:\"f\",value:0.75},\"translucencyNormalPower\":{type:\"f\",value:2.0},\"translucencyViewAlpha\":{type:\"f\",value:0.75},\"translucencyViewPower\":{type:\"f\",value:2.0}}]),vertexShader:[\"attribute vec4 tangent;\",\"#define PHONG\",\"#define PHYSICAL\",\"varying vec3 vViewPosition;\",\"varying vec3 vTangent;\",\"varying vec3 vBinormal;\",\"varying vec3 vNormal;\",THREE.ShaderChunk[\"common\"],THREE.ShaderChunk[\"map_pars_vertex\"],THREE.ShaderChunk[\"normalmap_pars_vertex\"],THREE.ShaderChunk[\"roughnessmap_pars_vertex\"],THREE.ShaderChunk[\"specularmap_pars_vertex\"],THREE.ShaderChunk[\"opacitymap_pars_vertex\"],THREE.ShaderChunk[\"anisotropymap_pars_vertex\"],THREE.ShaderChunk[\"anisotropyrotationmap_pars_vertex\"],THREE.ShaderChunk[\"metallicmap_pars_vertex\"],THREE.ShaderChunk[\"translucencymap_pars_vertex\"],THREE.ShaderChunk[\"bumpmap_pars_vertex\"],THREE.ShaderChunk[\"lightmap_pars_vertex\"],THREE.ShaderChunk[\"lights_physical_pars_vertex\"],THREE.ShaderChunk[\"color_pars_vertex\"],THREE.ShaderChunk[\"morphtarget_pars_vertex\"],THREE.ShaderChunk[\"skinning_pars_vertex\"],THREE.ShaderChunk[\"shadowmap_pars_vertex\"],\"void main() {\",THREE.ShaderChunk[\"map_vertex\"],THREE.ShaderChunk[\"normalmap_vertex\"],THREE.ShaderChunk[\"roughnessmap_vertex\"],THREE.ShaderChunk[\"opacitymap_vertex\"],THREE.ShaderChunk[\"specularmap_vertex\"],THREE.ShaderChunk[\"anisotropymap_vertex\"],THREE.ShaderChunk[\"anisotropyrotationmap_vertex\"],THREE.ShaderChunk[\"metallicmap_vertex\"],THREE.ShaderChunk[\"translucencymap_vertex\"],THREE.ShaderChunk[\"bumpmap_vertex\"],THREE.ShaderChunk[\"lightmap_vertex\"],THREE.ShaderChunk[\"color_vertex\"],THREE.ShaderChunk[\"morphnormal_vertex\"],THREE.ShaderChunk[\"skinbase_vertex\"],THREE.ShaderChunk[\"skinnormal_vertex\"],THREE.ShaderChunk[\"defaultnormal_vertex\"],\"vNormal = normalize( transformedNormal );\",THREE.ShaderChunk[\"morphtarget_vertex\"],THREE.ShaderChunk[\"skinning_vertex\"],THREE.ShaderChunk[\"default_vertex\"],\"vViewPosition = -mvPosition.xyz;\",THREE.ShaderChunk[\"worldpos_vertex\"],THREE.ShaderChunk[\"lights_physical_vertex\"],THREE.ShaderChunk[\"shadowmap_vertex\"],\"}\"].join(\"\\n\"),fragmentShader:[\"#ifdef TEXTURE_CUBE_LOD_EXT\",\"#extension GL_EXT_shader_texture_lod : enable\",\"#endif\",\"#define PHYSICAL\",\"uniform vec3 diffuse;\",\"uniform float opacity;\",\"uniform vec3 ambient;\",\"uniform vec3 emissive;\",\"uniform vec3 falloffColor;\",\"uniform vec4 falloffBlendParams;\",\"uniform vec3 specular;\",\"uniform float roughness;\",\"uniform float metallic;\",\"uniform float clearCoat;\",\"uniform float clearCoatRoughness;\",\"uniform vec3 translucency;\",\"uniform float translucencyNormalAlpha;\",\"uniform float translucencyNormalPower;\",\"uniform float translucencyViewPower;\",\"uniform float translucencyViewAlpha;\",\"uniform float anisotropy;\",\"uniform float anisotropyRotation;\",THREE.ShaderChunk[\"common\"],THREE.ShaderChunk[\"color_pars_fragment\"],THREE.ShaderChunk[\"map_pars_fragment\"],THREE.ShaderChunk[\"falloffmap_pars_fragment\"],THREE.ShaderChunk[\"opacitymap_pars_fragment\"],THREE.ShaderChunk[\"translucencymap_pars_fragment\"],THREE.ShaderChunk[\"lightmap_pars_fragment\"],THREE.ShaderChunk[\"envmap_pars_fragment\"],THREE.ShaderChunk[\"diffuseenvmap_pars_fragment\"],THREE.ShaderChunk[\"fog_pars_fragment\"],THREE.ShaderChunk[\"lights_physical_pars_fragment\"],THREE.ShaderChunk[\"shadowmap_pars_fragment\"],THREE.ShaderChunk[\"bumpmap_pars_fragment\"],THREE.ShaderChunk[\"normalmap_pars_fragment\"],THREE.ShaderChunk[\"specularmap_pars_fragment\"],THREE.ShaderChunk[\"anisotropymap_pars_fragment\"],THREE.ShaderChunk[\"anisotropyrotationmap_pars_fragment\"],THREE.ShaderChunk[\"metallicmap_pars_fragment\"],THREE.ShaderChunk[\"roughnessmap_pars_fragment\"],THREE.ShaderChunk[\"reflectivitymap_pars_fragment\"],THREE.ShaderChunk[\"lightattenuation_func_fragment\"],\"void main() {\",\"gl_FragColor = vec4( vec3 ( 0.0 ), opacity );\",\"vec3 diffuseColor = diffuse;\",\"vec3 translucencyColor = translucency;\",\"vec3 normal = normalize( vNormal );\",\"vec3 viewDirection = normalize( vViewPosition );\",THREE.ShaderChunk[\"map_fragment\"],THREE.ShaderChunk[\"opacitymap_fragment\"],THREE.ShaderChunk[\"alphatest_fragment\"],THREE.ShaderChunk[\"specularmap_fragment\"],THREE.ShaderChunk[\"anisotropymap_fragment\"],THREE.ShaderChunk[\"anisotropyrotationmap_fragment\"],THREE.ShaderChunk[\"roughnessmap_fragment\"],THREE.ShaderChunk[\"metallicmap_fragment\"],THREE.ShaderChunk[\"translucencymap_fragment\"],THREE.ShaderChunk[\"reflectivitymap_fragment\"],THREE.ShaderChunk[\"lights_physical_fragment\"],THREE.ShaderChunk[\"lightmap_fragment\"],THREE.ShaderChunk[\"color_fragment\"],THREE.ShaderChunk[\"envmap_fragment\"],THREE.ShaderChunk[\"shadowmap_fragment\"],THREE.ShaderChunk[\"linear_to_gamma_fragment\"],THREE.ShaderChunk[\"fog_fragment\"],\"gl_FragColor.xyz *= gl_FragColor.w;\",\"}\"].join(\"\\n\")},'basic':{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"],THREE.UniformsLib[\"fog\"],THREE.UniformsLib[\"shadowmap\"]]),vertexShader:[THREE.ShaderChunk[\"common\"],THREE.ShaderChunk[\"map_pars_vertex\"],THREE.ShaderChunk[\"lightmap_pars_vertex\"],THREE.ShaderChunk[\"color_pars_vertex\"],THREE.ShaderChunk[\"morphtarget_pars_vertex\"],THREE.ShaderChunk[\"skinning_pars_vertex\"],THREE.ShaderChunk[\"shadowmap_pars_vertex\"],\"void main() {\",THREE.ShaderChunk[\"map_vertex\"],THREE.ShaderChunk[\"lightmap_vertex\"],THREE.ShaderChunk[\"color_vertex\"],THREE.ShaderChunk[\"skinbase_vertex\"],\"#ifdef USE_ENVMAP\",THREE.ShaderChunk[\"morphnormal_vertex\"],THREE.ShaderChunk[\"skinnormal_vertex\"],THREE.ShaderChunk[\"defaultnormal_vertex\"],\"#endif\",THREE.ShaderChunk[\"morphtarget_vertex\"],THREE.ShaderChunk[\"skinning_vertex\"],THREE.ShaderChunk[\"default_vertex\"],THREE.ShaderChunk[\"worldpos_vertex\"],THREE.ShaderChunk[\"shadowmap_vertex\"],\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 diffuse;\",\"uniform float opacity;\",THREE.ShaderChunk[\"common\"],THREE.ShaderChunk[\"color_pars_fragment\"],THREE.ShaderChunk[\"map_pars_fragment\"],THREE.ShaderChunk[\"lightmap_pars_fragment\"],THREE.ShaderChunk[\"envmap_pars_fragment\"],THREE.ShaderChunk[\"fog_pars_fragment\"],THREE.ShaderChunk[\"shadowmap_pars_fragment\"],THREE.ShaderChunk[\"specularmap_pars_fragment\"],\"void main() {\",\"gl_FragColor = vec4( diffuse, opacity );\",THREE.ShaderChunk[\"map_fragment\"],THREE.ShaderChunk[\"alphatest_fragment\"],THREE.ShaderChunk[\"specularmap_fragment\"],THREE.ShaderChunk[\"lightmap_fragment\"],THREE.ShaderChunk[\"color_fragment\"],THREE.ShaderChunk[\"envmap_fragment\"],THREE.ShaderChunk[\"shadowmap_fragment\"],THREE.ShaderChunk[\"linear_to_gamma_fragment\"],THREE.ShaderChunk[\"fog_fragment\"],\"}\"].join(\"\\n\")},'lambert':{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"],THREE.UniformsLib[\"fog\"],THREE.UniformsLib[\"lights\"],THREE.UniformsLib[\"shadowmap\"],{\"ambient\":{type:\"c\",value:new THREE.Color(0xffffff)},\"emissive\":{type:\"c\",value:new THREE.Color(0x000000)},\"wrapRGB\":{type:\"v3\",value:new THREE.Vector3(1,1,1)}}]),vertexShader:[\"#define LAMBERT\",\"varying vec3 vLightFront;\",\"#ifdef DOUBLE_SIDED\",\"varying vec3 vLightBack;\",\"#endif\",THREE.ShaderChunk[\"common\"],THREE.ShaderChunk[\"map_pars_vertex\"],THREE.ShaderChunk[\"lightmap_pars_vertex\"],THREE.ShaderChunk[\"lights_lambert_pars_vertex\"],THREE.ShaderChunk[\"color_pars_vertex\"],THREE.ShaderChunk[\"morphtarget_pars_vertex\"],THREE.ShaderChunk[\"skinning_pars_vertex\"],THREE.ShaderChunk[\"shadowmap_pars_vertex\"],THREE.ShaderChunk[\"lightattenuation_func_fragment\"],\"void main() {\",THREE.ShaderChunk[\"map_vertex\"],THREE.ShaderChunk[\"lightmap_vertex\"],THREE.ShaderChunk[\"color_vertex\"],THREE.ShaderChunk[\"morphnormal_vertex\"],THREE.ShaderChunk[\"skinbase_vertex\"],THREE.ShaderChunk[\"skinnormal_vertex\"],THREE.ShaderChunk[\"defaultnormal_vertex\"],THREE.ShaderChunk[\"morphtarget_vertex\"],THREE.ShaderChunk[\"skinning_vertex\"],THREE.ShaderChunk[\"default_vertex\"],THREE.ShaderChunk[\"worldpos_vertex\"],THREE.ShaderChunk[\"lights_lambert_vertex\"],THREE.ShaderChunk[\"shadowmap_vertex\"],\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float opacity;\",\"varying vec3 vLightFront;\",\"#ifdef DOUBLE_SIDED\",\"varying vec3 vLightBack;\",\"#endif\",THREE.ShaderChunk[\"common\"],THREE.ShaderChunk[\"color_pars_fragment\"],THREE.ShaderChunk[\"map_pars_fragment\"],THREE.ShaderChunk[\"lightmap_pars_fragment\"],THREE.ShaderChunk[\"envmap_pars_fragment\"],THREE.ShaderChunk[\"fog_pars_fragment\"],THREE.ShaderChunk[\"shadowmap_pars_fragment\"],THREE.ShaderChunk[\"specularmap_pars_fragment\"],\"void main() {\",\"gl_FragColor = vec4( vec3 ( 1.0 ), opacity );\",THREE.ShaderChunk[\"map_fragment\"],THREE.ShaderChunk[\"alphatest_fragment\"],THREE.ShaderChunk[\"specularmap_fragment\"],\"#ifdef DOUBLE_SIDED\",\"if ( gl_FrontFacing )\",\"gl_FragColor.xyz *= vLightFront;\",\"else\",\"gl_FragColor.xyz *= vLightBack;\",\"#else\",\"gl_FragColor.xyz *= vLightFront;\",\"#endif\",THREE.ShaderChunk[\"lightmap_fragment\"],THREE.ShaderChunk[\"color_fragment\"],THREE.ShaderChunk[\"envmap_fragment\"],THREE.ShaderChunk[\"shadowmap_fragment\"],THREE.ShaderChunk[\"linear_to_gamma_fragment\"],THREE.ShaderChunk[\"fog_fragment\"],\"}\"].join(\"\\n\")},'phong':{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"],THREE.UniformsLib[\"bumpmap\"],THREE.UniformsLib[\"normalmap\"],THREE.UniformsLib[\"specularmap\"],THREE.UniformsLib[\"fog\"],THREE.UniformsLib[\"lights\"],THREE.UniformsLib[\"shadowmap\"],THREE.UniformsLib[\"opacitymap\"],{\"ambient\":{type:\"c\",value:new THREE.Color(0xffffff)},\"emissive\":{type:\"c\",value:new THREE.Color(0x000000)},\"specular\":{type:\"c\",value:new THREE.Color(0x111111)},\"shininess\":{type:\"f\",value:30},\"wrapRGB\":{type:\"v3\",value:new THREE.Vector3(1,1,1)}}]),vertexShader:[\"#define PHONG\",\"varying vec3 vViewPosition;\",\"varying vec3 vNormal;\",THREE.ShaderChunk[\"common\"],THREE.ShaderChunk[\"map_pars_vertex\"],THREE.ShaderChunk[\"normalmap_pars_vertex\"],THREE.ShaderChunk[\"bumpmap_pars_vertex\"],THREE.ShaderChunk[\"specularmap_pars_vertex\"],THREE.ShaderChunk[\"opacitymap_pars_vertex\"],THREE.ShaderChunk[\"lightmap_pars_vertex\"],THREE.ShaderChunk[\"lights_phong_pars_vertex\"],THREE.ShaderChunk[\"color_pars_vertex\"],THREE.ShaderChunk[\"morphtarget_pars_vertex\"],THREE.ShaderChunk[\"skinning_pars_vertex\"],THREE.ShaderChunk[\"shadowmap_pars_vertex\"],\"void main() {\",THREE.ShaderChunk[\"map_vertex\"],THREE.ShaderChunk[\"normalmap_vertex\"],THREE.ShaderChunk[\"bumpmap_vertex\"],THREE.ShaderChunk[\"opacitymap_vertex\"],THREE.ShaderChunk[\"specularmap_vertex\"],THREE.ShaderChunk[\"lightmap_vertex\"],THREE.ShaderChunk[\"color_vertex\"],THREE.ShaderChunk[\"morphnormal_vertex\"],THREE.ShaderChunk[\"skinbase_vertex\"],THREE.ShaderChunk[\"skinnormal_vertex\"],THREE.ShaderChunk[\"defaultnormal_vertex\"],\"vNormal = normalize( transformedNormal );\",THREE.ShaderChunk[\"morphtarget_vertex\"],THREE.ShaderChunk[\"skinning_vertex\"],THREE.ShaderChunk[\"default_vertex\"],\"vViewPosition = -mvPosition.xyz;\",THREE.ShaderChunk[\"worldpos_vertex\"],THREE.ShaderChunk[\"lights_phong_vertex\"],THREE.ShaderChunk[\"shadowmap_vertex\"],\"}\"].join(\"\\n\"),fragmentShader:[\"#define PHONG\",\"uniform vec3 diffuse;\",\"uniform float opacity;\",\"uniform vec3 ambient;\",\"uniform vec3 emissive;\",\"uniform vec3 specular;\",\"uniform float shininess;\",THREE.ShaderChunk[\"common\"],THREE.ShaderChunk[\"color_pars_fragment\"],THREE.ShaderChunk[\"map_pars_fragment\"],THREE.ShaderChunk[\"opacitymap_pars_fragment\"],THREE.ShaderChunk[\"lightmap_pars_fragment\"],THREE.ShaderChunk[\"envmap_pars_fragment\"],THREE.ShaderChunk[\"fog_pars_fragment\"],THREE.ShaderChunk[\"lights_phong_pars_fragment\"],THREE.ShaderChunk[\"shadowmap_pars_fragment\"],THREE.ShaderChunk[\"bumpmap_pars_fragment\"],THREE.ShaderChunk[\"normalmap_pars_fragment\"],THREE.ShaderChunk[\"specularmap_pars_fragment\"],THREE.ShaderChunk[\"lightattenuation_func_fragment\"],\"void main() {\",\"gl_FragColor = vec4( vec3 ( 1.0 ), opacity );\",\"vec3 diffuseColor = diffuse;\",THREE.ShaderChunk[\"map_fragment\"],THREE.ShaderChunk[\"opacitymap_fragment\"],THREE.ShaderChunk[\"alphatest_fragment\"],THREE.ShaderChunk[\"specularmap_fragment\"],THREE.ShaderChunk[\"lights_phong_fragment\"],THREE.ShaderChunk[\"lightmap_fragment\"],THREE.ShaderChunk[\"color_fragment\"],THREE.ShaderChunk[\"envmap_fragment\"],THREE.ShaderChunk[\"shadowmap_fragment\"],THREE.ShaderChunk[\"linear_to_gamma_fragment\"],THREE.ShaderChunk[\"fog_fragment\"],\"}\"].join(\"\\n\")},'particle_basic':{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib[\"particle\"],THREE.UniformsLib[\"shadowmap\"]]),vertexShader:[\"uniform float size;\",\"uniform float scale;\",THREE.ShaderChunk[\"common\"],THREE.ShaderChunk[\"color_pars_vertex\"],THREE.ShaderChunk[\"shadowmap_pars_vertex\"],\"void main() {\",THREE.ShaderChunk[\"color_vertex\"],\"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\"#ifdef USE_SIZEATTENUATION\",\"gl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\"#else\",\"gl_PointSize = size;\",\"#endif\",\"gl_Position = projectionMatrix * mvPosition;\",THREE.ShaderChunk[\"worldpos_vertex\"],THREE.ShaderChunk[\"shadowmap_vertex\"],\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 psColor;\",\"uniform float opacity;\",THREE.ShaderChunk[\"common\"],THREE.ShaderChunk[\"color_pars_fragment\"],THREE.ShaderChunk[\"map_particle_pars_fragment\"],THREE.ShaderChunk[\"fog_pars_fragment\"],THREE.ShaderChunk[\"shadowmap_pars_fragment\"],\"void main() {\",\"gl_FragColor = vec4( psColor, opacity );\",THREE.ShaderChunk[\"map_particle_fragment\"],THREE.ShaderChunk[\"alphatest_fragment\"],THREE.ShaderChunk[\"color_fragment\"],THREE.ShaderChunk[\"shadowmap_fragment\"],THREE.ShaderChunk[\"fog_fragment\"],\"}\"].join(\"\\n\")},'dashed':{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"],THREE.UniformsLib[\"fog\"],{\"scale\":{type:\"f\",value:1},\"dashSize\":{type:\"f\",value:1},\"totalSize\":{type:\"f\",value:2}}]),vertexShader:[\"uniform float scale;\",\"attribute float lineDistance;\",\"varying float vLineDistance;\",THREE.ShaderChunk[\"common\"],THREE.ShaderChunk[\"color_pars_vertex\"],\"void main() {\",THREE.ShaderChunk[\"color_vertex\"],\"vLineDistance = scale * lineDistance;\",\"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\"gl_Position = projectionMatrix * mvPosition;\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 diffuse;\",\"uniform float opacity;\",\"uniform float dashSize;\",\"uniform float totalSize;\",\"varying float vLineDistance;\",THREE.ShaderChunk[\"common\"],THREE.ShaderChunk[\"color_pars_fragment\"],THREE.ShaderChunk[\"fog_pars_fragment\"],\"void main() {\",\"if ( mod( vLineDistance, totalSize ) > dashSize ) {\",\"discard;\",\"}\",\"gl_FragColor = vec4( diffuse, opacity );\",THREE.ShaderChunk[\"color_fragment\"],THREE.ShaderChunk[\"fog_fragment\"],\"}\"].join(\"\\n\")},'depth':{uniforms:{\"mNear\":{type:\"f\",value:1.0},\"mFar\":{type:\"f\",value:2000.0},\"opacity\":{type:\"f\",value:1.0}},vertexShader:[\"void main() {\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float mNear;\",\"uniform float mFar;\",\"uniform float opacity;\",\"void main() {\",\"float depth = gl_FragCoord.z / gl_FragCoord.w;\",\"float color = clamp( ( depth - mNear ) / ( mFar - mNear ), 0.0, 1.0 );\",\"gl_FragColor = vec4( vec3( color ), opacity );\",\"}\"].join(\"\\n\")},'normal':{uniforms:{\"opacity\":{type:\"f\",value:1.0}},vertexShader:[\"varying vec3 vNormal;\",THREE.ShaderChunk[\"common\"],THREE.ShaderChunk[\"morphtarget_pars_vertex\"],\"void main() {\",\"vNormal = normalize( normalMatrix * normal );\",THREE.ShaderChunk[\"morphtarget_vertex\"],THREE.ShaderChunk[\"default_vertex\"],\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float opacity;\",\"varying vec3 vNormal;\",\"void main() {\",\"gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\"}\"].join(\"\\n\")},'normalmap':{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib[\"fog\"],THREE.UniformsLib[\"lights\"],THREE.UniformsLib[\"shadowmap\"],{\"enableAO\":{type:\"i\",value:0},\"enableDiffuse\":{type:\"i\",value:0},\"enableSpecular\":{type:\"i\",value:0},\"enableReflection\":{type:\"i\",value:0},\"enableDisplacement\":{type:\"i\",value:0},\"tDisplacement\":{type:\"t\",value:null},\"tDiffuse\":{type:\"t\",value:null},\"tCube\":{type:\"t\",value:null},\"tNormal\":{type:\"t\",value:null},\"tSpecular\":{type:\"t\",value:null},\"tAO\":{type:\"t\",value:null},\"uNormalScale\":{type:\"v2\",value:new THREE.Vector2(1,1)},\"uDisplacementBias\":{type:\"f\",value:0.0},\"uDisplacementScale\":{type:\"f\",value:1.0},\"diffuse\":{type:\"c\",value:new THREE.Color(0xffffff)},\"specular\":{type:\"c\",value:new THREE.Color(0x111111)},\"ambient\":{type:\"c\",value:new THREE.Color(0xffffff)},\"shininess\":{type:\"f\",value:30},\"opacity\":{type:\"f\",value:1},\"useRefract\":{type:\"i\",value:0},\"refractionRatio\":{type:\"f\",value:0.98},\"reflectivity\":{type:\"f\",value:0.5},\"uOffset\":{type:\"v2\",value:new THREE.Vector2(0,0)},\"uRepeat\":{type:\"v2\",value:new THREE.Vector2(1,1)},\"wrapRGB\":{type:\"v3\",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:[\"uniform vec3 ambient;\",\"uniform vec3 diffuse;\",\"uniform vec3 specular;\",\"uniform float shininess;\",\"uniform float opacity;\",\"uniform bool enableDiffuse;\",\"uniform bool enableSpecular;\",\"uniform bool enableAO;\",\"uniform bool enableReflection;\",\"uniform sampler2D tDiffuse;\",\"uniform sampler2D tNormal;\",\"uniform sampler2D tSpecular;\",\"uniform sampler2D tAO;\",\"uniform samplerCube tCube;\",\"uniform vec2 uNormalScale;\",\"uniform bool useRefract;\",\"uniform float refractionRatio;\",\"uniform float reflectivity;\",\"varying vec3 vTangent;\",\"varying vec3 vBinormal;\",\"varying vec3 vNormal;\",\"varying vec2 vUv;\",\"uniform vec3 ambientLightColor;\",\"#if MAX_DIR_LIGHTS > 0\",\"uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\",\"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\",\"#endif\",\"#if MAX_HEMI_LIGHTS > 0\",\"uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\",\"uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\",\"uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\",\"#endif\",\"#if MAX_POINT_LIGHTS > 0\",\"uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\",\"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\",\"uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\",\"#endif\",\"#if MAX_SPOT_LIGHTS > 0\",\"uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\",\"uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\",\"uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\",\"uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\",\"uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\",\"uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\",\"#endif\",\"#ifdef WRAP_AROUND\",\"uniform vec3 wrapRGB;\",\"#endif\",\"varying vec3 vWorldPosition;\",\"varying vec3 vViewPosition;\",THREE.ShaderChunk[\"common\"],THREE.ShaderChunk[\"shadowmap_pars_fragment\"],THREE.ShaderChunk[\"fog_pars_fragment\"],\"void main() {\",\"gl_FragColor = vec4( vec3( 1.0 ), opacity );\",\"vec3 specularTex = vec3( 1.0 );\",\"vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\",\"normalTex.xy *= uNormalScale;\",\"normalTex = normalize( normalTex );\",\"if( enableDiffuse ) {\",\"#ifdef GAMMA_INPUT\",\"vec4 texelColor = texture2D( tDiffuse, vUv );\",\"texelColor.xyz *= texelColor.xyz;\",\"gl_FragColor = gl_FragColor * texelColor;\",\"#else\",\"gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\",\"#endif\",\"}\",\"if( enableAO ) {\",\"#ifdef GAMMA_INPUT\",\"vec4 aoColor = texture2D( tAO, vUv );\",\"aoColor.xyz *= aoColor.xyz;\",\"gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\",\"#else\",\"gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\",\"#endif\",\"}\",\"if( enableSpecular )\",\"specularTex = texture2D( tSpecular, vUv ).xyz;\",\"mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\",\"vec3 finalNormal = tsb * normalTex;\",\"#ifdef FLIP_SIDED\",\"finalNormal = -finalNormal;\",\"#endif\",\"vec3 normal = normalize( finalNormal );\",\"vec3 viewDirection = normalize( vViewPosition );\",\"#if MAX_POINT_LIGHTS > 0\",\"vec3 pointDiffuse = vec3( 0.0 );\",\"vec3 pointSpecular = vec3( 0.0 );\",\"for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\",\"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\",\"vec3 pointVector = lPosition.xyz + vViewPosition.xyz;\",\"float pointDistance = 1.0;\",\"if ( pointLightDistance[ i ] > 0.0 )\",\"pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\",\"pointVector = normalize( pointVector );\",\"#ifdef WRAP_AROUND\",\"float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\",\"float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\",\"vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\",\"#else\",\"float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\",\"#endif\",\"pointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\",\"vec3 pointHalfVector = normalize( pointVector + viewDirection );\",\"float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\",\"float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\",\"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\",\"pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\",\"}\",\"#endif\",\"#if MAX_SPOT_LIGHTS > 0\",\"vec3 spotDiffuse = vec3( 0.0 );\",\"vec3 spotSpecular = vec3( 0.0 );\",\"for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\",\"vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\",\"vec3 spotVector = lPosition.xyz + vViewPosition.xyz;\",\"float spotDistance = 1.0;\",\"if ( spotLightDistance[ i ] > 0.0 )\",\"spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\",\"spotVector = normalize( spotVector );\",\"float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\",\"if ( spotEffect > spotLightAngleCos[ i ] ) {\",\"spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\",\"#ifdef WRAP_AROUND\",\"float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\",\"float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\",\"vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\",\"#else\",\"float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\",\"#endif\",\"spotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\",\"vec3 spotHalfVector = normalize( spotVector + viewDirection );\",\"float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\",\"float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\",\"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\",\"spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\",\"}\",\"}\",\"#endif\",\"#if MAX_DIR_LIGHTS > 0\",\"vec3 dirDiffuse = vec3( 0.0 );\",\"vec3 dirSpecular = vec3( 0.0 );\",\"for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\",\"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\",\"vec3 dirVector = normalize( lDirection.xyz );\",\"#ifdef WRAP_AROUND\",\"float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\",\"float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\",\"vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\",\"#else\",\"float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\",\"#endif\",\"dirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\",\"vec3 dirHalfVector = normalize( dirVector + viewDirection );\",\"float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\",\"float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\",\"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\",\"dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\",\"}\",\"#endif\",\"#if MAX_HEMI_LIGHTS > 0\",\"vec3 hemiDiffuse  = vec3( 0.0 );\",\"vec3 hemiSpecular = vec3( 0.0 );\",\"for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\",\"vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\",\"vec3 lVector = normalize( lDirection.xyz );\",\"float dotProduct = dot( normal, lVector );\",\"float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\",\"vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\",\"hemiDiffuse += diffuse * hemiColor;\",\"vec3 hemiHalfVectorSky = normalize( lVector + viewDirection );\",\"float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\",\"float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\",\"vec3 lVectorGround = -lVector;\",\"vec3 hemiHalfVectorGround = normalize( lVectorGround + viewDirection );\",\"float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\",\"float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\",\"float dotProductGround = dot( normal, lVectorGround );\",\"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\"vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\",\"vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\",\"hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\",\"}\",\"#endif\",\"vec3 totalDiffuse = vec3( 0.0 );\",\"vec3 totalSpecular = vec3( 0.0 );\",\"#if MAX_DIR_LIGHTS > 0\",\"totalDiffuse += dirDiffuse;\",\"totalSpecular += dirSpecular;\",\"#endif\",\"#if MAX_HEMI_LIGHTS > 0\",\"totalDiffuse += hemiDiffuse;\",\"totalSpecular += hemiSpecular;\",\"#endif\",\"#if MAX_POINT_LIGHTS > 0\",\"totalDiffuse += pointDiffuse;\",\"totalSpecular += pointSpecular;\",\"#endif\",\"#if MAX_SPOT_LIGHTS > 0\",\"totalDiffuse += spotDiffuse;\",\"totalSpecular += spotSpecular;\",\"#endif\",\"#ifdef METAL\",\"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\",\"#else\",\"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\",\"#endif\",\"if ( enableReflection ) {\",\"vec3 vReflect;\",\"vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\",\"if ( useRefract ) {\",\"vReflect = refract( cameraToVertex, normal, refractionRatio );\",\"} else {\",\"vReflect = reflect( cameraToVertex, normal );\",\"}\",\"vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\",\"#ifdef GAMMA_INPUT\",\"cubeColor.xyz *= cubeColor.xyz;\",\"#endif\",\"gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\",\"}\",THREE.ShaderChunk[\"shadowmap_fragment\"],THREE.ShaderChunk[\"linear_to_gamma_fragment\"],THREE.ShaderChunk[\"fog_fragment\"],\"}\"].join(\"\\n\"),vertexShader:[\"attribute vec4 tangent;\",\"uniform vec2 uOffset;\",\"uniform vec2 uRepeat;\",\"uniform bool enableDisplacement;\",\"#ifdef VERTEX_TEXTURES\",\"uniform sampler2D tDisplacement;\",\"uniform float uDisplacementScale;\",\"uniform float uDisplacementBias;\",\"#endif\",\"varying vec3 vTangent;\",\"varying vec3 vBinormal;\",\"varying vec3 vNormal;\",\"varying vec2 vUv;\",\"varying vec3 vWorldPosition;\",\"varying vec3 vViewPosition;\",THREE.ShaderChunk[\"common\"],THREE.ShaderChunk[\"skinning_pars_vertex\"],THREE.ShaderChunk[\"shadowmap_pars_vertex\"],\"void main() {\",THREE.ShaderChunk[\"skinbase_vertex\"],THREE.ShaderChunk[\"skinnormal_vertex\"],\"#ifdef USE_SKINNING\",\"vNormal = normalize( normalMatrix * skinnedNormal.xyz );\",\"vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\",\"vTangent = normalize( normalMatrix * skinnedTangent.xyz );\",\"#else\",\"vNormal = normalize( normalMatrix * normal );\",\"vTangent = normalize( normalMatrix * tangent.xyz );\",\"#endif\",\"vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\",\"vUv = uv * uRepeat + uOffset;\",\"vec3 displacedPosition;\",\"#ifdef VERTEX_TEXTURES\",\"if ( enableDisplacement ) {\",\"vec3 dv = texture2D( tDisplacement, uv ).xyz;\",\"float df = uDisplacementScale * dv.x + uDisplacementBias;\",\"displacedPosition = position + normalize( normal ) * df;\",\"} else {\",\"#ifdef USE_SKINNING\",\"vec4 skinVertex = vec4( position, 1.0 );\",\"vec4 skinned  = boneMatX * skinVertex * skinWeight.x;\",\"skinned \t  += boneMatY * skinVertex * skinWeight.y;\",\"displacedPosition  = skinned.xyz;\",\"#else\",\"displacedPosition = position;\",\"#endif\",\"}\",\"#else\",\"#ifdef USE_SKINNING\",\"vec4 skinVertex = vec4( position, 1.0 );\",\"vec4 skinned  = boneMatX * skinVertex * skinWeight.x;\",\"skinned \t  += boneMatY * skinVertex * skinWeight.y;\",\"displacedPosition  = skinned.xyz;\",\"#else\",\"displacedPosition = position;\",\"#endif\",\"#endif\",\"vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\",\"vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\",\"gl_Position = projectionMatrix * mvPosition;\",\"vWorldPosition = worldPosition.xyz;\",\"vViewPosition = -mvPosition.xyz;\",\"#ifdef USE_SHADOWMAP\",\"for( int i = 0; i < MAX_SHADOWS; i ++ ) {\",\"vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\",\"}\",\"#endif\",\"}\"].join(\"\\n\")},'cube':{uniforms:{\"tCube\":{type:\"t\",value:null},\"tFlip\":{type:\"f\",value:-1},\"tEncoding\":{type:\"i\",value:0},\"blurring\":{type:\"f\",value:0}},vertexShader:[\"varying vec3 vWorldPosition;\",\"void main() {\",\"vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\",\"vWorldPosition = worldPosition.xyz;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"#ifdef TEXTURE_CUBE_LOD_EXT\",\"#extension GL_EXT_shader_texture_lod : enable\",\"#endif\",THREE.ShaderChunk[\"common\"],\"uniform samplerCube tCube;\",\"uniform float tFlip;\",\"uniform int tEncoding;\",\"uniform float blurring;\",\"varying vec3 vWorldPosition;\",\"void main() {\",\"vec3 queryVector = vec3( tFlip * vWorldPosition.x, vWorldPosition.yz );\",\"#if defined( TEXTURE_CUBE_LOD_EXT )\",\"vec4 color = textureCubeLodEXT( tCube, queryVector, blurring );\",\"#else\",\"vec4 color = textureCube( tCube, queryVector );\",\"#endif\",\"color = texelDecode( color, tEncoding );\",\"#ifdef GAMMA_OUTPUT\",\"color.xyz = sqrt( color.xyz );\",\"#endif\",\"gl_FragColor = color;\",\"}\"].join(\"\\n\")},'depthRGBA':{uniforms:{},vertexShader:[THREE.ShaderChunk[\"common\"],THREE.ShaderChunk[\"morphtarget_pars_vertex\"],THREE.ShaderChunk[\"skinning_pars_vertex\"],\"void main() {\",THREE.ShaderChunk[\"skinbase_vertex\"],THREE.ShaderChunk[\"morphtarget_vertex\"],THREE.ShaderChunk[\"skinning_vertex\"],THREE.ShaderChunk[\"default_vertex\"],\"}\"].join(\"\\n\"),fragmentShader:[\"vec4 pack_depth( const float depth ) {\",\"\t\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\",\"\tres -= res.xxyz * bit_mask;\",\"\treturn res;\",\"}\",\"void main() {\",\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\"}\"].join(\"\\n\")},'linearDepthRGBA':{uniforms:{\"zNear\":{type:\"f\",value:0.5},\"zFar\":{type:\"f\",value:1000}},vertexShader:[THREE.ShaderChunk[\"common\"],THREE.ShaderChunk[\"morphtarget_pars_vertex\"],THREE.ShaderChunk[\"skinning_pars_vertex\"],\"varying vec3 vViewPosition;\",\"void main() {\",THREE.ShaderChunk[\"skinbase_vertex\"],THREE.ShaderChunk[\"morphtarget_vertex\"],THREE.ShaderChunk[\"skinning_vertex\"],THREE.ShaderChunk[\"default_vertex\"],\"vViewPosition = -mvPosition.xyz;\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float zNear;\",\"uniform float zFar;\",\"varying vec3 vViewPosition;\",\"vec4 pack_depth( const float depth ) {\",\"\t\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\",\"\tres -= res.xxyz * bit_mask;\",\"\treturn res;\",\"}\",\"void main() {\",\"gl_FragColor = pack_depth( clamp( ( vViewPosition.z - zNear ) / ( zFar - zNear ), 0.0, 1.0 ) );\",\"}\"].join(\"\\n\")}};THREE.WebGLRenderer=function(parameters){console.log('THREE.WebGLRenderer',THREE.REVISION);parameters=parameters||{};var _canvas=parameters.canvas!==undefined?parameters.canvas:document.createElement('canvas'),_context=parameters.context!==undefined?parameters.context:null,_precision=parameters.precision!==undefined?parameters.precision:'mediump',_buffers={},_alpha=parameters.alpha!==undefined?parameters.alpha:false,_premultipliedAlpha=parameters.premultipliedAlpha!==undefined?parameters.premultipliedAlpha:true,_antialias=parameters.antialias!==undefined?parameters.antialias:false,_stencil=parameters.stencil!==undefined?parameters.stencil:true,_preserveDrawingBuffer=parameters.preserveDrawingBuffer!==undefined?parameters.preserveDrawingBuffer:false,_clearColor=new THREE.Color(0x000000),_clearAlpha=0;this.domElement=_canvas;this.context=null;this.devicePixelRatio=parameters.devicePixelRatio!==undefined?parameters.devicePixelRatio:self.devicePixelRatio!==undefined?self.devicePixelRatio:1;this.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;this.sortObjects=true;this.autoUpdateObjects=true;this.gammaInput=true;this.gammaOutput=true;this.shadowMapEnabled=false;this.shadowMapAutoUpdate=true;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapDebug=false;this.shadowMapCascade=false;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=true;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var _this=this,_programs=[],_programs_counter=0,_currentProgram=null,_currentFramebuffer=null,_currentMaterialId=-1,_currentGeometryGroupHash=null,_currentCamera=null,_usedTextureUnits=0,_oldDoubleSided=-1,_oldFlipSided=-1,_oldBlending=-1,_oldBlendEquation=-1,_oldBlendSrc=-1,_oldBlendDst=-1,_oldDepthTest=-1,_oldDepthWrite=-1,_oldPolygonOffset=null,_oldPolygonOffsetFactor=null,_oldPolygonOffsetUnits=null,_oldLineWidth=null,_viewportX=0,_viewportY=0,_viewportWidth=_canvas.width,_viewportHeight=_canvas.height,_currentWidth=0,_currentHeight=0,_enabledAttributes=new Uint8Array(16),_frustum=new THREE.Frustum(),_projScreenMatrix=new THREE.Matrix4(),_projScreenMatrixPS=new THREE.Matrix4(),_vector3=new THREE.Vector3(),_width=new THREE.Vector3(),_height=new THREE.Vector3(),_direction=new THREE.Vector3(),_lightsNeedUpdate=true,_lights={ambient:[0,0,0],directional:{length:0,colors:new Array(),positions:new Array()},point:{length:0,colors:new Array(),positions:new Array(),distances:new Array(),decayExponents:new Array()},spot:{length:0,colors:new Array(),positions:new Array(),distances:new Array(),decayExponents:new Array(),directions:new Array(),anglesCos:new Array(),exponents:new Array()},hemi:{length:0,skyColors:new Array(),groundColors:new Array(),positions:new Array()},area:{length:0,colors:new Array(),positions:new Array(),distances:new Array(),decayExponents:new Array(),widths:new Array(),heights:new Array()}};var _gl;var _glExtensionTextureFloat;var _glExtensionTextureFloatLinear;var _glExtensionStandardDerivatives;var _glExtensionShaderTextureLOD;var _glExtensionTextureFilterAnisotropic;var _glExtensionCompressedTextureS3TC;initGL();setDefaultGLState();this.context=_gl;var _maxTextures=_gl.getParameter(_gl.MAX_TEXTURE_IMAGE_UNITS);var _maxVertexTextures=_gl.getParameter(_gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);var _maxTextureSize=_gl.getParameter(_gl.MAX_TEXTURE_SIZE);var _maxCubemapSize=_gl.getParameter(_gl.MAX_CUBE_MAP_TEXTURE_SIZE);var _maxAnisotropy=_glExtensionTextureFilterAnisotropic?_gl.getParameter(_glExtensionTextureFilterAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0;var _supportsVertexTextures=_maxVertexTextures>0;var _supportsBoneTextures=_supportsVertexTextures&&_glExtensionTextureFloat;var _compressedTextureFormats=_glExtensionCompressedTextureS3TC?_gl.getParameter(_gl.COMPRESSED_TEXTURE_FORMATS):[];var _vertexShaderPrecisionHighpFloat=_gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER,_gl.HIGH_FLOAT);var _vertexShaderPrecisionMediumpFloat=_gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER,_gl.MEDIUM_FLOAT);var _vertexShaderPrecisionLowpFloat=_gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER,_gl.LOW_FLOAT);var _fragmentShaderPrecisionHighpFloat=_gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER,_gl.HIGH_FLOAT);var _fragmentShaderPrecisionMediumpFloat=_gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER,_gl.MEDIUM_FLOAT);var _fragmentShaderPrecisionLowpFloat=_gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER,_gl.LOW_FLOAT);var _vertexShaderPrecisionHighpInt=_gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER,_gl.HIGH_INT);var _vertexShaderPrecisionMediumpInt=_gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER,_gl.MEDIUM_INT);var _vertexShaderPrecisionLowpInt=_gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER,_gl.LOW_INT);var _fragmentShaderPrecisionHighpInt=_gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER,_gl.HIGH_INT);var _fragmentShaderPrecisionMediumpInt=_gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER,_gl.MEDIUM_INT);var _fragmentShaderPrecisionLowpInt=_gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER,_gl.LOW_INT);var highpAvailable=_vertexShaderPrecisionHighpFloat.precision>0&&_fragmentShaderPrecisionHighpFloat.precision>0;var mediumpAvailable=_vertexShaderPrecisionMediumpFloat.precision>0&&_fragmentShaderPrecisionMediumpFloat.precision>0;if(_precision===\"highp\"&&!highpAvailable){if(mediumpAvailable){_precision=\"mediump\";THREE.onwarning(\"WebGLRenderer: highp not supported, using mediump\");}else{_precision=\"lowp\";THREE.onwarning(\"WebGLRenderer: highp and mediump not supported, using lowp\");}}if(_precision===\"mediump\"&&!mediumpAvailable){_precision=\"lowp\";THREE.onwarning(\"WebGLRenderer: mediump not supported, using lowp\");}this.getContext=function(){return _gl;};this.supportsVertexTextures=function(){return _supportsVertexTextures;};this.supportsFloatTextures=function(){return _glExtensionTextureFloat;};this.supportsStandardDerivatives=function(){return _glExtensionStandardDerivatives;};this.supportsCompressedTextureS3TC=function(){return _glExtensionCompressedTextureS3TC;};this.getMaxAnisotropy=function(){return _maxAnisotropy;};this.getPrecision=function(){return _precision;};this.setSize=function(width,height,updateStyle){_canvas.width=width*this.devicePixelRatio;_canvas.height=height*this.devicePixelRatio;if(this.devicePixelRatio!==1&&updateStyle!==false){_canvas.style.width=width+'px';_canvas.style.height=height+'px';}this.setViewport(0,0,width,height);};this.setViewport=function(x,y,width,height){_viewportX=x*this.devicePixelRatio;_viewportY=y*this.devicePixelRatio;_viewportWidth=width*this.devicePixelRatio;_viewportHeight=height*this.devicePixelRatio;_gl.viewport(_viewportX,_viewportY,_viewportWidth,_viewportHeight);};this.setScissor=function(x,y,width,height){_gl.scissor(x*this.devicePixelRatio,y*this.devicePixelRatio,width*this.devicePixelRatio,height*this.devicePixelRatio);};this.enableScissorTest=function(enable){enable?_gl.enable(_gl.SCISSOR_TEST):_gl.disable(_gl.SCISSOR_TEST);};this.setClearColor=function(color,alpha){_clearColor.set(color);_clearAlpha=alpha!==undefined?alpha:1;_gl.clearColor(_clearColor.r,_clearColor.g,_clearColor.b,_clearAlpha);};this.setClearColorHex=function(hex,alpha){THREE.onwarning('DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.');this.setClearColor(hex,alpha);};this.getClearColor=function(){return _clearColor;};this.getClearAlpha=function(){return _clearAlpha;};this.clear=function(color,depth,stencil){var bits=0;if(color===undefined||color)bits|=_gl.COLOR_BUFFER_BIT;if(depth===undefined||depth)bits|=_gl.DEPTH_BUFFER_BIT;if(stencil===undefined||stencil)bits|=_gl.STENCIL_BUFFER_BIT;_gl.clear(bits);};this.clearColor=function(){_gl.clear(_gl.COLOR_BUFFER_BIT);};this.clearDepth=function(){_gl.clear(_gl.DEPTH_BUFFER_BIT);};this.clearStencil=function(){_gl.clear(_gl.STENCIL_BUFFER_BIT);};this.clearTarget=function(renderTarget,color,depth,stencil){this.setRenderTarget(renderTarget);this.clear(color,depth,stencil);};this.addPostPlugin=function(plugin){plugin.init(this);this.renderPluginsPost.push(plugin);};this.addPrePlugin=function(plugin){plugin.init(this);this.renderPluginsPre.push(plugin);};this.updateShadowMap=function(scene,camera){_currentProgram=null;_oldBlending=-1;_oldDepthTest=-1;_oldDepthWrite=-1;_currentGeometryGroupHash=-1;_currentMaterialId=-1;_lightsNeedUpdate=true;_oldDoubleSided=-1;_oldFlipSided=-1;this.shadowMapPlugin.update(scene,camera);};function createParticleBuffers(geometry){geometry.__webglVertexBuffer=_gl.createBuffer();geometry.__webglColorBuffer=_gl.createBuffer();_this.info.memory.geometries++;};function createLineBuffers(geometry){geometry.__webglVertexBuffer=_gl.createBuffer();geometry.__webglColorBuffer=_gl.createBuffer();geometry.__webglLineDistanceBuffer=_gl.createBuffer();_this.info.memory.geometries++;};function createMeshBuffers(geometryGroup){geometryGroup.__webglVertexBuffer=_gl.createBuffer();geometryGroup.__webglNormalBuffer=_gl.createBuffer();geometryGroup.__webglTangentBuffer=_gl.createBuffer();geometryGroup.__webglColorBuffer=_gl.createBuffer();geometryGroup.__webglUVBuffer=_gl.createBuffer();geometryGroup.__webglUV2Buffer=_gl.createBuffer();geometryGroup.__webglSkinIndicesBuffer=_gl.createBuffer();geometryGroup.__webglSkinWeightsBuffer=_gl.createBuffer();geometryGroup.__webglFaceBuffer=_gl.createBuffer();geometryGroup.__webglLineBuffer=_gl.createBuffer();var m,ml;if(geometryGroup.numMorphTargets){geometryGroup.__webglMorphTargetsBuffers=[];for(m=0,ml=geometryGroup.numMorphTargets;m<ml;m++){geometryGroup.__webglMorphTargetsBuffers.push(_gl.createBuffer());}}if(geometryGroup.numMorphNormals){geometryGroup.__webglMorphNormalsBuffers=[];for(m=0,ml=geometryGroup.numMorphNormals;m<ml;m++){geometryGroup.__webglMorphNormalsBuffers.push(_gl.createBuffer());}}_this.info.memory.geometries++;};var onGeometryDispose=function onGeometryDispose(event){var geometry=event.target;geometry.removeEventListener('dispose',onGeometryDispose);deallocateGeometry(geometry);};var onTextureDispose=function onTextureDispose(event){var texture=event.target;texture.removeEventListener('dispose',onTextureDispose);deallocateTexture(texture);_this.info.memory.textures--;};var onRenderTargetDispose=function onRenderTargetDispose(event){var renderTarget=event.target;renderTarget.removeEventListener('dispose',onRenderTargetDispose);deallocateRenderTarget(renderTarget);_this.info.memory.textures--;};var onMaterialDispose=function onMaterialDispose(event){var material=event.target;material.removeEventListener('dispose',onMaterialDispose);deallocateMaterial(material);};var deleteBuffers=function deleteBuffers(geometry){if(geometry.__webglVertexBuffer!==undefined)_gl.deleteBuffer(geometry.__webglVertexBuffer);if(geometry.__webglNormalBuffer!==undefined)_gl.deleteBuffer(geometry.__webglNormalBuffer);if(geometry.__webglTangentBuffer!==undefined)_gl.deleteBuffer(geometry.__webglTangentBuffer);if(geometry.__webglColorBuffer!==undefined)_gl.deleteBuffer(geometry.__webglColorBuffer);if(geometry.__webglUVBuffer!==undefined)_gl.deleteBuffer(geometry.__webglUVBuffer);if(geometry.__webglUV2Buffer!==undefined)_gl.deleteBuffer(geometry.__webglUV2Buffer);if(geometry.__webglSkinIndicesBuffer!==undefined)_gl.deleteBuffer(geometry.__webglSkinIndicesBuffer);if(geometry.__webglSkinWeightsBuffer!==undefined)_gl.deleteBuffer(geometry.__webglSkinWeightsBuffer);if(geometry.__webglFaceBuffer!==undefined)_gl.deleteBuffer(geometry.__webglFaceBuffer);if(geometry.__webglLineBuffer!==undefined)_gl.deleteBuffer(geometry.__webglLineBuffer);if(geometry.__webglLineDistanceBuffer!==undefined)_gl.deleteBuffer(geometry.__webglLineDistanceBuffer);if(geometry.__webglCustomAttributesList!==undefined){for(var id in geometry.__webglCustomAttributesList){_gl.deleteBuffer(geometry.__webglCustomAttributesList[id].buffer);}}_this.info.memory.geometries--;};var deallocateGeometry=function deallocateGeometry(geometry){geometry.__webglInit=undefined;if(geometry instanceof THREE.BufferGeometry){var attributes=geometry.attributes;for(var key in attributes){if(attributes[key].buffer!==undefined){_gl.deleteBuffer(attributes[key].buffer);}}_this.info.memory.geometries--;}else{if(geometry.geometryGroups!==undefined){for(var g in geometry.geometryGroups){var geometryGroup=geometry.geometryGroups[g];if(geometryGroup.numMorphTargets!==undefined){for(var m=0,ml=geometryGroup.numMorphTargets;m<ml;m++){_gl.deleteBuffer(geometryGroup.__webglMorphTargetsBuffers[m]);}}if(geometryGroup.numMorphNormals!==undefined){for(var m=0,ml=geometryGroup.numMorphNormals;m<ml;m++){_gl.deleteBuffer(geometryGroup.__webglMorphNormalsBuffers[m]);}}deleteBuffers(geometryGroup);}}else{deleteBuffers(geometry);}}};var deallocateTexture=function deallocateTexture(texture){if(texture.image&&texture.image.__webglTextureCube){_gl.deleteTexture(texture.image.__webglTextureCube);}else{if(!texture.__webglInit)return;texture.__webglInit=false;_gl.deleteTexture(texture.__webglTexture);}};var deallocateRenderTarget=function deallocateRenderTarget(renderTarget){if(!renderTarget||!renderTarget.__webglTexture)return;_gl.deleteTexture(renderTarget.__webglTexture);if(renderTarget instanceof THREE.WebGLRenderTargetCube){for(var i=0;i<6;i++){_gl.deleteFramebuffer(renderTarget.__webglFramebuffer[i]);_gl.deleteRenderbuffer(renderTarget.__webglRenderbuffer[i]);}}else{_gl.deleteFramebuffer(renderTarget.__webglFramebuffer);_gl.deleteRenderbuffer(renderTarget.__webglRenderbuffer);}};var deallocateMaterial=function deallocateMaterial(material,optionalDisconnectedProgram){var program=optionalDisconnectedProgram||material.program;if(program===undefined)return;if(!optionalDisconnectedProgram){material.program=undefined;}var i,il,programInfo;var deleteProgram=false;for(i=0,il=_programs.length;i<il;i++){programInfo=_programs[i];if(programInfo.program===program){programInfo.usedTimes--;if(programInfo.usedTimes===0){deleteProgram=true;}break;}}if(deleteProgram===true){var newPrograms=[];for(i=0,il=_programs.length;i<il;i++){programInfo=_programs[i];if(programInfo.program!==program){newPrograms.push(programInfo);}}_programs=newPrograms;_gl.deleteProgram(program);_this.info.memory.programs--;}};function initCustomAttributes(geometry,object){var nvertices=geometry.vertices.length;var material=object.material;if(material.attributes){if(geometry.__webglCustomAttributesList===undefined){geometry.__webglCustomAttributesList=[];}for(var a in material.attributes){var attribute=material.attributes[a];if(!attribute.__webglInitialized||attribute.createUniqueBuffers){attribute.__webglInitialized=true;var size=1;if(attribute.type===\"v2\")size=2;else if(attribute.type===\"v3\")size=3;else if(attribute.type===\"v4\")size=4;else if(attribute.type===\"c\")size=3;attribute.size=size;attribute.array=new Float32Array(nvertices*size);attribute.buffer=_gl.createBuffer();attribute.buffer.belongsToAttribute=a;attribute.needsUpdate=true;}geometry.__webglCustomAttributesList.push(attribute);}}};function initParticleBuffers(geometry,object){var nvertices=geometry.vertices.length;geometry.__vertexArray=new Float32Array(nvertices*3);geometry.__colorArray=new Float32Array(nvertices*3);geometry.__sortArray=[];geometry.__webglParticleCount=nvertices;initCustomAttributes(geometry,object);};function initLineBuffers(geometry,object){var nvertices=geometry.vertices.length;geometry.__vertexArray=new Float32Array(nvertices*3);geometry.__colorArray=new Float32Array(nvertices*3);geometry.__lineDistanceArray=new Float32Array(nvertices*1);geometry.__webglLineCount=nvertices;initCustomAttributes(geometry,object);};function initMeshBuffers(geometryGroup,object){var geometry=object.geometry,faces3=geometryGroup.faces3,nvertices=faces3.length*3,ntris=faces3.length*1,nlines=faces3.length*3,material=getBufferMaterial(object,geometryGroup),uvType=bufferGuessUVType(material),normalType=bufferGuessNormalType(material),vertexColorType=bufferGuessVertexColorType(material);geometryGroup.__vertexArray=new Float32Array(nvertices*3);if(normalType){geometryGroup.__normalArray=new Float32Array(nvertices*3);}if(geometry.hasTangents){geometryGroup.__tangentArray=new Float32Array(nvertices*4);}if(vertexColorType){geometryGroup.__colorArray=new Float32Array(nvertices*3);}if(uvType){if(geometry.faceVertexUvs.length>0){geometryGroup.__uvArray=new Float32Array(nvertices*2);}if(geometry.faceVertexUvs.length>1){geometryGroup.__uv2Array=new Float32Array(nvertices*2);}}if(object.geometry.skinWeights.length&&object.geometry.skinIndices.length){geometryGroup.__skinIndexArray=new Float32Array(nvertices*4);geometryGroup.__skinWeightArray=new Float32Array(nvertices*4);}geometryGroup.__faceArray=new Uint16Array(ntris*3);geometryGroup.__lineArray=new Uint16Array(nlines*2);var m,ml;if(geometryGroup.numMorphTargets){geometryGroup.__morphTargetsArrays=[];for(m=0,ml=geometryGroup.numMorphTargets;m<ml;m++){geometryGroup.__morphTargetsArrays.push(new Float32Array(nvertices*3));}}if(geometryGroup.numMorphNormals){geometryGroup.__morphNormalsArrays=[];for(m=0,ml=geometryGroup.numMorphNormals;m<ml;m++){geometryGroup.__morphNormalsArrays.push(new Float32Array(nvertices*3));}}geometryGroup.__webglFaceCount=ntris*3;geometryGroup.__webglLineCount=nlines*2;if(material.attributes){if(geometryGroup.__webglCustomAttributesList===undefined){geometryGroup.__webglCustomAttributesList=[];}for(var a in material.attributes){var originalAttribute=material.attributes[a];var attribute={};for(var property in originalAttribute){attribute[property]=originalAttribute[property];}if(!attribute.__webglInitialized||attribute.createUniqueBuffers){attribute.__webglInitialized=true;var size=1;if(attribute.type===\"v2\")size=2;else if(attribute.type===\"v3\")size=3;else if(attribute.type===\"v4\")size=4;else if(attribute.type===\"c\")size=3;attribute.size=size;attribute.array=new Float32Array(nvertices*size);attribute.buffer=_gl.createBuffer();attribute.buffer.belongsToAttribute=a;originalAttribute.needsUpdate=true;attribute.__original=originalAttribute;}geometryGroup.__webglCustomAttributesList.push(attribute);}}geometryGroup.__inittedArrays=true;};function getBufferMaterial(object,geometryGroup){return object.material instanceof THREE.MeshFaceMaterial?object.material.materials[geometryGroup.materialIndex]:object.material;};function materialNeedsSmoothNormals(material){return material&&material.shading!==undefined&&material.shading===THREE.SmoothShading;};function bufferGuessNormalType(material){if(material instanceof THREE.MeshBasicMaterial&&!material.envMap||material instanceof THREE.MeshDepthMaterial){return false;}if(materialNeedsSmoothNormals(material)){return THREE.SmoothShading;}else{return THREE.FlatShading;}};function bufferGuessVertexColorType(material){if(material.vertexColors){return material.vertexColors;}return false;};function bufferGuessUVType(material){if(material.map||material.opacityMap||material.lightMap||material.emissiveMap||material.bumpMap||material.normalMap||material.specularMap||material.reflectivityMap||material.roughnessMap||material.falloffMap||material.anisotropyMap||material.anisotropyRotationMap||material.metallicMap||material.translucencyMap||material.anisotropy&&material.anisotropy!==0.0||material instanceof THREE.ShaderMaterial){return true;}return true;};function initDirectBuffers(geometry){var a,attribute,type;for(a in geometry.attributes){if(a===\"index\"){type=_gl.ELEMENT_ARRAY_BUFFER;}else{type=_gl.ARRAY_BUFFER;}attribute=geometry.attributes[a];attribute.buffer=_gl.createBuffer();_gl.bindBuffer(type,attribute.buffer);_gl.bufferData(type,attribute.array,_gl.STATIC_DRAW);}};function setParticleBuffers(geometry,hint,object){var v,c,vertex,offset,index,color,vertices=geometry.vertices,vl=vertices.length,colors=geometry.colors,cl=colors.length,vertexArray=geometry.__vertexArray,colorArray=geometry.__colorArray,sortArray=geometry.__sortArray,dirtyVertices=geometry.verticesNeedUpdate,dirtyElements=geometry.elementsNeedUpdate,dirtyColors=geometry.colorsNeedUpdate,customAttributes=geometry.__webglCustomAttributesList,i,il,a,ca,cal,value,customAttribute;if(object.sortParticles){_projScreenMatrixPS.copy(_projScreenMatrix);_projScreenMatrixPS.multiply(object.matrixWorld);for(v=0;v<vl;v++){vertex=vertices[v];_vector3.copy(vertex);_vector3.applyProjection(_projScreenMatrixPS);sortArray[v]=[_vector3.z,v];}sortArray.sort(numericalSort);for(v=0;v<vl;v++){vertex=vertices[sortArray[v][1]];offset=v*3;vertexArray[offset]=vertex.x;vertexArray[offset+1]=vertex.y;vertexArray[offset+2]=vertex.z;}for(c=0;c<cl;c++){offset=c*3;color=colors[sortArray[c][1]];colorArray[offset]=color.r;colorArray[offset+1]=color.g;colorArray[offset+2]=color.b;}if(customAttributes){for(i=0,il=customAttributes.length;i<il;i++){customAttribute=customAttributes[i];if(!(customAttribute.boundTo===undefined||customAttribute.boundTo===\"vertices\"))continue;offset=0;cal=customAttribute.value.length;if(customAttribute.size===1){for(ca=0;ca<cal;ca++){index=sortArray[ca][1];customAttribute.array[ca]=customAttribute.value[index];}}else if(customAttribute.size===2){for(ca=0;ca<cal;ca++){index=sortArray[ca][1];value=customAttribute.value[index];customAttribute.array[offset]=value.x;customAttribute.array[offset+1]=value.y;offset+=2;}}else if(customAttribute.size===3){if(customAttribute.type===\"c\"){for(ca=0;ca<cal;ca++){index=sortArray[ca][1];value=customAttribute.value[index];customAttribute.array[offset]=value.r;customAttribute.array[offset+1]=value.g;customAttribute.array[offset+2]=value.b;offset+=3;}}else{for(ca=0;ca<cal;ca++){index=sortArray[ca][1];value=customAttribute.value[index];customAttribute.array[offset]=value.x;customAttribute.array[offset+1]=value.y;customAttribute.array[offset+2]=value.z;offset+=3;}}}else if(customAttribute.size===4){for(ca=0;ca<cal;ca++){index=sortArray[ca][1];value=customAttribute.value[index];customAttribute.array[offset]=value.x;customAttribute.array[offset+1]=value.y;customAttribute.array[offset+2]=value.z;customAttribute.array[offset+3]=value.w;offset+=4;}}}}}else{if(dirtyVertices){for(v=0;v<vl;v++){vertex=vertices[v];offset=v*3;vertexArray[offset]=vertex.x;vertexArray[offset+1]=vertex.y;vertexArray[offset+2]=vertex.z;}}if(dirtyColors){for(c=0;c<cl;c++){color=colors[c];offset=c*3;colorArray[offset]=color.r;colorArray[offset+1]=color.g;colorArray[offset+2]=color.b;}}if(customAttributes){for(i=0,il=customAttributes.length;i<il;i++){customAttribute=customAttributes[i];if(customAttribute.needsUpdate&&(customAttribute.boundTo===undefined||customAttribute.boundTo===\"vertices\")){cal=customAttribute.value.length;offset=0;if(customAttribute.size===1){for(ca=0;ca<cal;ca++){customAttribute.array[ca]=customAttribute.value[ca];}}else if(customAttribute.size===2){for(ca=0;ca<cal;ca++){value=customAttribute.value[ca];customAttribute.array[offset]=value.x;customAttribute.array[offset+1]=value.y;offset+=2;}}else if(customAttribute.size===3){if(customAttribute.type===\"c\"){for(ca=0;ca<cal;ca++){value=customAttribute.value[ca];customAttribute.array[offset]=value.r;customAttribute.array[offset+1]=value.g;customAttribute.array[offset+2]=value.b;offset+=3;}}else{for(ca=0;ca<cal;ca++){value=customAttribute.value[ca];customAttribute.array[offset]=value.x;customAttribute.array[offset+1]=value.y;customAttribute.array[offset+2]=value.z;offset+=3;}}}else if(customAttribute.size===4){for(ca=0;ca<cal;ca++){value=customAttribute.value[ca];customAttribute.array[offset]=value.x;customAttribute.array[offset+1]=value.y;customAttribute.array[offset+2]=value.z;customAttribute.array[offset+3]=value.w;offset+=4;}}}}}}if(dirtyVertices||object.sortParticles){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglVertexBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,vertexArray,hint);}if(dirtyColors||object.sortParticles){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglColorBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,colorArray,hint);}if(customAttributes){for(i=0,il=customAttributes.length;i<il;i++){customAttribute=customAttributes[i];if(customAttribute.needsUpdate||object.sortParticles){_gl.bindBuffer(_gl.ARRAY_BUFFER,customAttribute.buffer);_gl.bufferData(_gl.ARRAY_BUFFER,customAttribute.array,hint);}}}};function setLineBuffers(geometry,hint){var v,c,d,vertex,offset,color,vertices=geometry.vertices,colors=geometry.colors,lineDistances=geometry.lineDistances,vl=vertices.length,cl=colors.length,dl=lineDistances.length,vertexArray=geometry.__vertexArray,colorArray=geometry.__colorArray,lineDistanceArray=geometry.__lineDistanceArray,dirtyVertices=geometry.verticesNeedUpdate,dirtyColors=geometry.colorsNeedUpdate,dirtyLineDistances=geometry.lineDistancesNeedUpdate,customAttributes=geometry.__webglCustomAttributesList,i,il,a,ca,cal,value,customAttribute;if(dirtyVertices){for(v=0;v<vl;v++){vertex=vertices[v];offset=v*3;vertexArray[offset]=vertex.x;vertexArray[offset+1]=vertex.y;vertexArray[offset+2]=vertex.z;}_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglVertexBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,vertexArray,hint);}if(dirtyColors){for(c=0;c<cl;c++){color=colors[c];offset=c*3;colorArray[offset]=color.r;colorArray[offset+1]=color.g;colorArray[offset+2]=color.b;}_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglColorBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,colorArray,hint);}if(dirtyLineDistances){for(d=0;d<dl;d++){lineDistanceArray[d]=lineDistances[d];}_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglLineDistanceBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,lineDistanceArray,hint);}if(customAttributes){for(i=0,il=customAttributes.length;i<il;i++){customAttribute=customAttributes[i];if(customAttribute.needsUpdate&&(customAttribute.boundTo===undefined||customAttribute.boundTo===\"vertices\")){offset=0;cal=customAttribute.value.length;if(customAttribute.size===1){for(ca=0;ca<cal;ca++){customAttribute.array[ca]=customAttribute.value[ca];}}else if(customAttribute.size===2){for(ca=0;ca<cal;ca++){value=customAttribute.value[ca];customAttribute.array[offset]=value.x;customAttribute.array[offset+1]=value.y;offset+=2;}}else if(customAttribute.size===3){if(customAttribute.type===\"c\"){for(ca=0;ca<cal;ca++){value=customAttribute.value[ca];customAttribute.array[offset]=value.r;customAttribute.array[offset+1]=value.g;customAttribute.array[offset+2]=value.b;offset+=3;}}else{for(ca=0;ca<cal;ca++){value=customAttribute.value[ca];customAttribute.array[offset]=value.x;customAttribute.array[offset+1]=value.y;customAttribute.array[offset+2]=value.z;offset+=3;}}}else if(customAttribute.size===4){for(ca=0;ca<cal;ca++){value=customAttribute.value[ca];customAttribute.array[offset]=value.x;customAttribute.array[offset+1]=value.y;customAttribute.array[offset+2]=value.z;customAttribute.array[offset+3]=value.w;offset+=4;}}_gl.bindBuffer(_gl.ARRAY_BUFFER,customAttribute.buffer);_gl.bufferData(_gl.ARRAY_BUFFER,customAttribute.array,hint);}}}};function setMeshBuffers(geometryGroup,object,hint,dispose,material){if(!geometryGroup.__inittedArrays){return;}var normalType=bufferGuessNormalType(material),vertexColorType=bufferGuessVertexColorType(material),uvType=bufferGuessUVType(material),needsSmoothNormals=normalType===THREE.SmoothShading;var f,fl,fi,face,vertexNormals,faceNormal,normal,vertexColors,faceColor,vertexTangents,uv,uv2,v1,v2,v3,v4,t1,t2,t3,t4,n1,n2,n3,n4,c1,c2,c3,c4,sw1,sw2,sw3,sw4,si1,si2,si3,si4,sa1,sa2,sa3,sa4,sb1,sb2,sb3,sb4,m,ml,i,il,vn,uvi,uv2i,vk,vkl,vka,nka,chf,faceVertexNormals,a,vertexIndex=0,offset=0,offset_uv=0,offset_uv2=0,offset_face=0,offset_normal=0,offset_tangent=0,offset_line=0,offset_color=0,offset_skin=0,offset_morphTarget=0,offset_custom=0,offset_customSrc=0,value,vertexArray=geometryGroup.__vertexArray,uvArray=geometryGroup.__uvArray,uv2Array=geometryGroup.__uv2Array,normalArray=geometryGroup.__normalArray,tangentArray=geometryGroup.__tangentArray,colorArray=geometryGroup.__colorArray,skinIndexArray=geometryGroup.__skinIndexArray,skinWeightArray=geometryGroup.__skinWeightArray,morphTargetsArrays=geometryGroup.__morphTargetsArrays,morphNormalsArrays=geometryGroup.__morphNormalsArrays,customAttributes=geometryGroup.__webglCustomAttributesList,customAttribute,faceArray=geometryGroup.__faceArray,lineArray=geometryGroup.__lineArray,geometry=object.geometry,dirtyVertices=geometry.verticesNeedUpdate,dirtyElements=geometry.elementsNeedUpdate,dirtyUvs=geometry.uvsNeedUpdate,dirtyNormals=geometry.normalsNeedUpdate,dirtyTangents=geometry.tangentsNeedUpdate,dirtyColors=geometry.colorsNeedUpdate,dirtyMorphTargets=geometry.morphTargetsNeedUpdate,vertices=geometry.vertices,chunk_faces3=geometryGroup.faces3,obj_faces=geometry.faces,obj_uvs=geometry.faceVertexUvs[0],obj_uvs2=geometry.faceVertexUvs[1],obj_colors=geometry.colors,obj_skinIndices=geometry.skinIndices,obj_skinWeights=geometry.skinWeights,morphTargets=geometry.morphTargets,morphNormals=geometry.morphNormals;if(dirtyVertices){for(f=0,fl=chunk_faces3.length;f<fl;f++){face=obj_faces[chunk_faces3[f]];v1=vertices[face.a];v2=vertices[face.b];v3=vertices[face.c];vertexArray[offset]=v1.x;vertexArray[offset+1]=v1.y;vertexArray[offset+2]=v1.z;vertexArray[offset+3]=v2.x;vertexArray[offset+4]=v2.y;vertexArray[offset+5]=v2.z;vertexArray[offset+6]=v3.x;vertexArray[offset+7]=v3.y;vertexArray[offset+8]=v3.z;offset+=9;}_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglVertexBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,vertexArray,hint);}if(dirtyMorphTargets){for(vk=0,vkl=morphTargets.length;vk<vkl;vk++){offset_morphTarget=0;for(f=0,fl=chunk_faces3.length;f<fl;f++){chf=chunk_faces3[f];face=obj_faces[chf];v1=morphTargets[vk].vertices[face.a];v2=morphTargets[vk].vertices[face.b];v3=morphTargets[vk].vertices[face.c];vka=morphTargetsArrays[vk];vka[offset_morphTarget]=v1.x;vka[offset_morphTarget+1]=v1.y;vka[offset_morphTarget+2]=v1.z;vka[offset_morphTarget+3]=v2.x;vka[offset_morphTarget+4]=v2.y;vka[offset_morphTarget+5]=v2.z;vka[offset_morphTarget+6]=v3.x;vka[offset_morphTarget+7]=v3.y;vka[offset_morphTarget+8]=v3.z;if(material.morphNormals){if(needsSmoothNormals){faceVertexNormals=morphNormals[vk].vertexNormals[chf];n1=faceVertexNormals.a;n2=faceVertexNormals.b;n3=faceVertexNormals.c;}else{n1=morphNormals[vk].faceNormals[chf];n2=n1;n3=n1;}nka=morphNormalsArrays[vk];nka[offset_morphTarget]=n1.x;nka[offset_morphTarget+1]=n1.y;nka[offset_morphTarget+2]=n1.z;nka[offset_morphTarget+3]=n2.x;nka[offset_morphTarget+4]=n2.y;nka[offset_morphTarget+5]=n2.z;nka[offset_morphTarget+6]=n3.x;nka[offset_morphTarget+7]=n3.y;nka[offset_morphTarget+8]=n3.z;}offset_morphTarget+=9;}_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphTargetsBuffers[vk]);_gl.bufferData(_gl.ARRAY_BUFFER,morphTargetsArrays[vk],hint);if(material.morphNormals){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphNormalsBuffers[vk]);_gl.bufferData(_gl.ARRAY_BUFFER,morphNormalsArrays[vk],hint);}}}if(obj_skinWeights.length){for(f=0,fl=chunk_faces3.length;f<fl;f++){face=obj_faces[chunk_faces3[f]];sw1=obj_skinWeights[face.a];sw2=obj_skinWeights[face.b];sw3=obj_skinWeights[face.c];skinWeightArray[offset_skin]=sw1.x;skinWeightArray[offset_skin+1]=sw1.y;skinWeightArray[offset_skin+2]=sw1.z;skinWeightArray[offset_skin+3]=sw1.w;skinWeightArray[offset_skin+4]=sw2.x;skinWeightArray[offset_skin+5]=sw2.y;skinWeightArray[offset_skin+6]=sw2.z;skinWeightArray[offset_skin+7]=sw2.w;skinWeightArray[offset_skin+8]=sw3.x;skinWeightArray[offset_skin+9]=sw3.y;skinWeightArray[offset_skin+10]=sw3.z;skinWeightArray[offset_skin+11]=sw3.w;si1=obj_skinIndices[face.a];si2=obj_skinIndices[face.b];si3=obj_skinIndices[face.c];skinIndexArray[offset_skin]=si1.x;skinIndexArray[offset_skin+1]=si1.y;skinIndexArray[offset_skin+2]=si1.z;skinIndexArray[offset_skin+3]=si1.w;skinIndexArray[offset_skin+4]=si2.x;skinIndexArray[offset_skin+5]=si2.y;skinIndexArray[offset_skin+6]=si2.z;skinIndexArray[offset_skin+7]=si2.w;skinIndexArray[offset_skin+8]=si3.x;skinIndexArray[offset_skin+9]=si3.y;skinIndexArray[offset_skin+10]=si3.z;skinIndexArray[offset_skin+11]=si3.w;offset_skin+=12;}if(offset_skin>0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglSkinIndicesBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,skinIndexArray,hint);_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglSkinWeightsBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,skinWeightArray,hint);}}if(dirtyColors&&vertexColorType){for(f=0,fl=chunk_faces3.length;f<fl;f++){face=obj_faces[chunk_faces3[f]];vertexColors=face.vertexColors;faceColor=face.color;if(vertexColors.length===3&&vertexColorType===THREE.VertexColors){c1=vertexColors[0];c2=vertexColors[1];c3=vertexColors[2];}else{c1=faceColor;c2=faceColor;c3=faceColor;}colorArray[offset_color]=c1.r;colorArray[offset_color+1]=c1.g;colorArray[offset_color+2]=c1.b;colorArray[offset_color+3]=c2.r;colorArray[offset_color+4]=c2.g;colorArray[offset_color+5]=c2.b;colorArray[offset_color+6]=c3.r;colorArray[offset_color+7]=c3.g;colorArray[offset_color+8]=c3.b;offset_color+=9;}if(offset_color>0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglColorBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,colorArray,hint);}}if(dirtyTangents&&geometry.hasTangents){var tmp=new THREE.Vector3(0,0,0);for(f=0,fl=chunk_faces3.length;f<fl;f++){face=obj_faces[chunk_faces3[f]];vertexTangents=face.vertexTangents;t1=vertexTangents[0]||tmp;t2=vertexTangents[1]||tmp;t3=vertexTangents[2]||tmp;tangentArray[offset_tangent]=t1.x;tangentArray[offset_tangent+1]=t1.y;tangentArray[offset_tangent+2]=t1.z;tangentArray[offset_tangent+3]=t1.w;tangentArray[offset_tangent+4]=t2.x;tangentArray[offset_tangent+5]=t2.y;tangentArray[offset_tangent+6]=t2.z;tangentArray[offset_tangent+7]=t2.w;tangentArray[offset_tangent+8]=t3.x;tangentArray[offset_tangent+9]=t3.y;tangentArray[offset_tangent+10]=t3.z;tangentArray[offset_tangent+11]=t3.w;offset_tangent+=12;}_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglTangentBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,tangentArray,hint);}if(dirtyNormals&&normalType){for(f=0,fl=chunk_faces3.length;f<fl;f++){face=obj_faces[chunk_faces3[f]];vertexNormals=face.vertexNormals;faceNormal=face.normal;if(vertexNormals.length===3&&needsSmoothNormals){for(i=0;i<3;i++){vn=vertexNormals[i];normalArray[offset_normal]=vn.x;normalArray[offset_normal+1]=vn.y;normalArray[offset_normal+2]=vn.z;offset_normal+=3;}}else{for(i=0;i<3;i++){normalArray[offset_normal]=faceNormal.x;normalArray[offset_normal+1]=faceNormal.y;normalArray[offset_normal+2]=faceNormal.z;offset_normal+=3;}}}_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglNormalBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,normalArray,hint);}if(dirtyUvs&&obj_uvs&&uvType){for(f=0,fl=chunk_faces3.length;f<fl;f++){fi=chunk_faces3[f];uv=obj_uvs[fi];if(uv===undefined)continue;for(i=0;i<3;i++){uvi=uv[i];uvArray[offset_uv]=uvi.x;uvArray[offset_uv+1]=uvi.y;offset_uv+=2;}}if(offset_uv>0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglUVBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,uvArray,hint);}}if(dirtyUvs&&obj_uvs2&&uvType){for(f=0,fl=chunk_faces3.length;f<fl;f++){fi=chunk_faces3[f];uv2=obj_uvs2[fi];if(uv2===undefined)continue;for(i=0;i<3;i++){uv2i=uv2[i];uv2Array[offset_uv2]=uv2i.x;uv2Array[offset_uv2+1]=uv2i.y;offset_uv2+=2;}}if(offset_uv2>0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglUV2Buffer);_gl.bufferData(_gl.ARRAY_BUFFER,uv2Array,hint);}}if(dirtyElements){for(f=0,fl=chunk_faces3.length;f<fl;f++){faceArray[offset_face]=vertexIndex;faceArray[offset_face+1]=vertexIndex+1;faceArray[offset_face+2]=vertexIndex+2;offset_face+=3;lineArray[offset_line]=vertexIndex;lineArray[offset_line+1]=vertexIndex+1;lineArray[offset_line+2]=vertexIndex;lineArray[offset_line+3]=vertexIndex+2;lineArray[offset_line+4]=vertexIndex+1;lineArray[offset_line+5]=vertexIndex+2;offset_line+=6;vertexIndex+=3;}_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,geometryGroup.__webglFaceBuffer);_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,faceArray,hint);_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,geometryGroup.__webglLineBuffer);_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,lineArray,hint);}if(customAttributes){for(i=0,il=customAttributes.length;i<il;i++){customAttribute=customAttributes[i];if(!customAttribute.__original.needsUpdate)continue;offset_custom=0;offset_customSrc=0;if(customAttribute.size===1){if(customAttribute.boundTo===undefined||customAttribute.boundTo===\"vertices\"){for(f=0,fl=chunk_faces3.length;f<fl;f++){face=obj_faces[chunk_faces3[f]];customAttribute.array[offset_custom]=customAttribute.value[face.a];customAttribute.array[offset_custom+1]=customAttribute.value[face.b];customAttribute.array[offset_custom+2]=customAttribute.value[face.c];offset_custom+=3;}}else if(customAttribute.boundTo===\"faces\"){for(f=0,fl=chunk_faces3.length;f<fl;f++){value=customAttribute.value[chunk_faces3[f]];customAttribute.array[offset_custom]=value;customAttribute.array[offset_custom+1]=value;customAttribute.array[offset_custom+2]=value;offset_custom+=3;}}}else if(customAttribute.size===2){if(customAttribute.boundTo===undefined||customAttribute.boundTo===\"vertices\"){for(f=0,fl=chunk_faces3.length;f<fl;f++){face=obj_faces[chunk_faces3[f]];v1=customAttribute.value[face.a];v2=customAttribute.value[face.b];v3=customAttribute.value[face.c];customAttribute.array[offset_custom]=v1.x;customAttribute.array[offset_custom+1]=v1.y;customAttribute.array[offset_custom+2]=v2.x;customAttribute.array[offset_custom+3]=v2.y;customAttribute.array[offset_custom+4]=v3.x;customAttribute.array[offset_custom+5]=v3.y;offset_custom+=6;}}else if(customAttribute.boundTo===\"faces\"){for(f=0,fl=chunk_faces3.length;f<fl;f++){value=customAttribute.value[chunk_faces3[f]];v1=value;v2=value;v3=value;customAttribute.array[offset_custom]=v1.x;customAttribute.array[offset_custom+1]=v1.y;customAttribute.array[offset_custom+2]=v2.x;customAttribute.array[offset_custom+3]=v2.y;customAttribute.array[offset_custom+4]=v3.x;customAttribute.array[offset_custom+5]=v3.y;offset_custom+=6;}}}else if(customAttribute.size===3){var pp;if(customAttribute.type===\"c\"){pp=[\"r\",\"g\",\"b\"];}else{pp=[\"x\",\"y\",\"z\"];}if(customAttribute.boundTo===undefined||customAttribute.boundTo===\"vertices\"){for(f=0,fl=chunk_faces3.length;f<fl;f++){face=obj_faces[chunk_faces3[f]];v1=customAttribute.value[face.a];v2=customAttribute.value[face.b];v3=customAttribute.value[face.c];customAttribute.array[offset_custom]=v1[pp[0]];customAttribute.array[offset_custom+1]=v1[pp[1]];customAttribute.array[offset_custom+2]=v1[pp[2]];customAttribute.array[offset_custom+3]=v2[pp[0]];customAttribute.array[offset_custom+4]=v2[pp[1]];customAttribute.array[offset_custom+5]=v2[pp[2]];customAttribute.array[offset_custom+6]=v3[pp[0]];customAttribute.array[offset_custom+7]=v3[pp[1]];customAttribute.array[offset_custom+8]=v3[pp[2]];offset_custom+=9;}}else if(customAttribute.boundTo===\"faces\"){for(f=0,fl=chunk_faces3.length;f<fl;f++){value=customAttribute.value[chunk_faces3[f]];v1=value;v2=value;v3=value;customAttribute.array[offset_custom]=v1[pp[0]];customAttribute.array[offset_custom+1]=v1[pp[1]];customAttribute.array[offset_custom+2]=v1[pp[2]];customAttribute.array[offset_custom+3]=v2[pp[0]];customAttribute.array[offset_custom+4]=v2[pp[1]];customAttribute.array[offset_custom+5]=v2[pp[2]];customAttribute.array[offset_custom+6]=v3[pp[0]];customAttribute.array[offset_custom+7]=v3[pp[1]];customAttribute.array[offset_custom+8]=v3[pp[2]];offset_custom+=9;}}else if(customAttribute.boundTo===\"faceVertices\"){for(f=0,fl=chunk_faces3.length;f<fl;f++){value=customAttribute.value[chunk_faces3[f]];v1=value[0];v2=value[1];v3=value[2];customAttribute.array[offset_custom]=v1[pp[0]];customAttribute.array[offset_custom+1]=v1[pp[1]];customAttribute.array[offset_custom+2]=v1[pp[2]];customAttribute.array[offset_custom+3]=v2[pp[0]];customAttribute.array[offset_custom+4]=v2[pp[1]];customAttribute.array[offset_custom+5]=v2[pp[2]];customAttribute.array[offset_custom+6]=v3[pp[0]];customAttribute.array[offset_custom+7]=v3[pp[1]];customAttribute.array[offset_custom+8]=v3[pp[2]];offset_custom+=9;}}}else if(customAttribute.size===4){if(customAttribute.boundTo===undefined||customAttribute.boundTo===\"vertices\"){for(f=0,fl=chunk_faces3.length;f<fl;f++){face=obj_faces[chunk_faces3[f]];v1=customAttribute.value[face.a];v2=customAttribute.value[face.b];v3=customAttribute.value[face.c];customAttribute.array[offset_custom]=v1.x;customAttribute.array[offset_custom+1]=v1.y;customAttribute.array[offset_custom+2]=v1.z;customAttribute.array[offset_custom+3]=v1.w;customAttribute.array[offset_custom+4]=v2.x;customAttribute.array[offset_custom+5]=v2.y;customAttribute.array[offset_custom+6]=v2.z;customAttribute.array[offset_custom+7]=v2.w;customAttribute.array[offset_custom+8]=v3.x;customAttribute.array[offset_custom+9]=v3.y;customAttribute.array[offset_custom+10]=v3.z;customAttribute.array[offset_custom+11]=v3.w;offset_custom+=12;}}else if(customAttribute.boundTo===\"faces\"){for(f=0,fl=chunk_faces3.length;f<fl;f++){value=customAttribute.value[chunk_faces3[f]];v1=value;v2=value;v3=value;customAttribute.array[offset_custom]=v1.x;customAttribute.array[offset_custom+1]=v1.y;customAttribute.array[offset_custom+2]=v1.z;customAttribute.array[offset_custom+3]=v1.w;customAttribute.array[offset_custom+4]=v2.x;customAttribute.array[offset_custom+5]=v2.y;customAttribute.array[offset_custom+6]=v2.z;customAttribute.array[offset_custom+7]=v2.w;customAttribute.array[offset_custom+8]=v3.x;customAttribute.array[offset_custom+9]=v3.y;customAttribute.array[offset_custom+10]=v3.z;customAttribute.array[offset_custom+11]=v3.w;offset_custom+=12;}}else if(customAttribute.boundTo===\"faceVertices\"){for(f=0,fl=chunk_faces3.length;f<fl;f++){value=customAttribute.value[chunk_faces3[f]];v1=value[0];v2=value[1];v3=value[2];customAttribute.array[offset_custom]=v1.x;customAttribute.array[offset_custom+1]=v1.y;customAttribute.array[offset_custom+2]=v1.z;customAttribute.array[offset_custom+3]=v1.w;customAttribute.array[offset_custom+4]=v2.x;customAttribute.array[offset_custom+5]=v2.y;customAttribute.array[offset_custom+6]=v2.z;customAttribute.array[offset_custom+7]=v2.w;customAttribute.array[offset_custom+8]=v3.x;customAttribute.array[offset_custom+9]=v3.y;customAttribute.array[offset_custom+10]=v3.z;customAttribute.array[offset_custom+11]=v3.w;offset_custom+=12;}}}_gl.bindBuffer(_gl.ARRAY_BUFFER,customAttribute.buffer);_gl.bufferData(_gl.ARRAY_BUFFER,customAttribute.array,hint);}}if(dispose){delete geometryGroup.__inittedArrays;delete geometryGroup.__colorArray;delete geometryGroup.__normalArray;delete geometryGroup.__tangentArray;delete geometryGroup.__uvArray;delete geometryGroup.__uv2Array;delete geometryGroup.__faceArray;delete geometryGroup.__vertexArray;delete geometryGroup.__lineArray;delete geometryGroup.__skinIndexArray;delete geometryGroup.__skinWeightArray;}};function setupLinesVertexAttributes(material,programAttributes,geometryAttributes,startIndex){var attributeItem,attributeName,attributePointer,attributeSize;for(attributeName in programAttributes){attributePointer=programAttributes[attributeName];attributeItem=geometryAttributes[attributeName];if(attributePointer>=0){if(attributeItem){attributeSize=attributeItem.itemSize;_gl.bindBuffer(_gl.ARRAY_BUFFER,attributeItem.buffer);enableAttribute(attributePointer);_gl.vertexAttribPointer(attributePointer,attributeSize,_gl.FLOAT,false,0,startIndex*attributeSize*4);}else if(material.defaultAttributeValues){if(material.defaultAttributeValues[attributeName].length===2){_gl.vertexAttrib2fv(attributePointer,material.defaultAttributeValues[attributeName]);}else if(material.defaultAttributeValues[attributeName].length===3){_gl.vertexAttrib3fv(attributePointer,material.defaultAttributeValues[attributeName]);}}}}}function setDirectBuffers(geometry,hint){var attributes=geometry.attributes;var attributeName,attributeItem;for(attributeName in attributes){attributeItem=attributes[attributeName];if(attributeItem.needsUpdate){if(attributeName==='index'){_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,attributeItem.buffer);_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,attributeItem.array,hint);}else{_gl.bindBuffer(_gl.ARRAY_BUFFER,attributeItem.buffer);_gl.bufferData(_gl.ARRAY_BUFFER,attributeItem.array,hint);}attributeItem.needsUpdate=false;}}}this.renderBufferImmediate=function(object,program,material){if(object.hasPositions&&!object.__webglVertexBuffer)object.__webglVertexBuffer=_gl.createBuffer();if(object.hasNormals&&!object.__webglNormalBuffer)object.__webglNormalBuffer=_gl.createBuffer();if(object.hasUvs&&!object.__webglUvBuffer)object.__webglUvBuffer=_gl.createBuffer();if(object.hasColors&&!object.__webglColorBuffer)object.__webglColorBuffer=_gl.createBuffer();if(object.hasPositions){_gl.bindBuffer(_gl.ARRAY_BUFFER,object.__webglVertexBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,object.positionArray,_gl.DYNAMIC_DRAW);_gl.enableVertexAttribArray(program.attributes.position);_gl.vertexAttribPointer(program.attributes.position,3,_gl.FLOAT,false,0,0);}if(object.hasNormals){_gl.bindBuffer(_gl.ARRAY_BUFFER,object.__webglNormalBuffer);if(material.shading===THREE.FlatShading){var nx,ny,nz,nax,nbx,ncx,nay,nby,ncy,naz,nbz,ncz,normalArray,i,il=object.count*3;for(i=0;i<il;i+=9){normalArray=object.normalArray;nax=normalArray[i];nay=normalArray[i+1];naz=normalArray[i+2];nbx=normalArray[i+3];nby=normalArray[i+4];nbz=normalArray[i+5];ncx=normalArray[i+6];ncy=normalArray[i+7];ncz=normalArray[i+8];nx=(nax+nbx+ncx)/3;ny=(nay+nby+ncy)/3;nz=(naz+nbz+ncz)/3;normalArray[i]=nx;normalArray[i+1]=ny;normalArray[i+2]=nz;normalArray[i+3]=nx;normalArray[i+4]=ny;normalArray[i+5]=nz;normalArray[i+6]=nx;normalArray[i+7]=ny;normalArray[i+8]=nz;}}_gl.bufferData(_gl.ARRAY_BUFFER,object.normalArray,_gl.DYNAMIC_DRAW);_gl.enableVertexAttribArray(program.attributes.normal);_gl.vertexAttribPointer(program.attributes.normal,3,_gl.FLOAT,false,0,0);}if(object.hasUvs&&material.map){_gl.bindBuffer(_gl.ARRAY_BUFFER,object.__webglUvBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,object.uvArray,_gl.DYNAMIC_DRAW);_gl.enableVertexAttribArray(program.attributes.uv);_gl.vertexAttribPointer(program.attributes.uv,2,_gl.FLOAT,false,0,0);}if(object.hasColors&&material.vertexColors!==THREE.NoColors){_gl.bindBuffer(_gl.ARRAY_BUFFER,object.__webglColorBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,object.colorArray,_gl.DYNAMIC_DRAW);_gl.enableVertexAttribArray(program.attributes.color);_gl.vertexAttribPointer(program.attributes.color,3,_gl.FLOAT,false,0,0);}_gl.drawArrays(_gl.TRIANGLES,0,object.count);object.count=0;};this.renderBufferDirect=function(camera,lights,fog,material,geometry,object){if(material.visible===false)return;var linewidth,a,attribute;var attributeItem,attributeName,attributePointer,attributeSize;var program=setProgram(camera,lights,fog,material,object);var programAttributes=program.attributes;var geometryAttributes=geometry.attributes;var updateBuffers=false,wireframeBit=material.wireframe?1:0,geometryHash=geometry.id*0xffffff+program.id*2+wireframeBit;if(geometryHash!==_currentGeometryGroupHash){_currentGeometryGroupHash=geometryHash;updateBuffers=true;}if(updateBuffers){disableAttributes();}if(object instanceof THREE.Mesh){var index=geometryAttributes[\"index\"];if(index){var offsets=geometry.offsets;if(offsets.length>1)updateBuffers=true;for(var i=0,il=offsets.length;i<il;i++){var startIndex=offsets[i].index;if(updateBuffers){for(attributeName in programAttributes){attributePointer=programAttributes[attributeName];attributeItem=geometryAttributes[attributeName];if(attributePointer>=0){if(attributeItem){attributeSize=attributeItem.itemSize;_gl.bindBuffer(_gl.ARRAY_BUFFER,attributeItem.buffer);enableAttribute(attributePointer);_gl.vertexAttribPointer(attributePointer,attributeSize,_gl.FLOAT,false,0,startIndex*attributeSize*4);}else if(material.defaultAttributeValues){if(material.defaultAttributeValues[attributeName].length===2){_gl.vertexAttrib2fv(attributePointer,material.defaultAttributeValues[attributeName]);}else if(material.defaultAttributeValues[attributeName].length===3){_gl.vertexAttrib3fv(attributePointer,material.defaultAttributeValues[attributeName]);}}}}_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,index.buffer);}_gl.drawElements(_gl.TRIANGLES,offsets[i].count,_gl.UNSIGNED_SHORT,offsets[i].start*2);_this.info.render.calls++;_this.info.render.vertices+=offsets[i].count;_this.info.render.faces+=offsets[i].count/3;}}else{if(updateBuffers){for(attributeName in programAttributes){if(attributeName==='index')continue;attributePointer=programAttributes[attributeName];attributeItem=geometryAttributes[attributeName];if(attributePointer>=0){if(attributeItem){attributeSize=attributeItem.itemSize;_gl.bindBuffer(_gl.ARRAY_BUFFER,attributeItem.buffer);enableAttribute(attributePointer);_gl.vertexAttribPointer(attributePointer,attributeSize,_gl.FLOAT,false,0,0);}else if(material.defaultAttributeValues&&material.defaultAttributeValues[attributeName]){if(material.defaultAttributeValues[attributeName].length===2){_gl.vertexAttrib2fv(attributePointer,material.defaultAttributeValues[attributeName]);}else if(material.defaultAttributeValues[attributeName].length===3){_gl.vertexAttrib3fv(attributePointer,material.defaultAttributeValues[attributeName]);}}}}}var position=geometry.attributes[\"position\"];_gl.drawArrays(_gl.TRIANGLES,0,position.array.length/3);_this.info.render.calls++;_this.info.render.vertices+=position.array.length/3;_this.info.render.faces+=position.array.length/3/3;}}else if(object instanceof THREE.ParticleSystem){if(updateBuffers){for(attributeName in programAttributes){attributePointer=programAttributes[attributeName];attributeItem=geometryAttributes[attributeName];if(attributePointer>=0){if(attributeItem){attributeSize=attributeItem.itemSize;_gl.bindBuffer(_gl.ARRAY_BUFFER,attributeItem.buffer);enableAttribute(attributePointer);_gl.vertexAttribPointer(attributePointer,attributeSize,_gl.FLOAT,false,0,0);}else if(material.defaultAttributeValues&&material.defaultAttributeValues[attributeName]){if(material.defaultAttributeValues[attributeName].length===2){_gl.vertexAttrib2fv(attributePointer,material.defaultAttributeValues[attributeName]);}else if(material.defaultAttributeValues[attributeName].length===3){_gl.vertexAttrib3fv(attributePointer,material.defaultAttributeValues[attributeName]);}}}}}var position=geometryAttributes[\"position\"];_gl.drawArrays(_gl.POINTS,0,position.array.length/3);_this.info.render.calls++;_this.info.render.points+=position.array.length/3;}else if(object instanceof THREE.Line){var primitives=object.type===THREE.LineStrip?_gl.LINE_STRIP:_gl.LINES;setLineWidth(material.linewidth);var index=geometryAttributes[\"index\"];if(index){var offsets=geometry.offsets;if(offsets.length>1)updateBuffers=true;for(var i=0,il=offsets.length;i<il;i++){var startIndex=offsets[i].index;if(updateBuffers){setupLinesVertexAttributes(material,programAttributes,geometryAttributes,startIndex);_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,index.buffer);}_gl.drawElements(_gl.LINES,offsets[i].count,_gl.UNSIGNED_SHORT,offsets[i].start*2);_this.info.render.calls++;_this.info.render.vertices+=offsets[i].count;}}else{if(updateBuffers){setupLinesVertexAttributes(material,programAttributes,geometryAttributes,0);}var position=geometryAttributes[\"position\"];_gl.drawArrays(primitives,0,position.array.length/3);_this.info.render.calls++;_this.info.render.points+=position.array.length;}}};this.renderBuffer=function(camera,lights,fog,material,geometryGroup,object){if(material.visible===false)return;var linewidth,a,attribute,i,il;var program=setProgram(camera,lights,fog,material,object);var attributes=program.attributes;var updateBuffers=false,wireframeBit=material.wireframe?1:0,geometryGroupHash=geometryGroup.id*0xffffff+program.id*2+wireframeBit;if(geometryGroupHash!==_currentGeometryGroupHash){_currentGeometryGroupHash=geometryGroupHash;updateBuffers=true;}if(updateBuffers){disableAttributes();}if(!material.morphTargets&&attributes.position>=0){if(updateBuffers){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglVertexBuffer);enableAttribute(attributes.position);_gl.vertexAttribPointer(attributes.position,3,_gl.FLOAT,false,0,0);}}else{if(object.morphTargetBase){setupMorphTargets(material,geometryGroup,object);}}if(updateBuffers){if(geometryGroup.__webglCustomAttributesList){for(i=0,il=geometryGroup.__webglCustomAttributesList.length;i<il;i++){attribute=geometryGroup.__webglCustomAttributesList[i];if(attributes[attribute.buffer.belongsToAttribute]>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,attribute.buffer);enableAttribute(attributes[attribute.buffer.belongsToAttribute]);_gl.vertexAttribPointer(attributes[attribute.buffer.belongsToAttribute],attribute.size,_gl.FLOAT,false,0,0);}}}if(attributes.color>=0){if(object.geometry.colors.length>0||object.geometry.faces.length>0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglColorBuffer);enableAttribute(attributes.color);_gl.vertexAttribPointer(attributes.color,3,_gl.FLOAT,false,0,0);}else if(material.defaultAttributeValues){_gl.vertexAttrib3fv(attributes.color,material.defaultAttributeValues.color);}}if(attributes.normal>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglNormalBuffer);enableAttribute(attributes.normal);_gl.vertexAttribPointer(attributes.normal,3,_gl.FLOAT,false,0,0);}if(attributes.tangent>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglTangentBuffer);enableAttribute(attributes.tangent);_gl.vertexAttribPointer(attributes.tangent,4,_gl.FLOAT,false,0,0);}if(attributes.uv>=0){if(object.geometry.faceVertexUvs[0]){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglUVBuffer);enableAttribute(attributes.uv);_gl.vertexAttribPointer(attributes.uv,2,_gl.FLOAT,false,0,0);}else if(material.defaultAttributeValues){_gl.vertexAttrib2fv(attributes.uv,material.defaultAttributeValues.uv);}}if(attributes.uv2>=0){if(object.geometry.faceVertexUvs[1]){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglUV2Buffer);enableAttribute(attributes.uv2);_gl.vertexAttribPointer(attributes.uv2,2,_gl.FLOAT,false,0,0);}else if(material.defaultAttributeValues){_gl.vertexAttrib2fv(attributes.uv2,material.defaultAttributeValues.uv2);}}if(material.skinning&&attributes.skinIndex>=0&&attributes.skinWeight>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglSkinIndicesBuffer);enableAttribute(attributes.skinIndex);_gl.vertexAttribPointer(attributes.skinIndex,4,_gl.FLOAT,false,0,0);_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglSkinWeightsBuffer);enableAttribute(attributes.skinWeight);_gl.vertexAttribPointer(attributes.skinWeight,4,_gl.FLOAT,false,0,0);}if(attributes.lineDistance>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglLineDistanceBuffer);enableAttribute(attributes.lineDistance);_gl.vertexAttribPointer(attributes.lineDistance,1,_gl.FLOAT,false,0,0);}}if(object instanceof THREE.Mesh){if(material.wireframe){setLineWidth(material.wireframeLinewidth);if(updateBuffers)_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,geometryGroup.__webglLineBuffer);_gl.drawElements(_gl.LINES,geometryGroup.__webglLineCount,_gl.UNSIGNED_SHORT,0);}else{if(updateBuffers)_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,geometryGroup.__webglFaceBuffer);_gl.drawElements(_gl.TRIANGLES,geometryGroup.__webglFaceCount,_gl.UNSIGNED_SHORT,0);}_this.info.render.calls++;_this.info.render.vertices+=geometryGroup.__webglFaceCount;_this.info.render.faces+=geometryGroup.__webglFaceCount/3;}else if(object instanceof THREE.Line){var primitives=object.type===THREE.LineStrip?_gl.LINE_STRIP:_gl.LINES;setLineWidth(material.linewidth);_gl.drawArrays(primitives,0,geometryGroup.__webglLineCount);_this.info.render.calls++;}else if(object instanceof THREE.ParticleSystem){_gl.drawArrays(_gl.POINTS,0,geometryGroup.__webglParticleCount);_this.info.render.calls++;_this.info.render.points+=geometryGroup.__webglParticleCount;}};function enableAttribute(attribute){if(_enabledAttributes[attribute]===0){_gl.enableVertexAttribArray(attribute);_enabledAttributes[attribute]=1;}};function disableAttributes(){for(var attribute in _enabledAttributes){if(_enabledAttributes[attribute]===1){_gl.disableVertexAttribArray(attribute);_enabledAttributes[attribute]=0;}}};function setupMorphTargets(material,geometryGroup,object){var attributes=material.program.attributes;if(object.morphTargetBase!==-1&&attributes.position>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphTargetsBuffers[object.morphTargetBase]);enableAttribute(attributes.position);_gl.vertexAttribPointer(attributes.position,3,_gl.FLOAT,false,0,0);}else if(attributes.position>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglVertexBuffer);enableAttribute(attributes.position);_gl.vertexAttribPointer(attributes.position,3,_gl.FLOAT,false,0,0);}if(object.morphTargetForcedOrder.length){var m=0;var order=object.morphTargetForcedOrder;var influences=object.morphTargetInfluences;while(m<material.numSupportedMorphTargets&&m<order.length){if(attributes[\"morphTarget\"+m]>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphTargetsBuffers[order[m]]);enableAttribute(attributes[\"morphTarget\"+m]);_gl.vertexAttribPointer(attributes[\"morphTarget\"+m],3,_gl.FLOAT,false,0,0);}if(attributes[\"morphNormal\"+m]>=0&&material.morphNormals){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphNormalsBuffers[order[m]]);enableAttribute(attributes[\"morphNormal\"+m]);_gl.vertexAttribPointer(attributes[\"morphNormal\"+m],3,_gl.FLOAT,false,0,0);}object.__webglMorphTargetInfluences[m]=influences[order[m]];m++;}}else{var influence,activeInfluenceIndices=[];var influences=object.morphTargetInfluences;var i,il=influences.length;for(i=0;i<il;i++){influence=influences[i];if(influence>0){activeInfluenceIndices.push([influence,i]);}}if(activeInfluenceIndices.length>material.numSupportedMorphTargets){activeInfluenceIndices.sort(numericalSort);activeInfluenceIndices.length=material.numSupportedMorphTargets;}else if(activeInfluenceIndices.length>material.numSupportedMorphNormals){activeInfluenceIndices.sort(numericalSort);}else if(activeInfluenceIndices.length===0){activeInfluenceIndices.push([0,0]);};var influenceIndex,m=0;while(m<material.numSupportedMorphTargets){if(activeInfluenceIndices[m]){influenceIndex=activeInfluenceIndices[m][1];if(attributes[\"morphTarget\"+m]>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphTargetsBuffers[influenceIndex]);enableAttribute(attributes[\"morphTarget\"+m]);_gl.vertexAttribPointer(attributes[\"morphTarget\"+m],3,_gl.FLOAT,false,0,0);}if(attributes[\"morphNormal\"+m]>=0&&material.morphNormals){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphNormalsBuffers[influenceIndex]);enableAttribute(attributes[\"morphNormal\"+m]);_gl.vertexAttribPointer(attributes[\"morphNormal\"+m],3,_gl.FLOAT,false,0,0);}object.__webglMorphTargetInfluences[m]=influences[influenceIndex];}else{object.__webglMorphTargetInfluences[m]=0;}m++;}}if(material.program.uniforms.morphTargetInfluences!==null){_gl.uniform1fv(material.program.uniforms.morphTargetInfluences,object.__webglMorphTargetInfluences);}};function painterSortStable(a,b){if(a.z!==b.z){return b.z-a.z;}else{return a.id-b.id;}};function numericalSort(a,b){return b[0]-a[0];};this.render=function(scene,camera,renderTarget,forceClear){if(camera instanceof THREE.Camera===false){THREE.onerror('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');return;}var i,il,webglObject,object,renderList,lights=scene.__lights,fog=scene.fog;_currentMaterialId=-1;_lightsNeedUpdate=true;if(scene.autoUpdate===true)scene.updateMatrixWorld();if(camera.parent===undefined)camera.updateMatrixWorld();camera.matrixWorldInverse.getInverse(camera.matrixWorld);_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);_frustum.setFromMatrix(_projScreenMatrix);if(this.autoUpdateObjects)this.initWebGLObjects(scene);renderPlugins(this.renderPluginsPre,scene,camera);_this.info.render.calls=0;_this.info.render.vertices=0;_this.info.render.faces=0;_this.info.render.points=0;this.setRenderTarget(renderTarget);if(this.autoClear||forceClear){this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);}renderList=scene.__webglObjects;for(i=0,il=renderList.length;i<il;i++){webglObject=renderList[i];object=webglObject.object;webglObject.id=i;webglObject.render=false;if(object.visible){if(!(object instanceof THREE.Mesh||object instanceof THREE.ParticleSystem)||!object.frustumCulled||_frustum.intersectsObject(object)){setupMatrices(object,camera);unrollBufferMaterial(webglObject);webglObject.render=true;if(this.sortObjects===true){if(object.renderDepth!==null){webglObject.z=object.renderDepth;}else{_vector3.setFromMatrixPosition(object.matrixWorld);_vector3.applyProjection(_projScreenMatrix);webglObject.z=_vector3.z;}}}}}if(this.sortObjects){renderList.sort(painterSortStable);}renderList=scene.__webglObjectsImmediate;for(i=0,il=renderList.length;i<il;i++){webglObject=renderList[i];object=webglObject.object;if(object.visible){setupMatrices(object,camera);unrollImmediateBufferMaterial(webglObject);}}if(scene.overrideMaterial){var material=scene.overrideMaterial;this.setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst);this.setDepthTest(material.depthTest);this.setDepthWrite(material.depthWrite);setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits);renderObjects(scene.__webglObjects,false,\"\",camera,lights,fog,true,material);renderObjectsImmediate(scene.__webglObjectsImmediate,\"\",camera,lights,fog,false,material);}else{var material=null;this.setBlending(THREE.NoBlending);renderObjects(scene.__webglObjects,true,\"opaque\",camera,lights,fog,false,material);renderObjectsImmediate(scene.__webglObjectsImmediate,\"opaque\",camera,lights,fog,false,material);renderObjects(scene.__webglObjects,false,\"transparent\",camera,lights,fog,true,material);renderObjectsImmediate(scene.__webglObjectsImmediate,\"transparent\",camera,lights,fog,true,material);}renderPlugins(this.renderPluginsPost,scene,camera);if(renderTarget&&renderTarget.generateMipmaps&&renderTarget.minFilter!==THREE.NearestFilter&&renderTarget.minFilter!==THREE.LinearFilter&&THREE.isPowerOfTwo(renderTarget.width)&&THREE.isPowerOfTwo(renderTarget.height)){updateRenderTargetMipmap(renderTarget);}this.setDepthTest(true);this.setDepthWrite(true);};function renderPlugins(plugins,scene,camera){if(!plugins.length)return;for(var i=0,il=plugins.length;i<il;i++){_currentProgram=null;_currentCamera=null;_oldBlending=-1;_oldDepthTest=-1;_oldDepthWrite=-1;_oldDoubleSided=-1;_oldFlipSided=-1;_currentGeometryGroupHash=-1;_currentMaterialId=-1;_lightsNeedUpdate=true;plugins[i].render(scene,camera,_currentWidth,_currentHeight);_currentProgram=null;_currentCamera=null;_oldBlending=-1;_oldDepthTest=-1;_oldDepthWrite=-1;_oldDoubleSided=-1;_oldFlipSided=-1;_currentGeometryGroupHash=-1;_currentMaterialId=-1;_lightsNeedUpdate=true;}};function renderObjects(renderList,reverse,materialType,camera,lights,fog,useBlending,overrideMaterial){var webglObject,object,buffer,material,start,end,delta;if(reverse){start=renderList.length-1;end=-1;delta=-1;}else{start=0;end=renderList.length;delta=1;}for(var i=start;i!==end;i+=delta){webglObject=renderList[i];if(webglObject.render){object=webglObject.object;buffer=webglObject.buffer;if(overrideMaterial){material=overrideMaterial;}else{material=webglObject[materialType];if(!material)continue;if(useBlending)_this.setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst);_this.setDepthTest(material.depthTest);_this.setDepthWrite(material.depthWrite);setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits);}_this.setMaterialFaces(material);if(buffer instanceof THREE.BufferGeometry){_this.renderBufferDirect(camera,lights,fog,material,buffer,object);}else{_this.renderBuffer(camera,lights,fog,material,buffer,object);}}}};function renderObjectsImmediate(renderList,materialType,camera,lights,fog,useBlending,overrideMaterial){var webglObject,object,material,program;for(var i=0,il=renderList.length;i<il;i++){webglObject=renderList[i];object=webglObject.object;if(object.visible){if(overrideMaterial){material=overrideMaterial;}else{material=webglObject[materialType];if(!material)continue;if(useBlending)_this.setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst);_this.setDepthTest(material.depthTest);_this.setDepthWrite(material.depthWrite);setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits);}_this.renderImmediateObject(camera,lights,fog,material,object);}}};this.renderImmediateObject=function(camera,lights,fog,material,object){var program=setProgram(camera,lights,fog,material,object);_currentGeometryGroupHash=-1;_this.setMaterialFaces(material);if(object.immediateRenderCallback){object.immediateRenderCallback(program,_gl,_frustum);}else{object.render(function(object){_this.renderBufferImmediate(object,program,material);});}};function unrollImmediateBufferMaterial(globject){var object=globject.object,material=object.material;if(material.transparent){globject.transparent=material;globject.opaque=null;}else{globject.opaque=material;globject.transparent=null;}};function unrollBufferMaterial(globject){var object=globject.object;var buffer=globject.buffer;var geometry=object.geometry;var material=object.material;if(material instanceof THREE.MeshFaceMaterial){var materialIndex=geometry instanceof THREE.BufferGeometry?0:buffer.materialIndex;material=material.materials[materialIndex];if(material.transparent){globject.transparent=material;globject.opaque=null;}else{globject.opaque=material;globject.transparent=null;}}else{if(material){if(material.transparent){globject.transparent=material;globject.opaque=null;}else{globject.opaque=material;globject.transparent=null;}}}};this.initWebGLObjects=function(scene){if(!scene.__webglObjects){scene.__webglObjects=[];scene.__webglObjectsImmediate=[];scene.__webglSprites=[];scene.__webglFlares=[];}while(scene.__objectsAdded.length){addObject(scene.__objectsAdded[0],scene);scene.__objectsAdded.splice(0,1);}while(scene.__objectsRemoved.length){removeObject(scene.__objectsRemoved[0],scene);scene.__objectsRemoved.splice(0,1);}for(var o=0,ol=scene.__webglObjects.length;o<ol;o++){var object=scene.__webglObjects[o].object;if(object.__webglInit===undefined){if(object.__webglActive!==undefined){removeObject(object,scene);}addObject(object,scene);}updateObject(object);}};function addObject(object,scene){var g,geometry,material,geometryGroup;if(object.__webglInit===undefined){object.__webglInit=true;object._modelViewMatrix=new THREE.Matrix4();object._normalMatrix=new THREE.Matrix3();if(object.geometry!==undefined&&object.geometry.__webglInit===undefined){object.geometry.__webglInit=true;object.geometry.addEventListener('dispose',onGeometryDispose);}geometry=object.geometry;if(geometry===undefined){}else if(geometry instanceof THREE.BufferGeometry){initDirectBuffers(geometry);}else if(object instanceof THREE.Mesh){material=object.material;if(geometry.geometryGroups===undefined){geometry.makeGroups(material instanceof THREE.MeshFaceMaterial);}for(g in geometry.geometryGroups){geometryGroup=geometry.geometryGroups[g];if(!geometryGroup.__webglVertexBuffer){createMeshBuffers(geometryGroup);initMeshBuffers(geometryGroup,object);geometry.verticesNeedUpdate=true;geometry.morphTargetsNeedUpdate=true;geometry.elementsNeedUpdate=true;geometry.uvsNeedUpdate=true;geometry.normalsNeedUpdate=true;geometry.tangentsNeedUpdate=true;geometry.colorsNeedUpdate=true;}}}else if(object instanceof THREE.Line){if(!geometry.__webglVertexBuffer){createLineBuffers(geometry);initLineBuffers(geometry,object);geometry.verticesNeedUpdate=true;geometry.colorsNeedUpdate=true;geometry.lineDistancesNeedUpdate=true;}}else if(object instanceof THREE.ParticleSystem){if(!geometry.__webglVertexBuffer){createParticleBuffers(geometry);initParticleBuffers(geometry,object);geometry.verticesNeedUpdate=true;geometry.colorsNeedUpdate=true;}}}if(object.__webglActive===undefined){if(object instanceof THREE.Mesh){geometry=object.geometry;if(geometry instanceof THREE.BufferGeometry){addBuffer(scene.__webglObjects,geometry,object);}else if(geometry instanceof THREE.Geometry){for(g in geometry.geometryGroups){geometryGroup=geometry.geometryGroups[g];addBuffer(scene.__webglObjects,geometryGroup,object);}}}else if(object instanceof THREE.Line||object instanceof THREE.ParticleSystem){geometry=object.geometry;addBuffer(scene.__webglObjects,geometry,object);}else if(object instanceof THREE.ImmediateRenderObject||object.immediateRenderCallback){addBufferImmediate(scene.__webglObjectsImmediate,object);}else if(object instanceof THREE.Sprite){scene.__webglSprites.push(object);}else if(object instanceof THREE.LensFlare){scene.__webglFlares.push(object);}object.__webglActive=true;}};function addBuffer(objlist,buffer,object){objlist.push({id:null,buffer:buffer,object:object,opaque:null,transparent:null,z:0});};function addBufferImmediate(objlist,object){objlist.push({id:null,object:object,opaque:null,transparent:null,z:0});};function updateObject(object){var geometry=object.geometry,geometryGroup,customAttributesDirty,material;if(geometry instanceof THREE.BufferGeometry){setDirectBuffers(geometry,_gl.DYNAMIC_DRAW);}else if(object instanceof THREE.Mesh){for(var i=0,il=geometry.geometryGroupsList.length;i<il;i++){geometryGroup=geometry.geometryGroupsList[i];material=getBufferMaterial(object,geometryGroup);if(geometry.buffersNeedUpdate){initMeshBuffers(geometryGroup,object);}customAttributesDirty=material.attributes&&areCustomAttributesDirty(material);if(geometry.verticesNeedUpdate||geometry.morphTargetsNeedUpdate||geometry.elementsNeedUpdate||geometry.uvsNeedUpdate||geometry.normalsNeedUpdate||geometry.colorsNeedUpdate||geometry.tangentsNeedUpdate||customAttributesDirty){setMeshBuffers(geometryGroup,object,_gl.DYNAMIC_DRAW,!geometry.dynamic,material);}}geometry.verticesNeedUpdate=false;geometry.morphTargetsNeedUpdate=false;geometry.elementsNeedUpdate=false;geometry.uvsNeedUpdate=false;geometry.normalsNeedUpdate=false;geometry.colorsNeedUpdate=false;geometry.tangentsNeedUpdate=false;geometry.buffersNeedUpdate=false;material.attributes&&clearCustomAttributes(material);}else if(object instanceof THREE.Line){material=getBufferMaterial(object,geometry);customAttributesDirty=material.attributes&&areCustomAttributesDirty(material);if(geometry.verticesNeedUpdate||geometry.colorsNeedUpdate||geometry.lineDistancesNeedUpdate||customAttributesDirty){setLineBuffers(geometry,_gl.DYNAMIC_DRAW);}geometry.verticesNeedUpdate=false;geometry.colorsNeedUpdate=false;geometry.lineDistancesNeedUpdate=false;material.attributes&&clearCustomAttributes(material);}else if(object instanceof THREE.ParticleSystem){material=getBufferMaterial(object,geometry);customAttributesDirty=material.attributes&&areCustomAttributesDirty(material);if(geometry.verticesNeedUpdate||geometry.colorsNeedUpdate||object.sortParticles||customAttributesDirty){setParticleBuffers(geometry,_gl.DYNAMIC_DRAW,object);}geometry.verticesNeedUpdate=false;geometry.colorsNeedUpdate=false;material.attributes&&clearCustomAttributes(material);}};function areCustomAttributesDirty(material){for(var a in material.attributes){if(material.attributes[a].needsUpdate)return true;}return false;};function clearCustomAttributes(material){for(var a in material.attributes){material.attributes[a].needsUpdate=false;}};function removeObject(object,scene){if(object instanceof THREE.Mesh||object instanceof THREE.ParticleSystem||object instanceof THREE.Line){removeInstances(scene.__webglObjects,object);}else if(object instanceof THREE.Sprite){removeInstancesDirect(scene.__webglSprites,object);}else if(object instanceof THREE.LensFlare){removeInstancesDirect(scene.__webglFlares,object);}else if(object instanceof THREE.ImmediateRenderObject||object.immediateRenderCallback){removeInstances(scene.__webglObjectsImmediate,object);}delete object.__webglActive;};function removeInstances(objlist,object){for(var o=objlist.length-1;o>=0;o--){if(objlist[o].object===object){objlist.splice(o,1);}}};function removeInstancesDirect(objlist,object){for(var o=objlist.length-1;o>=0;o--){if(objlist[o]===object){objlist.splice(o,1);}}};this.initMaterial=function(material,lights,fog,object){material.addEventListener('dispose',onMaterialDispose);var u,a,identifiers,i,parameters,maxLightCount,maxBones,maxShadows,shaderID;if(material instanceof THREE.MeshDepthMaterial){shaderID='depth';}else if(material instanceof THREE.MeshNormalMaterial){shaderID='normal';}else if(material instanceof THREE.MeshBasicMaterial){shaderID='basic';}else if(material instanceof THREE.MeshLambertMaterial){shaderID='lambert';}else if(material instanceof THREE.MeshPhongMaterial){shaderID='phong';}else if(material instanceof THREE.MeshPhysicalMaterial){shaderID='physical';}else if(material instanceof THREE.LineBasicMaterial){shaderID='basic';}else if(material instanceof THREE.LineDashedMaterial){shaderID='dashed';}else if(material instanceof THREE.ParticleSystemMaterial){shaderID='particle_basic';}if(shaderID&&THREE.ShaderLib[shaderID]){setMaterialShaders(material,THREE.ShaderLib[shaderID]);}if(!shaderID){shaderID=material.shaderID;}maxLightCount=allocateLights(lights);maxShadows=allocateShadows(lights);maxBones=allocateBones(object);parameters={map:!!material.map,opacityMap:!!material.opacityMap,envMap:!!material.envMap,diffuseEnvMap:!!material.diffuseEnvMap,lightMap:!!material.lightMap,emissiveMap:!!material.emissiveMap,bumpMap:!!material.bumpMap,normalMap:!!material.normalMap,specularMap:!!material.specularMap,reflectivityMap:!!material.reflectivityMap,roughnessMap:!!material.roughnessMap,translucencyMap:!!material.translucencyMap,metallicMap:!!material.metallicMap,falloffMap:!!material.falloffMap,clearCoat:material.clearCoat!==undefined&&material.clearCoat!==0,anisotropy:material.anisotropy!==undefined&&material.anisotropy!==0||!!material.anisotropyMap,anisotropyMap:!!material.anisotropyMap,anisotropyRotation:material.anisotropyRotation!==undefined&&material.anisotropyRotation!==0||!!material.anisotropyRotationMap,anisotropyRotationMap:!!material.anisotropyRotationMap,vertexColors:material.vertexColors,fog:fog,useFog:material.fog,fogExp:fog instanceof THREE.FogExp2,sizeAttenuation:!!material.sizeAttenuation,skinning:material.skinning,maxBones:maxBones,useVertexTexture:_supportsBoneTextures&&object&&object.useVertexTexture,morphTargets:material.morphTargets,morphNormals:material.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:maxLightCount.directional,maxPointLights:maxLightCount.point,maxSpotLights:maxLightCount.spot,maxHemiLights:maxLightCount.hemi,maxAreaLights:maxLightCount.area,maxShadows:maxShadows,shadowMapEnabled:this.shadowMapEnabled&&object.receiveShadow&&maxShadows>0,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,translucency:material.translucency&&material.translucency.getHex()>0,alphaTest:material.alphaTest,falloff:material.falloff||false,wrapAround:material.wrapAround,doubleSided:material.side===THREE.DoubleSide,flipSided:material.side===THREE.BackSide};material.program=buildProgram(shaderID,material.fragmentShader,material.vertexShader,material.uniforms,material.attributes,material.defines,parameters,material.index0AttributeName);var attributes=material.program.attributes;if(material.morphTargets){material.numSupportedMorphTargets=0;var id,base=\"morphTarget\";for(i=0;i<this.maxMorphTargets;i++){id=base+i;if(attributes[id]>=0){material.numSupportedMorphTargets++;}}}if(material.morphNormals){material.numSupportedMorphNormals=0;var id,base=\"morphNormal\";for(i=0;i<this.maxMorphNormals;i++){id=base+i;if(attributes[id]>=0){material.numSupportedMorphNormals++;}}}material.uniformsList=[];for(u in material.uniforms){material.uniformsList.push([material.uniforms[u],u]);}};function setMaterialShaders(material,shaders){material.uniforms=THREE.UniformsUtils.clone(shaders.uniforms);material.vertexShader=shaders.vertexShader;material.fragmentShader=shaders.fragmentShader;};function setProgram(camera,lights,fog,material,object){_usedTextureUnits=0;if(material.needsUpdate){var oldProgram=material.program;_this.initMaterial(material,lights,fog,object);material.needsUpdate=false;if(oldProgram)deallocateMaterial(material,oldProgram);}if(material.morphTargets){if(!object.__webglMorphTargetInfluences){object.__webglMorphTargetInfluences=new Float32Array(_this.maxMorphTargets);}}var refreshMaterial=false;var program=material.program,p_uniforms=program.uniforms,m_uniforms=material.uniforms;if(program!==_currentProgram){_gl.useProgram(program);_currentProgram=program;refreshMaterial=true;}if(material.id!==_currentMaterialId){_currentMaterialId=material.id;refreshMaterial=true;}if(refreshMaterial||camera!==_currentCamera){_gl.uniformMatrix4fv(p_uniforms.projectionMatrix,false,camera.projectionMatrix.elements);if(camera!==_currentCamera)_currentCamera=camera;}if(material.skinning){if(_supportsBoneTextures&&object.useVertexTexture){if(p_uniforms.boneTexture!==null){var textureUnit=getTextureUnit();_gl.uniform1i(p_uniforms.boneTexture,textureUnit);_this.setTexture(object.boneTexture,textureUnit);}if(p_uniforms.boneTextureWidth!==null){_gl.uniform1i(p_uniforms.boneTextureWidth,object.boneTextureWidth);}if(p_uniforms.boneTextureHeight!==null){_gl.uniform1i(p_uniforms.boneTextureHeight,object.boneTextureHeight);}}else{if(p_uniforms.boneGlobalMatrices!==null){_gl.uniformMatrix4fv(p_uniforms.boneGlobalMatrices,false,object.boneMatrices);}}}if(refreshMaterial){if(fog&&material.fog){refreshUniformsFog(m_uniforms,fog);}if(material instanceof THREE.MeshPhongMaterial||material instanceof THREE.MeshLambertMaterial||material instanceof THREE.MeshPhysicalMaterial||material.lights){if(_lightsNeedUpdate){setupLights(program,lights);_lightsNeedUpdate=false;}refreshUniformsLights(m_uniforms,_lights);}if(material instanceof THREE.MeshBasicMaterial||material instanceof THREE.MeshLambertMaterial||material instanceof THREE.MeshPhysicalMaterial||material instanceof THREE.MeshPhongMaterial){refreshUniformsCommon(m_uniforms,material);}if(material instanceof THREE.LineBasicMaterial){refreshUniformsLine(m_uniforms,material);}else if(material instanceof THREE.LineDashedMaterial){refreshUniformsLine(m_uniforms,material);refreshUniformsDash(m_uniforms,material);}else if(material instanceof THREE.ParticleSystemMaterial){refreshUniformsParticle(m_uniforms,material);}else if(material instanceof THREE.MeshPhongMaterial){refreshUniformsPhong(m_uniforms,material);}else if(material instanceof THREE.MeshPhysicalMaterial){refreshUniformsPhysical(m_uniforms,material);}else if(material instanceof THREE.MeshLambertMaterial){refreshUniformsLambert(m_uniforms,material);}else if(material instanceof THREE.MeshDepthMaterial){m_uniforms.mNear.value=camera.near;m_uniforms.mFar.value=camera.far;m_uniforms.opacity.value=material.opacity;}else if(material instanceof THREE.MeshNormalMaterial){m_uniforms.opacity.value=material.opacity;}if(object.receiveShadow&&!material._shadowPass){refreshUniformsShadow(m_uniforms,lights);}loadUniformsGeneric(program,material.uniformsList);if(material instanceof THREE.ShaderMaterial||material instanceof THREE.MeshPhongMaterial||material instanceof THREE.MeshPhysicalMaterial||material.envMap||material.diffuseEnvMap){if(p_uniforms.cameraPosition!==null){_vector3.setFromMatrixPosition(camera.matrixWorld);_gl.uniform3f(p_uniforms.cameraPosition,_vector3.x,_vector3.y,_vector3.z);}}if(material instanceof THREE.MeshPhongMaterial||material instanceof THREE.MeshLambertMaterial||material instanceof THREE.MeshPhysicalMaterial||material instanceof THREE.ShaderMaterial||material.skinning){if(p_uniforms.viewMatrix!==null){_gl.uniformMatrix4fv(p_uniforms.viewMatrix,false,camera.matrixWorldInverse.elements);}}}loadUniformsMatrices(p_uniforms,object);if(p_uniforms.modelMatrix!==null){_gl.uniformMatrix4fv(p_uniforms.modelMatrix,false,object.matrixWorld.elements);}return program;};function refreshUniformsCommon(uniforms,material){uniforms.opacity.value=material.opacity;uniforms.diffuse.value=material.color;uniforms.map.value=material.map;uniforms.lightMap.value=material.lightMap;uniforms.emissiveMap.value=material.emissiveMap;if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);}if(material.map){var map=material.map;uniforms.offsetRepeat.value.set(map.offset.x,map.offset.y,map.repeat.x,map.repeat.y);uniforms.gainBrightness.value.set(map.gainPivot,map.gain,map.brightness,map.invert?-1.0:1.0);}if(material.specularMap){var specularMap=material.specularMap;uniforms.specularMap.value=specularMap;uniforms.specularOffsetRepeat.value.set(specularMap.offset.x,specularMap.offset.y,specularMap.repeat.x,specularMap.repeat.y);uniforms.specularGainBrightness.value.set(specularMap.gainPivot,specularMap.gain,specularMap.brightness,specularMap.invert?-1.0:1.0);}if(material.opacityMap){var opacityMap=material.opacityMap;uniforms.opacityMap.value=opacityMap;uniforms.opacityOffsetRepeat.value.set(opacityMap.offset.x,opacityMap.offset.y,opacityMap.repeat.x,opacityMap.repeat.y);uniforms.opacityGainBrightness.value.set(opacityMap.gainPivot,opacityMap.gain,opacityMap.brightness,opacityMap.invert?-1.0:1.0);}if(material.bumpMap){var bumpMap=material.bumpMap;uniforms.bumpOffsetRepeat.value.set(bumpMap.offset.x,bumpMap.offset.y,bumpMap.repeat.x,bumpMap.repeat.y);}if(material.normalMap){var normalMap=material.normalMap;uniforms.normalOffsetRepeat.value.set(normalMap.offset.x,normalMap.offset.y,normalMap.repeat.x,normalMap.repeat.y);}if(material.anisotropyMap){var anisotropyMap=material.anisotropyMap;uniforms.anisotropyOffsetRepeat.value.set(anisotropyMap.offset.x,anisotropyMap.offset.y,anisotropyMap.repeat.x,anisotropyMap.repeat.y);uniforms.anisotropyGainBrightness.value.set(anisotropyMap.gainPivot,anisotropyMap.gain,anisotropyMap.brightness,anisotropyMap.invert?-1.0:1.0);}if(material.anisotropyRotationMap){var anisotropyRotationMap=material.anisotropyRotationMap;uniforms.anisotropyRotationOffsetRepeat.value.set(anisotropyRotationMap.offset.x,anisotropyRotationMap.offset.y,anisotropyRotationMap.repeat.x,anisotropyRotationMap.repeat.y);uniforms.anisotropyRotationGainBrightness.value.set(anisotropyRotationMap.gainPivot,anisotropyRotationMap.gain,anisotropyRotationMap.brightness,anisotropyRotationMap.invert?-1.0:1.0);}if(material.roughnessMap){var roughnessMap=material.roughnessMap;uniforms.roughnessOffsetRepeat.value.set(roughnessMap.offset.x,roughnessMap.offset.y,roughnessMap.repeat.x,roughnessMap.repeat.y);uniforms.roughnessGainBrightness.value.set(roughnessMap.gainPivot,roughnessMap.gain,roughnessMap.brightness,roughnessMap.invert?-1.0:1.0);}if(material.metallicMap){var metallicMap=material.metallicMap;uniforms.metallicOffsetRepeat.value.set(metallicMap.offset.x,metallicMap.offset.y,metallicMap.repeat.x,metallicMap.repeat.y);uniforms.metallicGainBrightness.value.set(metallicMap.gainPivot,metallicMap.gain,metallicMap.brightness,metallicMap.invert?-1.0:1.0);}if(material.translucencyMap){var translucencyMap=material.translucencyMap;uniforms.translucencyMap.value=translucencyMap;}uniforms.envMap.value=material.envMap;uniforms.flipEnvMap.value=material.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;uniforms.envEncoding.value=material.envMap?material.envMap.encoding:0;uniforms.diffuseEnvMap.value=material.diffuseEnvMap;uniforms.diffuseEnvEncoding.value=material.diffuseEnvMap?material.diffuseEnvMap.encoding:0;uniforms.reflectivity.value=material.reflectivity;uniforms.refractionRatio.value=material.refractionRatio;uniforms.combine.value=material.combine;uniforms.useRefract.value=material.envMap&&material.envMap.mapping instanceof THREE.CubeRefractionMapping;};function refreshUniformsLine(uniforms,material){uniforms.diffuse.value=material.color;uniforms.opacity.value=material.opacity;};function refreshUniformsDash(uniforms,material){uniforms.dashSize.value=material.dashSize;uniforms.totalSize.value=material.dashSize+material.gapSize;uniforms.scale.value=material.scale;};function refreshUniformsParticle(uniforms,material){uniforms.psColor.value=material.color;uniforms.opacity.value=material.opacity;uniforms.size.value=material.size;uniforms.scale.value=_canvas.height/2.0;uniforms.map.value=material.map;};function refreshUniformsFog(uniforms,fog){uniforms.fogColor.value=fog.color;if(fog instanceof THREE.Fog){uniforms.fogNear.value=fog.near;uniforms.fogFar.value=fog.far;}else if(fog instanceof THREE.FogExp2){uniforms.fogDensity.value=fog.density;}};function refreshUniformsPhong(uniforms,material){uniforms.opacityMap.value=material.opacityMap;uniforms.shininess.value=material.shininess;uniforms.ambient.value=material.ambient;uniforms.emissive.value=material.emissive;uniforms.specular.value=material.specular;if(material.wrapAround){uniforms.wrapRGB.value.copy(material.wrapRGB);}};function refreshUniformsPhysical(uniforms,material){uniforms.opacityMap.value=material.opacityMap;uniforms.falloffBlendParams.value=material.falloffBlendParams;uniforms.falloffMap.value=material.falloffMap;uniforms.roughness.value=material.roughness;uniforms.metallic.value=material.metallic;uniforms.clearCoat.value=material.clearCoat;uniforms.clearCoatRoughness.value=material.clearCoatRoughness;uniforms.roughnessMap.value=material.roughnessMap;uniforms.metallicMap.value=material.metallicMap;uniforms.translucencyMap.value=material.translucencyMap;uniforms.translucencyNormalAlpha.value=material.translucencyNormalAlpha;uniforms.translucencyNormalPower.value=material.translucencyNormalPower;uniforms.translucencyViewAlpha.value=material.translucencyViewAlpha;uniforms.translucencyViewPower.value=material.translucencyViewPower;uniforms.anisotropyMap.value=material.anisotropyMap;uniforms.anisotropy.value=material.anisotropy;uniforms.anisotropyRotation.value=material.anisotropyRotation;uniforms.anisotropyRotationMap.value=material.anisotropyRotationMap;uniforms.ambient.value=material.ambient;uniforms.emissive.value=material.emissive;uniforms.falloffColor.value=material.falloffColor;uniforms.specular.value=material.specular;uniforms.translucency.value=material.translucency;};function refreshUniformsLambert(uniforms,material){uniforms.ambient.value=material.ambient;uniforms.emissive.value=material.emissive;if(material.wrapAround){uniforms.wrapRGB.value.copy(material.wrapRGB);}};function refreshUniformsLights(uniforms,lights){uniforms.ambientLightColor.value=lights.ambient;uniforms.directionalLightColor.value=lights.directional.colors;uniforms.directionalLightDirection.value=lights.directional.positions;uniforms.pointLightColor.value=lights.point.colors;uniforms.pointLightPosition.value=lights.point.positions;uniforms.pointLightDistance.value=lights.point.distances;uniforms.pointLightDecayExponent.value=lights.point.decayExponents;uniforms.spotLightColor.value=lights.spot.colors;uniforms.spotLightPosition.value=lights.spot.positions;uniforms.spotLightDistance.value=lights.spot.distances;uniforms.spotLightDecayExponent.value=lights.spot.decayExponents;uniforms.spotLightDirection.value=lights.spot.directions;uniforms.spotLightAngleCos.value=lights.spot.anglesCos;uniforms.spotLightExponent.value=lights.spot.exponents;uniforms.hemisphereLightSkyColor.value=lights.hemi.skyColors;uniforms.hemisphereLightGroundColor.value=lights.hemi.groundColors;uniforms.hemisphereLightDirection.value=lights.hemi.positions;uniforms.areaLightColor.value=lights.area.colors;uniforms.areaLightPosition.value=lights.area.positions;uniforms.areaLightDistance.value=lights.area.distances;uniforms.areaLightDecayExponent.value=lights.area.decayExponents;uniforms.areaLightWidth.value=lights.area.widths;uniforms.areaLightHeight.value=lights.area.heights;};function refreshUniformsShadow(uniforms,lights){if(uniforms.shadowMatrix){var j=0;for(var i=0,il=lights.length;i<il;i++){var light=lights[i];if(!light.castShadow)continue;if(light instanceof THREE.SpotLight||light instanceof THREE.DirectionalLight&&!light.shadowCascade){uniforms.shadowMap.value[j]=light.shadowMap;uniforms.shadowMapSize.value[j]=light.shadowMapSize;uniforms.shadowMatrix.value[j]=light.shadowMatrix;uniforms.shadowDarkness.value[j]=light.shadowDarkness;uniforms.shadowBias.value[j]=light.shadowBias;j++;}}}};function loadUniformsMatrices(uniforms,object){_gl.uniformMatrix4fv(uniforms.modelViewMatrix,false,object._modelViewMatrix.elements);if(uniforms.normalMatrix){_gl.uniformMatrix3fv(uniforms.normalMatrix,false,object._normalMatrix.elements);}};function getTextureUnit(){var textureUnit=_usedTextureUnits;if(textureUnit>=_maxTextures){THREE.onwarning(\"WebGLRenderer: trying to use \"+textureUnit+\" texture units while this GPU supports only \"+_maxTextures);}_usedTextureUnits+=1;return textureUnit;};function loadUniformsGeneric(program,uniforms){var uniform,value,type,location,texture,textureUnit,i,il,j,jl,offset;for(j=0,jl=uniforms.length;j<jl;j++){location=program.uniforms[uniforms[j][1]];if(!location)continue;uniform=uniforms[j][0];type=uniform.type;value=uniform.value;if(type===\"i\"){_gl.uniform1i(location,value);}else if(type===\"f\"){_gl.uniform1f(location,value);}else if(type===\"v2\"){_gl.uniform2f(location,value.x,value.y);}else if(type===\"v3\"){_gl.uniform3f(location,value.x,value.y,value.z);}else if(type===\"v4\"){_gl.uniform4f(location,value.x,value.y,value.z,value.w);}else if(type===\"c\"){_gl.uniform3f(location,value.r,value.g,value.b);}else if(type===\"iv1\"){_gl.uniform1iv(location,value);}else if(type===\"iv\"){_gl.uniform3iv(location,value);}else if(type===\"fv1\"){_gl.uniform1fv(location,value);}else if(type===\"fv\"){_gl.uniform3fv(location,value);}else if(type===\"v2v\"){if(uniform._array===undefined){uniform._array=new Float32Array(2*value.length);}for(i=0,il=value.length;i<il;i++){offset=i*2;uniform._array[offset]=value[i].x;uniform._array[offset+1]=value[i].y;}_gl.uniform2fv(location,uniform._array);}else if(type===\"v3v\"){if(uniform._array===undefined){uniform._array=new Float32Array(3*value.length);}for(i=0,il=value.length;i<il;i++){offset=i*3;uniform._array[offset]=value[i].x;uniform._array[offset+1]=value[i].y;uniform._array[offset+2]=value[i].z;}_gl.uniform3fv(location,uniform._array);}else if(type===\"v4v\"){if(uniform._array===undefined){uniform._array=new Float32Array(4*value.length);}for(i=0,il=value.length;i<il;i++){offset=i*4;uniform._array[offset]=value[i].x;uniform._array[offset+1]=value[i].y;uniform._array[offset+2]=value[i].z;uniform._array[offset+3]=value[i].w;}_gl.uniform4fv(location,uniform._array);}else if(type===\"m4\"){if(uniform._array===undefined){uniform._array=new Float32Array(16);}value.flattenToArray(uniform._array);_gl.uniformMatrix4fv(location,false,uniform._array);}else if(type===\"m4v\"){if(uniform._array===undefined){uniform._array=new Float32Array(16*value.length);}for(i=0,il=value.length;i<il;i++){value[i].flattenToArrayOffset(uniform._array,i*16);}_gl.uniformMatrix4fv(location,false,uniform._array);}else if(type===\"t\"){texture=value;textureUnit=getTextureUnit();_gl.uniform1i(location,textureUnit);if(!texture)continue;if(texture.image instanceof Array&&texture.image.length===6){setCubeTexture(texture,textureUnit);}else if(texture instanceof THREE.WebGLRenderTargetCube){setCubeTextureDynamic(texture,textureUnit);}else{_this.setTexture(texture,textureUnit);}}else if(type===\"tv\"){if(uniform._array===undefined){uniform._array=[];}for(i=0,il=uniform.value.length;i<il;i++){uniform._array[i]=getTextureUnit();}_gl.uniform1iv(location,uniform._array);for(i=0,il=uniform.value.length;i<il;i++){texture=uniform.value[i];textureUnit=uniform._array[i];if(!texture)continue;_this.setTexture(texture,textureUnit);}}else{THREE.onwarning('THREE.WebGLRenderer: Unknown uniform type: '+type);}}};function setupMatrices(object,camera){object._modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld);object._normalMatrix.getNormalMatrix(object._modelViewMatrix);};function setColorLinear(array,offset,color,intensity){array[offset]=color.r*intensity;array[offset+1]=color.g*intensity;array[offset+2]=color.b*intensity;};function setupLights(program,lights){var l,ll,light,n,r=0,g=0,b=0,color,skyColor,groundColor,intensity,intensitySq,position,distance,zlights=_lights,dirColors=zlights.directional.colors,dirPositions=zlights.directional.positions,pointColors=zlights.point.colors,pointPositions=zlights.point.positions,pointDistances=zlights.point.distances,pointDecayExponents=zlights.point.decayExponents,spotColors=zlights.spot.colors,spotPositions=zlights.spot.positions,spotDistances=zlights.spot.distances,spotDecayExponents=zlights.spot.decayExponents,spotDirections=zlights.spot.directions,spotAnglesCos=zlights.spot.anglesCos,spotExponents=zlights.spot.exponents,hemiSkyColors=zlights.hemi.skyColors,hemiGroundColors=zlights.hemi.groundColors,hemiPositions=zlights.hemi.positions,areaColors=zlights.area.colors,areaPositions=zlights.area.positions,areaDistances=zlights.area.distances,areaDecayExponents=zlights.area.decayExponents,areaWidths=zlights.area.widths,areaHeights=zlights.area.heights,dirLength=0,pointLength=0,spotLength=0,hemiLength=0,areaLength=0,dirCount=0,pointCount=0,spotCount=0,hemiCount=0,areaCount=0,dirOffset=0,pointOffset=0,spotOffset=0,hemiOffset=0,areaOffset=0;for(l=0,ll=lights.length;l<ll;l++){light=lights[l];if(light.onlyShadow)continue;color=light.color;intensity=light.intensity;distance=light.distance;if(light instanceof THREE.AmbientLight){if(!light.visible)continue;r+=color.r;g+=color.g;b+=color.b;}else if(light instanceof THREE.DirectionalLight){dirCount+=1;if(!light.visible)continue;_direction.setFromMatrixPosition(light.matrixWorld);_vector3.setFromMatrixPosition(light.target.matrixWorld);_direction.sub(_vector3);_direction.normalize();if(_direction.x===0&&_direction.y===0&&_direction.z===0)continue;dirOffset=dirLength*3;dirPositions[dirOffset]=_direction.x;dirPositions[dirOffset+1]=_direction.y;dirPositions[dirOffset+2]=_direction.z;setColorLinear(dirColors,dirOffset,color,intensity);dirLength+=1;}else if(light instanceof THREE.PointLight){pointCount+=1;if(!light.visible)continue;pointOffset=pointLength*3;setColorLinear(pointColors,pointOffset,color,intensity);_vector3.setFromMatrixPosition(light.matrixWorld);pointPositions[pointOffset]=_vector3.x;pointPositions[pointOffset+1]=_vector3.y;pointPositions[pointOffset+2]=_vector3.z;pointDistances[pointLength]=distance;if(light.physicalFalloff){pointDecayExponents[pointLength]=-1.0;}else{pointDecayExponents[pointLength]=distance===0?0.0:light.decayExponent;}pointLength+=1;}else if(light instanceof THREE.SpotLight){spotCount+=1;if(!light.visible)continue;spotOffset=spotLength*3;setColorLinear(spotColors,spotOffset,color,intensity);_vector3.setFromMatrixPosition(light.matrixWorld);spotPositions[spotOffset]=_vector3.x;spotPositions[spotOffset+1]=_vector3.y;spotPositions[spotOffset+2]=_vector3.z;spotDistances[spotLength]=distance;if(light.physicalFalloff){spotDecayExponents[pointLength]=-1.0;}else{spotDecayExponents[pointLength]=distance===0?0.0:light.decayExponent;}_direction.copy(_vector3);_vector3.setFromMatrixPosition(light.target.matrixWorld);_direction.sub(_vector3);_direction.normalize();spotDirections[spotOffset]=_direction.x;spotDirections[spotOffset+1]=_direction.y;spotDirections[spotOffset+2]=_direction.z;spotAnglesCos[spotLength]=Math.cos(light.angle);spotExponents[spotLength]=light.exponent;spotLength+=1;}else if(light instanceof THREE.HemisphereLight){hemiCount+=1;if(!light.visible)continue;_direction.setFromMatrixPosition(light.matrixWorld);_direction.normalize();if(_direction.x===0&&_direction.y===0&&_direction.z===0)continue;hemiOffset=hemiLength*3;hemiPositions[hemiOffset]=_direction.x;hemiPositions[hemiOffset+1]=_direction.y;hemiPositions[hemiOffset+2]=_direction.z;skyColor=light.color;groundColor=light.groundColor;setColorLinear(hemiSkyColors,hemiOffset,skyColor,intensity);setColorLinear(hemiGroundColors,hemiOffset,groundColor,intensity);hemiLength+=1;}else if(light instanceof THREE.AreaLight){areaCount+=1;if(!light.visible)continue;areaOffset=areaLength*3;setColorLinear(areaColors,areaOffset,color,intensity);_vector3.setFromMatrixPosition(light.matrixWorld);areaPositions[areaOffset]=_vector3.x;areaPositions[areaOffset+1]=_vector3.y;areaPositions[areaOffset+2]=_vector3.z;areaDistances[areaLength]=distance;areaDecayExponents[areaLength]=light.decayExponent;light.matrixWorld.extractBasis(_width,_height,_vector3);_width.multiplyScalar(light.width);_height.multiplyScalar(light.height);areaWidths[areaOffset]=_width.x;areaWidths[areaOffset+1]=_width.y;areaWidths[areaOffset+2]=_width.z;areaHeights[areaOffset]=_height.x;areaHeights[areaOffset+1]=_height.y;areaHeights[areaOffset+2]=_height.z;areaLength+=1;}}for(l=dirLength*3,ll=Math.max(dirColors.length,dirCount*3);l<ll;l++){dirColors[l]=0.0;}for(l=pointLength*3,ll=Math.max(pointColors.length,pointCount*3);l<ll;l++){pointColors[l]=0.0;}for(l=spotLength*3,ll=Math.max(spotColors.length,spotCount*3);l<ll;l++){spotColors[l]=0.0;}for(l=hemiLength*3,ll=Math.max(hemiSkyColors.length,hemiCount*3);l<ll;l++){hemiSkyColors[l]=0.0;}for(l=hemiLength*3,ll=Math.max(hemiGroundColors.length,hemiCount*3);l<ll;l++){hemiGroundColors[l]=0.0;}for(l=areaLength*3,ll=Math.max(areaColors.length,areaCount*3);l<ll;l++){areaColors[l]=0.0;}zlights.directional.length=dirLength;zlights.point.length=pointLength;zlights.spot.length=spotLength;zlights.hemi.length=hemiLength;zlights.area.length=areaLength;zlights.ambient[0]=r;zlights.ambient[1]=g;zlights.ambient[2]=b;};this.setFaceCulling=function(cullFace,frontFaceDirection){if(cullFace===THREE.CullFaceNone){_gl.disable(_gl.CULL_FACE);}else{if(frontFaceDirection===THREE.FrontFaceDirectionCW){_gl.frontFace(_gl.CW);}else{_gl.frontFace(_gl.CCW);}if(cullFace===THREE.CullFaceBack){_gl.cullFace(_gl.BACK);}else if(cullFace===THREE.CullFaceFront){_gl.cullFace(_gl.FRONT);}else{_gl.cullFace(_gl.FRONT_AND_BACK);}_gl.enable(_gl.CULL_FACE);}};this.setMaterialFaces=function(material){var doubleSided=material.side===THREE.DoubleSide;var flipSided=material.side===THREE.BackSide;if(_oldDoubleSided!==doubleSided){if(doubleSided){_gl.disable(_gl.CULL_FACE);}else{_gl.enable(_gl.CULL_FACE);}_oldDoubleSided=doubleSided;}if(_oldFlipSided!==flipSided){if(flipSided){_gl.frontFace(_gl.CW);}else{_gl.frontFace(_gl.CCW);}_oldFlipSided=flipSided;}};this.setDepthTest=function(depthTest){if(_oldDepthTest!==depthTest){if(depthTest){_gl.enable(_gl.DEPTH_TEST);}else{_gl.disable(_gl.DEPTH_TEST);}_oldDepthTest=depthTest;}};this.setDepthWrite=function(depthWrite){if(_oldDepthWrite!==depthWrite){_gl.depthMask(depthWrite);_oldDepthWrite=depthWrite;}};function setLineWidth(width){if(width!==_oldLineWidth){_gl.lineWidth(width);_oldLineWidth=width;}};function setPolygonOffset(polygonoffset,factor,units){if(_oldPolygonOffset!==polygonoffset){if(polygonoffset){_gl.enable(_gl.POLYGON_OFFSET_FILL);}else{_gl.disable(_gl.POLYGON_OFFSET_FILL);}_oldPolygonOffset=polygonoffset;}if(polygonoffset&&(_oldPolygonOffsetFactor!==factor||_oldPolygonOffsetUnits!==units)){_gl.polygonOffset(factor,units);_oldPolygonOffsetFactor=factor;_oldPolygonOffsetUnits=units;}};this.setBlending=function(blending,blendEquation,blendSrc,blendDst){if(blending!==_oldBlending){if(blending===THREE.NoBlending){_gl.disable(_gl.BLEND);}else if(blending===THREE.AdditiveBlending){_gl.enable(_gl.BLEND);_gl.blendEquation(_gl.FUNC_ADD);_gl.blendFunc(_gl.SRC_ALPHA,_gl.ONE);}else if(blending===THREE.SubtractiveBlending){_gl.enable(_gl.BLEND);_gl.blendEquation(_gl.FUNC_ADD);_gl.blendFunc(_gl.ZERO,_gl.ONE_MINUS_SRC_COLOR);}else if(blending===THREE.MultiplyBlending){_gl.enable(_gl.BLEND);_gl.blendEquation(_gl.FUNC_ADD);_gl.blendFunc(_gl.ZERO,_gl.SRC_COLOR);}else if(blending===THREE.CustomBlending){_gl.enable(_gl.BLEND);}else{_gl.enable(_gl.BLEND);_gl.blendEquationSeparate(_gl.FUNC_ADD,_gl.FUNC_ADD);_gl.blendFuncSeparate(_gl.SRC_ALPHA,_gl.ONE_MINUS_SRC_ALPHA,_gl.ONE,_gl.ONE_MINUS_SRC_ALPHA);}_oldBlending=blending;}if(blending===THREE.CustomBlending){if(blendEquation!==_oldBlendEquation){_gl.blendEquation(paramThreeToGL(blendEquation));_oldBlendEquation=blendEquation;}if(blendSrc!==_oldBlendSrc||blendDst!==_oldBlendDst){_gl.blendFunc(paramThreeToGL(blendSrc),paramThreeToGL(blendDst));_oldBlendSrc=blendSrc;_oldBlendDst=blendDst;}}else{_oldBlendEquation=null;_oldBlendSrc=null;_oldBlendDst=null;}};function generateDefines(defines){var value,chunk,chunks=[];for(var d in defines){value=defines[d];if(value===false)continue;chunk=\"#define \"+d+\" \"+value;chunks.push(chunk);}return chunks.join(\"\\n\");};function buildProgram(shaderID,fragmentShader,vertexShader,uniforms,attributes,defines,parameters,index0AttributeName){var p,pl,d,program,code;var simpleChunks=[];var chunks=[];if(shaderID){chunks.push(shaderID);simpleChunks.push(shaderID);}else{chunks.push(fragmentShader);chunks.push(vertexShader);}for(d in defines){chunks.push(d);chunks.push(defines[d]);simpleChunks.push(d);simpleChunks.push(defines[d]);}for(p in parameters){chunks.push(p);chunks.push(parameters[p]);simpleChunks.push(p);simpleChunks.push(parameters[p]);}code=chunks.join();var simpleCode=simpleChunks.join();for(p=0,pl=_programs.length;p<pl;p++){var programInfo=_programs[p];if(programInfo.code.length===code.length&&programInfo.code===code){programInfo.usedTimes++;return programInfo.program;}}var shadowMapTypeDefine=\"SHADOWMAP_TYPE_BASIC\";if(parameters.shadowMapType===THREE.PCFShadowMap){shadowMapTypeDefine=\"SHADOWMAP_TYPE_PCF\";}else if(parameters.shadowMapType===THREE.PCFSoftShadowMap){shadowMapTypeDefine=\"SHADOWMAP_TYPE_PCF_SOFT\";}var customDefines=generateDefines(defines);program=_gl.createProgram();var supportsShaderTextureLOD=_glExtensionShaderTextureLOD!==null;var prefix_vertex=[\"precision \"+_precision+\" float;\",\"precision \"+_precision+\" int;\",customDefines,_supportsVertexTextures?\"#define VERTEX_TEXTURES\":\"\",_this.gammaInput?\"#define GAMMA_INPUT\":\"\",_this.gammaOutput?\"#define GAMMA_OUTPUT\":\"\",\"#define MAX_DIR_LIGHTS \"+parameters.maxDirLights,\"#define MAX_POINT_LIGHTS \"+parameters.maxPointLights,\"#define MAX_SPOT_LIGHTS \"+parameters.maxSpotLights,\"#define MAX_HEMI_LIGHTS \"+parameters.maxHemiLights,\"#define MAX_AREA_LIGHTS \"+parameters.maxAreaLights,\"#define MAX_SHADOWS \"+parameters.maxShadows,\"#define MAX_BONES \"+parameters.maxBones,parameters.map?\"#define USE_MAP\":\"\",parameters.opacityMap?\"#define USE_OPACITYMAP\":\"\",parameters.falloffMap?\"#define USE_FALLOFFMAP\":\"\",parameters.translucencyMap?\"#define USE_TRANSLUCENCYMAP\":\"\",parameters.envMap?\"#define USE_ENVMAP\":\"\",parameters.diffuseEnvMap?\"#define USE_DIFFUSEENVMAP\":\"\",parameters.lightMap?\"#define USE_LIGHTMAP\":\"\",parameters.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",parameters.bumpMap?\"#define USE_BUMPMAP\":\"\",parameters.reflectivityMap?\"#define USE_REFLECTIVITYMAP\":\"\",parameters.roughnessMap?\"#define USE_ROUGHNESSMAP\":\"\",parameters.metallicMap?\"#define USE_METALLICMAP\":\"\",parameters.normalMap?\"#define USE_NORMALMAP\":\"\",parameters.specularMap?\"#define USE_SPECULARMAP\":\"\",parameters.vertexColors?\"#define USE_COLOR\":\"\",parameters.clearCoat?\"#define CLEARCOAT\":\"\",parameters.anisotropy?\"#define ANISOTROPY\":\"\",parameters.anisotropyMap?\"#define USE_ANISOTROPYMAP\":\"\",parameters.anisotropy&&parameters.anisotropyRotation?\"#define ANISOTROPYROTATION\":\"\",parameters.anisotropy&&parameters.anisotropyRotationMap?\"#define USE_ANISOTROPYROTATIONMAP\":\"\",parameters.skinning?\"#define USE_SKINNING\":\"\",parameters.useVertexTexture?\"#define BONE_TEXTURE\":\"\",parameters.morphTargets?\"#define USE_MORPHTARGETS\":\"\",parameters.morphNormals?\"#define USE_MORPHNORMALS\":\"\",parameters.wrapAround?\"#define WRAP_AROUND\":\"\",parameters.doubleSided?\"#define DOUBLE_SIDED\":\"\",parameters.flipSided?\"#define FLIP_SIDED\":\"\",parameters.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",parameters.shadowMapEnabled?\"#define \"+shadowMapTypeDefine:\"\",parameters.shadowMapDebug?\"#define SHADOWMAP_DEBUG\":\"\",parameters.shadowMapCascade?\"#define SHADOWMAP_CASCADE\":\"\",parameters.sizeAttenuation?\"#define USE_SIZEATTENUATION\":\"\",\"uniform mat4 modelMatrix;\",\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform mat4 viewMatrix;\",\"uniform mat3 normalMatrix;\",\"uniform vec3 cameraPosition;\",\"attribute vec3 position;\",\"attribute vec3 normal;\",\"attribute vec2 uv;\",\"attribute vec2 uv2;\",\"#ifdef USE_COLOR\",\"attribute vec3 color;\",\"#endif\",\"#ifdef USE_MORPHTARGETS\",\"attribute vec3 morphTarget0;\",\"attribute vec3 morphTarget1;\",\"attribute vec3 morphTarget2;\",\"attribute vec3 morphTarget3;\",\"#ifdef USE_MORPHNORMALS\",\"attribute vec3 morphNormal0;\",\"attribute vec3 morphNormal1;\",\"attribute vec3 morphNormal2;\",\"attribute vec3 morphNormal3;\",\"#else\",\"attribute vec3 morphTarget4;\",\"attribute vec3 morphTarget5;\",\"attribute vec3 morphTarget6;\",\"attribute vec3 morphTarget7;\",\"#endif\",\"#endif\",\"#ifdef USE_SKINNING\",\"attribute vec4 skinIndex;\",\"attribute vec4 skinWeight;\",\"#endif\",\"\"].join(\"\\n\");var prefix_fragment=[\"precision \"+_precision+\" float;\",\"precision \"+_precision+\" int;\",parameters.bumpMap||parameters.normalMap?\"#extension GL_OES_standard_derivatives : enable\":\"\",customDefines,\"#define MAX_DIR_LIGHTS \"+parameters.maxDirLights,\"#define MAX_POINT_LIGHTS \"+parameters.maxPointLights,\"#define MAX_SPOT_LIGHTS \"+parameters.maxSpotLights,\"#define MAX_HEMI_LIGHTS \"+parameters.maxHemiLights,\"#define MAX_AREA_LIGHTS \"+parameters.maxAreaLights,\"#define MAX_SHADOWS \"+parameters.maxShadows,parameters.alphaTest?\"#define ALPHATEST \"+parameters.alphaTest:\"\",_this.gammaInput?\"#define GAMMA_INPUT\":\"\",_this.gammaOutput?\"#define GAMMA_OUTPUT\":\"\",parameters.useFog&&parameters.fog?\"#define USE_FOG\":\"\",parameters.useFog&&parameters.fogExp?\"#define FOG_EXP2\":\"\",parameters.map?\"#define USE_MAP\":\"\",parameters.opacityMap?\"#define USE_OPACITYMAP\":\"\",parameters.falloffMap?\"#define USE_FALLOFFMAP\":\"\",parameters.translucencyMap?\"#define USE_TRANSLUCENCYMAP\":\"\",parameters.envMap?\"#define USE_ENVMAP\":\"\",parameters.diffuseEnvMap?\"#define USE_DIFFUSEENVMAP\":\"\",parameters.lightMap?\"#define USE_LIGHTMAP\":\"\",parameters.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",parameters.bumpMap?\"#define USE_BUMPMAP\":\"\",parameters.reflectivityMap?\"#define USE_REFLECTIVITYMAP\":\"\",parameters.roughnessMap?\"#define USE_ROUGHNESSMAP\":\"\",parameters.metallicMap?\"#define USE_METALLICMAP\":\"\",parameters.normalMap?\"#define USE_NORMALMAP\":\"\",parameters.specularMap?\"#define USE_SPECULARMAP\":\"\",parameters.vertexColors?\"#define USE_COLOR\":\"\",parameters.clearCoat?\"#define CLEARCOAT\":\"\",parameters.translucency?\"#define TRANSLUCENCY\":\"\",parameters.anisotropy?\"#define ANISOTROPY\":\"\",parameters.anisotropyMap?\"#define USE_ANISOTROPYMAP\":\"\",parameters.anisotropy&&parameters.anisotropyRotation?\"#define ANISOTROPYROTATION\":\"\",parameters.anisotropy&&parameters.anisotropyRotationMap?\"#define USE_ANISOTROPYROTATIONMAP\":\"\",parameters.falloff?\"#define FALLOFF\":\"\",parameters.wrapAround?\"#define WRAP_AROUND\":\"\",parameters.doubleSided?\"#define DOUBLE_SIDED\":\"\",parameters.flipSided?\"#define FLIP_SIDED\":\"\",parameters.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",parameters.shadowMapEnabled?\"#define \"+shadowMapTypeDefine:\"\",parameters.shadowMapDebug?\"#define SHADOWMAP_DEBUG\":\"\",parameters.shadowMapCascade?\"#define SHADOWMAP_CASCADE\":\"\",supportsShaderTextureLOD?\"#define TEXTURE_CUBE_LOD_EXT\":\"\",\"uniform mat4 viewMatrix;\",\"uniform vec3 cameraPosition;\",\"\"].join(\"\\n\");var glVertexShader=getShader(\"vertex\",prefix_vertex+vertexShader,shaderID,simpleCode);var glFragmentShader=getShader(\"fragment\",prefix_fragment+fragmentShader,shaderID,simpleCode);_gl.attachShader(program,glVertexShader,code);_gl.attachShader(program,glFragmentShader,code);if(index0AttributeName!==undefined){_gl.bindAttribLocation(program,0,index0AttributeName);}_gl.linkProgram(program);var programLogInfo=_gl.getProgramInfoLog(program);if(_gl.getProgramParameter(program,_gl.LINK_STATUS)===false){var gl_error_message=_gl.getError();THREE.onerror(shaderID+' shader program error: '+gl_error_message+'\\n '+programLogInfo,{shaderID:shaderID,programInfo:programLogInfo,glError:gl_error_message,vertexShader:prefix_vertex+vertexShader,fragmentShader:prefix_fragment+fragmentShader,getProgramParameter_LINK_STATUS:_gl.getProgramParameter(program,_gl.LINK_STATUS),getProgramParameter_VALIDATE_STATUS:_gl.getProgramParameter(program,_gl.VALIDATE_STATUS),getProgramParameter_ATTACHED_SHADERS:_gl.getProgramParameter(program,_gl.ATTACHED_SHADERS),getProgramParameter_ACTIVE_ATTRIBUTES:_gl.getProgramParameter(program,_gl.ACTIVE_ATTRIBUTES),getProgramParameter_ACTIVE_UNIFORMS:_gl.getProgramParameter(program,_gl.ACTIVE_UNIFORMS),gl_MAX_VARYING_VECTORS:_gl.getParameter(_gl.MAX_VARYING_VECTORS),gl_MAX_VERTEX_ATTRIBS:_gl.getParameter(_gl.MAX_VERTEX_ATTRIBS),gl_MAX_VERTEX_UNIFORM_VECTORS:_gl.getParameter(_gl.MAX_VERTEX_UNIFORM_VECTORS),gl_MAX_VERTEX_TEXTURE_IMAGE_UNITS:_gl.getParameter(_gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS),gl_MAX_FRAGMENT_UNIFORM_VECTORS:_gl.getParameter(_gl.MAX_FRAGMENT_UNIFORM_VECTORS),gl_MAX_TEXTURE_IMAGE_UNITS:_gl.getParameter(_gl.MAX_TEXTURE_IMAGE_UNITS)});}_gl.deleteShader(glFragmentShader);_gl.deleteShader(glVertexShader);program.uniforms={};program.attributes={};var identifiers,u,a,i;identifiers=['viewMatrix','modelViewMatrix','projectionMatrix','normalMatrix','modelMatrix','cameraPosition','morphTargetInfluences'];if(parameters.useVertexTexture){identifiers.push('boneTexture');identifiers.push('boneTextureWidth');identifiers.push('boneTextureHeight');}else{identifiers.push('boneGlobalMatrices');}for(u in uniforms){identifiers.push(u);}cacheUniformLocations(program,identifiers);identifiers=[\"position\",\"normal\",\"uv\",\"uv2\",\"tangent\",\"color\",\"skinIndex\",\"skinWeight\",\"lineDistance\"];for(i=0;i<parameters.maxMorphTargets;i++){identifiers.push(\"morphTarget\"+i);}for(i=0;i<parameters.maxMorphNormals;i++){identifiers.push(\"morphNormal\"+i);}for(a in attributes){identifiers.push(a);}cacheAttributeLocations(program,identifiers);program.id=_programs_counter++;_programs.push({program:program,code:code,usedTimes:1});_this.info.memory.programs=_programs.length;return program;};function cacheUniformLocations(program,identifiers){var i,l,id;for(i=0,l=identifiers.length;i<l;i++){id=identifiers[i];program.uniforms[id]=_gl.getUniformLocation(program,id);}};function cacheAttributeLocations(program,identifiers){var i,l,id;for(i=0,l=identifiers.length;i<l;i++){id=identifiers[i];program.attributes[id]=_gl.getAttribLocation(program,id);}};function addLineNumbers(string){var chunks=string.split(\"\\n\");for(var i=0,il=chunks.length;i<il;i++){chunks[i]=i+1+\": \"+chunks[i];}return chunks.join(\"\\n\");};function getShader(type,string,shaderID,simpleCode){var shader;if(type===\"fragment\"){shader=_gl.createShader(_gl.FRAGMENT_SHADER);}else if(type===\"vertex\"){shader=_gl.createShader(_gl.VERTEX_SHADER);}_gl.shaderSource(shader,string);_gl.compileShader(shader);if(!_gl.getShaderParameter(shader,_gl.COMPILE_STATUS)){THREE.onerror(\"shader error: \"+shaderID+\".\"+type,{getShaderParameter:_gl.getShaderParameter(shader,_gl.COMPILE_STATUS),shaderInfoLog:_gl.getShaderInfoLog(shader),shaderCode:addLineNumbers(string),getError:_gl.getError(),simpleCode:simpleCode,gl_MAX_VARYING_VECTORS:_gl.getParameter(_gl.MAX_VARYING_VECTORS),gl_MAX_VERTEX_ATTRIBS:_gl.getParameter(_gl.MAX_VERTEX_ATTRIBS),gl_MAX_VERTEX_UNIFORM_VECTORS:_gl.getParameter(_gl.MAX_VERTEX_UNIFORM_VECTORS),gl_MAX_VERTEX_TEXTURE_IMAGE_UNITS:_gl.getParameter(_gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS),gl_MAX_FRAGMENT_UNIFORM_VECTORS:_gl.getParameter(_gl.MAX_FRAGMENT_UNIFORM_VECTORS),gl_MAX_TEXTURE_IMAGE_UNITS:_gl.getParameter(_gl.MAX_TEXTURE_IMAGE_UNITS)});return null;}return shader;};function setTextureParameters(textureType,texture,isImagePowerOfTwo){if(isImagePowerOfTwo){_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_S,paramThreeToGL(texture.wrapS));_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_T,paramThreeToGL(texture.wrapT));_gl.texParameteri(textureType,_gl.TEXTURE_MAG_FILTER,paramThreeToGL(texture.magFilter));_gl.texParameteri(textureType,_gl.TEXTURE_MIN_FILTER,paramThreeToGL(texture.minFilter));}else{_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_S,_gl.CLAMP_TO_EDGE);_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_T,_gl.CLAMP_TO_EDGE);_gl.texParameteri(textureType,_gl.TEXTURE_MAG_FILTER,filterFallback(texture.magFilter));_gl.texParameteri(textureType,_gl.TEXTURE_MIN_FILTER,filterFallback(texture.minFilter));}if(_glExtensionTextureFilterAnisotropic&&texture.type!==THREE.FloatType){if(texture.anisotropy>1||texture.__oldAnisotropy){_gl.texParameterf(textureType,_glExtensionTextureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(texture.anisotropy,_maxAnisotropy));texture.__oldAnisotropy=texture.anisotropy;}}};this.setTexture=function(texture,slot){if(texture.needsUpdate){if(!texture.__webglInit){texture.__webglInit=true;texture.addEventListener('dispose',onTextureDispose);texture.__webglTexture=_gl.createTexture();_this.info.memory.textures++;}_gl.activeTexture(_gl.TEXTURE0+slot);_gl.bindTexture(_gl.TEXTURE_2D,texture.__webglTexture);_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL,texture.flipY);_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,texture.premultiplyAlpha);_gl.pixelStorei(_gl.UNPACK_ALIGNMENT,texture.unpackAlignment);var image=texture.image,isImagePowerOfTwo=THREE.Math.isPowerOfTwo(image.width)&&THREE.Math.isPowerOfTwo(image.height),glFormat=paramThreeToGL(texture.format),glType=paramThreeToGL(texture.type);setTextureParameters(_gl.TEXTURE_2D,texture,isImagePowerOfTwo);var mipmap,mipmaps=texture.mipmaps;if(texture instanceof THREE.DataTexture){if(mipmaps.length>0&&isImagePowerOfTwo){for(var i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];_gl.texImage2D(_gl.TEXTURE_2D,i,glFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}texture.generateMipmaps=false;}else{_gl.texImage2D(_gl.TEXTURE_2D,0,glFormat,image.width,image.height,0,glFormat,glType,image.data);}}else if(texture instanceof THREE.CompressedTexture){for(var i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];if(texture.format!==THREE.RGBAFormat){_gl.compressedTexImage2D(_gl.TEXTURE_2D,i,glFormat,mipmap.width,mipmap.height,0,mipmap.data);}else{_gl.texImage2D(_gl.TEXTURE_2D,i,glFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}}}else{if(mipmaps.length>0&&isImagePowerOfTwo){for(var i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];_gl.texImage2D(_gl.TEXTURE_2D,i,glFormat,glFormat,glType,mipmap);}texture.generateMipmaps=false;}else{_gl.texImage2D(_gl.TEXTURE_2D,0,glFormat,glFormat,glType,texture.image);}}if(texture.generateMipmaps&&isImagePowerOfTwo)_gl.generateMipmap(_gl.TEXTURE_2D);texture.needsUpdate=false;if(texture.onUpdate)texture.onUpdate();}else{_gl.activeTexture(_gl.TEXTURE0+slot);_gl.bindTexture(_gl.TEXTURE_2D,texture.__webglTexture);}};function clampToMaxSize(image,maxSize){if(image.width<=maxSize&&image.height<=maxSize){return image;}var maxDimension=Math.max(image.width,image.height);var newWidth=Math.floor(image.width*maxSize/maxDimension);var newHeight=Math.floor(image.height*maxSize/maxDimension);var canvas=document.createElement('canvas');canvas.width=newWidth;canvas.height=newHeight;var ctx=canvas.getContext(\"2d\");ctx.drawImage(image,0,0,image.width,image.height,0,0,newWidth,newHeight);return canvas;}function setCubeTexture(texture,slot){if(texture.image.length===6){if(texture.needsUpdate){if(!texture.image.__webglTextureCube){texture.addEventListener('dispose',onTextureDispose);texture.image.__webglTextureCube=_gl.createTexture();_this.info.memory.textures++;}_gl.activeTexture(_gl.TEXTURE0+slot);_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,texture.image.__webglTextureCube);_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL,texture.flipY);var isCompressed=texture instanceof THREE.CompressedTexture;var cubeImage=[];for(var i=0;i<6;i++){if(_this.autoScaleCubemaps&&!isCompressed){cubeImage[i]=clampToMaxSize(texture.image[i],_maxCubemapSize);}else{cubeImage[i]=texture.image[i];}}var image=cubeImage[0],isImagePowerOfTwo=THREE.Math.isPowerOfTwo(image.width)&&THREE.Math.isPowerOfTwo(image.height),glFormat=paramThreeToGL(texture.format),glType=paramThreeToGL(texture.type);setTextureParameters(_gl.TEXTURE_CUBE_MAP,texture,isImagePowerOfTwo);for(var i=0;i<6;i++){if(!isCompressed){_gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,0,glFormat,glFormat,glType,cubeImage[i]);}else{var mipmap,mipmaps=cubeImage[i].mipmaps;for(var j=0,jl=mipmaps.length;j<jl;j++){mipmap=mipmaps[j];if(texture.format!==THREE.RGBAFormat){_gl.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,j,glFormat,mipmap.width,mipmap.height,0,mipmap.data);}else{_gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,j,glFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}}}}if(texture.generateMipmaps&&isImagePowerOfTwo){_gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);}texture.needsUpdate=false;if(texture.onUpdate)texture.onUpdate();}else{_gl.activeTexture(_gl.TEXTURE0+slot);_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,texture.image.__webglTextureCube);}}};function setCubeTextureDynamic(texture,slot){_gl.activeTexture(_gl.TEXTURE0+slot);_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,texture.__webglTexture);};function setupFrameBuffer(framebuffer,renderTarget,textureTarget){_gl.bindFramebuffer(_gl.FRAMEBUFFER,framebuffer);_gl.framebufferTexture2D(_gl.FRAMEBUFFER,_gl.COLOR_ATTACHMENT0,textureTarget,renderTarget.__webglTexture,0);};function setupRenderBuffer(renderbuffer,renderTarget){_gl.bindRenderbuffer(_gl.RENDERBUFFER,renderbuffer);var optionsString=\"\";if(renderTarget.depthBuffer&&!renderTarget.stencilBuffer){_gl.renderbufferStorage(_gl.RENDERBUFFER,_gl.DEPTH_COMPONENT16,renderTarget.width,renderTarget.height);_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.DEPTH_ATTACHMENT,_gl.RENDERBUFFER,renderbuffer);optionsString=\"renderTarget: \"+renderTarget.width+\"+\"+renderTarget.height+\" DEPTH_ATTACHMENT\";}else if(renderTarget.depthBuffer&&renderTarget.stencilBuffer){_gl.renderbufferStorage(_gl.RENDERBUFFER,_gl.DEPTH_STENCIL,renderTarget.width,renderTarget.height);_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.DEPTH_STENCIL_ATTACHMENT,_gl.RENDERBUFFER,renderbuffer);optionsString=\"renderTarget: \"+renderTarget.width+\"+\"+renderTarget.height+\" DEPTH_STENCIL_ATTACHMENT\";}else{_gl.renderbufferStorage(_gl.RENDERBUFFER,_gl.RGBA4,renderTarget.width,renderTarget.height);optionsString=\"renderTarget: \"+renderTarget.width+\"+\"+renderTarget.height+\" RGBA4\";}if(_gl.checkFramebufferStatus(_gl.FRAMEBUFFER)!=_gl.FRAMEBUFFER_COMPLETE){console.log(renderTarget);throw new Error('(A) Rendering to this texture is not supported (incomplete framebuffer) '+optionsString);}};this.setRenderTarget=function(renderTarget){var isCube=renderTarget instanceof THREE.WebGLRenderTargetCube;if(renderTarget&&!renderTarget.__webglFramebuffer){if(renderTarget.depthBuffer===undefined)renderTarget.depthBuffer=true;if(renderTarget.stencilBuffer===undefined)renderTarget.stencilBuffer=true;renderTarget.addEventListener('dispose',onRenderTargetDispose);renderTarget.__webglTexture=_gl.createTexture();_this.info.memory.textures++;var isTargetPowerOfTwo=THREE.Math.isPowerOfTwo(renderTarget.width)&&THREE.Math.isPowerOfTwo(renderTarget.height),glFormat=paramThreeToGL(renderTarget.format),glType=paramThreeToGL(renderTarget.type);if(isCube){renderTarget.__webglFramebuffer=[];renderTarget.__webglRenderbuffer=[];_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,renderTarget.__webglTexture);setTextureParameters(_gl.TEXTURE_CUBE_MAP,renderTarget,isTargetPowerOfTwo);for(var i=0;i<6;i++){renderTarget.__webglFramebuffer[i]=_gl.createFramebuffer();renderTarget.__webglRenderbuffer[i]=_gl.createRenderbuffer();_gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,0,glFormat,renderTarget.width,renderTarget.height,0,glFormat,glType,null);setupFrameBuffer(renderTarget.__webglFramebuffer[i],renderTarget,_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i);setupRenderBuffer(renderTarget.__webglRenderbuffer[i],renderTarget);}if(isTargetPowerOfTwo)_gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);}else{renderTarget.__webglFramebuffer=_gl.createFramebuffer();if(renderTarget.shareDepthFrom){renderTarget.__webglRenderbuffer=renderTarget.shareDepthFrom.__webglRenderbuffer;}else{renderTarget.__webglRenderbuffer=_gl.createRenderbuffer();}_gl.bindTexture(_gl.TEXTURE_2D,renderTarget.__webglTexture);setTextureParameters(_gl.TEXTURE_2D,renderTarget,isTargetPowerOfTwo);_gl.texImage2D(_gl.TEXTURE_2D,0,glFormat,renderTarget.width,renderTarget.height,0,glFormat,glType,null);setupFrameBuffer(renderTarget.__webglFramebuffer,renderTarget,_gl.TEXTURE_2D);if(renderTarget.shareDepthFrom){var optionsString=\"glFormat: \"+glFormat+\" glType: \"+glType;if(renderTarget.depthBuffer&&!renderTarget.stencilBuffer){_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.DEPTH_ATTACHMENT,_gl.RENDERBUFFER,renderTarget.__webglRenderbuffer);optionsString=\" renderTarget: \"+renderTarget.width+\"+\"+renderTarget.height+\" DEPTH_ATTACHMENT\";}else if(renderTarget.depthBuffer&&renderTarget.stencilBuffer){_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.DEPTH_STENCIL_ATTACHMENT,_gl.RENDERBUFFER,renderTarget.__webglRenderbuffer);optionsString=\" renderTarget: \"+renderTarget.width+\"+\"+renderTarget.height+\" DEPTH_STENCIL_ATTACHMENT\";}if(_gl.checkFramebufferStatus(_gl.FRAMEBUFFER)!=_gl.FRAMEBUFFER_COMPLETE){throw new Error('(B) Rendering to this texture is not supported (incomplete framebuffer) '+optionsString);}}else{setupRenderBuffer(renderTarget.__webglRenderbuffer,renderTarget);}if(isTargetPowerOfTwo)_gl.generateMipmap(_gl.TEXTURE_2D);}if(isCube){_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,null);}else{_gl.bindTexture(_gl.TEXTURE_2D,null);}_gl.bindRenderbuffer(_gl.RENDERBUFFER,null);_gl.bindFramebuffer(_gl.FRAMEBUFFER,null);}var framebuffer,width,height,vx,vy;if(renderTarget){if(isCube){framebuffer=renderTarget.__webglFramebuffer[renderTarget.activeCubeFace];}else{framebuffer=renderTarget.__webglFramebuffer;}width=renderTarget.width;height=renderTarget.height;vx=0;vy=0;}else{framebuffer=null;width=_viewportWidth;height=_viewportHeight;vx=_viewportX;vy=_viewportY;}if(framebuffer!==_currentFramebuffer){_gl.bindFramebuffer(_gl.FRAMEBUFFER,framebuffer);_gl.viewport(vx,vy,width,height);_currentFramebuffer=framebuffer;}_currentWidth=width;_currentHeight=height;};function updateRenderTargetMipmap(renderTarget){if(renderTarget instanceof THREE.WebGLRenderTargetCube){_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,renderTarget.__webglTexture);_gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,null);}else{_gl.bindTexture(_gl.TEXTURE_2D,renderTarget.__webglTexture);_gl.generateMipmap(_gl.TEXTURE_2D);_gl.bindTexture(_gl.TEXTURE_2D,null);}};function filterFallback(f){if(f===THREE.NearestFilter||f===THREE.NearestMipMapNearestFilter||f===THREE.NearestMipMapLinearFilter){return _gl.NEAREST;}return _gl.LINEAR;};function paramThreeToGL(p){if(p===THREE.RepeatWrapping)return _gl.REPEAT;if(p===THREE.ClampToEdgeWrapping)return _gl.CLAMP_TO_EDGE;if(p===THREE.MirroredRepeatWrapping)return _gl.MIRRORED_REPEAT;if(p===THREE.NearestFilter)return _gl.NEAREST;if(p===THREE.NearestMipMapNearestFilter)return _gl.NEAREST_MIPMAP_NEAREST;if(p===THREE.NearestMipMapLinearFilter)return _gl.NEAREST_MIPMAP_LINEAR;if(p===THREE.LinearFilter)return _gl.LINEAR;if(p===THREE.LinearMipMapNearestFilter)return _gl.LINEAR_MIPMAP_NEAREST;if(p===THREE.LinearMipMapLinearFilter)return _gl.LINEAR_MIPMAP_LINEAR;if(p===THREE.UnsignedByteType)return _gl.UNSIGNED_BYTE;if(p===THREE.UnsignedShort4444Type)return _gl.UNSIGNED_SHORT_4_4_4_4;if(p===THREE.UnsignedShort5551Type)return _gl.UNSIGNED_SHORT_5_5_5_1;if(p===THREE.UnsignedShort565Type)return _gl.UNSIGNED_SHORT_5_6_5;if(p===THREE.ByteType)return _gl.BYTE;if(p===THREE.ShortType)return _gl.SHORT;if(p===THREE.UnsignedShortType)return _gl.UNSIGNED_SHORT;if(p===THREE.IntType)return _gl.INT;if(p===THREE.UnsignedIntType)return _gl.UNSIGNED_INT;if(p===THREE.FloatType)return _gl.FLOAT;if(p===THREE.HalfType)return 0x8D61;if(p===THREE.AlphaFormat)return _gl.ALPHA;if(p===THREE.RGBFormat)return _gl.RGB;if(p===THREE.RGBAFormat)return _gl.RGBA;if(p===THREE.LuminanceFormat)return _gl.LUMINANCE;if(p===THREE.LuminanceAlphaFormat)return _gl.LUMINANCE_ALPHA;if(p===THREE.AddEquation)return _gl.FUNC_ADD;if(p===THREE.SubtractEquation)return _gl.FUNC_SUBTRACT;if(p===THREE.ReverseSubtractEquation)return _gl.FUNC_REVERSE_SUBTRACT;if(p===THREE.ZeroFactor)return _gl.ZERO;if(p===THREE.OneFactor)return _gl.ONE;if(p===THREE.SrcColorFactor)return _gl.SRC_COLOR;if(p===THREE.OneMinusSrcColorFactor)return _gl.ONE_MINUS_SRC_COLOR;if(p===THREE.SrcAlphaFactor)return _gl.SRC_ALPHA;if(p===THREE.OneMinusSrcAlphaFactor)return _gl.ONE_MINUS_SRC_ALPHA;if(p===THREE.DstAlphaFactor)return _gl.DST_ALPHA;if(p===THREE.OneMinusDstAlphaFactor)return _gl.ONE_MINUS_DST_ALPHA;if(p===THREE.DstColorFactor)return _gl.DST_COLOR;if(p===THREE.OneMinusDstColorFactor)return _gl.ONE_MINUS_DST_COLOR;if(p===THREE.SrcAlphaSaturateFactor)return _gl.SRC_ALPHA_SATURATE;if(_glExtensionCompressedTextureS3TC!==undefined){if(p===THREE.RGB_S3TC_DXT1_Format)return _glExtensionCompressedTextureS3TC.COMPRESSED_RGB_S3TC_DXT1_EXT;if(p===THREE.RGBA_S3TC_DXT1_Format)return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(p===THREE.RGBA_S3TC_DXT3_Format)return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(p===THREE.RGBA_S3TC_DXT5_Format)return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT5_EXT;}return 0;};function allocateBones(object){if(_supportsBoneTextures&&object&&object.useVertexTexture){return 1024;}else{var nVertexUniforms=_gl.getParameter(_gl.MAX_VERTEX_UNIFORM_VECTORS);var nVertexMatrices=Math.floor((nVertexUniforms-20)/4);var maxBones=nVertexMatrices;if(object!==undefined&&object instanceof THREE.SkinnedMesh){maxBones=Math.min(object.bones.length,maxBones);if(maxBones<object.bones.length){THREE.onwarning(\"WebGLRenderer: too many bones - \"+object.bones.length+\", this GPU supports just \"+maxBones+\" (try OpenGL instead of ANGLE)\");}}return maxBones;}};function allocateLights(lights){var dirLights=0;var pointLights=0;var spotLights=0;var hemiLights=0;var areaLights=0;for(var l=0,ll=lights.length;l<ll;l++){var light=lights[l];if(light.onlyShadow||light.visible===false)continue;if(light instanceof THREE.DirectionalLight)dirLights++;if(light instanceof THREE.PointLight)pointLights++;if(light instanceof THREE.SpotLight)spotLights++;if(light instanceof THREE.HemisphereLight)hemiLights++;if(light instanceof THREE.AreaLight)areaLights++;}return{'directional':dirLights,'point':pointLights,'spot':spotLights,'hemi':hemiLights,'area':areaLights};};function allocateShadows(lights){var maxShadows=0;for(var l=0,ll=lights.length;l<ll;l++){var light=lights[l];if(!light.castShadow)continue;if(light instanceof THREE.SpotLight)maxShadows++;if(light instanceof THREE.DirectionalLight&&!light.shadowCascade)maxShadows++;}return maxShadows;};function initGL(){try{var attributes={alpha:_alpha,premultipliedAlpha:_premultipliedAlpha,antialias:_antialias,stencil:_stencil,preserveDrawingBuffer:_preserveDrawingBuffer};_gl=_context||_canvas.getContext('webgl',attributes)||_canvas.getContext('experimental-webgl',attributes);if(_gl===null){THREE.onerror('Error creating WebGL context.');}}catch(error){THREE.onerror(error);}_glExtensionTextureFloat=_gl.getExtension('OES_texture_float');_glExtensionTextureFloatLinear=_gl.getExtension('OES_texture_float_linear');_glExtensionStandardDerivatives=_gl.getExtension('OES_standard_derivatives');_glExtensionShaderTextureLOD=_gl.getExtension('EXT_shader_texture_lod');_glExtensionTextureFilterAnisotropic=_gl.getExtension('EXT_texture_filter_anisotropic')||_gl.getExtension('MOZ_EXT_texture_filter_anisotropic')||_gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');_glExtensionCompressedTextureS3TC=_gl.getExtension('WEBGL_compressed_texture_s3tc')||_gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc')||_gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');if(!_glExtensionTextureFloat){console.log('THREE.WebGLRenderer: Float textures not supported.');}if(!_glExtensionStandardDerivatives){console.log('THREE.WebGLRenderer: Standard derivatives not supported.');}if(!_glExtensionShaderTextureLOD){console.log('THREE.WebGLRenderer: Shader texture LOD not supported.');}if(!_glExtensionTextureFilterAnisotropic){console.log('THREE.WebGLRenderer: Anisotropic texture filtering not supported.');}if(!_glExtensionCompressedTextureS3TC){console.log('THREE.WebGLRenderer: S3TC compressed textures not supported.');}if(_gl.getShaderPrecisionFormat===undefined){_gl.getShaderPrecisionFormat=function(){return{\"rangeMin\":1,\"rangeMax\":1,\"precision\":1};};}};function setDefaultGLState(){_gl.clearColor(0,0,0,1);_gl.clearDepth(1);_gl.clearStencil(0);_gl.enable(_gl.DEPTH_TEST);_gl.depthFunc(_gl.LEQUAL);_gl.frontFace(_gl.CCW);_gl.cullFace(_gl.BACK);_gl.enable(_gl.CULL_FACE);_gl.enable(_gl.BLEND);_gl.blendEquation(_gl.FUNC_ADD);_gl.blendFunc(_gl.SRC_ALPHA,_gl.ONE_MINUS_SRC_ALPHA);_gl.viewport(_viewportX,_viewportY,_viewportWidth,_viewportHeight);_gl.clearColor(_clearColor.r,_clearColor.g,_clearColor.b,_clearAlpha);};this.shadowMapPlugin=new THREE.ShadowMapPlugin();this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin());this.addPostPlugin(new THREE.LensFlarePlugin());};THREE.WebGLRenderTarget=function(width,height,options){this.width=width;this.height=height;options=options||{};this.wrapS=options.wrapS!==undefined?options.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=options.wrapT!==undefined?options.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=options.magFilter!==undefined?options.magFilter:THREE.LinearFilter;this.minFilter=options.minFilter!==undefined?options.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=options.anisotropy!==undefined?options.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=options.format!==undefined?options.format:THREE.RGBAFormat;this.type=options.type!==undefined?options.type:THREE.UnsignedByteType;this.depthBuffer=options.depthBuffer!==undefined?options.depthBuffer:true;this.stencilBuffer=options.stencilBuffer!==undefined?options.stencilBuffer:true;this.generateMipmaps=options.generateMipmaps!==undefined?options.generateMipmaps:false;this.shareDepthFrom=null;};THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,clone:function clone(){var tmp=new THREE.WebGLRenderTarget(this.width,this.height);tmp.wrapS=this.wrapS;tmp.wrapT=this.wrapT;tmp.magFilter=this.magFilter;tmp.minFilter=this.minFilter;tmp.anisotropy=this.anisotropy;tmp.offset.copy(this.offset);tmp.repeat.copy(this.repeat);tmp.format=this.format;tmp.type=this.type;tmp.depthBuffer=this.depthBuffer;tmp.stencilBuffer=this.stencilBuffer;tmp.generateMipmaps=this.generateMipmaps;tmp.shareDepthFrom=this.shareDepthFrom;return tmp;},dispose:function dispose(){this.dispatchEvent({type:'dispose'});}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(width,height,options){THREE.WebGLRenderTarget.call(this,width,height,options);this.activeCubeFace=0;};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.position=new THREE.Vector3();this.positionWorld=new THREE.Vector3();this.positionScreen=new THREE.Vector4();this.visible=true;};THREE.RenderableVertex.prototype.copy=function(vertex){this.positionWorld.copy(vertex.positionWorld);this.positionScreen.copy(vertex.positionScreen);};THREE.RenderableFace=function(){this.id=0;this.v1=new THREE.RenderableVertex();this.v2=new THREE.RenderableVertex();this.v3=new THREE.RenderableVertex();this.centroidModel=new THREE.Vector3();this.normalModel=new THREE.Vector3();this.vertexNormalsModel=[new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3()];this.vertexNormalsLength=0;this.color=null;this.material=null;this.uvs=[[]];this.z=0;};THREE.RenderableObject=function(){this.id=0;this.object=null;this.z=0;};THREE.RenderableSprite=function(){this.id=0;this.object=null;this.x=0;this.y=0;this.z=0;this.rotation=0;this.scale=new THREE.Vector2();this.material=null;};THREE.RenderableLine=function(){this.id=0;this.v1=new THREE.RenderableVertex();this.v2=new THREE.RenderableVertex();this.vertexColors=[new THREE.Color(),new THREE.Color()];this.material=null;this.z=0;};THREE.GeometryUtils={merge:function merge(geometry1,object2,materialIndexOffset){var matrix,normalMatrix,vertexOffset=geometry1.vertices.length,uvPosition=geometry1.faceVertexUvs[0].length,geometry2=object2 instanceof THREE.Mesh?object2.geometry:object2,vertices1=geometry1.vertices,vertices2=geometry2.vertices,faces1=geometry1.faces,faces2=geometry2.faces,uvs1=geometry1.faceVertexUvs[0],uvs2=geometry2.faceVertexUvs[0];if(materialIndexOffset===undefined)materialIndexOffset=0;if(object2 instanceof THREE.Mesh){object2.matrixAutoUpdate&&object2.updateMatrix();matrix=object2.matrix;normalMatrix=new THREE.Matrix3().getNormalMatrix(matrix);}for(var i=0,il=vertices2.length;i<il;i++){var vertex=vertices2[i];var vertexCopy=vertex.clone();if(matrix)vertexCopy.applyMatrix4(matrix);vertices1.push(vertexCopy);}for(i=0,il=faces2.length;i<il;i++){var face=faces2[i],faceCopy,normal,color,faceVertexNormals=face.vertexNormals,faceVertexColors=face.vertexColors;faceCopy=new THREE.Face3(face.a+vertexOffset,face.b+vertexOffset,face.c+vertexOffset);faceCopy.normal.copy(face.normal);if(normalMatrix){faceCopy.normal.applyMatrix3(normalMatrix).normalize();}for(var j=0,jl=faceVertexNormals.length;j<jl;j++){normal=faceVertexNormals[j].clone();if(normalMatrix){normal.applyMatrix3(normalMatrix).normalize();}faceCopy.vertexNormals.push(normal);}faceCopy.color.copy(face.color);for(var j=0,jl=faceVertexColors.length;j<jl;j++){color=faceVertexColors[j];faceCopy.vertexColors.push(color.clone());}faceCopy.materialIndex=face.materialIndex+materialIndexOffset;faceCopy.centroid.copy(face.centroid);if(matrix){faceCopy.centroid.applyMatrix4(matrix);}faces1.push(faceCopy);}for(i=0,il=uvs2.length;i<il;i++){var uv=uvs2[i],uvCopy=[];for(var j=0,jl=uv.length;j<jl;j++){uvCopy.push(new THREE.Vector2(uv[j].x,uv[j].y));}uvs1.push(uvCopy);}},randomPointInTriangle:function(){var vector=new THREE.Vector3();return function(vectorA,vectorB,vectorC){var point=new THREE.Vector3();var a=THREE.Math.random16();var b=THREE.Math.random16();if(a+b>1){a=1-a;b=1-b;}var c=1-a-b;point.copy(vectorA);point.multiplyScalar(a);vector.copy(vectorB);vector.multiplyScalar(b);point.add(vector);vector.copy(vectorC);vector.multiplyScalar(c);point.add(vector);return point;};}(),randomPointInFace:function randomPointInFace(face,geometry,useCachedAreas){var vA,vB,vC,vD;vA=geometry.vertices[face.a];vB=geometry.vertices[face.b];vC=geometry.vertices[face.c];return THREE.GeometryUtils.randomPointInTriangle(vA,vB,vC);},randomPointsInGeometry:function randomPointsInGeometry(geometry,n){var face,i,faces=geometry.faces,vertices=geometry.vertices,il=faces.length,totalArea=0,cumulativeAreas=[],vA,vB,vC,vD;for(i=0;i<il;i++){face=faces[i];vA=vertices[face.a];vB=vertices[face.b];vC=vertices[face.c];face._area=THREE.GeometryUtils.triangleArea(vA,vB,vC);totalArea+=face._area;cumulativeAreas[i]=totalArea;}function binarySearchIndices(value){function binarySearch(start,end){if(end<start)return start;var mid=start+Math.floor((end-start)/2);if(cumulativeAreas[mid]>value){return binarySearch(start,mid-1);}else if(cumulativeAreas[mid]<value){return binarySearch(mid+1,end);}else{return mid;}}var result=binarySearch(0,cumulativeAreas.length-1);return result;}var r,index,result=[];var stats={};for(i=0;i<n;i++){r=THREE.Math.random16()*totalArea;index=binarySearchIndices(r);result[i]=THREE.GeometryUtils.randomPointInFace(faces[index],geometry,true);if(!stats[index]){stats[index]=1;}else{stats[index]+=1;}}return result;},triangleArea:function(){var vector1=new THREE.Vector3();var vector2=new THREE.Vector3();return function(vectorA,vectorB,vectorC){vector1.subVectors(vectorB,vectorA);vector2.subVectors(vectorC,vectorA);vector1.cross(vector2);return 0.5*vector1.length();};}(),center:function center(geometry){geometry.computeBoundingBox();var bb=geometry.boundingBox;var offset=new THREE.Vector3();offset.addVectors(bb.min,bb.max);offset.multiplyScalar(-0.5);geometry.applyMatrix(new THREE.Matrix4().makeTranslation(offset.x,offset.y,offset.z));geometry.computeBoundingBox();return offset;},triangulateQuads:function triangulateQuads(geometry){var i,il,j,jl;var faces=[];var faceVertexUvs=[];for(i=0,il=geometry.faceVertexUvs.length;i<il;i++){faceVertexUvs[i]=[];}for(i=0,il=geometry.faces.length;i<il;i++){var face=geometry.faces[i];faces.push(face);for(j=0,jl=geometry.faceVertexUvs.length;j<jl;j++){faceVertexUvs[j].push(geometry.faceVertexUvs[j][i]);}}geometry.faces=faces;geometry.faceVertexUvs=faceVertexUvs;geometry.computeCentroids();geometry.computeFaceNormals();geometry.computeVertexNormals();if(geometry.hasTangents)geometry.computeTangents();}};THREE.ImageUtils={crossOrigin:undefined,loadTexture:function loadTexture(url,mapping,onLoad,onError){var loader=new THREE.ImageLoader();loader.crossOrigin=this.crossOrigin;var texture=new THREE.Texture(undefined,mapping);var image=loader.load(url,function(){texture.needsUpdate=true;if(onLoad)onLoad(texture);});texture.image=image;texture.sourceFile=url;return texture;},loadCompressedTexture:function loadCompressedTexture(url,mapping,onLoad,onError){var texture=new THREE.CompressedTexture();texture.mapping=mapping;var request=new XMLHttpRequest();request.onload=function(){var buffer=request.response;var dds=THREE.ImageUtils.parseDDS(buffer,true);texture.format=dds.format;texture.mipmaps=dds.mipmaps;texture.image.width=dds.width;texture.image.height=dds.height;texture.generateMipmaps=false;texture.needsUpdate=true;if(onLoad)onLoad(texture);};request.onerror=onError;request.open('GET',url,true);request.responseType=\"arraybuffer\";request.send(null);return texture;},loadTextureCube:function loadTextureCube(array,mapping,onLoad,onError){var images=[];images.loadCount=0;var texture=new THREE.Texture();texture.image=images;if(mapping!==undefined)texture.mapping=mapping;texture.flipY=false;for(var i=0,il=array.length;i<il;++i){var cubeImage=new Image();images[i]=cubeImage;cubeImage.onload=function(){images.loadCount+=1;if(images.loadCount===6){texture.needsUpdate=true;if(onLoad)onLoad(texture);}};cubeImage.onerror=onError;cubeImage.crossOrigin=this.crossOrigin;cubeImage.src=array[i];}return texture;},loadCompressedTextureCube:function loadCompressedTextureCube(array,mapping,onLoad,onError){var images=[];images.loadCount=0;var texture=new THREE.CompressedTexture();texture.image=images;if(mapping!==undefined)texture.mapping=mapping;texture.flipY=false;texture.generateMipmaps=false;var generateCubeFaceCallback=function generateCubeFaceCallback(rq,img){return function(){var buffer=rq.response;var dds=THREE.ImageUtils.parseDDS(buffer,true);img.format=dds.format;img.mipmaps=dds.mipmaps;img.width=dds.width;img.height=dds.height;images.loadCount+=1;if(images.loadCount===6){texture.format=dds.format;texture.needsUpdate=true;if(onLoad)onLoad(texture);}};};if(array instanceof Array){for(var i=0,il=array.length;i<il;++i){var cubeImage={};images[i]=cubeImage;var request=new XMLHttpRequest();request.onload=generateCubeFaceCallback(request,cubeImage);request.onerror=onError;var url=array[i];request.open('GET',url,true);request.responseType=\"arraybuffer\";request.send(null);}}else{var url=array;var request=new XMLHttpRequest();request.onload=function(){var buffer=request.response;var dds=THREE.ImageUtils.parseDDS(buffer,true);if(dds.isCubemap){var faces=dds.mipmaps.length/dds.mipmapCount;for(var f=0;f<faces;f++){images[f]={mipmaps:[]};for(var i=0;i<dds.mipmapCount;i++){images[f].mipmaps.push(dds.mipmaps[f*dds.mipmapCount+i]);images[f].format=dds.format;images[f].width=dds.width;images[f].height=dds.height;}}texture.format=dds.format;texture.needsUpdate=true;if(onLoad)onLoad(texture);}};request.onerror=onError;request.open('GET',url,true);request.responseType=\"arraybuffer\";request.send(null);}return texture;},loadDDSTexture:function loadDDSTexture(url,mapping,onLoad,onError){var images=[];images.loadCount=0;var texture=new THREE.CompressedTexture();texture.image=images;if(mapping!==undefined)texture.mapping=mapping;texture.flipY=false;texture.generateMipmaps=false;{var request=new XMLHttpRequest();request.onload=function(){var buffer=request.response;var dds=THREE.ImageUtils.parseDDS(buffer,true);if(dds.isCubemap){var faces=dds.mipmaps.length/dds.mipmapCount;for(var f=0;f<faces;f++){images[f]={mipmaps:[]};for(var i=0;i<dds.mipmapCount;i++){images[f].mipmaps.push(dds.mipmaps[f*dds.mipmapCount+i]);images[f].format=dds.format;images[f].width=dds.width;images[f].height=dds.height;}}}else{texture.image.width=dds.width;texture.image.height=dds.height;texture.mipmaps=dds.mipmaps;}texture.format=dds.format;texture.needsUpdate=true;if(onLoad)onLoad(texture);};request.onerror=onError;request.open('GET',url,true);request.responseType=\"arraybuffer\";request.send(null);}return texture;},parseDDS:function parseDDS(buffer,loadMipmaps){var dds={mipmaps:[],width:0,height:0,format:null,mipmapCount:1};var DDS_MAGIC=0x20534444;var DDSD_CAPS=0x1,DDSD_HEIGHT=0x2,DDSD_WIDTH=0x4,DDSD_PITCH=0x8,DDSD_PIXELFORMAT=0x1000,DDSD_MIPMAPCOUNT=0x20000,DDSD_LINEARSIZE=0x80000,DDSD_DEPTH=0x800000;var DDSCAPS_COMPLEX=0x8,DDSCAPS_MIPMAP=0x400000,DDSCAPS_TEXTURE=0x1000;var DDSCAPS2_CUBEMAP=0x200,DDSCAPS2_CUBEMAP_POSITIVEX=0x400,DDSCAPS2_CUBEMAP_NEGATIVEX=0x800,DDSCAPS2_CUBEMAP_POSITIVEY=0x1000,DDSCAPS2_CUBEMAP_NEGATIVEY=0x2000,DDSCAPS2_CUBEMAP_POSITIVEZ=0x4000,DDSCAPS2_CUBEMAP_NEGATIVEZ=0x8000,DDSCAPS2_VOLUME=0x200000;var DDPF_ALPHAPIXELS=0x1,DDPF_ALPHA=0x2,DDPF_FOURCC=0x4,DDPF_RGB=0x40,DDPF_YUV=0x200,DDPF_LUMINANCE=0x20000;function fourCCToInt32(value){return value.charCodeAt(0)+(value.charCodeAt(1)<<8)+(value.charCodeAt(2)<<16)+(value.charCodeAt(3)<<24);}function int32ToFourCC(value){return String.fromCharCode(value&0xff,value>>8&0xff,value>>16&0xff,value>>24&0xff);}function loadARGBMip(buffer,dataOffset,width,height){var dataLength=width*height*4;var srcBuffer=new Uint8Array(buffer,dataOffset,dataLength);var byteArray=new Uint8Array(dataLength);var dst=0;var src=0;for(var y=0;y<height;y++){for(var x=0;x<width;x++){var b=srcBuffer[src];src++;var g=srcBuffer[src];src++;var r=srcBuffer[src];src++;var a=srcBuffer[src];src++;byteArray[dst]=r;dst++;byteArray[dst]=g;dst++;byteArray[dst]=b;dst++;byteArray[dst]=a;dst++;}}return byteArray;}var FOURCC_DXT1=fourCCToInt32(\"DXT1\");var FOURCC_DXT3=fourCCToInt32(\"DXT3\");var FOURCC_DXT5=fourCCToInt32(\"DXT5\");var headerLengthInt=31;var off_magic=0;var off_size=1;var off_flags=2;var off_height=3;var off_width=4;var off_mipmapCount=7;var off_pfFlags=20;var off_pfFourCC=21;var off_RGBBitCount=22;var off_RBitMask=23;var off_GBitMask=24;var off_BBitMask=25;var off_ABitMask=26;var off_caps=27;var off_caps2=28;var off_caps3=29;var off_caps4=30;var header=new Int32Array(buffer,0,headerLengthInt);if(header[off_magic]!==DDS_MAGIC){THREE.onerror(\"ImageUtils.parseDDS(): Invalid magic number in DDS header\");return dds;}if(!header[off_pfFlags]&DDPF_FOURCC){THREE.onerror(\"ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code\");return dds;}var blockBytes;var fourCC=header[off_pfFourCC];var isRGBAUncompressed=false;switch(fourCC){case FOURCC_DXT1:blockBytes=8;dds.format=THREE.RGB_S3TC_DXT1_Format;break;case FOURCC_DXT3:blockBytes=16;dds.format=THREE.RGBA_S3TC_DXT3_Format;break;case FOURCC_DXT5:blockBytes=16;dds.format=THREE.RGBA_S3TC_DXT5_Format;break;default:if(header[off_RGBBitCount]==32&&header[off_RBitMask]&0xff0000&&header[off_GBitMask]&0xff00&&header[off_BBitMask]&0xff&&header[off_ABitMask]&0xff000000){isRGBAUncompressed=true;blockBytes=64;dds.format=THREE.RGBAFormat;}else{THREE.onerror(\"ImageUtils.parseDDS(): Unsupported FourCC code: \",int32ToFourCC(fourCC));return dds;}}dds.mipmapCount=1;if(header[off_flags]&DDSD_MIPMAPCOUNT&&loadMipmaps!==false){dds.mipmapCount=Math.max(1,header[off_mipmapCount]);}dds.isCubemap=header[off_caps2]&DDSCAPS2_CUBEMAP?true:false;dds.width=header[off_width];dds.height=header[off_height];var dataOffset=header[off_size]+4;var width=dds.width;var height=dds.height;var faces=dds.isCubemap?6:1;for(var face=0;face<faces;face++){for(var i=0;i<dds.mipmapCount;i++){if(isRGBAUncompressed){var byteArray=loadARGBMip(buffer,dataOffset,width,height);var dataLength=byteArray.length;}else{var dataLength=Math.max(4,width)/4*Math.max(4,height)/4*blockBytes;var byteArray=new Uint8Array(buffer,dataOffset,dataLength);}var mipmap={\"data\":byteArray,\"width\":width,\"height\":height};dds.mipmaps.push(mipmap);dataOffset+=dataLength;width=Math.max(width*0.5,1);height=Math.max(height*0.5,1);}width=dds.width;height=dds.height;}return dds;},getNormalMap:function getNormalMap(image,depth){var cross=function cross(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]];};var subtract=function subtract(a,b){return[a[0]-b[0],a[1]-b[1],a[2]-b[2]];};var normalize=function normalize(a){var l=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/l,a[1]/l,a[2]/l];};depth=depth|1;var width=image.width;var height=image.height;var canvas=document.createElement('canvas');canvas.width=width;canvas.height=height;var context=canvas.getContext('2d');context.drawImage(image,0,0);var data=context.getImageData(0,0,width,height).data;var imageData=context.createImageData(width,height);var output=imageData.data;for(var x=0;x<width;x++){for(var y=0;y<height;y++){var ly=y-1<0?0:y-1;var uy=y+1>height-1?height-1:y+1;var lx=x-1<0?0:x-1;var ux=x+1>width-1?width-1:x+1;var points=[];var origin=[0,0,data[(y*width+x)*4]/255*depth];points.push([-1,0,data[(y*width+lx)*4]/255*depth]);points.push([-1,-1,data[(ly*width+lx)*4]/255*depth]);points.push([0,-1,data[(ly*width+x)*4]/255*depth]);points.push([1,-1,data[(ly*width+ux)*4]/255*depth]);points.push([1,0,data[(y*width+ux)*4]/255*depth]);points.push([1,1,data[(uy*width+ux)*4]/255*depth]);points.push([0,1,data[(uy*width+x)*4]/255*depth]);points.push([-1,1,data[(uy*width+lx)*4]/255*depth]);var normals=[];var num_points=points.length;for(var i=0;i<num_points;i++){var v1=points[i];var v2=points[(i+1)%num_points];v1=subtract(v1,origin);v2=subtract(v2,origin);normals.push(normalize(cross(v1,v2)));}var normal=[0,0,0];for(var i=0;i<normals.length;i++){normal[0]+=normals[i][0];normal[1]+=normals[i][1];normal[2]+=normals[i][2];}normal[0]/=normals.length;normal[1]/=normals.length;normal[2]/=normals.length;var idx=(y*width+x)*4;output[idx]=(normal[0]+1.0)/2.0*255|0;output[idx+1]=(normal[1]+1.0)/2.0*255|0;output[idx+2]=normal[2]*255|0;output[idx+3]=255;}}context.putImageData(imageData,0,0);return canvas;},generateDataTexture:function generateDataTexture(width,height,color){var size=width*height;var data=new Uint8Array(3*size);var r=Math.floor(color.r*255);var g=Math.floor(color.g*255);var b=Math.floor(color.b*255);for(var i=0;i<size;i++){data[i*3]=r;data[i*3+1]=g;data[i*3+2]=b;}var texture=new THREE.DataTexture(data,width,height,THREE.RGBFormat);texture.needsUpdate=true;return texture;}};THREE.SceneUtils={createMultiMaterialObject:function createMultiMaterialObject(geometry,materials){var group=new THREE.Object3D();for(var i=0,l=materials.length;i<l;i++){group.add(new THREE.Mesh(geometry,materials[i]));}return group;},detach:function detach(child,parent,scene){child.applyMatrix(parent.matrixWorld);parent.remove(child);scene.add(child);},attach:function attach(child,scene,parent){var matrixWorldInverse=new THREE.Matrix4();matrixWorldInverse.getInverse(parent.matrixWorld);child.applyMatrix(matrixWorldInverse);scene.remove(child);parent.add(child);}};THREE.FontUtils={faces:{},face:\"helvetiker\",weight:\"normal\",style:\"normal\",size:150,divisions:10,getFace:function getFace(){return this.faces[this.face][this.weight][this.style];},loadFace:function loadFace(data){var family=data.familyName.toLowerCase();var ThreeFont=this;ThreeFont.faces[family]=ThreeFont.faces[family]||{};ThreeFont.faces[family][data.cssFontWeight]=ThreeFont.faces[family][data.cssFontWeight]||{};ThreeFont.faces[family][data.cssFontWeight][data.cssFontStyle]=data;var face=ThreeFont.faces[family][data.cssFontWeight][data.cssFontStyle]=data;return data;},drawText:function drawText(text){var characterPts=[],allPts=[];var i,p,face=this.getFace(),scale=this.size/face.resolution,offset=0,chars=String(text).split(''),length=chars.length;var fontPaths=[];for(i=0;i<length;i++){var path=new THREE.Path();var ret=this.extractGlyphPoints(chars[i],face,scale,offset,path);offset+=ret.offset;fontPaths.push(ret.path);}var width=offset/2;return{paths:fontPaths,offset:width};},extractGlyphPoints:function extractGlyphPoints(c,face,scale,offset,path){var pts=[];var i,i2,divisions,outline,action,length,scaleX,scaleY,x,y,cpx,cpy,cpx0,cpy0,cpx1,cpy1,cpx2,cpy2,laste,glyph=face.glyphs[c]||face.glyphs['?'];if(!glyph)return;if(glyph.o){outline=glyph._cachedOutline||(glyph._cachedOutline=glyph.o.split(' '));length=outline.length;scaleX=scale;scaleY=scale;for(i=0;i<length;){action=outline[i++];switch(action){case'm':x=outline[i++]*scaleX+offset;y=outline[i++]*scaleY;path.moveTo(x,y);break;case'l':x=outline[i++]*scaleX+offset;y=outline[i++]*scaleY;path.lineTo(x,y);break;case'q':cpx=outline[i++]*scaleX+offset;cpy=outline[i++]*scaleY;cpx1=outline[i++]*scaleX+offset;cpy1=outline[i++]*scaleY;path.quadraticCurveTo(cpx1,cpy1,cpx,cpy);laste=pts[pts.length-1];if(laste){cpx0=laste.x;cpy0=laste.y;for(i2=1,divisions=this.divisions;i2<=divisions;i2++){var t=i2/divisions;var tx=THREE.Shape.Utils.b2(t,cpx0,cpx1,cpx);var ty=THREE.Shape.Utils.b2(t,cpy0,cpy1,cpy);}}break;case'b':cpx=outline[i++]*scaleX+offset;cpy=outline[i++]*scaleY;cpx1=outline[i++]*scaleX+offset;cpy1=outline[i++]*-scaleY;cpx2=outline[i++]*scaleX+offset;cpy2=outline[i++]*-scaleY;path.bezierCurveTo(cpx,cpy,cpx1,cpy1,cpx2,cpy2);laste=pts[pts.length-1];if(laste){cpx0=laste.x;cpy0=laste.y;for(i2=1,divisions=this.divisions;i2<=divisions;i2++){var t=i2/divisions;var tx=THREE.Shape.Utils.b3(t,cpx0,cpx1,cpx2,cpx);var ty=THREE.Shape.Utils.b3(t,cpy0,cpy1,cpy2,cpy);}}break;}}}return{offset:glyph.ha*scale,path:path};}};THREE.FontUtils.generateShapes=function(text,parameters){parameters=parameters||{};var size=parameters.size!==undefined?parameters.size:100;var curveSegments=parameters.curveSegments!==undefined?parameters.curveSegments:4;var font=parameters.font!==undefined?parameters.font:\"helvetiker\";var weight=parameters.weight!==undefined?parameters.weight:\"normal\";var style=parameters.style!==undefined?parameters.style:\"normal\";THREE.FontUtils.size=size;THREE.FontUtils.divisions=curveSegments;THREE.FontUtils.face=font;THREE.FontUtils.weight=weight;THREE.FontUtils.style=style;var data=THREE.FontUtils.drawText(text);var paths=data.paths;var shapes=[];for(var p=0,pl=paths.length;p<pl;p++){Array.prototype.push.apply(shapes,paths[p].toShapes());}return shapes;};(function(namespace){var EPSILON=0.0000000001;var process=function process(contour,indices){var n=contour.length;if(n<3)return null;var result=[],verts=[],vertIndices=[];var u,v,w;if(area(contour)>0.0){for(v=0;v<n;v++){verts[v]=v;}}else{for(v=0;v<n;v++){verts[v]=n-1-v;}}var nv=n;var count=2*nv;for(v=nv-1;nv>2;){if(count--<=0){THREE.onwarning(\"Warning, unable to triangulate polygon!\");if(indices)return vertIndices;return result;}u=v;if(nv<=u)u=0;v=u+1;if(nv<=v)v=0;w=v+1;if(nv<=w)w=0;if(snip(contour,u,v,w,nv,verts)){var a,b,c,s,t;a=verts[u];b=verts[v];c=verts[w];result.push([contour[a],contour[b],contour[c]]);vertIndices.push([verts[u],verts[v],verts[w]]);for(s=v,t=v+1;t<nv;s++,t++){verts[s]=verts[t];}nv--;count=2*nv;}}if(indices)return vertIndices;return result;};var area=function area(contour){var n=contour.length;var a=0.0;for(var p=n-1,q=0;q<n;p=q++){a+=contour[p].x*contour[q].y-contour[q].x*contour[p].y;}return a*0.5;};var snip=function snip(contour,u,v,w,n,verts){var p;var ax,ay,bx,by;var cx,cy,px,py;ax=contour[verts[u]].x;ay=contour[verts[u]].y;bx=contour[verts[v]].x;by=contour[verts[v]].y;cx=contour[verts[w]].x;cy=contour[verts[w]].y;if(EPSILON>(bx-ax)*(cy-ay)-(by-ay)*(cx-ax))return false;var aX,aY,bX,bY,cX,cY;var apx,apy,bpx,bpy,cpx,cpy;var cCROSSap,bCROSScp,aCROSSbp;aX=cx-bx;aY=cy-by;bX=ax-cx;bY=ay-cy;cX=bx-ax;cY=by-ay;for(p=0;p<n;p++){px=contour[verts[p]].x;py=contour[verts[p]].y;if(px===ax&&py===ay||px===bx&&py===by||px===cx&&py===cy)continue;apx=px-ax;apy=py-ay;bpx=px-bx;bpy=py-by;cpx=px-cx;cpy=py-cy;aCROSSbp=aX*bpy-aY*bpx;cCROSSap=cX*apy-cY*apx;bCROSScp=bX*cpy-bY*cpx;if(aCROSSbp>=-EPSILON&&bCROSScp>=-EPSILON&&cCROSSap>=-EPSILON)return false;}return true;};namespace.Triangulate=process;namespace.Triangulate.area=area;return namespace;})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(t){THREE.onwarning(\"Warning, getPoint() not implemented!\");return null;};THREE.Curve.prototype.getPointAt=function(u){var t=this.getUtoTmapping(u);return this.getPoint(t);};THREE.Curve.prototype.getPoints=function(divisions){if(!divisions)divisions=5;var d,pts=[];for(d=0;d<=divisions;d++){pts.push(this.getPoint(d/divisions));}return pts;};THREE.Curve.prototype.getSpacedPoints=function(divisions){if(!divisions)divisions=5;var d,pts=[];for(d=0;d<=divisions;d++){pts.push(this.getPointAt(d/divisions));}return pts;};THREE.Curve.prototype.getLength=function(){var lengths=this.getLengths();return lengths[lengths.length-1];};THREE.Curve.prototype.getLengths=function(divisions){if(!divisions)divisions=this.__arcLengthDivisions?this.__arcLengthDivisions:200;if(this.cacheArcLengths&&this.cacheArcLengths.length==divisions+1&&!this.needsUpdate){return this.cacheArcLengths;}this.needsUpdate=false;var cache=[];var current,last=this.getPoint(0);var p,sum=0;cache.push(0);for(p=1;p<=divisions;p++){current=this.getPoint(p/divisions);sum+=current.distanceTo(last);cache.push(sum);last=current;}this.cacheArcLengths=cache;return cache;};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=true;this.getLengths();};THREE.Curve.prototype.getUtoTmapping=function(u,distance){var arcLengths=this.getLengths();var i=0,il=arcLengths.length;var targetArcLength;if(distance){targetArcLength=distance;}else{targetArcLength=u*arcLengths[il-1];}var low=0,high=il-1,comparison;while(low<=high){i=Math.floor(low+(high-low)/2);comparison=arcLengths[i]-targetArcLength;if(comparison<0){low=i+1;continue;}else if(comparison>0){high=i-1;continue;}else{high=i;break;}}i=high;if(arcLengths[i]==targetArcLength){var t=i/(il-1);return t;}var lengthBefore=arcLengths[i];var lengthAfter=arcLengths[i+1];var segmentLength=lengthAfter-lengthBefore;var segmentFraction=(targetArcLength-lengthBefore)/segmentLength;var t=(i+segmentFraction)/(il-1);return t;};THREE.Curve.prototype.getTangent=function(t){var delta=0.0001;var t1=t-delta;var t2=t+delta;if(t1<0)t1=0;if(t2>1)t2=1;var pt1=this.getPoint(t1);var pt2=this.getPoint(t2);var vec=pt2.clone().sub(pt1);return vec.normalize();};THREE.Curve.prototype.getTangentAt=function(u){var t=this.getUtoTmapping(u);return this.getTangent(t);};THREE.Curve.Utils={tangentQuadraticBezier:function tangentQuadraticBezier(t,p0,p1,p2){return 2*(1-t)*(p1-p0)+2*t*(p2-p1);},tangentCubicBezier:function tangentCubicBezier(t,p0,p1,p2,p3){return-3*p0*(1-t)*(1-t)+3*p1*(1-t)*(1-t)-6*t*p1*(1-t)+6*t*p2*(1-t)-3*t*t*p2+3*t*t*p3;},tangentSpline:function tangentSpline(t,p0,p1,p2,p3){var h00=6*t*t-6*t;var h10=3*t*t-4*t+1;var h01=-6*t*t+6*t;var h11=3*t*t-2*t;return h00+h10+h01+h11;},interpolate:function interpolate(p0,p1,p2,p3,t){var v0=(p2-p0)*0.5;var v1=(p3-p1)*0.5;var t2=t*t;var t3=t*t2;return(2*p1-2*p2+v0+v1)*t3+(-3*p1+3*p2-2*v0-v1)*t2+v0*t+p1;}};THREE.Curve.create=function(constructor,getPointFunc){constructor.prototype=Object.create(THREE.Curve.prototype);constructor.prototype.getPoint=getPointFunc;return constructor;};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=false;};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(curve){this.curves.push(curve);};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var startPoint=this.curves[0].getPoint(0);var endPoint=this.curves[this.curves.length-1].getPoint(1);if(!startPoint.equals(endPoint)){this.curves.push(new THREE.LineCurve(endPoint,startPoint));}};THREE.CurvePath.prototype.getPoint=function(t){var d=t*this.getLength();var curveLengths=this.getCurveLengths();var i=0,diff,curve;while(i<curveLengths.length){if(curveLengths[i]>=d){diff=curveLengths[i]-d;curve=this.curves[i];var u=1-diff/curve.getLength();return curve.getPointAt(u);break;}i++;}return null;};THREE.CurvePath.prototype.getLength=function(){var lens=this.getCurveLengths();return lens[lens.length-1];};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length){return this.cacheLengths;};var lengths=[],sums=0;var i,il=this.curves.length;for(i=0;i<il;i++){sums+=this.curves[i].getLength();lengths.push(sums);}this.cacheLengths=lengths;return lengths;};THREE.CurvePath.prototype.getBoundingBox=function(){var points=this.getPoints();var maxX,maxY,maxZ;var minX,minY,minZ;maxX=maxY=Number.NEGATIVE_INFINITY;minX=minY=Number.POSITIVE_INFINITY;var p,i,il,sum;var v3=points[0]instanceof THREE.Vector3;sum=v3?new THREE.Vector3():new THREE.Vector2();for(i=0,il=points.length;i<il;i++){p=points[i];if(p.x>maxX)maxX=p.x;else if(p.x<minX)minX=p.x;if(p.y>maxY)maxY=p.y;else if(p.y<minY)minY=p.y;if(v3){if(p.z>maxZ)maxZ=p.z;else if(p.z<minZ)minZ=p.z;}sum.add(p);}var ret={minX:minX,minY:minY,maxX:maxX,maxY:maxY,centroid:sum.divideScalar(il)};if(v3){ret.maxZ=maxZ;ret.minZ=minZ;}return ret;};THREE.CurvePath.prototype.createPointsGeometry=function(divisions){var pts=this.getPoints(divisions,true);return this.createGeometry(pts);};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(divisions){var pts=this.getSpacedPoints(divisions,true);return this.createGeometry(pts);};THREE.CurvePath.prototype.createGeometry=function(points){var geometry=new THREE.Geometry();for(var i=0;i<points.length;i++){geometry.vertices.push(new THREE.Vector3(points[i].x,points[i].y,points[i].z||0));}return geometry;};THREE.CurvePath.prototype.addWrapPath=function(bendpath){this.bends.push(bendpath);};THREE.CurvePath.prototype.getTransformedPoints=function(segments,bends){var oldPts=this.getPoints(segments);var i,il;if(!bends){bends=this.bends;}for(i=0,il=bends.length;i<il;i++){oldPts=this.getWrapPoints(oldPts,bends[i]);}return oldPts;};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(segments,bends){var oldPts=this.getSpacedPoints(segments);var i,il;if(!bends){bends=this.bends;}for(i=0,il=bends.length;i<il;i++){oldPts=this.getWrapPoints(oldPts,bends[i]);}return oldPts;};THREE.CurvePath.prototype.getWrapPoints=function(oldPts,path){var bounds=this.getBoundingBox();var i,il,p,oldX,oldY,xNorm;for(i=0,il=oldPts.length;i<il;i++){p=oldPts[i];oldX=p.x;oldY=p.y;xNorm=oldX/bounds.maxX;xNorm=path.getUtoTmapping(xNorm,oldX);var pathPt=path.getPoint(xNorm);var normal=path.getTangent(xNorm);normal.set(-normal.y,normal.x).multiplyScalar(oldY);p.x=pathPt.x+normal.x;p.y=pathPt.y+normal.y;}return oldPts;};THREE.Gyroscope=function(){THREE.Object3D.call(this);};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.updateMatrixWorld=function(force){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||force){if(this.parent){this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld);this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject);this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld);}else{this.matrixWorld.copy(this.matrix);}this.matrixWorldNeedsUpdate=false;force=true;}for(var i=0,l=this.children.length;i<l;i++){this.children[i].updateMatrixWorld(force);}};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3();THREE.Gyroscope.prototype.translationObject=new THREE.Vector3();THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion();THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion();THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3();THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3();THREE.Path=function(points){THREE.CurvePath.call(this);this.actions=[];if(points){this.fromPoints(points);}};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:'moveTo',LINE_TO:'lineTo',QUADRATIC_CURVE_TO:'quadraticCurveTo',BEZIER_CURVE_TO:'bezierCurveTo',CSPLINE_THRU:'splineThru',ARC:'arc',ELLIPSE:'ellipse'};THREE.Path.prototype.fromPoints=function(vectors){this.moveTo(vectors[0].x,vectors[0].y);for(var v=1,vlen=vectors.length;v<vlen;v++){this.lineTo(vectors[v].x,vectors[v].y);};};THREE.Path.prototype.moveTo=function(x,y){var args=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:args});};THREE.Path.prototype.lineTo=function(x,y){var args=Array.prototype.slice.call(arguments);var lastargs=this.actions[this.actions.length-1].args;var x0=lastargs[lastargs.length-2];var y0=lastargs[lastargs.length-1];var curve=new THREE.LineCurve(new THREE.Vector2(x0,y0),new THREE.Vector2(x,y));this.curves.push(curve);this.actions.push({action:THREE.PathActions.LINE_TO,args:args});};THREE.Path.prototype.quadraticCurveTo=function(aCPx,aCPy,aX,aY){var args=Array.prototype.slice.call(arguments);var lastargs=this.actions[this.actions.length-1].args;var x0=lastargs[lastargs.length-2];var y0=lastargs[lastargs.length-1];var curve=new THREE.QuadraticBezierCurve(new THREE.Vector2(x0,y0),new THREE.Vector2(aCPx,aCPy),new THREE.Vector2(aX,aY));this.curves.push(curve);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:args});};THREE.Path.prototype.bezierCurveTo=function(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){var args=Array.prototype.slice.call(arguments);var lastargs=this.actions[this.actions.length-1].args;var x0=lastargs[lastargs.length-2];var y0=lastargs[lastargs.length-1];var curve=new THREE.CubicBezierCurve(new THREE.Vector2(x0,y0),new THREE.Vector2(aCP1x,aCP1y),new THREE.Vector2(aCP2x,aCP2y),new THREE.Vector2(aX,aY));this.curves.push(curve);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:args});};THREE.Path.prototype.splineThru=function(pts){var args=Array.prototype.slice.call(arguments);var lastargs=this.actions[this.actions.length-1].args;var x0=lastargs[lastargs.length-2];var y0=lastargs[lastargs.length-1];var npts=[new THREE.Vector2(x0,y0)];Array.prototype.push.apply(npts,pts);var curve=new THREE.SplineCurve(npts);this.curves.push(curve);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:args});};THREE.Path.prototype.arc=function(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){var lastargs=this.actions[this.actions.length-1].args;var x0=lastargs[lastargs.length-2];var y0=lastargs[lastargs.length-1];this.absarc(aX+x0,aY+y0,aRadius,aStartAngle,aEndAngle,aClockwise);};THREE.Path.prototype.absarc=function(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){this.absellipse(aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise);};THREE.Path.prototype.ellipse=function(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise){var lastargs=this.actions[this.actions.length-1].args;var x0=lastargs[lastargs.length-2];var y0=lastargs[lastargs.length-1];this.absellipse(aX+x0,aY+y0,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise);};THREE.Path.prototype.absellipse=function(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise){var args=Array.prototype.slice.call(arguments);var curve=new THREE.EllipseCurve(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise);this.curves.push(curve);var lastPoint=curve.getPoint(1);args.push(lastPoint.x);args.push(lastPoint.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:args});};THREE.Path.prototype.getSpacedPoints=function(divisions,closedPath){if(!divisions)divisions=40;var points=[];for(var i=0;i<divisions;i++){points.push(this.getPoint(i/divisions));}return points;};THREE.Path.prototype.getPoints=function(divisions,closedPath){if(this.useSpacedPoints){console.log('tata');return this.getSpacedPoints(divisions,closedPath);}divisions=divisions||12;var points=[];var i,il,item,action,args;var cpx,cpy,cpx2,cpy2,cpx1,cpy1,cpx0,cpy0,laste,j,t,tx,ty;for(i=0,il=this.actions.length;i<il;i++){item=this.actions[i];action=item.action;args=item.args;switch(action){case THREE.PathActions.MOVE_TO:points.push(new THREE.Vector2(args[0],args[1]));break;case THREE.PathActions.LINE_TO:points.push(new THREE.Vector2(args[0],args[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:cpx=args[2];cpy=args[3];cpx1=args[0];cpy1=args[1];if(points.length>0){laste=points[points.length-1];cpx0=laste.x;cpy0=laste.y;}else{laste=this.actions[i-1].args;cpx0=laste[laste.length-2];cpy0=laste[laste.length-1];}for(j=1;j<=divisions;j++){t=j/divisions;tx=THREE.Shape.Utils.b2(t,cpx0,cpx1,cpx);ty=THREE.Shape.Utils.b2(t,cpy0,cpy1,cpy);points.push(new THREE.Vector2(tx,ty));}break;case THREE.PathActions.BEZIER_CURVE_TO:cpx=args[4];cpy=args[5];cpx1=args[0];cpy1=args[1];cpx2=args[2];cpy2=args[3];if(points.length>0){laste=points[points.length-1];cpx0=laste.x;cpy0=laste.y;}else{laste=this.actions[i-1].args;cpx0=laste[laste.length-2];cpy0=laste[laste.length-1];}for(j=1;j<=divisions;j++){t=j/divisions;tx=THREE.Shape.Utils.b3(t,cpx0,cpx1,cpx2,cpx);ty=THREE.Shape.Utils.b3(t,cpy0,cpy1,cpy2,cpy);points.push(new THREE.Vector2(tx,ty));}break;case THREE.PathActions.CSPLINE_THRU:laste=this.actions[i-1].args;var last=new THREE.Vector2(laste[laste.length-2],laste[laste.length-1]);var spts=[last];var n=divisions*args[0].length;spts=spts.concat(args[0]);var spline=new THREE.SplineCurve(spts);for(j=1;j<=n;j++){points.push(spline.getPointAt(j/n));}break;case THREE.PathActions.ARC:var aX=args[0],aY=args[1],aRadius=args[2],aStartAngle=args[3],aEndAngle=args[4],aClockwise=!!args[5];var deltaAngle=aEndAngle-aStartAngle;var angle;var tdivisions=divisions*2;for(j=1;j<=tdivisions;j++){t=j/tdivisions;if(!aClockwise){t=1-t;}angle=aStartAngle+t*deltaAngle;tx=aX+aRadius*Math.cos(angle);ty=aY+aRadius*Math.sin(angle);points.push(new THREE.Vector2(tx,ty));}break;case THREE.PathActions.ELLIPSE:var aX=args[0],aY=args[1],xRadius=args[2],yRadius=args[3],aStartAngle=args[4],aEndAngle=args[5],aClockwise=!!args[6];var deltaAngle=aEndAngle-aStartAngle;var angle;var tdivisions=divisions*2;for(j=1;j<=tdivisions;j++){t=j/tdivisions;if(!aClockwise){t=1-t;}angle=aStartAngle+t*deltaAngle;tx=aX+xRadius*Math.cos(angle);ty=aY+yRadius*Math.sin(angle);points.push(new THREE.Vector2(tx,ty));}break;}}var lastPoint=points[points.length-1];var EPSILON=0.0000000001;if(Math.abs(lastPoint.x-points[0].x)<EPSILON&&Math.abs(lastPoint.y-points[0].y)<EPSILON)points.splice(points.length-1,1);if(closedPath){points.push(points[0]);}return points;};THREE.Path.prototype.toShapes=function(isCCW){function isPointInsidePolygon(inPt,inPolygon){var EPSILON=0.0000000001;var polyLen=inPolygon.length;var inside=false;for(var p=polyLen-1,q=0;q<polyLen;p=q++){var edgeLowPt=inPolygon[p];var edgeHighPt=inPolygon[q];var edgeDx=edgeHighPt.x-edgeLowPt.x;var edgeDy=edgeHighPt.y-edgeLowPt.y;if(Math.abs(edgeDy)>EPSILON){if(edgeDy<0){edgeLowPt=inPolygon[q];edgeDx=-edgeDx;edgeHighPt=inPolygon[p];edgeDy=-edgeDy;}if(inPt.y<edgeLowPt.y||inPt.y>edgeHighPt.y)continue;if(inPt.y==edgeLowPt.y){if(inPt.x==edgeLowPt.x)return true;}else{var perpEdge=edgeDy*(inPt.x-edgeLowPt.x)-edgeDx*(inPt.y-edgeLowPt.y);if(perpEdge==0)return true;if(perpEdge<0)continue;inside=!inside;}}else{if(inPt.y!=edgeLowPt.y)continue;if(edgeHighPt.x<=inPt.x&&inPt.x<=edgeLowPt.x||edgeLowPt.x<=inPt.x&&inPt.x<=edgeHighPt.x)return true;}}return inside;}var i,il,item,action,args;var subPaths=[],lastPath=new THREE.Path();for(i=0,il=this.actions.length;i<il;i++){item=this.actions[i];args=item.args;action=item.action;if(action==THREE.PathActions.MOVE_TO){if(lastPath.actions.length!=0){subPaths.push(lastPath);lastPath=new THREE.Path();}}lastPath[action].apply(lastPath,args);}if(lastPath.actions.length!=0){subPaths.push(lastPath);}if(subPaths.length==0)return[];var solid,tmpPath,tmpShape,shapes=[];if(subPaths.length==1){tmpPath=subPaths[0];tmpShape=new THREE.Shape();tmpShape.actions=tmpPath.actions;tmpShape.curves=tmpPath.curves;shapes.push(tmpShape);return shapes;}var holesFirst=!THREE.Shape.Utils.isClockWise(subPaths[0].getPoints());holesFirst=isCCW?!holesFirst:holesFirst;var betterShapeHoles=[];var newShapes=[];var newShapeHoles=[];var mainIdx=0;var tmpPoints;newShapes[mainIdx]=undefined;newShapeHoles[mainIdx]=[];for(i=0,il=subPaths.length;i<il;i++){tmpPath=subPaths[i];tmpPoints=tmpPath.getPoints();solid=THREE.Shape.Utils.isClockWise(tmpPoints);solid=isCCW?!solid:solid;if(solid){if(!holesFirst&&newShapes[mainIdx])mainIdx++;newShapes[mainIdx]={s:new THREE.Shape(),p:tmpPoints};newShapes[mainIdx].s.actions=tmpPath.actions;newShapes[mainIdx].s.curves=tmpPath.curves;if(holesFirst)mainIdx++;newShapeHoles[mainIdx]=[];}else{newShapeHoles[mainIdx].push({h:tmpPath,p:tmpPoints[0]});}}if(newShapes.length>1){var ambigious=false;var toChange=[];for(var sIdx=0,sLen=newShapes.length;sIdx<sLen;sIdx++){betterShapeHoles[sIdx]=[];}for(var sIdx=0,sLen=newShapes.length;sIdx<sLen;sIdx++){var sh=newShapes[sIdx];var sho=newShapeHoles[sIdx];for(var hIdx=0;hIdx<sho.length;hIdx++){var ho=sho[hIdx];var hole_unassigned=true;for(var s2Idx=0;s2Idx<newShapes.length;s2Idx++){if(isPointInsidePolygon(ho.p,newShapes[s2Idx].p)){if(sIdx!=s2Idx)toChange.push({froms:sIdx,tos:s2Idx,hole:hIdx});if(hole_unassigned){hole_unassigned=false;betterShapeHoles[s2Idx].push(ho);}else{ambigious=true;}}}if(hole_unassigned){betterShapeHoles[sIdx].push(ho);}}}if(toChange.length>0){if(!ambigious)newShapeHoles=betterShapeHoles;}}var tmpHoles,j,jl;for(i=0,il=newShapes.length;i<il;i++){tmpShape=newShapes[i].s;shapes.push(tmpShape);tmpHoles=newShapeHoles[i];for(j=0,jl=tmpHoles.length;j<jl;j++){tmpShape.holes.push(tmpHoles[j].h);}}return shapes;};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[];};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(options){var extruded=new THREE.ExtrudeGeometry(this,options);return extruded;};THREE.Shape.prototype.makeGeometry=function(options){var geometry=new THREE.ShapeGeometry(this,options);return geometry;};THREE.Shape.prototype.getPointsHoles=function(divisions){var i,il=this.holes.length,holesPts=[];for(i=0;i<il;i++){holesPts[i]=this.holes[i].getTransformedPoints(divisions,this.bends);}return holesPts;};THREE.Shape.prototype.getSpacedPointsHoles=function(divisions){var i,il=this.holes.length,holesPts=[];for(i=0;i<il;i++){holesPts[i]=this.holes[i].getTransformedSpacedPoints(divisions,this.bends);}return holesPts;};THREE.Shape.prototype.extractAllPoints=function(divisions){return{shape:this.getTransformedPoints(divisions),holes:this.getPointsHoles(divisions)};};THREE.Shape.prototype.extractPoints=function(divisions){if(this.useSpacedPoints){return this.extractAllSpacedPoints(divisions);}return this.extractAllPoints(divisions);};THREE.Shape.prototype.extractAllSpacedPoints=function(divisions){return{shape:this.getTransformedSpacedPoints(divisions),holes:this.getSpacedPointsHoles(divisions)};};THREE.Shape.Utils={triangulateShape:function triangulateShape(contour,holes){function point_in_segment_2D_colin(inSegPt1,inSegPt2,inOtherPt){if(inSegPt1.x!=inSegPt2.x){if(inSegPt1.x<inSegPt2.x){return inSegPt1.x<=inOtherPt.x&&inOtherPt.x<=inSegPt2.x;}else{return inSegPt2.x<=inOtherPt.x&&inOtherPt.x<=inSegPt1.x;}}else{if(inSegPt1.y<inSegPt2.y){return inSegPt1.y<=inOtherPt.y&&inOtherPt.y<=inSegPt2.y;}else{return inSegPt2.y<=inOtherPt.y&&inOtherPt.y<=inSegPt1.y;}}}function intersect_segments_2D(inSeg1Pt1,inSeg1Pt2,inSeg2Pt1,inSeg2Pt2,inExcludeAdjacentSegs){var EPSILON=0.0000000001;var seg1dx=inSeg1Pt2.x-inSeg1Pt1.x,seg1dy=inSeg1Pt2.y-inSeg1Pt1.y;var seg2dx=inSeg2Pt2.x-inSeg2Pt1.x,seg2dy=inSeg2Pt2.y-inSeg2Pt1.y;var seg1seg2dx=inSeg1Pt1.x-inSeg2Pt1.x;var seg1seg2dy=inSeg1Pt1.y-inSeg2Pt1.y;var limit=seg1dy*seg2dx-seg1dx*seg2dy;var perpSeg1=seg1dy*seg1seg2dx-seg1dx*seg1seg2dy;if(Math.abs(limit)>EPSILON){var perpSeg2;if(limit>0){if(perpSeg1<0||perpSeg1>limit)return[];perpSeg2=seg2dy*seg1seg2dx-seg2dx*seg1seg2dy;if(perpSeg2<0||perpSeg2>limit)return[];}else{if(perpSeg1>0||perpSeg1<limit)return[];perpSeg2=seg2dy*seg1seg2dx-seg2dx*seg1seg2dy;if(perpSeg2>0||perpSeg2<limit)return[];}if(perpSeg2==0){if(inExcludeAdjacentSegs&&(perpSeg1==0||perpSeg1==limit))return[];return[inSeg1Pt1];}if(perpSeg2==limit){if(inExcludeAdjacentSegs&&(perpSeg1==0||perpSeg1==limit))return[];return[inSeg1Pt2];}if(perpSeg1==0)return[inSeg2Pt1];if(perpSeg1==limit)return[inSeg2Pt2];var factorSeg1=perpSeg2/limit;return[{x:inSeg1Pt1.x+factorSeg1*seg1dx,y:inSeg1Pt1.y+factorSeg1*seg1dy}];}else{if(perpSeg1!=0||seg2dy*seg1seg2dx!=seg2dx*seg1seg2dy)return[];var seg1Pt=seg1dx==0&&seg1dy==0;var seg2Pt=seg2dx==0&&seg2dy==0;if(seg1Pt&&seg2Pt){if(inSeg1Pt1.x!=inSeg2Pt1.x||inSeg1Pt1.y!=inSeg2Pt1.y)return[];return[inSeg1Pt1];}if(seg1Pt){if(!point_in_segment_2D_colin(inSeg2Pt1,inSeg2Pt2,inSeg1Pt1))return[];return[inSeg1Pt1];}if(seg2Pt){if(!point_in_segment_2D_colin(inSeg1Pt1,inSeg1Pt2,inSeg2Pt1))return[];return[inSeg2Pt1];}var seg1min,seg1max,seg1minVal,seg1maxVal;var seg2min,seg2max,seg2minVal,seg2maxVal;if(seg1dx!=0){if(inSeg1Pt1.x<inSeg1Pt2.x){seg1min=inSeg1Pt1;seg1minVal=inSeg1Pt1.x;seg1max=inSeg1Pt2;seg1maxVal=inSeg1Pt2.x;}else{seg1min=inSeg1Pt2;seg1minVal=inSeg1Pt2.x;seg1max=inSeg1Pt1;seg1maxVal=inSeg1Pt1.x;}if(inSeg2Pt1.x<inSeg2Pt2.x){seg2min=inSeg2Pt1;seg2minVal=inSeg2Pt1.x;seg2max=inSeg2Pt2;seg2maxVal=inSeg2Pt2.x;}else{seg2min=inSeg2Pt2;seg2minVal=inSeg2Pt2.x;seg2max=inSeg2Pt1;seg2maxVal=inSeg2Pt1.x;}}else{if(inSeg1Pt1.y<inSeg1Pt2.y){seg1min=inSeg1Pt1;seg1minVal=inSeg1Pt1.y;seg1max=inSeg1Pt2;seg1maxVal=inSeg1Pt2.y;}else{seg1min=inSeg1Pt2;seg1minVal=inSeg1Pt2.y;seg1max=inSeg1Pt1;seg1maxVal=inSeg1Pt1.y;}if(inSeg2Pt1.y<inSeg2Pt2.y){seg2min=inSeg2Pt1;seg2minVal=inSeg2Pt1.y;seg2max=inSeg2Pt2;seg2maxVal=inSeg2Pt2.y;}else{seg2min=inSeg2Pt2;seg2minVal=inSeg2Pt2.y;seg2max=inSeg2Pt1;seg2maxVal=inSeg2Pt1.y;}}if(seg1minVal<=seg2minVal){if(seg1maxVal<seg2minVal)return[];if(seg1maxVal==seg2minVal){if(inExcludeAdjacentSegs)return[];return[seg2min];}if(seg1maxVal<=seg2maxVal)return[seg2min,seg1max];return[seg2min,seg2max];}else{if(seg1minVal>seg2maxVal)return[];if(seg1minVal==seg2maxVal){if(inExcludeAdjacentSegs)return[];return[seg1min];}if(seg1maxVal<=seg2maxVal)return[seg1min,seg1max];return[seg1min,seg2max];}}}function isPointInsideAngle(inVertex,inLegFromPt,inLegToPt,inOtherPt){var EPSILON=0.0000000001;var legFromPtX=inLegFromPt.x-inVertex.x,legFromPtY=inLegFromPt.y-inVertex.y;var legToPtX=inLegToPt.x-inVertex.x,legToPtY=inLegToPt.y-inVertex.y;var otherPtX=inOtherPt.x-inVertex.x,otherPtY=inOtherPt.y-inVertex.y;var from2toAngle=legFromPtX*legToPtY-legFromPtY*legToPtX;var from2otherAngle=legFromPtX*otherPtY-legFromPtY*otherPtX;if(Math.abs(from2toAngle)>EPSILON){var other2toAngle=otherPtX*legToPtY-otherPtY*legToPtX;if(from2toAngle>0){return from2otherAngle>=0&&other2toAngle>=0;}else{return from2otherAngle>=0||other2toAngle>=0;}}else{return from2otherAngle>0;}}function removeHoles(contour,holes){var shape=contour.concat();var hole;function isCutLineInsideAngles(inShapeIdx,inHoleIdx){var lastShapeIdx=shape.length-1;var prevShapeIdx=inShapeIdx-1;if(prevShapeIdx<0)prevShapeIdx=lastShapeIdx;var nextShapeIdx=inShapeIdx+1;if(nextShapeIdx>lastShapeIdx)nextShapeIdx=0;var insideAngle=isPointInsideAngle(shape[inShapeIdx],shape[prevShapeIdx],shape[nextShapeIdx],hole[inHoleIdx]);if(!insideAngle){return false;}var lastHoleIdx=hole.length-1;var prevHoleIdx=inHoleIdx-1;if(prevHoleIdx<0)prevHoleIdx=lastHoleIdx;var nextHoleIdx=inHoleIdx+1;if(nextHoleIdx>lastHoleIdx)nextHoleIdx=0;insideAngle=isPointInsideAngle(hole[inHoleIdx],hole[prevHoleIdx],hole[nextHoleIdx],shape[inShapeIdx]);if(!insideAngle){return false;}return true;}function intersectsShapeEdge(inShapePt,inHolePt){var sIdx,nextIdx,intersection;for(sIdx=0;sIdx<shape.length;sIdx++){nextIdx=sIdx+1;nextIdx%=shape.length;intersection=intersect_segments_2D(inShapePt,inHolePt,shape[sIdx],shape[nextIdx],true);if(intersection.length>0)return true;}return false;}var indepHoles=[];function intersectsHoleEdge(inShapePt,inHolePt){var ihIdx,chkHole,hIdx,nextIdx,intersection;for(ihIdx=0;ihIdx<indepHoles.length;ihIdx++){chkHole=holes[indepHoles[ihIdx]];for(hIdx=0;hIdx<chkHole.length;hIdx++){nextIdx=hIdx+1;nextIdx%=chkHole.length;intersection=intersect_segments_2D(inShapePt,inHolePt,chkHole[hIdx],chkHole[nextIdx],true);if(intersection.length>0)return true;}}return false;}var holeIndex,shapeIndex,shapePt,holePt,holeIdx,cutKey,failedCuts=[],tmpShape1,tmpShape2,tmpHole1,tmpHole2;for(var h=0,hl=holes.length;h<hl;h++){indepHoles.push(h);}var counter=indepHoles.length*2;while(indepHoles.length>0){counter--;if(counter<0){console.log(\"Infinite Loop! Holes left:\"+indepHoles.length+\", Probably Hole outside Shape!\");break;}for(shapeIndex=0;shapeIndex<shape.length;shapeIndex++){shapePt=shape[shapeIndex];holeIndex=-1;for(var h=0;h<indepHoles.length;h++){holeIdx=indepHoles[h];cutKey=shapePt.x+\":\"+shapePt.y+\":\"+holeIdx;if(failedCuts[cutKey]!==undefined)continue;hole=holes[holeIdx];for(var h2=0;h2<hole.length;h2++){holePt=hole[h2];if(!isCutLineInsideAngles(shapeIndex,h2))continue;if(intersectsShapeEdge(shapePt,holePt))continue;if(intersectsHoleEdge(shapePt,holePt))continue;holeIndex=h2;indepHoles.splice(h,1);tmpShape1=shape.slice(0,shapeIndex+1);tmpShape2=shape.slice(shapeIndex);tmpHole1=hole.slice(holeIndex);tmpHole2=hole.slice(0,holeIndex+1);shape=tmpShape1.concat(tmpHole1).concat(tmpHole2).concat(tmpShape2);break;}if(holeIndex>=0)break;failedCuts[cutKey]=true;}if(holeIndex>=0)break;}}return shape;}var i,il,f,face,key,index,allPointsMap={};var allpoints=contour.concat();for(var h=0,hl=holes.length;h<hl;h++){Array.prototype.push.apply(allpoints,holes[h]);}for(i=0,il=allpoints.length;i<il;i++){key=allpoints[i].x+\":\"+allpoints[i].y;if(allPointsMap[key]!==undefined){console.log(\"Duplicate point\",key);}allPointsMap[key]=i;}var shapeWithoutHoles=removeHoles(contour,holes);var triangles=THREE.FontUtils.Triangulate(shapeWithoutHoles,false);for(i=0,il=triangles.length;i<il;i++){face=triangles[i];for(f=0;f<3;f++){key=face[f].x+\":\"+face[f].y;index=allPointsMap[key];if(index!==undefined){face[f]=index;}}}return triangles.concat();},isClockWise:function isClockWise(pts){return THREE.FontUtils.Triangulate.area(pts)<0;},b2p0:function b2p0(t,p){var k=1-t;return k*k*p;},b2p1:function b2p1(t,p){return 2*(1-t)*t*p;},b2p2:function b2p2(t,p){return t*t*p;},b2:function b2(t,p0,p1,p2){return this.b2p0(t,p0)+this.b2p1(t,p1)+this.b2p2(t,p2);},b3p0:function b3p0(t,p){var k=1-t;return k*k*k*p;},b3p1:function b3p1(t,p){var k=1-t;return 3*k*k*t*p;},b3p2:function b3p2(t,p){var k=1-t;return 3*k*t*t*p;},b3p3:function b3p3(t,p){return t*t*t*p;},b3:function b3(t,p0,p1,p2,p3){return this.b3p0(t,p0)+this.b3p1(t,p1)+this.b3p2(t,p2)+this.b3p3(t,p3);}};THREE.LineCurve=function(v1,v2){this.v1=v1;this.v2=v2;};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(t){var point=this.v2.clone().sub(this.v1);point.multiplyScalar(t).add(this.v1);return point;};THREE.LineCurve.prototype.getPointAt=function(u){return this.getPoint(u);};THREE.LineCurve.prototype.getTangent=function(t){var tangent=this.v2.clone().sub(this.v1);return tangent.normalize();};THREE.QuadraticBezierCurve=function(v0,v1,v2){this.v0=v0;this.v1=v1;this.v2=v2;};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(t){var tx,ty;tx=THREE.Shape.Utils.b2(t,this.v0.x,this.v1.x,this.v2.x);ty=THREE.Shape.Utils.b2(t,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(tx,ty);};THREE.QuadraticBezierCurve.prototype.getTangent=function(t){var tx,ty;tx=THREE.Curve.Utils.tangentQuadraticBezier(t,this.v0.x,this.v1.x,this.v2.x);ty=THREE.Curve.Utils.tangentQuadraticBezier(t,this.v0.y,this.v1.y,this.v2.y);var tangent=new THREE.Vector2(tx,ty);tangent.normalize();return tangent;};THREE.CubicBezierCurve=function(v0,v1,v2,v3){this.v0=v0;this.v1=v1;this.v2=v2;this.v3=v3;};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.getPoint=function(t){var tx,ty;tx=THREE.Shape.Utils.b3(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x);ty=THREE.Shape.Utils.b3(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(tx,ty);};THREE.CubicBezierCurve.prototype.getTangent=function(t){var tx,ty;tx=THREE.Curve.Utils.tangentCubicBezier(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x);ty=THREE.Curve.Utils.tangentCubicBezier(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var tangent=new THREE.Vector2(tx,ty);tangent.normalize();return tangent;};THREE.SplineCurve=function(points){this.points=points==undefined?[]:points;};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(t){var v=new THREE.Vector2();var c=[];var points=this.points,point,intPoint,weight;point=(points.length-1)*t;intPoint=Math.floor(point);weight=point-intPoint;c[0]=intPoint==0?intPoint:intPoint-1;c[1]=intPoint;c[2]=intPoint>points.length-2?points.length-1:intPoint+1;c[3]=intPoint>points.length-3?points.length-1:intPoint+2;v.x=THREE.Curve.Utils.interpolate(points[c[0]].x,points[c[1]].x,points[c[2]].x,points[c[3]].x,weight);v.y=THREE.Curve.Utils.interpolate(points[c[0]].y,points[c[1]].y,points[c[2]].y,points[c[3]].y,weight);return v;};THREE.EllipseCurve=function(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise){this.aX=aX;this.aY=aY;this.xRadius=xRadius;this.yRadius=yRadius;this.aStartAngle=aStartAngle;this.aEndAngle=aEndAngle;this.aClockwise=aClockwise;};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(t){var angle;var deltaAngle=this.aEndAngle-this.aStartAngle;if(deltaAngle<0)deltaAngle+=Math.PI*2;if(deltaAngle>Math.PI*2)deltaAngle-=Math.PI*2;if(this.aClockwise===true){angle=this.aEndAngle+(1-t)*(Math.PI*2-deltaAngle);}else{angle=this.aStartAngle+t*deltaAngle;}var tx=this.aX+this.xRadius*Math.cos(angle);var ty=this.aY+this.yRadius*Math.sin(angle);return new THREE.Vector2(tx,ty);};THREE.ArcCurve=function(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){THREE.EllipseCurve.call(this,aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise);};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.LineCurve3=THREE.Curve.create(function(v1,v2){this.v1=v1;this.v2=v2;},function(t){var r=new THREE.Vector3();r.subVectors(this.v2,this.v1);r.multiplyScalar(t);r.add(this.v1);return r;});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(v0,v1,v2){this.v0=v0;this.v1=v1;this.v2=v2;},function(t){var tx,ty,tz;tx=THREE.Shape.Utils.b2(t,this.v0.x,this.v1.x,this.v2.x);ty=THREE.Shape.Utils.b2(t,this.v0.y,this.v1.y,this.v2.y);tz=THREE.Shape.Utils.b2(t,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(tx,ty,tz);});THREE.CubicBezierCurve3=THREE.Curve.create(function(v0,v1,v2,v3){this.v0=v0;this.v1=v1;this.v2=v2;this.v3=v3;},function(t){var tx,ty,tz;tx=THREE.Shape.Utils.b3(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x);ty=THREE.Shape.Utils.b3(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y);tz=THREE.Shape.Utils.b3(t,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(tx,ty,tz);});THREE.SplineCurve3=THREE.Curve.create(function(points){this.points=points==undefined?[]:points;},function(t){var v=new THREE.Vector3();var c=[];var points=this.points,point,intPoint,weight;point=(points.length-1)*t;intPoint=Math.floor(point);weight=point-intPoint;c[0]=intPoint==0?intPoint:intPoint-1;c[1]=intPoint;c[2]=intPoint>points.length-2?points.length-1:intPoint+1;c[3]=intPoint>points.length-3?points.length-1:intPoint+2;var pt0=points[c[0]],pt1=points[c[1]],pt2=points[c[2]],pt3=points[c[3]];v.x=THREE.Curve.Utils.interpolate(pt0.x,pt1.x,pt2.x,pt3.x,weight);v.y=THREE.Curve.Utils.interpolate(pt0.y,pt1.y,pt2.y,pt3.y,weight);v.z=THREE.Curve.Utils.interpolate(pt0.z,pt1.z,pt2.z,pt3.z,weight);return v;});THREE.ClosedSplineCurve3=THREE.Curve.create(function(points){this.points=points==undefined?[]:points;},function(t){var v=new THREE.Vector3();var c=[];var points=this.points,point,intPoint,weight;point=(points.length-0)*t;intPoint=Math.floor(point);weight=point-intPoint;intPoint+=intPoint>0?0:(Math.floor(Math.abs(intPoint)/points.length)+1)*points.length;c[0]=(intPoint-1)%points.length;c[1]=intPoint%points.length;c[2]=(intPoint+1)%points.length;c[3]=(intPoint+2)%points.length;v.x=THREE.Curve.Utils.interpolate(points[c[0]].x,points[c[1]].x,points[c[2]].x,points[c[3]].x,weight);v.y=THREE.Curve.Utils.interpolate(points[c[0]].y,points[c[1]].y,points[c[2]].y,points[c[3]].y,weight);v.z=THREE.Curve.Utils.interpolate(points[c[0]].z,points[c[1]].z,points[c[2]].z,points[c[3]].z,weight);return v;});THREE.AnimationHandler=function(){var playing=[];var library={};var that={};that.update=function(deltaTimeMS){for(var i=0;i<playing.length;i++){playing[i].update(deltaTimeMS);}};that.addToUpdate=function(animation){if(playing.indexOf(animation)===-1)playing.push(animation);};that.removeFromUpdate=function(animation){var index=playing.indexOf(animation);if(index!==-1)playing.splice(index,1);};that.add=function(data){if(library[data.name]!==undefined)THREE.onwarning(\"THREE.AnimationHandler.add: Warning! \"+data.name+\" already exists in library. Overwriting.\");library[data.name]=data;initData(data);};that.get=function(name){if(typeof name===\"string\"){if(library[name]){return library[name];}else{THREE.onwarning(\"THREE.AnimationHandler.get: Couldn't find animation \"+name);return null;}}else{}};that.parse=function(root){var hierarchy=[];if(root instanceof THREE.SkinnedMesh){for(var b=0;b<root.bones.length;b++){hierarchy.push(root.bones[b]);}}else{parseRecurseHierarchy(root,hierarchy);}return hierarchy;};var parseRecurseHierarchy=function parseRecurseHierarchy(root,hierarchy){hierarchy.push(root);for(var c=0;c<root.children.length;c++){parseRecurseHierarchy(root.children[c],hierarchy);}};var initData=function initData(data){if(data.initialized===true)return;for(var h=0;h<data.hierarchy.length;h++){for(var k=0;k<data.hierarchy[h].keys.length;k++){if(data.hierarchy[h].keys[k].time<0)data.hierarchy[h].keys[k].time=0;if(data.hierarchy[h].keys[k].rot!==undefined&&!(data.hierarchy[h].keys[k].rot instanceof THREE.Quaternion)){var quat=data.hierarchy[h].keys[k].rot;data.hierarchy[h].keys[k].rot=new THREE.Quaternion(quat[0],quat[1],quat[2],quat[3]);}}if(data.hierarchy[h].keys.length&&data.hierarchy[h].keys[0].morphTargets!==undefined){var usedMorphTargets={};for(var k=0;k<data.hierarchy[h].keys.length;k++){for(var m=0;m<data.hierarchy[h].keys[k].morphTargets.length;m++){var morphTargetName=data.hierarchy[h].keys[k].morphTargets[m];usedMorphTargets[morphTargetName]=-1;}}data.hierarchy[h].usedMorphTargets=usedMorphTargets;for(var k=0;k<data.hierarchy[h].keys.length;k++){var influences={};for(var morphTargetName in usedMorphTargets){for(var m=0;m<data.hierarchy[h].keys[k].morphTargets.length;m++){if(data.hierarchy[h].keys[k].morphTargets[m]===morphTargetName){influences[morphTargetName]=data.hierarchy[h].keys[k].morphTargetsInfluences[m];break;}}if(m===data.hierarchy[h].keys[k].morphTargets.length){influences[morphTargetName]=0;}}data.hierarchy[h].keys[k].morphTargetsInfluences=influences;}}for(var k=1;k<data.hierarchy[h].keys.length;k++){if(data.hierarchy[h].keys[k].time===data.hierarchy[h].keys[k-1].time){data.hierarchy[h].keys.splice(k,1);k--;}}for(var k=0;k<data.hierarchy[h].keys.length;k++){data.hierarchy[h].keys[k].index=k;}}data.initialized=true;};that.LINEAR=0;that.CATMULLROM=1;that.CATMULLROM_FORWARD=2;return that;}();THREE.Animation=function(root,name){this.root=root;this.data=THREE.AnimationHandler.get(name);this.hierarchy=THREE.AnimationHandler.parse(root);this.currentTime=0;this.timeScale=1;this.isPlaying=false;this.isPaused=true;this.loop=true;this.interpolationType=THREE.AnimationHandler.LINEAR;};THREE.Animation.prototype.play=function(startTime){this.currentTime=startTime!==undefined?startTime:0;if(this.isPlaying===false){this.isPlaying=true;this.reset();this.update(0);}this.isPaused=false;THREE.AnimationHandler.addToUpdate(this);};THREE.Animation.prototype.pause=function(){if(this.isPaused===true){THREE.AnimationHandler.addToUpdate(this);}else{THREE.AnimationHandler.removeFromUpdate(this);}this.isPaused=!this.isPaused;};THREE.Animation.prototype.stop=function(){this.isPlaying=false;this.isPaused=false;THREE.AnimationHandler.removeFromUpdate(this);};THREE.Animation.prototype.reset=function(){for(var h=0,hl=this.hierarchy.length;h<hl;h++){var object=this.hierarchy[h];object.matrixAutoUpdate=true;if(object.animationCache===undefined){object.animationCache={};object.animationCache.prevKey={pos:0,rot:0,scl:0};object.animationCache.nextKey={pos:0,rot:0,scl:0};object.animationCache.originalMatrix=object instanceof THREE.Bone?object.skinMatrix:object.matrix;}var prevKey=object.animationCache.prevKey;var nextKey=object.animationCache.nextKey;prevKey.pos=this.data.hierarchy[h].keys[0];prevKey.rot=this.data.hierarchy[h].keys[0];prevKey.scl=this.data.hierarchy[h].keys[0];nextKey.pos=this.getNextKeyWith(\"pos\",h,1);nextKey.rot=this.getNextKeyWith(\"rot\",h,1);nextKey.scl=this.getNextKeyWith(\"scl\",h,1);}};THREE.Animation.prototype.update=function(){var points=[];var target=new THREE.Vector3();var interpolateCatmullRom=function interpolateCatmullRom(points,scale){var c=[],v3=[],point,intPoint,weight,w2,w3,pa,pb,pc,pd;point=(points.length-1)*scale;intPoint=Math.floor(point);weight=point-intPoint;c[0]=intPoint===0?intPoint:intPoint-1;c[1]=intPoint;c[2]=intPoint>points.length-2?intPoint:intPoint+1;c[3]=intPoint>points.length-3?intPoint:intPoint+2;pa=points[c[0]];pb=points[c[1]];pc=points[c[2]];pd=points[c[3]];w2=weight*weight;w3=weight*w2;v3[0]=interpolate(pa[0],pb[0],pc[0],pd[0],weight,w2,w3);v3[1]=interpolate(pa[1],pb[1],pc[1],pd[1],weight,w2,w3);v3[2]=interpolate(pa[2],pb[2],pc[2],pd[2],weight,w2,w3);return v3;};var interpolate=function interpolate(p0,p1,p2,p3,t,t2,t3){var v0=(p2-p0)*0.5,v1=(p3-p1)*0.5;return(2*(p1-p2)+v0+v1)*t3+(-3*(p1-p2)-2*v0-v1)*t2+v0*t+p1;};return function(delta){if(this.isPlaying===false)return;this.currentTime+=delta*this.timeScale;var vector;var types=[\"pos\",\"rot\",\"scl\"];var duration=this.data.length;if(this.loop===true&&this.currentTime>duration){this.currentTime%=duration;this.reset();}else if(this.loop===false&&this.currentTime>duration){this.stop();return;}this.currentTime=Math.min(this.currentTime,duration);for(var h=0,hl=this.hierarchy.length;h<hl;h++){var object=this.hierarchy[h];var animationCache=object.animationCache;for(var t=0;t<3;t++){var type=types[t];var prevKey=animationCache.prevKey[type];var nextKey=animationCache.nextKey[type];if(nextKey.time<=this.currentTime){prevKey=this.data.hierarchy[h].keys[0];nextKey=this.getNextKeyWith(type,h,1);while(nextKey.time<this.currentTime&&nextKey.index>prevKey.index){prevKey=nextKey;nextKey=this.getNextKeyWith(type,h,nextKey.index+1);}animationCache.prevKey[type]=prevKey;animationCache.nextKey[type]=nextKey;}object.matrixAutoUpdate=true;object.matrixWorldNeedsUpdate=true;var scale=(this.currentTime-prevKey.time)/(nextKey.time-prevKey.time);var prevXYZ=prevKey[type];var nextXYZ=nextKey[type];if(scale<0)scale=0;if(scale>1)scale=1;if(type===\"pos\"){vector=object.position;if(this.interpolationType===THREE.AnimationHandler.LINEAR){vector.x=prevXYZ[0]+(nextXYZ[0]-prevXYZ[0])*scale;vector.y=prevXYZ[1]+(nextXYZ[1]-prevXYZ[1])*scale;vector.z=prevXYZ[2]+(nextXYZ[2]-prevXYZ[2])*scale;}else if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){points[0]=this.getPrevKeyWith(\"pos\",h,prevKey.index-1)[\"pos\"];points[1]=prevXYZ;points[2]=nextXYZ;points[3]=this.getNextKeyWith(\"pos\",h,nextKey.index+1)[\"pos\"];scale=scale*0.33+0.33;var currentPoint=interpolateCatmullRom(points,scale);vector.x=currentPoint[0];vector.y=currentPoint[1];vector.z=currentPoint[2];if(this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){var forwardPoint=interpolateCatmullRom(points,scale*1.01);target.set(forwardPoint[0],forwardPoint[1],forwardPoint[2]);target.sub(vector);target.y=0;target.normalize();var angle=Math.atan2(target.x,target.z);object.rotation.set(0,angle,0);}}}else if(type===\"rot\"){THREE.Quaternion.slerp(prevXYZ,nextXYZ,object.quaternion,scale);}else if(type===\"scl\"){vector=object.scale;vector.x=prevXYZ[0]+(nextXYZ[0]-prevXYZ[0])*scale;vector.y=prevXYZ[1]+(nextXYZ[1]-prevXYZ[1])*scale;vector.z=prevXYZ[2]+(nextXYZ[2]-prevXYZ[2])*scale;}}}};}();THREE.Animation.prototype.getNextKeyWith=function(type,h,key){var keys=this.data.hierarchy[h].keys;if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){key=key<keys.length-1?key:keys.length-1;}else{key=key%keys.length;}for(;key<keys.length;key++){if(keys[key][type]!==undefined){return keys[key];}}return this.data.hierarchy[h].keys[0];};THREE.Animation.prototype.getPrevKeyWith=function(type,h,key){var keys=this.data.hierarchy[h].keys;if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){key=key>0?key:0;}else{key=key>=0?key:key+keys.length;}for(;key>=0;key--){if(keys[key][type]!==undefined){return keys[key];}}return this.data.hierarchy[h].keys[keys.length-1];};THREE.KeyFrameAnimation=function(root,data){this.root=root;this.data=THREE.AnimationHandler.get(data);this.hierarchy=THREE.AnimationHandler.parse(root);this.currentTime=0;this.timeScale=0.001;this.isPlaying=false;this.isPaused=true;this.loop=true;for(var h=0,hl=this.hierarchy.length;h<hl;h++){var keys=this.data.hierarchy[h].keys,sids=this.data.hierarchy[h].sids,obj=this.hierarchy[h];if(keys.length&&sids){for(var s=0;s<sids.length;s++){var sid=sids[s],next=this.getNextKeyWith(sid,h,0);if(next){next.apply(sid);}}obj.matrixAutoUpdate=false;this.data.hierarchy[h].node.updateMatrix();obj.matrixWorldNeedsUpdate=true;}}};THREE.KeyFrameAnimation.prototype.play=function(startTime){this.currentTime=startTime!==undefined?startTime:0;if(this.isPlaying===false){this.isPlaying=true;var h,hl=this.hierarchy.length,object,node;for(h=0;h<hl;h++){object=this.hierarchy[h];node=this.data.hierarchy[h];if(node.animationCache===undefined){node.animationCache={};node.animationCache.prevKey=null;node.animationCache.nextKey=null;node.animationCache.originalMatrix=object instanceof THREE.Bone?object.skinMatrix:object.matrix;}var keys=this.data.hierarchy[h].keys;if(keys.length){node.animationCache.prevKey=keys[0];node.animationCache.nextKey=keys[1];this.startTime=Math.min(keys[0].time,this.startTime);this.endTime=Math.max(keys[keys.length-1].time,this.endTime);}}this.update(0);}this.isPaused=false;THREE.AnimationHandler.addToUpdate(this);};THREE.KeyFrameAnimation.prototype.pause=function(){if(this.isPaused){THREE.AnimationHandler.addToUpdate(this);}else{THREE.AnimationHandler.removeFromUpdate(this);}this.isPaused=!this.isPaused;};THREE.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=false;this.isPaused=false;THREE.AnimationHandler.removeFromUpdate(this);for(var h=0;h<this.data.hierarchy.length;h++){var obj=this.hierarchy[h];var node=this.data.hierarchy[h];if(node.animationCache!==undefined){var original=node.animationCache.originalMatrix;if(obj instanceof THREE.Bone){original.copy(obj.skinMatrix);obj.skinMatrix=original;}else{original.copy(obj.matrix);obj.matrix=original;}delete node.animationCache;}}};THREE.KeyFrameAnimation.prototype.update=function(delta){if(this.isPlaying===false)return;this.currentTime+=delta*this.timeScale;var duration=this.data.length;if(this.loop===true&&this.currentTime>duration){this.currentTime%=duration;}this.currentTime=Math.min(this.currentTime,duration);for(var h=0,hl=this.hierarchy.length;h<hl;h++){var object=this.hierarchy[h];var node=this.data.hierarchy[h];var keys=node.keys,animationCache=node.animationCache;if(keys.length){var prevKey=animationCache.prevKey;var nextKey=animationCache.nextKey;if(nextKey.time<=this.currentTime){while(nextKey.time<this.currentTime&&nextKey.index>prevKey.index){prevKey=nextKey;nextKey=keys[prevKey.index+1];}animationCache.prevKey=prevKey;animationCache.nextKey=nextKey;}if(nextKey.time>=this.currentTime){prevKey.interpolate(nextKey,this.currentTime);}else{prevKey.interpolate(nextKey,nextKey.time);}this.data.hierarchy[h].node.updateMatrix();object.matrixWorldNeedsUpdate=true;}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(sid,h,key){var keys=this.data.hierarchy[h].keys;key=key%keys.length;for(;key<keys.length;key++){if(keys[key].hasTarget(sid)){return keys[key];}}return keys[0];};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(sid,h,key){var keys=this.data.hierarchy[h].keys;key=key>=0?key:key+keys.length;for(;key>=0;key--){if(keys[key].hasTarget(sid)){return keys[key];}}return keys[keys.length-1];};THREE.MorphAnimation=function(mesh){this.mesh=mesh;this.frames=mesh.morphTargetInfluences.length;this.currentTime=0;this.duration=1000;this.loop=true;this.isPlaying=false;};THREE.MorphAnimation.prototype={play:function play(){this.isPlaying=true;},pause:function pause(){this.isPlaying=false;},update:function(){var lastFrame=0;var currentFrame=0;return function(delta){if(this.isPlaying===false)return;this.currentTime+=delta;if(this.loop===true&&this.currentTime>this.duration){this.currentTime%=this.duration;}this.currentTime=Math.min(this.currentTime,this.duration);var interpolation=this.duration/this.frames;var frame=Math.floor(this.currentTime/interpolation);if(frame!=currentFrame){this.mesh.morphTargetInfluences[lastFrame]=0;this.mesh.morphTargetInfluences[currentFrame]=1;this.mesh.morphTargetInfluences[frame]=0;lastFrame=currentFrame;currentFrame=frame;}this.mesh.morphTargetInfluences[frame]=this.currentTime%interpolation/interpolation;this.mesh.morphTargetInfluences[lastFrame]=1-this.mesh.morphTargetInfluences[frame];};}()};THREE.CubeCamera=function(near,far,cubeResolution){THREE.Object3D.call(this);this.className=\"CubeCamera\";var fov=90,aspect=1;var cameraPX=new THREE.PerspectiveCamera(fov,aspect,near,far);cameraPX.up.set(0,-1,0);cameraPX.lookAt(new THREE.Vector3(1,0,0));this.add(cameraPX);var cameraNX=new THREE.PerspectiveCamera(fov,aspect,near,far);cameraNX.up.set(0,-1,0);cameraNX.lookAt(new THREE.Vector3(-1,0,0));this.add(cameraNX);var cameraPY=new THREE.PerspectiveCamera(fov,aspect,near,far);cameraPY.up.set(0,0,1);cameraPY.lookAt(new THREE.Vector3(0,1,0));this.add(cameraPY);var cameraNY=new THREE.PerspectiveCamera(fov,aspect,near,far);cameraNY.up.set(0,0,-1);cameraNY.lookAt(new THREE.Vector3(0,-1,0));this.add(cameraNY);var cameraPZ=new THREE.PerspectiveCamera(fov,aspect,near,far);cameraPZ.up.set(0,-1,0);cameraPZ.lookAt(new THREE.Vector3(0,0,1));this.add(cameraPZ);var cameraNZ=new THREE.PerspectiveCamera(fov,aspect,near,far);cameraNZ.up.set(0,-1,0);cameraNZ.lookAt(new THREE.Vector3(0,0,-1));this.add(cameraNZ);this.renderTarget=new THREE.WebGLRenderTargetCube(cubeResolution,cubeResolution,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(renderer,scene){var renderTarget=this.renderTarget;var generateMipmaps=renderTarget.generateMipmaps;renderTarget.generateMipmaps=false;renderTarget.activeCubeFace=0;renderer.render(scene,cameraPX,renderTarget);renderTarget.activeCubeFace=1;renderer.render(scene,cameraNX,renderTarget);renderTarget.activeCubeFace=2;renderer.render(scene,cameraPY,renderTarget);renderTarget.activeCubeFace=3;renderer.render(scene,cameraNY,renderTarget);renderTarget.activeCubeFace=4;renderer.render(scene,cameraPZ,renderTarget);renderTarget.generateMipmaps=generateMipmaps;renderTarget.activeCubeFace=5;renderer.render(scene,cameraNZ,renderTarget);};};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(width,height,fov,near,far,orthoNear,orthoFar){THREE.Camera.call(this);this.className=\"CombinedCamera\";this.fov=fov;this.left=-width/2;this.right=width/2;this.top=height/2;this.bottom=-height/2;this.cameraO=new THREE.OrthographicCamera(width/-2,width/2,height/2,height/-2,orthoNear,orthoFar);this.cameraP=new THREE.PerspectiveCamera(fov,width/height,near,far);this.zoom=1;this.toPerspective();var aspect=width/height;};THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=true;this.inOrthographicMode=false;};THREE.CombinedCamera.prototype.toOrthographic=function(){var fov=this.fov;var aspect=this.cameraP.aspect;var near=this.cameraP.near;var far=this.cameraP.far;var hyperfocus=(near+far)/2;var halfHeight=Math.tan(fov/2)*hyperfocus;var planeHeight=2*halfHeight;var planeWidth=planeHeight*aspect;var halfWidth=planeWidth/2;halfHeight/=this.zoom;halfWidth/=this.zoom;this.cameraO.left=-halfWidth;this.cameraO.right=halfWidth;this.cameraO.top=halfHeight;this.cameraO.bottom=-halfHeight;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=false;this.inOrthographicMode=true;};THREE.CombinedCamera.prototype.setSize=function(width,height){this.cameraP.aspect=width/height;this.left=-width/2;this.right=width/2;this.top=height/2;this.bottom=-height/2;};THREE.CombinedCamera.prototype.setFov=function(fov){this.fov=fov;if(this.inPerspectiveMode){this.toPerspective();}else{this.toOrthographic();}};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){if(this.inPerspectiveMode){this.toPerspective();}else{this.toPerspective();this.toOrthographic();}};THREE.CombinedCamera.prototype.setLens=function(focalLength,frameHeight){if(frameHeight===undefined)frameHeight=24;var fov=2*THREE.Math.radToDeg(Math.atan(frameHeight/(focalLength*2)));this.setFov(fov);return fov;};THREE.CombinedCamera.prototype.setZoom=function(zoom){this.zoom=zoom;if(this.inPerspectiveMode){this.toPerspective();}else{this.toOrthographic();}};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false;};THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=false;};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=false;};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=false;};THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false;};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false;};THREE.BoxGeometry=function(width,height,depth,widthSegments,heightSegments,depthSegments){THREE.Geometry.call(this);this.className=\"BoxGeometry\";var scope=this;this.width=width;this.height=height;this.depth=depth;this.widthSegments=widthSegments||1;this.heightSegments=heightSegments||1;this.depthSegments=depthSegments||1;var width_half=this.width/2;var height_half=this.height/2;var depth_half=this.depth/2;buildPlane('z','y',-1,-1,this.depth,this.height,width_half,0);buildPlane('z','y',1,-1,this.depth,this.height,-width_half,1);buildPlane('x','z',1,1,this.width,this.depth,height_half,2);buildPlane('x','z',1,-1,this.width,this.depth,-height_half,3);buildPlane('x','y',1,-1,this.width,this.height,depth_half,4);buildPlane('x','y',-1,-1,this.width,this.height,-depth_half,5);function buildPlane(u,v,udir,vdir,width,height,depth,materialIndex){var w,ix,iy,gridX=scope.widthSegments,gridY=scope.heightSegments,width_half=width/2,height_half=height/2,offset=scope.vertices.length;if(u==='x'&&v==='y'||u==='y'&&v==='x'){w='z';}else if(u==='x'&&v==='z'||u==='z'&&v==='x'){w='y';gridY=scope.depthSegments;}else if(u==='z'&&v==='y'||u==='y'&&v==='z'){w='x';gridX=scope.depthSegments;}var gridX1=gridX+1,gridY1=gridY+1,segment_width=width/gridX,segment_height=height/gridY,normal=new THREE.Vector3();normal[w]=depth>0?1:-1;for(iy=0;iy<gridY1;iy++){for(ix=0;ix<gridX1;ix++){var vector=new THREE.Vector3();vector[u]=(ix*segment_width-width_half)*udir;vector[v]=(iy*segment_height-height_half)*vdir;vector[w]=depth;scope.vertices.push(vector);}}for(iy=0;iy<gridY;iy++){for(ix=0;ix<gridX;ix++){var a=ix+gridX1*iy;var b=ix+gridX1*(iy+1);var c=ix+1+gridX1*(iy+1);var d=ix+1+gridX1*iy;var uva=new THREE.Vector2(ix/gridX,1-iy/gridY);var uvb=new THREE.Vector2(ix/gridX,1-(iy+1)/gridY);var uvc=new THREE.Vector2((ix+1)/gridX,1-(iy+1)/gridY);var uvd=new THREE.Vector2((ix+1)/gridX,1-iy/gridY);var face=new THREE.Face3(a+offset,b+offset,d+offset);face.normal.copy(normal);face.vertexNormals.push(normal.clone(),normal.clone(),normal.clone());face.materialIndex=materialIndex;scope.faces.push(face);scope.faceVertexUvs[0].push([uva,uvb,uvd]);face=new THREE.Face3(b+offset,c+offset,d+offset);face.normal.copy(normal);face.vertexNormals.push(normal.clone(),normal.clone(),normal.clone());face.materialIndex=materialIndex;scope.faces.push(face);scope.faceVertexUvs[0].push([uvb.clone(),uvc,uvd.clone()]);}}}this.computeCentroids();this.mergeVertices();};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry=function(radius,segments,thetaStart,thetaLength){THREE.Geometry.call(this);this.className=\"CircleGeometry\";this.radius=radius=radius||50;this.segments=segments=segments!==undefined?Math.max(3,segments):8;this.thetaStart=thetaStart=thetaStart!==undefined?thetaStart:0;this.thetaLength=thetaLength=thetaLength!==undefined?thetaLength:Math.PI*2;var i,uvs=[],center=new THREE.Vector3(),centerUV=new THREE.Vector2(0.5,0.5);this.vertices.push(center);uvs.push(centerUV);for(i=0;i<=segments;i++){var vertex=new THREE.Vector3();var segment=thetaStart+i/segments*thetaLength;vertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);this.vertices.push(vertex);uvs.push(new THREE.Vector2((vertex.x/radius+1)/2,(vertex.y/radius+1)/2));}var n=new THREE.Vector3(0,0,1);for(i=1;i<=segments;i++){var v1=i;var v2=i+1;var v3=0;this.faces.push(new THREE.Face3(v1,v2,v3,[n.clone(),n.clone(),n.clone()]));this.faceVertexUvs[0].push([uvs[i].clone(),uvs[i+1].clone(),centerUV.clone()]);}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3(),radius);};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CubeGeometry=THREE.BoxGeometry;THREE.CylinderGeometry=function(radiusTop,radiusBottom,height,radialSegments,heightSegments,openEnded){THREE.Geometry.call(this);this.className=\"CylinderGeometry\";this.radiusTop=radiusTop=radiusTop!==undefined?radiusTop:20;this.radiusBottom=radiusBottom=radiusBottom!==undefined?radiusBottom:20;this.height=height=height!==undefined?height:100;this.radialSegments=radialSegments=radialSegments||8;this.heightSegments=heightSegments=heightSegments||1;this.openEnded=openEnded=openEnded!==undefined?openEnded:false;var heightHalf=height/2;var x,y,vertices=[],uvs=[];for(y=0;y<=heightSegments;y++){var verticesRow=[];var uvsRow=[];var v=y/heightSegments;var radius=v*(radiusBottom-radiusTop)+radiusTop;for(x=0;x<=radialSegments;x++){var u=x/radialSegments;var vertex=new THREE.Vector3();vertex.x=radius*Math.sin(u*Math.PI*2);vertex.y=-v*height+heightHalf;vertex.z=radius*Math.cos(u*Math.PI*2);this.vertices.push(vertex);verticesRow.push(this.vertices.length-1);uvsRow.push(new THREE.Vector2(u,1-v));}vertices.push(verticesRow);uvs.push(uvsRow);}var tanTheta=(radiusBottom-radiusTop)/height;var na,nb;for(x=0;x<radialSegments;x++){if(radiusTop!==0){na=this.vertices[vertices[0][x]].clone();nb=this.vertices[vertices[0][x+1]].clone();}else{na=this.vertices[vertices[1][x]].clone();nb=this.vertices[vertices[1][x+1]].clone();}na.setY(Math.sqrt(na.x*na.x+na.z*na.z)*tanTheta).normalize();nb.setY(Math.sqrt(nb.x*nb.x+nb.z*nb.z)*tanTheta).normalize();for(y=0;y<heightSegments;y++){var v1=vertices[y][x];var v2=vertices[y+1][x];var v3=vertices[y+1][x+1];var v4=vertices[y][x+1];var n1=na.clone();var n2=na.clone();var n3=nb.clone();var n4=nb.clone();var uv1=uvs[y][x].clone();var uv2=uvs[y+1][x].clone();var uv3=uvs[y+1][x+1].clone();var uv4=uvs[y][x+1].clone();this.faces.push(new THREE.Face3(v1,v2,v4,[n1,n2,n4]));this.faceVertexUvs[0].push([uv1,uv2,uv4]);this.faces.push(new THREE.Face3(v2,v3,v4,[n2.clone(),n3,n4.clone()]));this.faceVertexUvs[0].push([uv2.clone(),uv3,uv4.clone()]);}}if(openEnded===false&&radiusTop>0){this.vertices.push(new THREE.Vector3(0,heightHalf,0));for(x=0;x<radialSegments;x++){var v1=vertices[0][x];var v2=vertices[0][x+1];var v3=this.vertices.length-1;var n1=new THREE.Vector3(0,1,0);var n2=new THREE.Vector3(0,1,0);var n3=new THREE.Vector3(0,1,0);var uv1=uvs[0][x].clone();var uv2=uvs[0][x+1].clone();var uv3=new THREE.Vector2(uv2.x,0);this.faces.push(new THREE.Face3(v1,v2,v3,[n1,n2,n3]));this.faceVertexUvs[0].push([uv1,uv2,uv3]);}}if(openEnded===false&&radiusBottom>0){this.vertices.push(new THREE.Vector3(0,-heightHalf,0));for(x=0;x<radialSegments;x++){var v1=vertices[y][x+1];var v2=vertices[y][x];var v3=this.vertices.length-1;var n1=new THREE.Vector3(0,-1,0);var n2=new THREE.Vector3(0,-1,0);var n3=new THREE.Vector3(0,-1,0);var uv1=uvs[y][x+1].clone();var uv2=uvs[y][x].clone();var uv3=new THREE.Vector2(uv2.x,1);this.faces.push(new THREE.Face3(v1,v2,v3,[n1,n2,n3]));this.faceVertexUvs[0].push([uv1,uv2,uv3]);}}this.computeCentroids();this.computeFaceNormals();};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry=function(shapes,options){if(typeof shapes===\"undefined\"){shapes=[];return;}THREE.Geometry.call(this);this.className=\"ExtrudeGeometry\";shapes=shapes instanceof Array?shapes:[shapes];this.shapebb=shapes[shapes.length-1].getBoundingBox();this.addShapeList(shapes,options);this.computeCentroids();this.computeFaceNormals();};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(shapes,options){var sl=shapes.length;for(var s=0;s<sl;s++){var shape=shapes[s];this.addShape(shape,options);}};THREE.ExtrudeGeometry.prototype.addShape=function(shape,options){var amount=options.amount!==undefined?options.amount:100;var bevelThickness=options.bevelThickness!==undefined?options.bevelThickness:6;var bevelSize=options.bevelSize!==undefined?options.bevelSize:bevelThickness-2;var bevelSegments=options.bevelSegments!==undefined?options.bevelSegments:3;var bevelEnabled=options.bevelEnabled!==undefined?options.bevelEnabled:true;var curveSegments=options.curveSegments!==undefined?options.curveSegments:12;var steps=options.steps!==undefined?options.steps:1;var extrudePath=options.extrudePath;var extrudePts,extrudeByPath=false;var material=options.material;var extrudeMaterial=options.extrudeMaterial;var uvgen=options.UVGenerator!==undefined?options.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;var shapebb=this.shapebb;var splineTube,binormal,normal,position2;if(extrudePath){extrudePts=extrudePath.getSpacedPoints(steps);extrudeByPath=true;bevelEnabled=false;splineTube=options.frames!==undefined?options.frames:new THREE.TubeGeometry.FrenetFrames(extrudePath,steps,false);binormal=new THREE.Vector3();normal=new THREE.Vector3();position2=new THREE.Vector3();}if(!bevelEnabled){bevelSegments=0;bevelThickness=0;bevelSize=0;}var ahole,h,hl;var scope=this;var bevelPoints=[];var shapesOffset=this.vertices.length;var shapePoints=shape.extractPoints(curveSegments);var vertices=shapePoints.shape;var holes=shapePoints.holes;var reverse=!THREE.Shape.Utils.isClockWise(vertices);if(reverse){vertices=vertices.reverse();for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];if(THREE.Shape.Utils.isClockWise(ahole)){holes[h]=ahole.reverse();}}reverse=false;}var faces=THREE.Shape.Utils.triangulateShape(vertices,holes);var contour=vertices;for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];vertices=vertices.concat(ahole);}function scalePt2(pt,vec,size){if(!vec)return THREE.onerror(\"die, vec not specified\");return vec.clone().multiplyScalar(size).add(pt);}var b,bs,t,z,vert,vlen=vertices.length,face,flen=faces.length,cont,clen=contour.length;var RAD_TO_DEGREES=180/Math.PI;function getBevelVec(inPt,inPrev,inNext){var EPSILON=0.0000000001;var sign=THREE.Math.sign;var v_trans_x,v_trans_y,shrink_by=1;var v_prev_x=inPt.x-inPrev.x,v_prev_y=inPt.y-inPrev.y;var v_next_x=inNext.x-inPt.x,v_next_y=inNext.y-inPt.y;var v_prev_lensq=v_prev_x*v_prev_x+v_prev_y*v_prev_y;var colinear0=v_prev_x*v_next_y-v_prev_y*v_next_x;if(Math.abs(colinear0)>EPSILON){var v_prev_len=Math.sqrt(v_prev_lensq);var v_next_len=Math.sqrt(v_next_x*v_next_x+v_next_y*v_next_y);var ptPrevShift_x=inPrev.x-v_prev_y/v_prev_len;var ptPrevShift_y=inPrev.y+v_prev_x/v_prev_len;var ptNextShift_x=inNext.x-v_next_y/v_next_len;var ptNextShift_y=inNext.y+v_next_x/v_next_len;var sf=((ptNextShift_x-ptPrevShift_x)*v_next_y-(ptNextShift_y-ptPrevShift_y)*v_next_x)/(v_prev_x*v_next_y-v_prev_y*v_next_x);v_trans_x=ptPrevShift_x+v_prev_x*sf-inPt.x;v_trans_y=ptPrevShift_y+v_prev_y*sf-inPt.y;var v_trans_lensq=v_trans_x*v_trans_x+v_trans_y*v_trans_y;if(v_trans_lensq<=2){return new THREE.Vector2(v_trans_x,v_trans_y);}else{shrink_by=Math.sqrt(v_trans_lensq/2);}}else{var direction_eq=false;if(v_prev_x>EPSILON){if(v_next_x>EPSILON){direction_eq=true;}}else{if(v_prev_x<-EPSILON){if(v_next_x<-EPSILON){direction_eq=true;}}else{if(sign(v_prev_y)==sign(v_next_y)){direction_eq=true;}}}if(direction_eq){v_trans_x=-v_prev_y;v_trans_y=v_prev_x;shrink_by=Math.sqrt(v_prev_lensq);}else{v_trans_x=v_prev_x;v_trans_y=v_prev_y;shrink_by=Math.sqrt(v_prev_lensq/2);}}return new THREE.Vector2(v_trans_x/shrink_by,v_trans_y/shrink_by);}var contourMovements=[];for(var i=0,il=contour.length,j=il-1,k=i+1;i<il;i++,j++,k++){if(j===il)j=0;if(k===il)k=0;var pt_i=contour[i];var pt_j=contour[j];var pt_k=contour[k];contourMovements[i]=getBevelVec(contour[i],contour[j],contour[k]);}var holesMovements=[],oneHoleMovements,verticesMovements=contourMovements.concat();for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];oneHoleMovements=[];for(i=0,il=ahole.length,j=il-1,k=i+1;i<il;i++,j++,k++){if(j===il)j=0;if(k===il)k=0;oneHoleMovements[i]=getBevelVec(ahole[i],ahole[j],ahole[k]);}holesMovements.push(oneHoleMovements);verticesMovements=verticesMovements.concat(oneHoleMovements);}for(b=0;b<bevelSegments;b++){t=b/bevelSegments;z=bevelThickness*(1-t);bs=bevelSize*Math.sin(t*Math.PI/2);for(i=0,il=contour.length;i<il;i++){vert=scalePt2(contour[i],contourMovements[i],bs);v(vert.x,vert.y,-z);}for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];oneHoleMovements=holesMovements[h];for(i=0,il=ahole.length;i<il;i++){vert=scalePt2(ahole[i],oneHoleMovements[i],bs);v(vert.x,vert.y,-z);}}}bs=bevelSize;for(i=0;i<vlen;i++){vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i];if(!extrudeByPath){v(vert.x,vert.y,0);}else{normal.copy(splineTube.normals[0]).multiplyScalar(vert.x);binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);position2.copy(extrudePts[0]).add(normal).add(binormal);v(position2.x,position2.y,position2.z);}}var s;for(s=1;s<=steps;s++){for(i=0;i<vlen;i++){vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i];if(!extrudeByPath){v(vert.x,vert.y,amount/steps*s);}else{normal.copy(splineTube.normals[s]).multiplyScalar(vert.x);binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);position2.copy(extrudePts[s]).add(normal).add(binormal);v(position2.x,position2.y,position2.z);}}}for(b=bevelSegments-1;b>=0;b--){t=b/bevelSegments;z=bevelThickness*(1-t);bs=bevelSize*Math.sin(t*Math.PI/2);for(i=0,il=contour.length;i<il;i++){vert=scalePt2(contour[i],contourMovements[i],bs);v(vert.x,vert.y,amount+z);}for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];oneHoleMovements=holesMovements[h];for(i=0,il=ahole.length;i<il;i++){vert=scalePt2(ahole[i],oneHoleMovements[i],bs);if(!extrudeByPath){v(vert.x,vert.y,amount+z);}else{v(vert.x,vert.y+extrudePts[steps-1].y,extrudePts[steps-1].x+z);}}}}buildLidFaces();buildSideFaces();function buildLidFaces(){if(bevelEnabled){var layer=0;var offset=vlen*layer;for(i=0;i<flen;i++){face=faces[i];f3(face[2]+offset,face[1]+offset,face[0]+offset,true);}layer=steps+bevelSegments*2;offset=vlen*layer;for(i=0;i<flen;i++){face=faces[i];f3(face[0]+offset,face[1]+offset,face[2]+offset,false);}}else{for(i=0;i<flen;i++){face=faces[i];f3(face[2],face[1],face[0],true);}for(i=0;i<flen;i++){face=faces[i];f3(face[0]+vlen*steps,face[1]+vlen*steps,face[2]+vlen*steps,false);}}}function buildSideFaces(){var layeroffset=0;sidewalls(contour,layeroffset);layeroffset+=contour.length;for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];sidewalls(ahole,layeroffset);layeroffset+=ahole.length;}}function sidewalls(contour,layeroffset){var j,k;i=contour.length;while(--i>=0){j=i;k=i-1;if(k<0)k=contour.length-1;var s=0,sl=steps+bevelSegments*2;for(s=0;s<sl;s++){var slen1=vlen*s;var slen2=vlen*(s+1);var a=layeroffset+j+slen1,b=layeroffset+k+slen1,c=layeroffset+k+slen2,d=layeroffset+j+slen2;f4(a,b,c,d,contour,s,sl,j,k);}}}function v(x,y,z){scope.vertices.push(new THREE.Vector3(x,y,z));}function f3(a,b,c,isBottom){a+=shapesOffset;b+=shapesOffset;c+=shapesOffset;scope.faces.push(new THREE.Face3(a,b,c,null,null,material));var uvs=isBottom?uvgen.generateBottomUV(scope,shape,options,a,b,c):uvgen.generateTopUV(scope,shape,options,a,b,c);scope.faceVertexUvs[0].push(uvs);}function f4(a,b,c,d,wallContour,stepIndex,stepsLength,contourIndex1,contourIndex2){a+=shapesOffset;b+=shapesOffset;c+=shapesOffset;d+=shapesOffset;scope.faces.push(new THREE.Face3(a,b,d,null,null,extrudeMaterial));scope.faces.push(new THREE.Face3(b,c,d,null,null,extrudeMaterial));var uvs=uvgen.generateSideWallUV(scope,shape,wallContour,options,a,b,c,d,stepIndex,stepsLength,contourIndex1,contourIndex2);scope.faceVertexUvs[0].push([uvs[0],uvs[1],uvs[3]]);scope.faceVertexUvs[0].push([uvs[1],uvs[2],uvs[3]]);}};THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function generateTopUV(geometry,extrudedShape,extrudeOptions,indexA,indexB,indexC){var ax=geometry.vertices[indexA].x,ay=geometry.vertices[indexA].y,bx=geometry.vertices[indexB].x,by=geometry.vertices[indexB].y,cx=geometry.vertices[indexC].x,cy=geometry.vertices[indexC].y;return[new THREE.Vector2(ax,ay),new THREE.Vector2(bx,by),new THREE.Vector2(cx,cy)];},generateBottomUV:function generateBottomUV(geometry,extrudedShape,extrudeOptions,indexA,indexB,indexC){return this.generateTopUV(geometry,extrudedShape,extrudeOptions,indexA,indexB,indexC);},generateSideWallUV:function generateSideWallUV(geometry,extrudedShape,wallContour,extrudeOptions,indexA,indexB,indexC,indexD,stepIndex,stepsLength,contourIndex1,contourIndex2){var ax=geometry.vertices[indexA].x,ay=geometry.vertices[indexA].y,az=geometry.vertices[indexA].z,bx=geometry.vertices[indexB].x,by=geometry.vertices[indexB].y,bz=geometry.vertices[indexB].z,cx=geometry.vertices[indexC].x,cy=geometry.vertices[indexC].y,cz=geometry.vertices[indexC].z,dx=geometry.vertices[indexD].x,dy=geometry.vertices[indexD].y,dz=geometry.vertices[indexD].z;if(Math.abs(ay-by)<0.01){return[new THREE.Vector2(ax,1-az),new THREE.Vector2(bx,1-bz),new THREE.Vector2(cx,1-cz),new THREE.Vector2(dx,1-dz)];}else{return[new THREE.Vector2(ay,1-az),new THREE.Vector2(by,1-bz),new THREE.Vector2(cy,1-cz),new THREE.Vector2(dy,1-dz)];}}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2();THREE.ExtrudeGeometry.__v2=new THREE.Vector2();THREE.ExtrudeGeometry.__v3=new THREE.Vector2();THREE.ExtrudeGeometry.__v4=new THREE.Vector2();THREE.ExtrudeGeometry.__v5=new THREE.Vector2();THREE.ExtrudeGeometry.__v6=new THREE.Vector2();THREE.ShapeGeometry=function(shapes,options){THREE.Geometry.call(this);this.className=\"ShapeGeometry\";if(shapes instanceof Array===false)shapes=[shapes];this.shapebb=shapes[shapes.length-1].getBoundingBox();this.addShapeList(shapes,options);this.computeCentroids();this.computeFaceNormals();};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(shapes,options){for(var i=0,l=shapes.length;i<l;i++){this.addShape(shapes[i],options);}return this;};THREE.ShapeGeometry.prototype.addShape=function(shape,options){if(options===undefined)options={};var curveSegments=options.curveSegments!==undefined?options.curveSegments:12;var material=options.material;var uvgen=options.UVGenerator===undefined?THREE.ExtrudeGeometry.WorldUVGenerator:options.UVGenerator;var shapebb=this.shapebb;var i,l,hole,s;var shapesOffset=this.vertices.length;var shapePoints=shape.extractPoints(curveSegments);var vertices=shapePoints.shape;var holes=shapePoints.holes;var reverse=!THREE.Shape.Utils.isClockWise(vertices);if(reverse){vertices=vertices.reverse();for(i=0,l=holes.length;i<l;i++){hole=holes[i];if(THREE.Shape.Utils.isClockWise(hole)){holes[i]=hole.reverse();}}reverse=false;}var faces=THREE.Shape.Utils.triangulateShape(vertices,holes);var contour=vertices;for(i=0,l=holes.length;i<l;i++){hole=holes[i];vertices=vertices.concat(hole);}var vert,vlen=vertices.length;var face,flen=faces.length;var cont,clen=contour.length;for(i=0;i<vlen;i++){vert=vertices[i];this.vertices.push(new THREE.Vector3(vert.x,vert.y,0));}for(i=0;i<flen;i++){face=faces[i];var a=face[0]+shapesOffset;var b=face[1]+shapesOffset;var c=face[2]+shapesOffset;this.faces.push(new THREE.Face3(a,b,c,null,null,material));this.faceVertexUvs[0].push(uvgen.generateBottomUV(this,shape,options,a,b,c));}};THREE.LatheGeometry=function(points,segments,phiStart,phiLength){THREE.Geometry.call(this);this.className=\"LatheGeometry\";segments=segments||12;phiStart=phiStart||0;phiLength=phiLength||2*Math.PI;var inversePointLength=1.0/(points.length-1);var inverseSegments=1.0/segments;for(var i=0,il=segments;i<=il;i++){var phi=phiStart+i*inverseSegments*phiLength;var c=Math.cos(phi),s=Math.sin(phi);for(var j=0,jl=points.length;j<jl;j++){var pt=points[j];var vertex=new THREE.Vector3();vertex.x=c*pt.x-s*pt.y;vertex.y=s*pt.x+c*pt.y;vertex.z=pt.z;this.vertices.push(vertex);}}var np=points.length;for(var i=0,il=segments;i<il;i++){for(var j=0,jl=points.length-1;j<jl;j++){var base=j+np*i;var a=base;var b=base+np;var c=base+1+np;var d=base+1;var u0=i*inverseSegments;var v0=j*inversePointLength;var u1=u0+inverseSegments;var v1=v0+inversePointLength;this.faces.push(new THREE.Face3(a,b,d));this.faceVertexUvs[0].push([new THREE.Vector2(u0,v0),new THREE.Vector2(u1,v0),new THREE.Vector2(u0,v1)]);this.faces.push(new THREE.Face3(b,c,d));this.faceVertexUvs[0].push([new THREE.Vector2(u1,v0),new THREE.Vector2(u1,v1),new THREE.Vector2(u0,v1)]);}}this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry=function(width,height,widthSegments,heightSegments){THREE.Geometry.call(this);this.className=\"PlaneGeometry\";this.width=width;this.height=height;this.widthSegments=widthSegments||1;this.heightSegments=heightSegments||1;var ix,iz;var width_half=width/2;var height_half=height/2;var gridX=this.widthSegments;var gridZ=this.heightSegments;var gridX1=gridX+1;var gridZ1=gridZ+1;var segment_width=this.width/gridX;var segment_height=this.height/gridZ;var normal=new THREE.Vector3(0,0,1);for(iz=0;iz<gridZ1;iz++){for(ix=0;ix<gridX1;ix++){var x=ix*segment_width-width_half;var y=iz*segment_height-height_half;this.vertices.push(new THREE.Vector3(x,-y,0));}}for(iz=0;iz<gridZ;iz++){for(ix=0;ix<gridX;ix++){var a=ix+gridX1*iz;var b=ix+gridX1*(iz+1);var c=ix+1+gridX1*(iz+1);var d=ix+1+gridX1*iz;var uva=new THREE.Vector2(ix/gridX,1-iz/gridZ);var uvb=new THREE.Vector2(ix/gridX,1-(iz+1)/gridZ);var uvc=new THREE.Vector2((ix+1)/gridX,1-(iz+1)/gridZ);var uvd=new THREE.Vector2((ix+1)/gridX,1-iz/gridZ);var face=new THREE.Face3(a,b,d);face.normal.copy(normal);face.vertexNormals.push(normal.clone(),normal.clone(),normal.clone());this.faces.push(face);this.faceVertexUvs[0].push([uva,uvb,uvd]);face=new THREE.Face3(b,c,d);face.normal.copy(normal);face.vertexNormals.push(normal.clone(),normal.clone(),normal.clone());this.faces.push(face);this.faceVertexUvs[0].push([uvb.clone(),uvc,uvd.clone()]);}}this.computeCentroids();};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry=function(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength){THREE.Geometry.call(this);this.className=\"RingGeometry\";innerRadius=innerRadius||0;outerRadius=outerRadius||50;thetaStart=thetaStart!==undefined?thetaStart:0;thetaLength=thetaLength!==undefined?thetaLength:Math.PI*2;thetaSegments=thetaSegments!==undefined?Math.max(3,thetaSegments):8;phiSegments=phiSegments!==undefined?Math.max(3,phiSegments):8;var i,o,uvs=[],radius=innerRadius,radiusStep=(outerRadius-innerRadius)/phiSegments;for(i=0;i<=phiSegments;i++){for(o=0;o<=thetaSegments;o++){var vertex=new THREE.Vector3();var segment=thetaStart+o/thetaSegments*thetaLength;vertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);this.vertices.push(vertex);uvs.push(new THREE.Vector2((vertex.x/outerRadius+1)/2,(vertex.y/outerRadius+1)/2));}radius+=radiusStep;}var n=new THREE.Vector3(0,0,1);for(i=0;i<phiSegments;i++){var thetaSegment=i*thetaSegments;for(o=0;o<=thetaSegments;o++){var segment=o+thetaSegment;var v1=segment+i;var v2=segment+thetaSegments+i;var v3=segment+thetaSegments+1+i;this.faces.push(new THREE.Face3(v1,v2,v3,[n.clone(),n.clone(),n.clone()]));this.faceVertexUvs[0].push([uvs[v1].clone(),uvs[v2].clone(),uvs[v3].clone()]);v1=segment+i;v2=segment+thetaSegments+1+i;v3=segment+1+i;this.faces.push(new THREE.Face3(v1,v2,v3,[n.clone(),n.clone(),n.clone()]));this.faceVertexUvs[0].push([uvs[v1].clone(),uvs[v2].clone(),uvs[v3].clone()]);}}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3(),radius);};THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry=function(radius,widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength){THREE.Geometry.call(this);this.className=\"SphereGeometry\";this.radius=radius=radius||50;this.widthSegments=widthSegments=Math.max(3,Math.floor(widthSegments)||8);this.heightSegments=heightSegments=Math.max(2,Math.floor(heightSegments)||6);this.phiStart=phiStart=phiStart!==undefined?phiStart:0;this.phiLength=phiLength=phiLength!==undefined?phiLength:Math.PI*2;this.thetaStart=thetaStart=thetaStart!==undefined?thetaStart:0;this.thetaLength=thetaLength=thetaLength!==undefined?thetaLength:Math.PI;var x,y,vertices=[],uvs=[];for(y=0;y<=heightSegments;y++){var verticesRow=[];var uvsRow=[];for(x=0;x<=widthSegments;x++){var u=x/widthSegments;var v=y/heightSegments;var vertex=new THREE.Vector3();vertex.x=-radius*Math.cos(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertex.y=radius*Math.cos(thetaStart+v*thetaLength);vertex.z=radius*Math.sin(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);this.vertices.push(vertex);verticesRow.push(this.vertices.length-1);uvsRow.push(new THREE.Vector2(u,1-v));}vertices.push(verticesRow);uvs.push(uvsRow);}for(y=0;y<this.heightSegments;y++){for(x=0;x<this.widthSegments;x++){var v1=vertices[y][x+1];var v2=vertices[y][x];var v3=vertices[y+1][x];var v4=vertices[y+1][x+1];var n1=this.vertices[v1].clone().normalize();var n2=this.vertices[v2].clone().normalize();var n3=this.vertices[v3].clone().normalize();var n4=this.vertices[v4].clone().normalize();var uv1=uvs[y][x+1].clone();var uv2=uvs[y][x].clone();var uv3=uvs[y+1][x].clone();var uv4=uvs[y+1][x+1].clone();if(Math.abs(this.vertices[v1].y)===this.radius){uv1.x=(uv1.x+uv2.x)/2;this.faces.push(new THREE.Face3(v1,v3,v4,[n1,n3,n4]));this.faceVertexUvs[0].push([uv1,uv3,uv4]);}else if(Math.abs(this.vertices[v3].y)===this.radius){uv3.x=(uv3.x+uv4.x)/2;this.faces.push(new THREE.Face3(v1,v2,v3,[n1,n2,n3]));this.faceVertexUvs[0].push([uv1,uv2,uv3]);}else{this.faces.push(new THREE.Face3(v1,v2,v4,[n1,n2,n4]));this.faceVertexUvs[0].push([uv1,uv2,uv4]);this.faces.push(new THREE.Face3(v2,v3,v4,[n2.clone(),n3,n4.clone()]));this.faceVertexUvs[0].push([uv2.clone(),uv3,uv4.clone()]);}}}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3(),radius);};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(text,parameters){this.className=\"TextGeometry\";parameters=parameters||{};var textShapes=THREE.FontUtils.generateShapes(text,parameters);parameters.amount=parameters.height!==undefined?parameters.height:50;if(parameters.bevelThickness===undefined)parameters.bevelThickness=10;if(parameters.bevelSize===undefined)parameters.bevelSize=8;if(parameters.bevelEnabled===undefined)parameters.bevelEnabled=false;THREE.ExtrudeGeometry.call(this,textShapes,parameters);};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TorusGeometry=function(radius,tube,radialSegments,tubularSegments,arc){THREE.Geometry.call(this);this.className=\"TorusGeometry\";var scope=this;this.radius=radius||100;this.tube=tube||40;this.radialSegments=radialSegments||8;this.tubularSegments=tubularSegments||6;this.arc=arc||Math.PI*2;var center=new THREE.Vector3(),uvs=[],normals=[];for(var j=0;j<=this.radialSegments;j++){for(var i=0;i<=this.tubularSegments;i++){var u=i/this.tubularSegments*this.arc;var v=j/this.radialSegments*Math.PI*2;center.x=this.radius*Math.cos(u);center.y=this.radius*Math.sin(u);var vertex=new THREE.Vector3();vertex.x=(this.radius+this.tube*Math.cos(v))*Math.cos(u);vertex.y=(this.radius+this.tube*Math.cos(v))*Math.sin(u);vertex.z=this.tube*Math.sin(v);this.vertices.push(vertex);uvs.push(new THREE.Vector2(i/this.tubularSegments,j/this.radialSegments));normals.push(vertex.clone().sub(center).normalize());}}for(var j=1;j<=this.radialSegments;j++){for(var i=1;i<=this.tubularSegments;i++){var a=(this.tubularSegments+1)*j+i-1;var b=(this.tubularSegments+1)*(j-1)+i-1;var c=(this.tubularSegments+1)*(j-1)+i;var d=(this.tubularSegments+1)*j+i;var face=new THREE.Face3(a,b,d,[normals[a].clone(),normals[b].clone(),normals[d].clone()]);this.faces.push(face);this.faceVertexUvs[0].push([uvs[a].clone(),uvs[b].clone(),uvs[d].clone()]);face=new THREE.Face3(b,c,d,[normals[b].clone(),normals[c].clone(),normals[d].clone()]);this.faces.push(face);this.faceVertexUvs[0].push([uvs[b].clone(),uvs[c].clone(),uvs[d].clone()]);}}this.computeCentroids();this.computeFaceNormals();};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry=function(radius,tube,radialSegments,tubularSegments,p,q,heightScale){THREE.Geometry.call(this);this.className=\"TorusKnotGeometry\";var scope=this;this.radius=radius||100;this.tube=tube||40;this.radialSegments=radialSegments||64;this.tubularSegments=tubularSegments||8;this.p=p||2;this.q=q||3;this.heightScale=heightScale||1;this.grid=new Array(this.radialSegments);var tang=new THREE.Vector3();var n=new THREE.Vector3();var bitan=new THREE.Vector3();for(var i=0;i<this.radialSegments;++i){this.grid[i]=new Array(this.tubularSegments);var u=i/this.radialSegments*2*this.p*Math.PI;var p1=getPos(u,this.q,this.p,this.radius,this.heightScale);var p2=getPos(u+0.01,this.q,this.p,this.radius,this.heightScale);tang.subVectors(p2,p1);n.addVectors(p2,p1);bitan.crossVectors(tang,n);n.crossVectors(bitan,tang);bitan.normalize();n.normalize();for(var j=0;j<this.tubularSegments;++j){var v=j/this.tubularSegments*2*Math.PI;var cx=-this.tube*Math.cos(v);var cy=this.tube*Math.sin(v);var pos=new THREE.Vector3();pos.x=p1.x+cx*n.x+cy*bitan.x;pos.y=p1.y+cx*n.y+cy*bitan.y;pos.z=p1.z+cx*n.z+cy*bitan.z;this.grid[i][j]=scope.vertices.push(pos)-1;}}for(var i=0;i<this.radialSegments;++i){for(var j=0;j<this.tubularSegments;++j){var ip=(i+1)%this.radialSegments;var jp=(j+1)%this.tubularSegments;var a=this.grid[i][j];var b=this.grid[ip][j];var c=this.grid[ip][jp];var d=this.grid[i][jp];var uva=new THREE.Vector2(i/this.radialSegments,j/this.tubularSegments);var uvb=new THREE.Vector2((i+1)/this.radialSegments,j/this.tubularSegments);var uvc=new THREE.Vector2((i+1)/this.radialSegments,(j+1)/this.tubularSegments);var uvd=new THREE.Vector2(i/this.radialSegments,(j+1)/this.tubularSegments);this.faces.push(new THREE.Face3(a,b,d));this.faceVertexUvs[0].push([uva,uvb,uvd]);this.faces.push(new THREE.Face3(b,c,d));this.faceVertexUvs[0].push([uvb.clone(),uvc,uvd.clone()]);}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();function getPos(u,in_q,in_p,radius,heightScale){var cu=Math.cos(u);var su=Math.sin(u);var quOverP=in_q/in_p*u;var cs=Math.cos(quOverP);var tx=radius*(2+cs)*0.5*cu;var ty=radius*(2+cs)*su*0.5;var tz=heightScale*radius*Math.sin(quOverP)*0.5;return new THREE.Vector3(tx,ty,tz);}};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry=function(path,segments,radius,radialSegments,closed){THREE.Geometry.call(this);this.className=\"TubeGeometry\";this.path=path;this.segments=segments||64;this.radius=radius||1;this.radialSegments=radialSegments||8;this.closed=closed||false;this.grid=[];var scope=this,tangent,normal,binormal,numpoints=this.segments+1,x,y,z,tx,ty,tz,u,v,cx,cy,pos,pos2=new THREE.Vector3(),i,j,ip,jp,a,b,c,d,uva,uvb,uvc,uvd;var frames=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed),tangents=frames.tangents,normals=frames.normals,binormals=frames.binormals;this.tangents=tangents;this.normals=normals;this.binormals=binormals;function vert(x,y,z){return scope.vertices.push(new THREE.Vector3(x,y,z))-1;}for(i=0;i<numpoints;i++){this.grid[i]=[];u=i/(numpoints-1);pos=path.getPointAt(u);tangent=tangents[i];normal=normals[i];binormal=binormals[i];for(j=0;j<this.radialSegments;j++){v=j/this.radialSegments*2*Math.PI;cx=-this.radius*Math.cos(v);cy=this.radius*Math.sin(v);pos2.copy(pos);pos2.x+=cx*normal.x+cy*binormal.x;pos2.y+=cx*normal.y+cy*binormal.y;pos2.z+=cx*normal.z+cy*binormal.z;this.grid[i][j]=vert(pos2.x,pos2.y,pos2.z);}}for(i=0;i<this.segments;i++){for(j=0;j<this.radialSegments;j++){ip=this.closed?(i+1)%this.segments:i+1;jp=(j+1)%this.radialSegments;a=this.grid[i][j];b=this.grid[ip][j];c=this.grid[ip][jp];d=this.grid[i][jp];uva=new THREE.Vector2(i/this.segments,j/this.radialSegments);uvb=new THREE.Vector2((i+1)/this.segments,j/this.radialSegments);uvc=new THREE.Vector2((i+1)/this.segments,(j+1)/this.radialSegments);uvd=new THREE.Vector2(i/this.segments,(j+1)/this.radialSegments);this.faces.push(new THREE.Face3(a,b,d));this.faceVertexUvs[0].push([uva,uvb,uvd]);this.faces.push(new THREE.Face3(b,c,d));this.faceVertexUvs[0].push([uvb.clone(),uvc,uvd.clone()]);}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.FrenetFrames=function(path,segments,closed){var tangent=new THREE.Vector3(),normal=new THREE.Vector3(),binormal=new THREE.Vector3(),tangents=[],normals=[],binormals=[],vec=new THREE.Vector3(),mat=new THREE.Matrix4(),numpoints=segments+1,theta,epsilon=0.0001,smallest,tx,ty,tz,i,u,v;this.tangents=tangents;this.normals=normals;this.binormals=binormals;for(i=0;i<numpoints;i++){u=i/(numpoints-1);tangents[i]=path.getTangentAt(u);tangents[i].normalize();}initialNormal3();function initialNormal1(lastBinormal){normals[0]=new THREE.Vector3();binormals[0]=new THREE.Vector3();if(lastBinormal===undefined)lastBinormal=new THREE.Vector3(0,0,1);normals[0].crossVectors(lastBinormal,tangents[0]).normalize();binormals[0].crossVectors(tangents[0],normals[0]).normalize();}function initialNormal2(){var t2=path.getTangentAt(epsilon);normals[0]=new THREE.Vector3().subVectors(t2,tangents[0]).normalize();binormals[0]=new THREE.Vector3().crossVectors(tangents[0],normals[0]);normals[0].crossVectors(binormals[0],tangents[0]).normalize();binormals[0].crossVectors(tangents[0],normals[0]).normalize();}function initialNormal3(){normals[0]=new THREE.Vector3();binormals[0]=new THREE.Vector3();smallest=Number.MAX_VALUE;tx=Math.abs(tangents[0].x);ty=Math.abs(tangents[0].y);tz=Math.abs(tangents[0].z);if(tx<=smallest){smallest=tx;normal.set(1,0,0);}if(ty<=smallest){smallest=ty;normal.set(0,1,0);}if(tz<=smallest){normal.set(0,0,1);}vec.crossVectors(tangents[0],normal).normalize();normals[0].crossVectors(tangents[0],vec);binormals[0].crossVectors(tangents[0],normals[0]);}for(i=1;i<numpoints;i++){normals[i]=normals[i-1].clone();binormals[i]=binormals[i-1].clone();vec.crossVectors(tangents[i-1],tangents[i]);if(vec.length()>epsilon){vec.normalize();theta=Math.acos(THREE.Math.clamp(tangents[i-1].dot(tangents[i]),-1,1));normals[i].applyMatrix4(mat.makeRotationAxis(vec,theta));}binormals[i].crossVectors(tangents[i],normals[i]);}if(closed){theta=Math.acos(THREE.Math.clamp(normals[0].dot(normals[numpoints-1]),-1,1));theta/=numpoints-1;if(tangents[0].dot(vec.crossVectors(normals[0],normals[numpoints-1]))>0){theta=-theta;}for(i=1;i<numpoints;i++){normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i],theta*i));binormals[i].crossVectors(tangents[i],normals[i]);}}};THREE.PolyhedronGeometry=function(vertices,faces,radius,detail){THREE.Geometry.call(this);this.className=\"PolyhedronGeometry\";radius=radius||1;detail=detail||0;var that=this;for(var i=0,l=vertices.length;i<l;i++){prepare(new THREE.Vector3(vertices[i][0],vertices[i][1],vertices[i][2]));}var midpoints=[],p=this.vertices;var f=[];for(var i=0,l=faces.length;i<l;i++){var v1=p[faces[i][0]];var v2=p[faces[i][1]];var v3=p[faces[i][2]];f[i]=new THREE.Face3(v1.index,v2.index,v3.index,[v1.clone(),v2.clone(),v3.clone()]);}for(var i=0,l=f.length;i<l;i++){subdivide(f[i],detail);}for(var i=0,l=this.faceVertexUvs[0].length;i<l;i++){var uvs=this.faceVertexUvs[0][i];var x0=uvs[0].x;var x1=uvs[1].x;var x2=uvs[2].x;var max=Math.max(x0,Math.max(x1,x2));var min=Math.min(x0,Math.min(x1,x2));if(max>0.9&&min<0.1){if(x0<0.2)uvs[0].x+=1;if(x1<0.2)uvs[1].x+=1;if(x2<0.2)uvs[2].x+=1;}}for(var i=0,l=this.vertices.length;i<l;i++){this.vertices[i].multiplyScalar(radius);}this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3(),radius);function prepare(vector){var vertex=vector.normalize().clone();vertex.index=that.vertices.push(vertex)-1;var u=azimuth(vector)/2/Math.PI+0.5;var v=inclination(vector)/Math.PI+0.5;vertex.uv=new THREE.Vector2(u,1-v);return vertex;}function make(v1,v2,v3){var face=new THREE.Face3(v1.index,v2.index,v3.index,[v1.clone(),v2.clone(),v3.clone()]);face.centroid.add(v1).add(v2).add(v3).divideScalar(3);that.faces.push(face);var azi=azimuth(face.centroid);that.faceVertexUvs[0].push([correctUV(v1.uv,v1,azi),correctUV(v2.uv,v2,azi),correctUV(v3.uv,v3,azi)]);}function subdivide(face,detail){var cols=Math.pow(2,detail);var cells=Math.pow(4,detail);var a=prepare(that.vertices[face.a]);var b=prepare(that.vertices[face.b]);var c=prepare(that.vertices[face.c]);var v=[];for(var i=0;i<=cols;i++){v[i]=[];var aj=prepare(a.clone().lerp(c,i/cols));var bj=prepare(b.clone().lerp(c,i/cols));var rows=cols-i;for(var j=0;j<=rows;j++){if(j==0&&i==cols){v[i][j]=aj;}else{v[i][j]=prepare(aj.clone().lerp(bj,j/rows));}}}for(var i=0;i<cols;i++){for(var j=0;j<2*(cols-i)-1;j++){var k=Math.floor(j/2);if(j%2==0){make(v[i][k+1],v[i+1][k],v[i][k]);}else{make(v[i][k+1],v[i+1][k+1],v[i+1][k]);}}}}function azimuth(vector){return Math.atan2(vector.z,-vector.x);}function inclination(vector){return Math.atan2(-vector.y,Math.sqrt(vector.x*vector.x+vector.z*vector.z));}function correctUV(uv,vector,azimuth){if(azimuth<0&&uv.x===1)uv=new THREE.Vector2(uv.x-1,uv.y);if(vector.x===0&&vector.z===0)uv=new THREE.Vector2(azimuth/2/Math.PI+0.5,uv.y);return uv.clone();}};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.IcosahedronGeometry=function(radius,detail){this.radius=radius;this.detail=detail;var t=(1+Math.sqrt(5))/2;var vertices=[[-1,t,0],[1,t,0],[-1,-t,0],[1,-t,0],[0,-1,t],[0,1,t],[0,-1,-t],[0,1,-t],[t,0,-1],[t,0,1],[-t,0,-1],[-t,0,1]];var faces=[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]];THREE.PolyhedronGeometry.call(this,vertices,faces,radius,detail);this.className=\"IcosahedronGeometry\";};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry=function(radius,detail){var vertices=[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]];var faces=[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]];THREE.PolyhedronGeometry.call(this,vertices,faces,radius,detail);this.className=\"OctahedronGeometry\";};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(radius,detail){this.className=\"TetrahedronGeometry\";var vertices=[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]];var faces=[[2,1,0],[0,3,2],[1,3,0],[2,3,1]];THREE.PolyhedronGeometry.call(this,vertices,faces,radius,detail);};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry=function(func,slices,stacks){THREE.Geometry.call(this);this.className=\"ParametricGeometry\";var verts=this.vertices;var faces=this.faces;var uvs=this.faceVertexUvs[0];var i,il,j,p;var u,v;var stackCount=stacks+1;var sliceCount=slices+1;for(i=0;i<=stacks;i++){v=i/stacks;for(j=0;j<=slices;j++){u=j/slices;p=func(u,v);verts.push(p);}}var a,b,c,d;var uva,uvb,uvc,uvd;for(i=0;i<stacks;i++){for(j=0;j<slices;j++){a=i*sliceCount+j;b=i*sliceCount+j+1;c=(i+1)*sliceCount+j+1;d=(i+1)*sliceCount+j;uva=new THREE.Vector2(j/slices,i/stacks);uvb=new THREE.Vector2((j+1)/slices,i/stacks);uvc=new THREE.Vector2((j+1)/slices,(i+1)/stacks);uvd=new THREE.Vector2(j/slices,(i+1)/stacks);faces.push(new THREE.Face3(a,b,d));uvs.push([uva,uvb,uvd]);faces.push(new THREE.Face3(b,c,d));uvs.push([uvb.clone(),uvc,uvd.clone()]);}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.AxisHelper=function(size){size=size||1;var geometry=new THREE.Geometry();geometry.vertices.push(new THREE.Vector3(),new THREE.Vector3(size,0,0),new THREE.Vector3(),new THREE.Vector3(0,size,0),new THREE.Vector3(),new THREE.Vector3(0,0,size));geometry.colors.push(new THREE.Color(0xff0000),new THREE.Color(0xffaa00),new THREE.Color(0x00ff00),new THREE.Color(0xaaff00),new THREE.Color(0x0000ff),new THREE.Color(0x00aaff));var material=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,geometry,material,THREE.LinePieces);this.className=\"AxisHelper\";};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);THREE.ArrowHelper=function(dir,origin,length,hex,headLength,headWidth){THREE.Object3D.call(this);this.className=\"ArrowHelper\";if(hex===undefined)hex=0xffff00;if(length===undefined)length=1;if(headLength===undefined)headLength=0.2*length;if(headWidth===undefined)headWidth=0.2*headLength;this.position=origin;var lineGeometry=new THREE.Geometry();lineGeometry.vertices.push(new THREE.Vector3(0,0,0));lineGeometry.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(lineGeometry,new THREE.LineBasicMaterial({color:hex}));this.line.matrixAutoUpdate=false;this.add(this.line);var coneGeometry=new THREE.CylinderGeometry(0,0.5,1,5,1);coneGeometry.applyMatrix(new THREE.Matrix4().makeTranslation(0,-0.5,0));this.cone=new THREE.Mesh(coneGeometry,new THREE.MeshBasicMaterial({color:hex}));this.cone.matrixAutoUpdate=false;this.add(this.cone);this.setDirection(dir);this.setLength(length,headLength,headWidth);};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(){var axis=new THREE.Vector3();var radians;return function(dir){if(dir.y>0.99999){this.quaternion.set(0,0,0,1);}else if(dir.y<-0.99999){this.quaternion.set(1,0,0,0);}else{axis.set(dir.z,0,-dir.x).normalize();radians=Math.acos(dir.y);this.quaternion.setFromAxisAngle(axis,radians);}};}();THREE.ArrowHelper.prototype.setLength=function(length,headLength,headWidth){if(headLength===undefined)headLength=0.2*length;if(headWidth===undefined)headWidth=0.2*headLength;this.line.scale.set(1,length,1);this.line.updateMatrix();this.cone.scale.set(headWidth,headLength,headWidth);this.cone.position.y=length;this.cone.updateMatrix();};THREE.ArrowHelper.prototype.setColor=function(hex){this.line.material.color.setHex(hex);this.cone.material.color.setHex(hex);};THREE.BoxHelper=function(object){var vertices=[new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,-1,-1)];this.vertices=vertices;var geometry=new THREE.Geometry();geometry.vertices.push(vertices[0],vertices[1],vertices[1],vertices[2],vertices[2],vertices[3],vertices[3],vertices[0],vertices[4],vertices[5],vertices[5],vertices[6],vertices[6],vertices[7],vertices[7],vertices[4],vertices[0],vertices[4],vertices[1],vertices[5],vertices[2],vertices[6],vertices[3],vertices[7]);THREE.Line.call(this,geometry,new THREE.LineBasicMaterial({color:0xffff00}),THREE.LinePieces);if(object!==undefined){this.update(object);}};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);THREE.BoxHelper.prototype.update=function(object){var geometry=object.geometry;if(geometry.boundingBox===null){geometry.computeBoundingBox();}var min=geometry.boundingBox.min;var max=geometry.boundingBox.max;var vertices=this.vertices;vertices[0].set(max.x,max.y,max.z);vertices[1].set(min.x,max.y,max.z);vertices[2].set(min.x,min.y,max.z);vertices[3].set(max.x,min.y,max.z);vertices[4].set(max.x,max.y,min.z);vertices[5].set(min.x,max.y,min.z);vertices[6].set(min.x,min.y,min.z);vertices[7].set(max.x,min.y,min.z);this.geometry.computeBoundingSphere();this.geometry.verticesNeedUpdate=true;this.matrixAutoUpdate=false;this.matrixWorld=object.matrixWorld;};THREE.BoundingBoxHelper=function(object,hex){var color=hex!==undefined?hex:0x888888;this.object=object;this.box=new THREE.Box3();THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:color,wireframe:true}));};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position);};THREE.CameraHelper=function(camera){var geometry=new THREE.Geometry();var material=new THREE.LineBasicMaterial({color:0xffffff,vertexColors:THREE.FaceColors});var pointMap={};var hexFrustum=0xffaa00;var hexCone=0xff0000;var hexUp=0x00aaff;var hexTarget=0xffffff;var hexCross=0x333333;addLine(\"n1\",\"n2\",hexFrustum);addLine(\"n2\",\"n4\",hexFrustum);addLine(\"n4\",\"n3\",hexFrustum);addLine(\"n3\",\"n1\",hexFrustum);addLine(\"f1\",\"f2\",hexFrustum);addLine(\"f2\",\"f4\",hexFrustum);addLine(\"f4\",\"f3\",hexFrustum);addLine(\"f3\",\"f1\",hexFrustum);addLine(\"n1\",\"f1\",hexFrustum);addLine(\"n2\",\"f2\",hexFrustum);addLine(\"n3\",\"f3\",hexFrustum);addLine(\"n4\",\"f4\",hexFrustum);addLine(\"p\",\"n1\",hexCone);addLine(\"p\",\"n2\",hexCone);addLine(\"p\",\"n3\",hexCone);addLine(\"p\",\"n4\",hexCone);addLine(\"u1\",\"u2\",hexUp);addLine(\"u2\",\"u3\",hexUp);addLine(\"u3\",\"u1\",hexUp);addLine(\"c\",\"t\",hexTarget);addLine(\"p\",\"c\",hexCross);addLine(\"cn1\",\"cn2\",hexCross);addLine(\"cn3\",\"cn4\",hexCross);addLine(\"cf1\",\"cf2\",hexCross);addLine(\"cf3\",\"cf4\",hexCross);function addLine(a,b,hex){addPoint(a,hex);addPoint(b,hex);}function addPoint(id,hex){geometry.vertices.push(new THREE.Vector3());geometry.colors.push(new THREE.Color(hex));if(pointMap[id]===undefined){pointMap[id]=[];}pointMap[id].push(geometry.vertices.length-1);}THREE.Line.call(this,geometry,material,THREE.LinePieces);this.camera=camera;this.matrixWorld=camera.matrixWorld;this.matrixAutoUpdate=false;this.pointMap=pointMap;this.update();};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.update=function(){var vector=new THREE.Vector3();var camera=new THREE.Camera();var projector=new THREE.Projector();return function(){var scope=this;var w=1,h=1;camera.projectionMatrix.copy(this.camera.projectionMatrix);setPoint(\"c\",0,0,-1);setPoint(\"t\",0,0,1);setPoint(\"n1\",-w,-h,-1);setPoint(\"n2\",w,-h,-1);setPoint(\"n3\",-w,h,-1);setPoint(\"n4\",w,h,-1);setPoint(\"f1\",-w,-h,1);setPoint(\"f2\",w,-h,1);setPoint(\"f3\",-w,h,1);setPoint(\"f4\",w,h,1);setPoint(\"u1\",w*0.7,h*1.1,-1);setPoint(\"u2\",-w*0.7,h*1.1,-1);setPoint(\"u3\",0,h*2,-1);setPoint(\"cf1\",-w,0,1);setPoint(\"cf2\",w,0,1);setPoint(\"cf3\",0,-h,1);setPoint(\"cf4\",0,h,1);setPoint(\"cn1\",-w,0,-1);setPoint(\"cn2\",w,0,-1);setPoint(\"cn3\",0,-h,-1);setPoint(\"cn4\",0,h,-1);function setPoint(point,x,y,z){vector.set(x,y,z);projector.unprojectVector(vector,camera);var points=scope.pointMap[point];if(points!==undefined){for(var i=0,il=points.length;i<il;i++){scope.geometry.vertices[points[i]].copy(vector);}}}this.geometry.verticesNeedUpdate=true;};}();THREE.DirectionalLightHelper=function(light,size){THREE.Object3D.call(this);this.light=light;this.light.updateMatrixWorld();this.matrixWorld=light.matrixWorld;this.matrixAutoUpdate=false;size=size||1;var geometry=new THREE.PlaneGeometry(size,size);var material=new THREE.MeshBasicMaterial({wireframe:true,fog:false});material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Mesh(geometry,material);this.add(this.lightPlane);geometry=new THREE.Geometry();geometry.vertices.push(new THREE.Vector3());geometry.vertices.push(new THREE.Vector3());material=new THREE.LineBasicMaterial({fog:false});material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(geometry,material);this.add(this.targetLine);this.update();};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose();};THREE.DirectionalLightHelper.prototype.update=function(){var v1=new THREE.Vector3();var v2=new THREE.Vector3();var v3=new THREE.Vector3();return function(){v1.setFromMatrixPosition(this.light.matrixWorld);v2.setFromMatrixPosition(this.light.target.matrixWorld);v3.subVectors(v2,v1);this.lightPlane.lookAt(v3);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(v3);this.targetLine.geometry.verticesNeedUpdate=true;this.targetLine.material.color.copy(this.lightPlane.material.color);};}();THREE.EdgesHelper=function(object,hex){var color=hex!==undefined?hex:0xffffff;var edge=[0,0],hash={};var sortFunction=function sortFunction(a,b){return a-b;};var keys=['a','b','c'];var geometry=new THREE.BufferGeometry();var geometry2=object.geometry.clone();geometry2.mergeVertices();geometry2.computeFaceNormals();var vertices=geometry2.vertices;var faces=geometry2.faces;var numEdges=0;for(var i=0,l=faces.length;i<l;i++){var face=faces[i];for(var j=0;j<3;j++){edge[0]=face[keys[j]];edge[1]=face[keys[(j+1)%3]];edge.sort(sortFunction);var key=edge.toString();if(hash[key]===undefined){hash[key]={vert1:edge[0],vert2:edge[1],face1:i,face2:undefined};numEdges++;}else{hash[key].face2=i;}}}geometry.addAttribute('position',Float32Array,2*numEdges,3);var coords=geometry.attributes.position.array;var index=0;for(var key in hash){var h=hash[key];if(h.face2===undefined||faces[h.face1].normal.dot(faces[h.face2].normal)<0.9999){var vertex=vertices[h.vert1];coords[index++]=vertex.x;coords[index++]=vertex.y;coords[index++]=vertex.z;vertex=vertices[h.vert2];coords[index++]=vertex.x;coords[index++]=vertex.y;coords[index++]=vertex.z;}}THREE.Line.call(this,geometry,new THREE.LineBasicMaterial({color:color}),THREE.LinePieces);this.matrixAutoUpdate=false;this.matrixWorld=object.matrixWorld;};THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype);THREE.FaceNormalsHelper=function(object,size,hex,linewidth){this.object=object;this.size=size!==undefined?size:1;var color=hex!==undefined?hex:0xffff00;var width=linewidth!==undefined?linewidth:1;var geometry=new THREE.Geometry();var faces=this.object.geometry.faces;for(var i=0,l=faces.length;i<l;i++){geometry.vertices.push(new THREE.Vector3());geometry.vertices.push(new THREE.Vector3());}THREE.Line.call(this,geometry,new THREE.LineBasicMaterial({color:color,linewidth:width}),THREE.LinePieces);this.matrixAutoUpdate=false;this.normalMatrix=new THREE.Matrix3();this.update();};THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.FaceNormalsHelper.prototype.update=function(object){var v1=new THREE.Vector3();return function(object){this.object.updateMatrixWorld(true);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);var vertices=this.geometry.vertices;var faces=this.object.geometry.faces;var worldMatrix=this.object.matrixWorld;for(var i=0,l=faces.length;i<l;i++){var face=faces[i];v1.copy(face.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);var idx=2*i;vertices[idx].copy(face.centroid).applyMatrix4(worldMatrix);vertices[idx+1].addVectors(vertices[idx],v1);}this.geometry.verticesNeedUpdate=true;return this;};}();THREE.GridHelper=function(size,step){var geometry=new THREE.Geometry();var material=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(0x444444);this.color2=new THREE.Color(0x888888);for(var i=-size;i<=size;i+=step){geometry.vertices.push(new THREE.Vector3(-size,0,i),new THREE.Vector3(size,0,i),new THREE.Vector3(i,0,-size),new THREE.Vector3(i,0,size));var color=i===0?this.color1:this.color2;geometry.colors.push(color,color,color,color);}THREE.Line.call(this,geometry,material,THREE.LinePieces);};THREE.GridHelper.prototype=Object.create(THREE.Line.prototype);THREE.GridHelper.prototype.setColors=function(colorCenterLine,colorGrid){this.color1.set(colorCenterLine);this.color2.set(colorGrid);this.geometry.colorsNeedUpdate=true;};THREE.HemisphereLightHelper=function(light,sphereSize,arrowLength,domeSize){THREE.Object3D.call(this);this.light=light;this.light.updateMatrixWorld();this.matrixWorld=light.matrixWorld;this.matrixAutoUpdate=false;this.colors=[new THREE.Color(),new THREE.Color()];var geometry=new THREE.SphereGeometry(sphereSize,4,2);geometry.applyMatrix(new THREE.Matrix4().makeRotationX(-Math.PI/2));for(var i=0,il=8;i<il;i++){geometry.faces[i].color=this.colors[i<4?0:1];}var material=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:true});this.lightSphere=new THREE.Mesh(geometry,material);this.add(this.lightSphere);this.update();};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose();};THREE.HemisphereLightHelper.prototype.update=function(){var vector=new THREE.Vector3();return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(vector.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=true;};}();THREE.PointLightHelper=function(light,sphereSize){this.light=light;this.light.updateMatrixWorld();var geometry=new THREE.SphereGeometry(sphereSize,4,2);var material=new THREE.MeshBasicMaterial({wireframe:true,fog:false});material.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,geometry,material);this.matrixWorld=this.light.matrixWorld;this.matrixAutoUpdate=false;};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose();};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);};THREE.SpotLightHelper=function(light){THREE.Object3D.call(this);this.light=light;this.light.updateMatrixWorld();this.matrixWorld=light.matrixWorld;this.matrixAutoUpdate=false;var geometry=new THREE.CylinderGeometry(0,1,1,8,1,true);geometry.applyMatrix(new THREE.Matrix4().makeTranslation(0,-0.5,0));geometry.applyMatrix(new THREE.Matrix4().makeRotationX(-Math.PI/2));var material=new THREE.MeshBasicMaterial({wireframe:true,fog:false});this.cone=new THREE.Mesh(geometry,material);this.add(this.cone);this.update();};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose();};THREE.SpotLightHelper.prototype.update=function(){var vector=new THREE.Vector3();var vector2=new THREE.Vector3();return function(){var coneLength=this.light.distance?this.light.distance:10000;var coneWidth=coneLength*Math.tan(this.light.angle);this.cone.scale.set(coneWidth,coneWidth,coneLength);vector.setFromMatrixPosition(this.light.matrixWorld);vector2.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(vector2.sub(vector));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);};}();THREE.VertexNormalsHelper=function(object,size,hex,linewidth){this.object=object;this.size=size!==undefined?size:1;var color=hex!==undefined?hex:0xff0000;var width=linewidth!==undefined?linewidth:1;var geometry=new THREE.Geometry();var vertices=object.geometry.vertices;var faces=object.geometry.faces;for(var i=0,l=faces.length;i<l;i++){var face=faces[i];for(var j=0,jl=face.vertexNormals.length;j<jl;j++){geometry.vertices.push(new THREE.Vector3());geometry.vertices.push(new THREE.Vector3());}}THREE.Line.call(this,geometry,new THREE.LineBasicMaterial({color:color,linewidth:width}),THREE.LinePieces);this.matrixAutoUpdate=false;this.normalMatrix=new THREE.Matrix3();this.update();};THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexNormalsHelper.prototype.update=function(object){var v1=new THREE.Vector3();return function(object){var keys=['a','b','c','d'];this.object.updateMatrixWorld(true);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);var vertices=this.geometry.vertices;var verts=this.object.geometry.vertices;var faces=this.object.geometry.faces;var worldMatrix=this.object.matrixWorld;var idx=0;for(var i=0,l=faces.length;i<l;i++){var face=faces[i];for(var j=0,jl=face.vertexNormals.length;j<jl;j++){var vertexId=face[keys[j]];var vertex=verts[vertexId];var normal=face.vertexNormals[j];vertices[idx].copy(vertex).applyMatrix4(worldMatrix);v1.copy(normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);v1.add(vertices[idx]);idx=idx+1;vertices[idx].copy(v1);idx=idx+1;}}this.geometry.verticesNeedUpdate=true;return this;};}();THREE.VertexTangentsHelper=function(object,size,hex,linewidth){this.object=object;this.size=size!==undefined?size:1;var color=hex!==undefined?hex:0x0000ff;var width=linewidth!==undefined?linewidth:1;var geometry=new THREE.Geometry();var vertices=object.geometry.vertices;var faces=object.geometry.faces;for(var i=0,l=faces.length;i<l;i++){var face=faces[i];for(var j=0,jl=face.vertexTangents.length;j<jl;j++){geometry.vertices.push(new THREE.Vector3());geometry.vertices.push(new THREE.Vector3());}}THREE.Line.call(this,geometry,new THREE.LineBasicMaterial({color:color,linewidth:width}),THREE.LinePieces);this.matrixAutoUpdate=false;this.update();};THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexTangentsHelper.prototype.update=function(object){var v1=new THREE.Vector3();return function(object){var keys=['a','b','c','d'];this.object.updateMatrixWorld(true);var vertices=this.geometry.vertices;var verts=this.object.geometry.vertices;var faces=this.object.geometry.faces;var worldMatrix=this.object.matrixWorld;var idx=0;for(var i=0,l=faces.length;i<l;i++){var face=faces[i];for(var j=0,jl=face.vertexTangents.length;j<jl;j++){var vertexId=face[keys[j]];var vertex=verts[vertexId];var tangent=face.vertexTangents[j];vertices[idx].copy(vertex).applyMatrix4(worldMatrix);v1.copy(tangent).transformDirection(worldMatrix).multiplyScalar(this.size);v1.add(vertices[idx]);idx=idx+1;vertices[idx].copy(v1);idx=idx+1;}}this.geometry.verticesNeedUpdate=true;return this;};}();THREE.WireframeHelper=function(object,hex){var color=hex!==undefined?hex:0xffffff;var edge=[0,0],hash={};var sortFunction=function sortFunction(a,b){return a-b;};var keys=['a','b','c'];var geometry=new THREE.BufferGeometry();if(object.geometry instanceof THREE.Geometry){var vertices=object.geometry.vertices;var faces=object.geometry.faces;var numEdges=0;var edges=new Uint32Array(6*faces.length);for(var i=0,l=faces.length;i<l;i++){var face=faces[i];for(var j=0;j<3;j++){edge[0]=face[keys[j]];edge[1]=face[keys[(j+1)%3]];edge.sort(sortFunction);var key=edge.toString();if(hash[key]===undefined){edges[2*numEdges]=edge[0];edges[2*numEdges+1]=edge[1];hash[key]=true;numEdges++;}}}geometry.addAttribute('position',Float32Array,2*numEdges,3);var coords=geometry.attributes.position.array;for(var i=0,l=numEdges;i<l;i++){for(var j=0;j<2;j++){var vertex=vertices[edges[2*i+j]];var index=6*i+3*j;coords[index+0]=vertex.x;coords[index+1]=vertex.y;coords[index+2]=vertex.z;}}}else if(object.geometry instanceof THREE.BufferGeometry&&object.geometry.attributes.index!==undefined){var vertices=object.geometry.attributes.position.array;var indices=object.geometry.attributes.index.array;var offsets=object.geometry.offsets;var numEdges=0;var edges=new Uint32Array(2*indices.length);for(var o=0,ol=offsets.length;o<ol;++o){var start=offsets[o].start;var count=offsets[o].count;var index=offsets[o].index;for(var i=start,il=start+count;i<il;i+=3){for(var j=0;j<3;j++){edge[0]=index+indices[i+j];edge[1]=index+indices[i+(j+1)%3];edge.sort(sortFunction);var key=edge.toString();if(hash[key]===undefined){edges[2*numEdges]=edge[0];edges[2*numEdges+1]=edge[1];hash[key]=true;numEdges++;}}}}geometry.addAttribute('position',Float32Array,2*numEdges,3);var coords=geometry.attributes.position.array;for(var i=0,l=numEdges;i<l;i++){for(var j=0;j<2;j++){var index=6*i+3*j;var index2=3*edges[2*i+j];coords[index+0]=vertices[index2];coords[index+1]=vertices[index2+1];coords[index+2]=vertices[index2+2];}}}else if(object.geometry instanceof THREE.BufferGeometry){var vertices=object.geometry.attributes.position.array;var numEdges=vertices.length/3;var numTris=numEdges/3;geometry.addAttribute('position',Float32Array,2*numEdges,3);var coords=geometry.attributes.position.array;for(var i=0,l=numTris;i<l;i++){for(var j=0;j<3;j++){var index=18*i+6*j;var index1=9*i+3*j;coords[index+0]=vertices[index1];coords[index+1]=vertices[index1+1];coords[index+2]=vertices[index1+2];var index2=9*i+3*((j+1)%3);coords[index+3]=vertices[index2];coords[index+4]=vertices[index2+1];coords[index+5]=vertices[index2+2];}}}THREE.Line.call(this,geometry,new THREE.LineBasicMaterial({color:color}),THREE.LinePieces);this.matrixAutoUpdate=false;this.matrixWorld=object.matrixWorld;};THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype);THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(renderCallback){};};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(texture,size,distance,blending,color){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3();this.customUpdateCallback=undefined;if(texture!==undefined){this.add(texture,size,distance,blending,color);}};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(texture,size,distance,blending,color,opacity){if(size===undefined)size=-1;if(distance===undefined)distance=0;if(opacity===undefined)opacity=1;if(color===undefined)color=new THREE.Color(0xffffff);if(blending===undefined)blending=THREE.NormalBlending;distance=Math.min(distance,Math.max(0,distance));this.lensFlares.push({texture:texture,size:size,distance:distance,x:0,y:0,z:0,scale:1,rotation:1,opacity:opacity,color:color,blending:blending});};THREE.LensFlare.prototype.updateLensFlares=function(){var f,fl=this.lensFlares.length;var flare;var vecX=-this.positionScreen.x*2;var vecY=-this.positionScreen.y*2;for(f=0;f<fl;f++){flare=this.lensFlares[f];flare.x=this.positionScreen.x+vecX*flare.distance;flare.y=this.positionScreen.y+vecY*flare.distance;flare.wantedRotation=flare.x*Math.PI*0.25;flare.rotation+=(flare.wantedRotation-flare.rotation)*0.25;}};THREE.MorphBlendMesh=function(geometry,material){THREE.Mesh.call(this,geometry,material);this.animationsMap={};this.animationsList=[];var numFrames=this.geometry.morphTargets.length;var name=\"__default\";var startFrame=0;var endFrame=numFrames-1;var fps=numFrames/1;this.createAnimation(name,startFrame,endFrame,fps);this.setAnimationWeight(name,1);};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.createAnimation=function(name,start,end,fps){var animation={startFrame:start,endFrame:end,length:end-start+1,fps:fps,duration:(end-start)/fps,lastFrame:0,currentFrame:0,active:false,time:0,direction:1,weight:1,directionBackwards:false,mirroredLoop:false};this.animationsMap[name]=animation;this.animationsList.push(animation);};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(fps){var pattern=/([a-z]+)(\\d+)/;var firstAnimation,frameRanges={};var geometry=this.geometry;for(var i=0,il=geometry.morphTargets.length;i<il;i++){var morph=geometry.morphTargets[i];var chunks=morph.name.match(pattern);if(chunks&&chunks.length>1){var name=chunks[1];var num=chunks[2];if(!frameRanges[name])frameRanges[name]={start:Infinity,end:-Infinity};var range=frameRanges[name];if(i<range.start)range.start=i;if(i>range.end)range.end=i;if(!firstAnimation)firstAnimation=name;}}for(var name in frameRanges){var range=frameRanges[name];this.createAnimation(name,range.start,range.end,fps);}this.firstAnimation=firstAnimation;};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(name){var animation=this.animationsMap[name];if(animation){animation.direction=1;animation.directionBackwards=false;}};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(name){var animation=this.animationsMap[name];if(animation){animation.direction=-1;animation.directionBackwards=true;}};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(name,fps){var animation=this.animationsMap[name];if(animation){animation.fps=fps;animation.duration=(animation.end-animation.start)/animation.fps;}};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(name,duration){var animation=this.animationsMap[name];if(animation){animation.duration=duration;animation.fps=(animation.end-animation.start)/animation.duration;}};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(name,weight){var animation=this.animationsMap[name];if(animation){animation.weight=weight;}};THREE.MorphBlendMesh.prototype.setAnimationTime=function(name,time){var animation=this.animationsMap[name];if(animation){animation.time=time;}};THREE.MorphBlendMesh.prototype.getAnimationTime=function(name){var time=0;var animation=this.animationsMap[name];if(animation){time=animation.time;}return time;};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(name){var duration=-1;var animation=this.animationsMap[name];if(animation){duration=animation.duration;}return duration;};THREE.MorphBlendMesh.prototype.playAnimation=function(name){var animation=this.animationsMap[name];if(animation){animation.time=0;animation.active=true;}else{THREE.onwarning(\"animation[\"+name+\"] undefined\");}};THREE.MorphBlendMesh.prototype.stopAnimation=function(name){var animation=this.animationsMap[name];if(animation){animation.active=false;}};THREE.MorphBlendMesh.prototype.update=function(delta){for(var i=0,il=this.animationsList.length;i<il;i++){var animation=this.animationsList[i];if(!animation.active)continue;var frameTime=animation.duration/animation.length;animation.time+=animation.direction*delta;if(animation.mirroredLoop){if(animation.time>animation.duration||animation.time<0){animation.direction*=-1;if(animation.time>animation.duration){animation.time=animation.duration;animation.directionBackwards=true;}if(animation.time<0){animation.time=0;animation.directionBackwards=false;}}}else{animation.time=animation.time%animation.duration;if(animation.time<0)animation.time+=animation.duration;}var keyframe=animation.startFrame+THREE.Math.clamp(Math.floor(animation.time/frameTime),0,animation.length-1);var weight=animation.weight;if(keyframe!==animation.currentFrame){this.morphTargetInfluences[animation.lastFrame]=0;this.morphTargetInfluences[animation.currentFrame]=1*weight;this.morphTargetInfluences[keyframe]=0;animation.lastFrame=animation.currentFrame;animation.currentFrame=keyframe;}var mix=animation.time%frameTime/frameTime;if(animation.directionBackwards)mix=1-mix;this.morphTargetInfluences[animation.currentFrame]=mix*weight;this.morphTargetInfluences[animation.lastFrame]=(1-mix)*weight;}};THREE.LensFlarePlugin=function(){var _gl,_renderer,_precision,_lensFlare={};this.init=function(renderer){_gl=renderer.context;_renderer=renderer;_precision=renderer.getPrecision();_lensFlare.vertices=new Float32Array(8+8);_lensFlare.faces=new Uint16Array(6);var i=0;_lensFlare.vertices[i++]=-1;_lensFlare.vertices[i++]=-1;_lensFlare.vertices[i++]=0;_lensFlare.vertices[i++]=0;_lensFlare.vertices[i++]=1;_lensFlare.vertices[i++]=-1;_lensFlare.vertices[i++]=1;_lensFlare.vertices[i++]=0;_lensFlare.vertices[i++]=1;_lensFlare.vertices[i++]=1;_lensFlare.vertices[i++]=1;_lensFlare.vertices[i++]=1;_lensFlare.vertices[i++]=-1;_lensFlare.vertices[i++]=1;_lensFlare.vertices[i++]=0;_lensFlare.vertices[i++]=1;i=0;_lensFlare.faces[i++]=0;_lensFlare.faces[i++]=1;_lensFlare.faces[i++]=2;_lensFlare.faces[i++]=0;_lensFlare.faces[i++]=2;_lensFlare.faces[i++]=3;_lensFlare.vertexBuffer=_gl.createBuffer();_lensFlare.elementBuffer=_gl.createBuffer();_gl.bindBuffer(_gl.ARRAY_BUFFER,_lensFlare.vertexBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,_lensFlare.vertices,_gl.STATIC_DRAW);_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,_lensFlare.elementBuffer);_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,_lensFlare.faces,_gl.STATIC_DRAW);_lensFlare.tempTexture=_gl.createTexture();_lensFlare.occlusionTexture=_gl.createTexture();_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.tempTexture);_gl.texImage2D(_gl.TEXTURE_2D,0,_gl.RGB,16,16,0,_gl.RGB,_gl.UNSIGNED_BYTE,null);_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_WRAP_S,_gl.CLAMP_TO_EDGE);_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_WRAP_T,_gl.CLAMP_TO_EDGE);_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_MAG_FILTER,_gl.NEAREST);_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_MIN_FILTER,_gl.NEAREST);_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.occlusionTexture);_gl.texImage2D(_gl.TEXTURE_2D,0,_gl.RGBA,16,16,0,_gl.RGBA,_gl.UNSIGNED_BYTE,null);_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_WRAP_S,_gl.CLAMP_TO_EDGE);_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_WRAP_T,_gl.CLAMP_TO_EDGE);_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_MAG_FILTER,_gl.NEAREST);_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_MIN_FILTER,_gl.NEAREST);if(_gl.getParameter(_gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0){_lensFlare.hasVertexTexture=false;_lensFlare.program=createProgram(THREE.ShaderFlares[\"lensFlare\"],_precision);}else{_lensFlare.hasVertexTexture=true;_lensFlare.program=createProgram(THREE.ShaderFlares[\"lensFlareVertexTexture\"],_precision);}_lensFlare.attributes={};_lensFlare.uniforms={};_lensFlare.attributes.vertex=_gl.getAttribLocation(_lensFlare.program,\"position\");_lensFlare.attributes.uv=_gl.getAttribLocation(_lensFlare.program,\"uv\");_lensFlare.uniforms.renderType=_gl.getUniformLocation(_lensFlare.program,\"renderType\");_lensFlare.uniforms.map=_gl.getUniformLocation(_lensFlare.program,\"map\");_lensFlare.uniforms.occlusionMap=_gl.getUniformLocation(_lensFlare.program,\"occlusionMap\");_lensFlare.uniforms.opacity=_gl.getUniformLocation(_lensFlare.program,\"opacity\");_lensFlare.uniforms.color=_gl.getUniformLocation(_lensFlare.program,\"color\");_lensFlare.uniforms.scale=_gl.getUniformLocation(_lensFlare.program,\"scale\");_lensFlare.uniforms.rotation=_gl.getUniformLocation(_lensFlare.program,\"rotation\");_lensFlare.uniforms.screenPosition=_gl.getUniformLocation(_lensFlare.program,\"screenPosition\");};this.render=function(scene,camera,viewportWidth,viewportHeight){var flares=scene.__webglFlares,nFlares=flares.length;if(!nFlares)return;var tempPosition=new THREE.Vector3();var invAspect=viewportHeight/viewportWidth,halfViewportWidth=viewportWidth*0.5,halfViewportHeight=viewportHeight*0.5;var size=16/viewportHeight,scale=new THREE.Vector2(size*invAspect,size);var screenPosition=new THREE.Vector3(1,1,0),screenPositionPixels=new THREE.Vector2(1,1);var uniforms=_lensFlare.uniforms,attributes=_lensFlare.attributes;_gl.useProgram(_lensFlare.program);_gl.enableVertexAttribArray(_lensFlare.attributes.vertex);_gl.enableVertexAttribArray(_lensFlare.attributes.uv);_gl.uniform1i(uniforms.occlusionMap,0);_gl.uniform1i(uniforms.map,1);_gl.bindBuffer(_gl.ARRAY_BUFFER,_lensFlare.vertexBuffer);_gl.vertexAttribPointer(attributes.vertex,2,_gl.FLOAT,false,2*8,0);_gl.vertexAttribPointer(attributes.uv,2,_gl.FLOAT,false,2*8,8);_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,_lensFlare.elementBuffer);_gl.disable(_gl.CULL_FACE);_gl.depthMask(false);var i,j,jl,flare,sprite;for(i=0;i<nFlares;i++){size=16/viewportHeight;scale.set(size*invAspect,size);flare=flares[i];tempPosition.set(flare.matrixWorld.elements[12],flare.matrixWorld.elements[13],flare.matrixWorld.elements[14]);tempPosition.applyMatrix4(camera.matrixWorldInverse);tempPosition.applyProjection(camera.projectionMatrix);screenPosition.copy(tempPosition);screenPositionPixels.x=screenPosition.x*halfViewportWidth+halfViewportWidth;screenPositionPixels.y=screenPosition.y*halfViewportHeight+halfViewportHeight;if(_lensFlare.hasVertexTexture||screenPositionPixels.x>0&&screenPositionPixels.x<viewportWidth&&screenPositionPixels.y>0&&screenPositionPixels.y<viewportHeight){_gl.activeTexture(_gl.TEXTURE1);_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.tempTexture);_gl.copyTexImage2D(_gl.TEXTURE_2D,0,_gl.RGB,screenPositionPixels.x-8,screenPositionPixels.y-8,16,16,0);_gl.uniform1i(uniforms.renderType,0);_gl.uniform2f(uniforms.scale,scale.x,scale.y);_gl.uniform3f(uniforms.screenPosition,screenPosition.x,screenPosition.y,screenPosition.z);_gl.disable(_gl.BLEND);_gl.enable(_gl.DEPTH_TEST);_gl.drawElements(_gl.TRIANGLES,6,_gl.UNSIGNED_SHORT,0);_gl.activeTexture(_gl.TEXTURE0);_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.occlusionTexture);_gl.copyTexImage2D(_gl.TEXTURE_2D,0,_gl.RGBA,screenPositionPixels.x-8,screenPositionPixels.y-8,16,16,0);_gl.uniform1i(uniforms.renderType,1);_gl.disable(_gl.DEPTH_TEST);_gl.activeTexture(_gl.TEXTURE1);_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.tempTexture);_gl.drawElements(_gl.TRIANGLES,6,_gl.UNSIGNED_SHORT,0);flare.positionScreen.copy(screenPosition);if(flare.customUpdateCallback){flare.customUpdateCallback(flare);}else{flare.updateLensFlares();}_gl.uniform1i(uniforms.renderType,2);_gl.enable(_gl.BLEND);for(j=0,jl=flare.lensFlares.length;j<jl;j++){sprite=flare.lensFlares[j];if(sprite.opacity>0.001&&sprite.scale>0.001){screenPosition.x=sprite.x;screenPosition.y=sprite.y;screenPosition.z=sprite.z;size=sprite.size*sprite.scale/viewportHeight;scale.x=size*invAspect;scale.y=size;_gl.uniform3f(uniforms.screenPosition,screenPosition.x,screenPosition.y,screenPosition.z);_gl.uniform2f(uniforms.scale,scale.x,scale.y);_gl.uniform1f(uniforms.rotation,sprite.rotation);_gl.uniform1f(uniforms.opacity,sprite.opacity);_gl.uniform3f(uniforms.color,sprite.color.r,sprite.color.g,sprite.color.b);_renderer.setBlending(sprite.blending,sprite.blendEquation,sprite.blendSrc,sprite.blendDst);_renderer.setTexture(sprite.texture,1);_gl.drawElements(_gl.TRIANGLES,6,_gl.UNSIGNED_SHORT,0);}}}}_gl.enable(_gl.CULL_FACE);_gl.enable(_gl.DEPTH_TEST);_gl.depthMask(true);};function createProgram(shader,precision){var program=_gl.createProgram();var fragmentShader=_gl.createShader(_gl.FRAGMENT_SHADER);var vertexShader=_gl.createShader(_gl.VERTEX_SHADER);var prefix=\"precision \"+precision+\" float;\\n\";_gl.shaderSource(fragmentShader,prefix+shader.fragmentShader);_gl.shaderSource(vertexShader,prefix+shader.vertexShader);_gl.compileShader(fragmentShader);_gl.compileShader(vertexShader);_gl.attachShader(program,fragmentShader);_gl.attachShader(program,vertexShader);_gl.linkProgram(program);return program;};};THREE.ShadowMapPlugin=function(){var _gl,_renderer,_depthMaterial,_depthMaterialMorph,_depthMaterialSkin,_depthMaterialMorphSkin,_frustum=new THREE.Frustum(),_projScreenMatrix=new THREE.Matrix4(),_min=new THREE.Vector3(),_max=new THREE.Vector3(),_matrixPosition=new THREE.Vector3();this.init=function(renderer){_gl=renderer.context;_renderer=renderer;var depthShader=THREE.ShaderLib[\"depthRGBA\"];var depthUniforms=THREE.UniformsUtils.clone(depthShader.uniforms);_depthMaterial=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms});_depthMaterialMorph=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,morphTargets:true});_depthMaterialSkin=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,skinning:true});_depthMaterialMorphSkin=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,morphTargets:true,skinning:true});_depthMaterial._shadowPass=true;_depthMaterialMorph._shadowPass=true;_depthMaterialSkin._shadowPass=true;_depthMaterialMorphSkin._shadowPass=true;};this.render=function(scene,camera){if(!(_renderer.shadowMapEnabled&&_renderer.shadowMapAutoUpdate))return;this.update(scene,camera);};this.update=function(scene,camera){var i,il,j,jl,n,shadowMap,shadowMatrix,shadowCamera,program,buffer,material,webglObject,object,light,renderList,lights=[],k=0,fog=null;_gl.clearColor(1,1,1,1);_gl.disable(_gl.BLEND);_gl.enable(_gl.CULL_FACE);_gl.frontFace(_gl.CCW);if(_renderer.shadowMapCullFace===THREE.CullFaceFront){_gl.cullFace(_gl.FRONT);}else{_gl.cullFace(_gl.BACK);}_renderer.setDepthTest(true);for(i=0,il=scene.__lights.length;i<il;i++){light=scene.__lights[i];if(!light.castShadow)continue;if(light instanceof THREE.DirectionalLight&&light.shadowCascade){for(n=0;n<light.shadowCascadeCount;n++){var virtualLight;if(!light.shadowCascadeArray[n]){virtualLight=createVirtualLight(light,n);virtualLight.originalCamera=camera;var gyro=new THREE.Gyroscope();gyro.position=light.shadowCascadeOffset;gyro.add(virtualLight);gyro.add(virtualLight.target);camera.add(gyro);light.shadowCascadeArray[n]=virtualLight;}else{virtualLight=light.shadowCascadeArray[n];}updateVirtualLight(light,n);lights[k]=virtualLight;k++;}}else{lights[k]=light;k++;}}for(i=0,il=lights.length;i<il;i++){light=lights[i];if(!light.shadowMap){var shadowFilter=THREE.NearestFilter;if(_renderer.shadowMapType===THREE.PCFSoftShadowMap){shadowFilter=THREE.NearestFilter;}var pars={minFilter:shadowFilter,magFilter:shadowFilter,format:THREE.RGBAFormat};light.shadowMap=new THREE.WebGLRenderTarget(light.shadowMapWidth,light.shadowMapHeight,pars);light.shadowMapSize=new THREE.Vector2(light.shadowMapWidth,light.shadowMapHeight);light.shadowMatrix=new THREE.Matrix4();}if(!light.shadowCamera){if(light instanceof THREE.SpotLight){light.shadowCamera=new THREE.PerspectiveCamera(light.shadowCameraFov,light.shadowMapWidth/light.shadowMapHeight,light.shadowCameraNear,light.shadowCameraFar);}else if(light instanceof THREE.DirectionalLight){light.shadowCamera=new THREE.OrthographicCamera(light.shadowCameraLeft,light.shadowCameraRight,light.shadowCameraTop,light.shadowCameraBottom,light.shadowCameraNear,light.shadowCameraFar);}else{THREE.onerror(\"Unsupported light type for shadow\");continue;}scene.add(light.shadowCamera);if(scene.autoUpdate===true)scene.updateMatrixWorld();}if(light.shadowCameraVisible&&!light.cameraHelper){light.cameraHelper=new THREE.CameraHelper(light.shadowCamera);light.shadowCamera.add(light.cameraHelper);}if(light.isVirtual&&virtualLight.originalCamera==camera){updateShadowCamera(camera,light);}shadowMap=light.shadowMap;shadowMatrix=light.shadowMatrix;shadowCamera=light.shadowCamera;shadowCamera.position.setFromMatrixPosition(light.matrixWorld);_matrixPosition.setFromMatrixPosition(light.target.matrixWorld);shadowCamera.lookAt(_matrixPosition);shadowCamera.updateMatrixWorld();shadowCamera.matrixWorldInverse.getInverse(shadowCamera.matrixWorld);if(light.cameraHelper)light.cameraHelper.visible=light.shadowCameraVisible;if(light.shadowCameraVisible)light.cameraHelper.update();shadowMatrix.set(0.5,0.0,0.0,0.5,0.0,0.5,0.0,0.5,0.0,0.0,0.5,0.5,0.0,0.0,0.0,1.0);shadowMatrix.multiply(shadowCamera.projectionMatrix);shadowMatrix.multiply(shadowCamera.matrixWorldInverse);_projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix,shadowCamera.matrixWorldInverse);_frustum.setFromMatrix(_projScreenMatrix);_renderer.setRenderTarget(shadowMap);_renderer.clear();renderList=scene.__webglObjects;for(j=0,jl=renderList.length;j<jl;j++){webglObject=renderList[j];object=webglObject.object;webglObject.render=false;if(object.visible&&object.castShadow){if(!(object instanceof THREE.Mesh||object instanceof THREE.ParticleSystem)||!object.frustumCulled||_frustum.intersectsObject(object)){object._modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse,object.matrixWorld);webglObject.render=true;}}}var objectMaterial,useMorphing,useSkinning;for(j=0,jl=renderList.length;j<jl;j++){webglObject=renderList[j];if(webglObject.render){object=webglObject.object;buffer=webglObject.buffer;objectMaterial=getObjectMaterial(object);useMorphing=object.geometry.morphTargets!==undefined&&object.geometry.morphTargets.length>0&&objectMaterial.morphTargets;useSkinning=object instanceof THREE.SkinnedMesh&&objectMaterial.skinning;if(object.customDepthMaterial){material=object.customDepthMaterial;}else if(useSkinning){material=useMorphing?_depthMaterialMorphSkin:_depthMaterialSkin;}else if(useMorphing){material=_depthMaterialMorph;}else{material=_depthMaterial;}if(buffer instanceof THREE.BufferGeometry){_renderer.renderBufferDirect(shadowCamera,scene.__lights,fog,material,buffer,object);}else{_renderer.renderBuffer(shadowCamera,scene.__lights,fog,material,buffer,object);}}}renderList=scene.__webglObjectsImmediate;for(j=0,jl=renderList.length;j<jl;j++){webglObject=renderList[j];object=webglObject.object;if(object.visible&&object.castShadow){object._modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse,object.matrixWorld);_renderer.renderImmediateObject(shadowCamera,scene.__lights,fog,_depthMaterial,object);}}}var clearColor=_renderer.getClearColor(),clearAlpha=_renderer.getClearAlpha();_gl.clearColor(clearColor.r,clearColor.g,clearColor.b,clearAlpha);_gl.enable(_gl.BLEND);if(_renderer.shadowMapCullFace===THREE.CullFaceFront){_gl.cullFace(_gl.BACK);}};function createVirtualLight(light,cascade){var virtualLight=new THREE.DirectionalLight();virtualLight.isVirtual=true;virtualLight.onlyShadow=true;virtualLight.castShadow=true;virtualLight.shadowCameraNear=light.shadowCameraNear;virtualLight.shadowCameraFar=light.shadowCameraFar;virtualLight.shadowCameraLeft=light.shadowCameraLeft;virtualLight.shadowCameraRight=light.shadowCameraRight;virtualLight.shadowCameraBottom=light.shadowCameraBottom;virtualLight.shadowCameraTop=light.shadowCameraTop;virtualLight.shadowCameraVisible=light.shadowCameraVisible;virtualLight.shadowDarkness=light.shadowDarkness;virtualLight.shadowBias=light.shadowCascadeBias[cascade];virtualLight.shadowMapWidth=light.shadowCascadeWidth[cascade];virtualLight.shadowMapHeight=light.shadowCascadeHeight[cascade];virtualLight.pointsWorld=[];virtualLight.pointsFrustum=[];var pointsWorld=virtualLight.pointsWorld,pointsFrustum=virtualLight.pointsFrustum;for(var i=0;i<8;i++){pointsWorld[i]=new THREE.Vector3();pointsFrustum[i]=new THREE.Vector3();}var nearZ=light.shadowCascadeNearZ[cascade];var farZ=light.shadowCascadeFarZ[cascade];pointsFrustum[0].set(-1,-1,nearZ);pointsFrustum[1].set(1,-1,nearZ);pointsFrustum[2].set(-1,1,nearZ);pointsFrustum[3].set(1,1,nearZ);pointsFrustum[4].set(-1,-1,farZ);pointsFrustum[5].set(1,-1,farZ);pointsFrustum[6].set(-1,1,farZ);pointsFrustum[7].set(1,1,farZ);return virtualLight;}function updateVirtualLight(light,cascade){var virtualLight=light.shadowCascadeArray[cascade];virtualLight.position.copy(light.position);virtualLight.target.position.copy(light.target.position);virtualLight.lookAt(virtualLight.target);virtualLight.shadowCameraVisible=light.shadowCameraVisible;virtualLight.shadowDarkness=light.shadowDarkness;virtualLight.shadowBias=light.shadowCascadeBias[cascade];var nearZ=light.shadowCascadeNearZ[cascade];var farZ=light.shadowCascadeFarZ[cascade];var pointsFrustum=virtualLight.pointsFrustum;pointsFrustum[0].z=nearZ;pointsFrustum[1].z=nearZ;pointsFrustum[2].z=nearZ;pointsFrustum[3].z=nearZ;pointsFrustum[4].z=farZ;pointsFrustum[5].z=farZ;pointsFrustum[6].z=farZ;pointsFrustum[7].z=farZ;}function updateShadowCamera(camera,light){var shadowCamera=light.shadowCamera,pointsFrustum=light.pointsFrustum,pointsWorld=light.pointsWorld;_min.set(Infinity,Infinity,Infinity);_max.set(-Infinity,-Infinity,-Infinity);for(var i=0;i<8;i++){var p=pointsWorld[i];p.copy(pointsFrustum[i]);THREE.ShadowMapPlugin.__projector.unprojectVector(p,camera);p.applyMatrix4(shadowCamera.matrixWorldInverse);if(p.x<_min.x)_min.x=p.x;if(p.x>_max.x)_max.x=p.x;if(p.y<_min.y)_min.y=p.y;if(p.y>_max.y)_max.y=p.y;if(p.z<_min.z)_min.z=p.z;if(p.z>_max.z)_max.z=p.z;}shadowCamera.left=_min.x;shadowCamera.right=_max.x;shadowCamera.top=_max.y;shadowCamera.bottom=_min.y;shadowCamera.updateProjectionMatrix();}function getObjectMaterial(object){return object.material instanceof THREE.MeshFaceMaterial?object.material.materials[0]:object.material;};};THREE.ShadowMapPlugin.__projector=new THREE.Projector();THREE.SpritePlugin=function(){var _gl,_renderer,_texture;var vertices,faces,vertexBuffer,elementBuffer;var program,attributes,uniforms;this.init=function(renderer){_gl=renderer.context;_renderer=renderer;vertices=new Float32Array([-0.5,-0.5,0,0,0.5,-0.5,1,0,0.5,0.5,1,1,-0.5,0.5,0,1]);faces=new Uint16Array([0,1,2,0,2,3]);vertexBuffer=_gl.createBuffer();elementBuffer=_gl.createBuffer();_gl.bindBuffer(_gl.ARRAY_BUFFER,vertexBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,vertices,_gl.STATIC_DRAW);_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,elementBuffer);_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,faces,_gl.STATIC_DRAW);program=createProgram();attributes={position:_gl.getAttribLocation(program,'position'),uv:_gl.getAttribLocation(program,'uv')};uniforms={uvOffset:_gl.getUniformLocation(program,'uvOffset'),uvScale:_gl.getUniformLocation(program,'uvScale'),rotation:_gl.getUniformLocation(program,'rotation'),scale:_gl.getUniformLocation(program,'scale'),color:_gl.getUniformLocation(program,'color'),map:_gl.getUniformLocation(program,'map'),opacity:_gl.getUniformLocation(program,'opacity'),modelViewMatrix:_gl.getUniformLocation(program,'modelViewMatrix'),projectionMatrix:_gl.getUniformLocation(program,'projectionMatrix'),fogType:_gl.getUniformLocation(program,'fogType'),fogDensity:_gl.getUniformLocation(program,'fogDensity'),fogNear:_gl.getUniformLocation(program,'fogNear'),fogFar:_gl.getUniformLocation(program,'fogFar'),fogColor:_gl.getUniformLocation(program,'fogColor'),alphaTest:_gl.getUniformLocation(program,'alphaTest')};var canvas=document.createElement('canvas');canvas.width=8;canvas.height=8;var context=canvas.getContext('2d');context.fillStyle='#ffffff';context.fillRect(0,0,canvas.width,canvas.height);_texture=new THREE.Texture(canvas);_texture.needsUpdate=true;};this.render=function(scene,camera,viewportWidth,viewportHeight){var sprites=scene.__webglSprites,nSprites=sprites.length;if(!nSprites)return;_gl.useProgram(program);_gl.enableVertexAttribArray(attributes.position);_gl.enableVertexAttribArray(attributes.uv);_gl.disable(_gl.CULL_FACE);_gl.enable(_gl.BLEND);_gl.bindBuffer(_gl.ARRAY_BUFFER,vertexBuffer);_gl.vertexAttribPointer(attributes.position,2,_gl.FLOAT,false,2*8,0);_gl.vertexAttribPointer(attributes.uv,2,_gl.FLOAT,false,2*8,8);_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,elementBuffer);_gl.uniformMatrix4fv(uniforms.projectionMatrix,false,camera.projectionMatrix.elements);_gl.activeTexture(_gl.TEXTURE0);_gl.uniform1i(uniforms.map,0);var oldFogType=0;var sceneFogType=0;var fog=scene.fog;if(fog){_gl.uniform3f(uniforms.fogColor,fog.color.r,fog.color.g,fog.color.b);if(fog instanceof THREE.Fog){_gl.uniform1f(uniforms.fogNear,fog.near);_gl.uniform1f(uniforms.fogFar,fog.far);_gl.uniform1i(uniforms.fogType,1);oldFogType=1;sceneFogType=1;}else if(fog instanceof THREE.FogExp2){_gl.uniform1f(uniforms.fogDensity,fog.density);_gl.uniform1i(uniforms.fogType,2);oldFogType=2;sceneFogType=2;}}else{_gl.uniform1i(uniforms.fogType,0);oldFogType=0;sceneFogType=0;}var i,sprite,material,fogType,scale=[];for(i=0;i<nSprites;i++){sprite=sprites[i];material=sprite.material;if(sprite.visible===false)continue;sprite._modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,sprite.matrixWorld);sprite.z=-sprite._modelViewMatrix.elements[14];}sprites.sort(painterSortStable);for(i=0;i<nSprites;i++){sprite=sprites[i];if(sprite.visible===false)continue;material=sprite.material;_gl.uniform1f(uniforms.alphaTest,material.alphaTest);_gl.uniformMatrix4fv(uniforms.modelViewMatrix,false,sprite._modelViewMatrix.elements);scale[0]=sprite.scale.x;scale[1]=sprite.scale.y;if(scene.fog&&material.fog){fogType=sceneFogType;}else{fogType=0;}if(oldFogType!==fogType){_gl.uniform1i(uniforms.fogType,fogType);oldFogType=fogType;}if(material.map!==null){_gl.uniform2f(uniforms.uvOffset,material.map.offset.x,material.map.offset.y);_gl.uniform2f(uniforms.uvScale,material.map.repeat.x,material.map.repeat.y);}else{_gl.uniform2f(uniforms.uvOffset,0,0);_gl.uniform2f(uniforms.uvScale,1,1);}_gl.uniform1f(uniforms.opacity,material.opacity);_gl.uniform3f(uniforms.color,material.color.r,material.color.g,material.color.b);_gl.uniform1f(uniforms.rotation,material.rotation);_gl.uniform2fv(uniforms.scale,scale);_renderer.setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst);_renderer.setDepthTest(material.depthTest);_renderer.setDepthWrite(material.depthWrite);if(material.map&&material.map.image&&material.map.image.width){_renderer.setTexture(material.map,0);}else{_renderer.setTexture(_texture,0);}_gl.drawElements(_gl.TRIANGLES,6,_gl.UNSIGNED_SHORT,0);}_gl.enable(_gl.CULL_FACE);};function createProgram(){var program=_gl.createProgram();var vertexShader=_gl.createShader(_gl.VERTEX_SHADER);var fragmentShader=_gl.createShader(_gl.FRAGMENT_SHADER);_gl.shaderSource(vertexShader,['precision '+_renderer.getPrecision()+' float;','uniform mat4 modelViewMatrix;','uniform mat4 projectionMatrix;','uniform float rotation;','uniform vec2 scale;','uniform vec2 uvOffset;','uniform vec2 uvScale;','attribute vec2 position;','attribute vec2 uv;','varying vec2 vUV;','void main() {','vUV = uvOffset + uv * uvScale;','vec2 alignedPosition = position * scale;','vec2 rotatedPosition;','rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;','rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;','vec4 finalPosition;','finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );','finalPosition.xy += rotatedPosition;','finalPosition = projectionMatrix * finalPosition;','gl_Position = finalPosition;','}'].join('\\n'));_gl.shaderSource(fragmentShader,['precision '+_renderer.getPrecision()+' float;','uniform vec3 color;','uniform sampler2D map;','uniform float opacity;','uniform int fogType;','uniform vec3 fogColor;','uniform float fogDensity;','uniform float fogNear;','uniform float fogFar;','uniform float alphaTest;','varying vec2 vUV;','void main() {','vec4 texture = texture2D( map, vUV );','if ( texture.a < alphaTest ) discard;','gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );','if ( fogType > 0 ) {','float depth = gl_FragCoord.z / gl_FragCoord.w;','float fogFactor = 0.0;','if ( fogType == 1 ) {','fogFactor = smoothstep( fogNear, fogFar, depth );','} else {','const float LOG2 = 1.442695;','float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );','fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );','}','gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );','}','}'].join('\\n'));_gl.compileShader(vertexShader);_gl.compileShader(fragmentShader);_gl.attachShader(program,vertexShader);_gl.attachShader(program,fragmentShader);_gl.linkProgram(program);return program;};function painterSortStable(a,b){if(a.z!==b.z){return b.z-a.z;}else{return b.id-a.id;}};};THREE.DepthPassPlugin=function(){this.enabled=false;this.renderTarget=null;var _gl,_renderer,_depthMaterial,_depthMaterialMorph,_depthMaterialSkin,_depthMaterialMorphSkin,_frustum=new THREE.Frustum(),_projScreenMatrix=new THREE.Matrix4();this.init=function(renderer){_gl=renderer.context;_renderer=renderer;var depthShader=THREE.ShaderLib[\"depthRGBA\"];var depthUniforms=THREE.UniformsUtils.clone(depthShader.uniforms);_depthMaterial=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms});_depthMaterialMorph=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,morphTargets:true});_depthMaterialSkin=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,skinning:true});_depthMaterialMorphSkin=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,morphTargets:true,skinning:true});_depthMaterial._shadowPass=true;_depthMaterialMorph._shadowPass=true;_depthMaterialSkin._shadowPass=true;_depthMaterialMorphSkin._shadowPass=true;};this.render=function(scene,camera){if(!this.enabled)return;this.update(scene,camera);};this.update=function(scene,camera){var i,il,j,jl,n,program,buffer,material,webglObject,object,light,renderList,fog=null;_gl.clearColor(1,1,1,1);_gl.disable(_gl.BLEND);_renderer.setDepthTest(true);if(scene.autoUpdate===true)scene.updateMatrixWorld();camera.matrixWorldInverse.getInverse(camera.matrixWorld);_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);_frustum.setFromMatrix(_projScreenMatrix);_renderer.setRenderTarget(this.renderTarget);_renderer.clear();renderList=scene.__webglObjects;for(j=0,jl=renderList.length;j<jl;j++){webglObject=renderList[j];object=webglObject.object;webglObject.render=false;if(object.visible){if(!(object instanceof THREE.Mesh||object instanceof THREE.ParticleSystem)||!object.frustumCulled||_frustum.intersectsObject(object)){object._modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld);webglObject.render=true;}}}var objectMaterial,useMorphing,useSkinning;for(j=0,jl=renderList.length;j<jl;j++){webglObject=renderList[j];if(webglObject.render){object=webglObject.object;buffer=webglObject.buffer;if(object instanceof THREE.ParticleSystem&&!object.customDepthMaterial)continue;objectMaterial=getObjectMaterial(object);if(objectMaterial)_renderer.setMaterialFaces(object.material);useMorphing=object.geometry.morphTargets.length>0&&objectMaterial.morphTargets;useSkinning=object instanceof THREE.SkinnedMesh&&objectMaterial.skinning;if(object.customDepthMaterial){material=object.customDepthMaterial;}else if(useSkinning){material=useMorphing?_depthMaterialMorphSkin:_depthMaterialSkin;}else if(useMorphing){material=_depthMaterialMorph;}else{material=_depthMaterial;}if(buffer instanceof THREE.BufferGeometry){_renderer.renderBufferDirect(camera,scene.__lights,fog,material,buffer,object);}else{_renderer.renderBuffer(camera,scene.__lights,fog,material,buffer,object);}}}renderList=scene.__webglObjectsImmediate;for(j=0,jl=renderList.length;j<jl;j++){webglObject=renderList[j];object=webglObject.object;if(object.visible){object._modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld);_renderer.renderImmediateObject(camera,scene.__lights,fog,_depthMaterial,object);}}var clearColor=_renderer.getClearColor(),clearAlpha=_renderer.getClearAlpha();_gl.clearColor(clearColor.r,clearColor.g,clearColor.b,clearAlpha);_gl.enable(_gl.BLEND);};function getObjectMaterial(object){return object.material instanceof THREE.MeshFaceMaterial?object.material.materials[0]:object.material;};};THREE.ShaderFlares={'lensFlareVertexTexture':{vertexShader:[\"uniform lowp int renderType;\",\"uniform vec3 screenPosition;\",\"uniform vec2 scale;\",\"uniform float rotation;\",\"uniform sampler2D occlusionMap;\",\"attribute vec2 position;\",\"attribute vec2 uv;\",\"varying vec2 vUV;\",\"varying float vVisibility;\",\"void main() {\",\"vUV = uv;\",\"vec2 pos = position;\",\"if( renderType == 2 ) {\",\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\"vVisibility =        visibility.r / 9.0;\",\"vVisibility *= 1.0 - visibility.g / 9.0;\",\"vVisibility *=       visibility.b / 9.0;\",\"vVisibility *= 1.0 - visibility.a / 9.0;\",\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\"}\",\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform lowp int renderType;\",\"uniform sampler2D map;\",\"uniform float opacity;\",\"uniform vec3 color;\",\"varying vec2 vUV;\",\"varying float vVisibility;\",\"void main() {\",\"if( renderType == 0 ) {\",\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\"} else if( renderType == 1 ) {\",\"gl_FragColor = texture2D( map, vUV );\",\"} else {\",\"vec4 texture = texture2D( map, vUV );\",\"texture.a *= opacity * vVisibility;\",\"gl_FragColor = texture;\",\"gl_FragColor.rgb *= color;\",\"}\",\"}\"].join(\"\\n\")},'lensFlare':{vertexShader:[\"uniform lowp int renderType;\",\"uniform vec3 screenPosition;\",\"uniform vec2 scale;\",\"uniform float rotation;\",\"attribute vec2 position;\",\"attribute vec2 uv;\",\"varying vec2 vUV;\",\"void main() {\",\"vUV = uv;\",\"vec2 pos = position;\",\"if( renderType == 2 ) {\",\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\"}\",\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"precision mediump float;\",\"uniform lowp int renderType;\",\"uniform sampler2D map;\",\"uniform sampler2D occlusionMap;\",\"uniform float opacity;\",\"uniform vec3 color;\",\"varying vec2 vUV;\",\"void main() {\",\"if( renderType == 0 ) {\",\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\"} else if( renderType == 1 ) {\",\"gl_FragColor = texture2D( map, vUV );\",\"} else {\",\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\"visibility = ( 1.0 - visibility / 4.0 );\",\"vec4 texture = texture2D( map, vUV );\",\"texture.a *= opacity * visibility;\",\"gl_FragColor = texture;\",\"gl_FragColor.rgb *= color;\",\"}\",\"}\"].join(\"\\n\")}};if(true){if(typeof module!=='undefined'&&module.exports){exports=module.exports=THREE;}exports.THREE=THREE;}else{undefined['THREE']=THREE;}\n\n/***/ }),\n\n/***/ 1104:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"page-content\" }, [\n    _c(\"div\", { staticClass: \"image-layout\", attrs: { id: \"site-banner\" } }, [\n      _c(\"img\", { attrs: { src: __webpack_require__(1105) } }),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"image-layout-body\" }, [\n        _c(\"div\", { staticClass: \"canvas-box\", attrs: { id: \"canvasBox\" } }),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"container site-description\" }, [\n          _c(\"h1\", [_vm._v(\"Classic modular front-end framework\")]),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"The front end UI solution for all levels of the front and back apes, the zero threshold open, and the front end for all levels\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"a\",\n            {\n              staticClass: \"text-button large light border margin-top-2\",\n              attrs: { href: \"https://github.com/canknow/Canknow\" }\n            },\n            [_c(\"Icon\", { attrs: { type: \"download\" } }), _vm._v(\"Github\")],\n            1\n          )\n        ])\n      ])\n    ]),\n    _vm._v(\" \"),\n    _c(\n      \"div\",\n      { staticClass: \"section\" },\n      [\n        _c(\n          \"Row\",\n          [\n            _c(\n              \"Column\",\n              {\n                staticClass: \"text-center padding-2 banner-title-wrapper\",\n                attrs: { span: 12 }\n              },\n              [\n                _c(\"h1\", [_vm._v(_vm._s(_vm.author) + \" DESIGNs\")]),\n                _vm._v(\" \"),\n                _c(\"p\", [\n                  _c(\"span\", [\n                    _vm._v(\"Out of the box with china front design solutions\")\n                  ])\n                ])\n              ]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"Column\",\n              { staticClass: \"text-center padding-2\", attrs: { span: 12 } },\n              [\n                _c(\"img\", {\n                  staticClass: \"width-full\",\n                  attrs: {\n                    src:\n                      \"https://www.canvasflip.com/images/home-page/first-fold-image.png\"\n                  }\n                })\n              ]\n            )\n          ],\n          1\n        )\n      ],\n      1\n    ),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container\" }, [\n      _c(\"div\", { staticClass: \"content-wrapper margin-top-2\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"text-wrapper-bottom\" },\n          [\n            _c(\n              \"Row\",\n              [\n                _c(\"Column\", { attrs: { span: 12, md: \"\" } }, [\n                  _c(\"img\", {\n                    staticClass: \"width-full center-block\",\n                    attrs: {\n                      src:\n                        \"https://t.alipayobjects.com/images/T1lyJkXg4aXXXXXXXX.png\"\n                    }\n                  })\n                ]),\n                _vm._v(\" \"),\n                _c(\"Column\", { attrs: { span: 12, md: \"\" } }, [\n                  _c(\"h1\", { staticClass: \"text-center\" }, [\n                    _c(\"span\", [_vm._v(\"Small. Determination. Happiness\")])\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"p\", { staticClass: \"text-center margin-bottom-2\" }, [\n                    _c(\"span\", [\n                      _vm._v(\n                        'This is a medium - background design language dedicated to improving the use of \"users\" and \"designers\".'\n                      )\n                    ])\n                  ])\n                ])\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"image4 bottom-wrapper\" })\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-loader/node_modules/vue-hot-reload-api\")      .rerender(\"data-v-eb8004ea\", esExports)\n  }\n}\n\n/***/ }),\n\n/***/ 1105:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"static/images/star-bg.ba93415.svg\";\n\n/***/ }),\n\n/***/ 872:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_1_vue_loader_lib_selector_type_script_index_0_Index_vue__ = __webpack_require__(940);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_1_vue_loader_lib_selector_type_script_index_0_Index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_1_vue_loader_lib_selector_type_script_index_0_Index_vue__);\n/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_1_vue_loader_lib_selector_type_script_index_0_Index_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_1_vue_loader_lib_selector_type_script_index_0_Index_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_1_vue_loader_lib_template_compiler_index_id_data_v_eb8004ea_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_1_vue_loader_lib_selector_type_template_index_0_Index_vue__ = __webpack_require__(1104);\nvar disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  __webpack_require__(1101)\n}\nvar normalizeComponent = __webpack_require__(1)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_1_vue_loader_lib_selector_type_script_index_0_Index_vue___default.a,\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_1_vue_loader_lib_template_compiler_index_id_data_v_eb8004ea_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_1_vue_loader_lib_selector_type_template_index_0_Index_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"example\\\\src\\\\views\\\\page\\\\Index.vue\"\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-loader/node_modules/vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-eb8004ea\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-eb8004ea\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 875:\n/***/ (function(module, exports) {\n\nmodule.exports = {\"name\":\"canknow\",\"version\":\"5.0.1\",\"keywords\":[\"canknow\",\"vue\",\"vue.js\",\"component\",\"components\",\"ui\",\"framework\"],\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/canknow/Canknow.git\"},\"bugs\":{\"url\":\"https://github.com/canknow/Canknow/issues\"},\"homepage\":\"https://github.com/canknow/Canknow#readme\",\"description\":\"A high quality UI components Library\",\"author\":\"canknow\",\"license\":\"ISC\",\"main\":\"dist/js/canknow.js\",\"files\":[\"dist\",\"src\"],\"engines\":{\"node\":\">= 4.0.0\",\"npm\":\">= 3.0.0\"},\"directories\":{\"example\":\"example\"},\"scripts\":{\"dist:style\":\"gulp --gulpfile build/build-style.js\",\"dist:dev\":\"webpack --config build/lib/webpack.dist.dev.config.js\",\"dist:prod\":\"webpack --config build/lib/webpack.dist.prod.config.js\",\"dist\":\"npm run clean && npm run dist:style && npm run dist:dev && npm run dist:prod\",\"publish\":\"npm run dist && npm publish\",\"clean\":\"rimraf dist\",\"clean:example\":\"rimraf example/dist\",\"example:dev\":\"node build/example/dev-server.js\",\"example:dist\":\"npm run clean:example && webpack --config build/example/webpack.prod.config.js\"},\"dependencies\":{\"async-validator\":\"^1.8.1\",\"axios\":\"^0.17.1\",\"clipboard\":\"^2.0.0\",\"core-js\":\"^2.5.0\",\"deepmerge\":\"^1.5.2\",\"element-resize-detector\":\"^1.1.12\",\"fs\":\"0.0.1-security\",\"lodash.throttle\":\"^4.1.1\",\"moment\":\"^2.20.1\",\"parallax\":\"^0.0.0\",\"popper.js\":\"^0.6.4\",\"postcss-loader\":\"^2.1.0\",\"prettify\":\"^0.1.7\",\"prism\":\"^4.1.2\",\"qs\":\"^6.5.1\",\"resize-observer-polyfill\":\"^1.5.0\",\"swiper\":\"^4.1.6\",\"three\":\"^0.68.0\",\"throttle-debounce\":\"^1.0.1\",\"tinycolor2\":\"^1.4.1\",\"vue\":\"^2.5.9\",\"vue-i18n\":\"7.3.2\",\"vue-qart\":\"^2.1.1\",\"vue-router\":\"3.0.1\",\"vuex\":\"3.0.1\"},\"devDependencies\":{\"amd-optimize\":\"^0.6.1\",\"autoprefixer\":\"^8.1.0\",\"babel\":\"^6.23.0\",\"babel-core\":\"^6.26.0\",\"babel-helper-vue-jsx-merge-props\":\"^2.0.3\",\"babel-loader\":\"^7.1.2\",\"babel-plugin-syntax-jsx\":\"^6.18.0\",\"babel-plugin-transform-vue-jsx\":\"^3.5.0\",\"babel-preset-es2015\":\"^6.24.1\",\"babel-preset-stage-2\":\"^6.24.1\",\"babel-preset-stage-3\":\"^6.24.1\",\"babel-runtime\":\"^6.26.0\",\"chai\":\"^3.5.0\",\"chalk\":\"^2.0.1\",\"compression-webpack-plugin\":\"^1.0.1\",\"copy-webpack-plugin\":\"^4.2.3\",\"css-loader\":\"^0.28.9\",\"es2015\":\"0.0.0\",\"extract-text-webpack-plugin\":\"^2.1.2\",\"file-loader\":\"^0.8.5\",\"friendly-errors-webpack-plugin\":\"^1.6.1\",\"gulp\":\"^3.9.1\",\"gulp-babel\":\"^6.1.2\",\"gulp-clean-css\":\"^3.9.2\",\"gulp-concat\":\"^2.6.1\",\"gulp-minify-css\":\"^1.2.4\",\"gulp-modify-css-urls\":\"^0.2.2\",\"gulp-rename\":\"^1.2.2\",\"gulp-sass\":\"^3.1.0\",\"gulp-scss\":\"^1.4.0\",\"gulp-sourcemaps\":\"^2.6.2\",\"gulp-webpack\":\"^1.5.0\",\"gulpfile\":\"^1.0.2\",\"html-webpack-plugin\":\"^2.30.1\",\"karma\":\"^1.7.1\",\"karma-chrome-launcher\":\"^2.2.0\",\"karma-coverage\":\"^1.1.1\",\"karma-mocha\":\"^1.3.0\",\"karma-sinon-chai\":\"^1.3.3\",\"karma-sourcemap-loader\":\"^0.3.7\",\"karma-spec-reporter\":\"0.0.26\",\"karma-webpack\":\"^2.0.6\",\"node-notifier\":\"^5.1.2\",\"node-sass\":\"^4.7.2\",\"optimize-css-assets-webpack-plugin\":\"^3.2.0\",\"ora\":\"^1.3.0\",\"postcss-import\":\"^11.0.0\",\"postcss-loader\":\"^2.0.8\",\"resolve-url-loader\":\"^2.2.1\",\"rimraf\":\"^2.6.2\",\"sass-loader\":\"^6.0.6\",\"scss\":\"^0.2.4\",\"scss-loader\":\"^0.0.1\",\"semver\":\"^5.3.0\",\"shelljs\":\"^0.7.8\",\"style-loader\":\"^0.17.0\",\"stylus-loader\":\"^3.0.1\",\"url-loader\":\"^0.5.9\",\"vue\":\"^2.5.9\",\"vue-hot-reload-api\":\"^1.3.3\",\"vue-html-loader\":\"^1.2.4\",\"vue-loader\":\"^13.5.0\",\"vue-style-loader\":\"^3.0.3\",\"vue-template-compiler\":\"^2.5.2\",\"webpack\":\"^3.6.0\",\"webpack-bundle-analyzer\":\"^2.9.0\",\"webpack-dev-server\":\"^2.9.1\",\"webpack-hot-middleware\":\"^2.21.0\",\"webpack-merge\":\"^4.1.0\"}}\n\n/***/ }),\n\n/***/ 940:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _package = __webpack_require__(875);\n\nvar _package2 = _interopRequireDefault(_package);\n\nvar _three = __webpack_require__(1103);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n    name: 'Index',\n    computed: {\n        author: function author() {\n            return _package2.default.author;\n        },\n        name: function name() {\n            return _package2.default.name;\n        }\n    },\n    mounted: function mounted() {\n        var SEPARATION = 100,\n            AMOUNTX = 100,\n            AMOUNTY = 30;\n        var container = document.getElementById('canvasBox');\n        var camera = void 0,\n            scene = void 0,\n            renderer = void 0;\n        var particles = void 0,\n            particle = void 0,\n            count = 0;\n        var mouseX = 0,\n            mouseY = 0;\n        var width = window.getComputedStyle(container).width.replace('px', '');\n        var height = window.getComputedStyle(container).height.replace('px', '');\n        var windowHalfX = width / 2;\n        var windowHalfY = height / 2;\n\n        init();\n        animate();\n\n        function init() {\n            camera = new _three.PerspectiveCamera(120, width / height, 1, 10000);\n            camera.position.z = 1000;\n\n            scene = new _three.Scene();\n            particles = [];\n\n            var PI2 = Math.PI * 2;\n            var material = new _three.ParticleCanvasMaterial({\n                color: 0xe1e1e1,\n                program: function program(context) {\n                    context.beginPath();\n                    context.arc(0, 0, 0.6, 0, PI2, true);\n                    context.fill();\n                }\n            });\n\n            var i = 0;\n            for (var ix = 0; ix < AMOUNTX; ix++) {\n\n                for (var iy = 0; iy < AMOUNTY; iy++) {\n                    particle = particles[i++] = new _three.Particle(material);\n                    particle.position.x = ix * SEPARATION - AMOUNTX * SEPARATION / 2;\n                    particle.position.z = iy * SEPARATION - AMOUNTY * SEPARATION / 2;\n                    scene.add(particle);\n                }\n            }\n            renderer = new _three.CanvasRenderer({\n                alpha: true\n            });\n            renderer.setSize(window.innerWidth, window.innerHeight);\n            container.appendChild(renderer.domElement);\n\n            document.addEventListener('mousemove', onDocumentMouseMove, false);\n            window.addEventListener('resize', onWindowResize, false);\n        }\n\n        function onWindowResize() {\n            var width = window.getComputedStyle(container).width.replace('px', '');\n            var height = window.getComputedStyle(container).height.replace('px', '');\n\n            windowHalfX = width / 2;\n            windowHalfY = height / 2;\n            camera.aspect = width / height;\n            camera.updateProjectionMatrix();\n            renderer.setSize(width, height);\n        }\n\n        function onDocumentMouseMove(event) {\n            mouseX = event.clientX - windowHalfX;\n            mouseY = event.clientY - windowHalfY;\n        }\n\n        function animate() {\n            requestAnimationFrame(animate);\n            render();\n        }\n        function render() {\n            camera.position.x += (mouseX - camera.position.x) * .05;\n            camera.position.y += (-mouseY - camera.position.y) * .05 + 20;\n            camera.lookAt(scene.position);\n            var i = 0;\n\n            for (var ix = 0; ix < AMOUNTX; ix++) {\n\n                for (var iy = 0; iy < AMOUNTY; iy++) {\n                    particle = particles[i++];\n                    particle.position.y = Math.sin((ix + count) * 0.3) * 50 + Math.sin((iy + count) * 0.5) * 50;\n                    particle.scale.x = particle.scale.y = (Math.sin((ix + count) * 0.3) + 1) * 2 + (Math.sin((iy + count) * 0.5) + 1) * 2;\n                }\n            }\n            renderer.render(scene, camera);\n            count += 0.1;\n        }\n    }\n};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.9765a905f9b7c65dbacb.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js?{\\\"sourceMap\\\":false}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-eb8004ea\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/_sass-loader@6.0.7@sass-loader/lib/loader.js?{\\\"sourceMap\\\":false}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector.js?type=styles&index=0!./Index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/_vue-style-loader@3.1.2@vue-style-loader/lib/addStylesClient.js\")(\"5d4a8f24\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js?{\\\"sourceMap\\\":false}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-eb8004ea\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/_sass-loader@6.0.7@sass-loader/lib/loader.js?{\\\"sourceMap\\\":false}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector.js?type=styles&index=0!./Index.vue\", function() {\n     var newContent = require(\"!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js?{\\\"sourceMap\\\":false}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-eb8004ea\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/_sass-loader@6.0.7@sass-loader/lib/loader.js?{\\\"sourceMap\\\":false}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector.js?type=styles&index=0!./Index.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-style-loader@3.1.2@vue-style-loader!./node_modules/_css-loader@0.28.11@css-loader?{\"sourceMap\":false}!./node_modules/_vue-loader@13.7.1@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-eb8004ea\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/_sass-loader@6.0.7@sass-loader/lib/loader.js?{\"sourceMap\":false}!./node_modules/_vue-loader@13.7.1@vue-loader/lib/selector.js?type=styles&index=0!./example/src/views/page/Index.vue\n// module id = 1101\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n#site-banner {\\n  height: 640px;\\n  overflow: hidden;\\n  background-color: #24292e;\\n  background-size: 100%;\\n  text-align: center;\\n  margin: 0;\\n}\\n#site-banner .image-layout-body {\\n    padding-top: 169px;\\n}\\n#site-banner .image-layout-body .site-description h1 {\\n      color: #fff;\\n}\\n#site-banner .image-layout-body .site-description h2 {\\n      color: #fff;\\n}\\n#site-banner .image-layout-body .site-description p {\\n      color: #fff;\\n}\\n#site-banner .canvas-box {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n    width: 100%;\\n    height: 100%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_css-loader@0.28.11@css-loader?{\"sourceMap\":false}!./node_modules/_vue-loader@13.7.1@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-eb8004ea\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/_sass-loader@6.0.7@sass-loader/lib/loader.js?{\"sourceMap\":false}!./node_modules/_vue-loader@13.7.1@vue-loader/lib/selector.js?type=styles&index=0!./example/src/views/page/Index.vue\n// module id = 1102\n// module chunks = 1","var self = self || {};/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Larry Battle / http://bateru.com/news\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nvar THREE = { REVISION: '66.81' };\r\n\r\nself.console = self.console || {\r\n\r\n\tinfo: function () {},\r\n\tlog: function () {},\r\n\tdebug: function () {},\r\n\twarn: function () {},\r\n\terror: function () {}\r\n\r\n};\r\n\r\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\r\n\r\n// requestAnimationFrame polyfill by Erik Möller\r\n// fixes from Paul Irish and Tino Zijdel\r\n// using 'self' instead of 'window' for compatibility with both NodeJS and IE10.\r\n( function () {\r\n\r\n\tvar lastTime = 0;\r\n\tvar vendors = [ 'ms', 'moz', 'webkit', 'o' ];\r\n\r\n\tfor ( var x = 0; x < vendors.length && !self.requestAnimationFrame; ++ x ) {\r\n\r\n\t\tself.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];\r\n\t\tself.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];\r\n\r\n\t}\r\n\r\n\tif ( self.requestAnimationFrame === undefined && self['setTimeout'] !== undefined ) {\r\n\r\n\t\tself.requestAnimationFrame = function ( callback ) {\r\n\r\n\t\t\tvar currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\r\n\t\t\tvar id = self.setTimeout( function() { callback( currTime + timeToCall ); }, timeToCall );\r\n\t\t\tlastTime = currTime + timeToCall;\r\n\t\t\treturn id;\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tif( self.cancelAnimationFrame === undefined && self['clearTimeout'] !== undefined ) {\r\n\r\n\t\tself.cancelAnimationFrame = function ( id ) { self.clearTimeout( id ) };\r\n\r\n\t}\r\n\r\n}() );\r\n\r\nTHREE.ExceptionErrorHandler = function( message, optionalData ) {\r\n\tconsole.error( message );\r\n\tconsole.error( optionalData );\r\n\tvar error = new Error( message );\r\n\terror.optionalData = optionalData;\r\n\tthrow error;\r\n};\r\n\r\nTHREE.ConsoleErrorHandler = function( message, optionalData ) {\r\n\tconsole.error( message );\r\n\tconsole.error( optionalData );\r\n};\r\n\r\nTHREE.ConsoleWarningHandler = function( message, optionalData ) {\r\n\tconsole.warn( message );\r\n\tconsole.warn( optionalData );\r\n};\r\n\r\nTHREE.NullHandler = function( message, optionalData ) {\r\n};\r\n\r\n// the default error handler is exception\r\nTHREE.onerror = THREE.ExceptionErrorHandler;\r\n\r\nTHREE.onwarning = THREE.ConsoleWarningHandler;\r\n\r\n// GL STATE CONSTANTS\r\n\r\nTHREE.CullFaceNone = 0;\r\nTHREE.CullFaceBack = 1;\r\nTHREE.CullFaceFront = 2;\r\nTHREE.CullFaceFrontBack = 3;\r\n\r\nTHREE.FrontFaceDirectionCW = 0;\r\nTHREE.FrontFaceDirectionCCW = 1;\r\n\r\n// SHADOWING TYPES\r\n\r\nTHREE.BasicShadowMap = 0;\r\nTHREE.PCFShadowMap = 1;\r\nTHREE.PCFSoftShadowMap = 2;\r\n\r\n// MATERIAL CONSTANTS\r\n\r\n// side\r\n\r\nTHREE.FrontSide = 0;\r\nTHREE.BackSide = 1;\r\nTHREE.DoubleSide = 2;\r\n\r\n// shading\r\n\r\nTHREE.NoShading = 0;\r\nTHREE.FlatShading = 1;\r\nTHREE.SmoothShading = 2;\r\n\r\n// colors\r\n\r\nTHREE.NoColors = 0;\r\nTHREE.FaceColors = 1;\r\nTHREE.VertexColors = 2;\r\n\r\n// blending modes\r\n\r\nTHREE.NoBlending = 0;\r\nTHREE.NormalBlending = 1;\r\nTHREE.AdditiveBlending = 2;\r\nTHREE.SubtractiveBlending = 3;\r\nTHREE.MultiplyBlending = 4;\r\nTHREE.CustomBlending = 5;\r\n\r\n// custom blending equations\r\n// (numbers start from 100 not to clash with other\r\n//  mappings to OpenGL constants defined in Texture.js)\r\n\r\nTHREE.AddEquation = 100;\r\nTHREE.SubtractEquation = 101;\r\nTHREE.ReverseSubtractEquation = 102;\r\n\r\n// custom blending destination factors\r\n\r\nTHREE.ZeroFactor = 200;\r\nTHREE.OneFactor = 201;\r\nTHREE.SrcColorFactor = 202;\r\nTHREE.OneMinusSrcColorFactor = 203;\r\nTHREE.SrcAlphaFactor = 204;\r\nTHREE.OneMinusSrcAlphaFactor = 205;\r\nTHREE.DstAlphaFactor = 206;\r\nTHREE.OneMinusDstAlphaFactor = 207;\r\n\r\n// custom blending source factors\r\n\r\n//THREE.ZeroFactor = 200;\r\n//THREE.OneFactor = 201;\r\n//THREE.SrcAlphaFactor = 204;\r\n//THREE.OneMinusSrcAlphaFactor = 205;\r\n//THREE.DstAlphaFactor = 206;\r\n//THREE.OneMinusDstAlphaFactor = 207;\r\nTHREE.DstColorFactor = 208;\r\nTHREE.OneMinusDstColorFactor = 209;\r\nTHREE.SrcAlphaSaturateFactor = 210;\r\n\r\n\r\n// TEXTURE CONSTANTS\r\n\r\nTHREE.MultiplyOperation = 0;\r\nTHREE.MixOperation = 1;\r\nTHREE.AddOperation = 2;\r\n\r\n// Mapping modes\r\n\r\nTHREE.UVMapping = function () {};\r\n\r\nTHREE.CubeReflectionMapping = function () {};\r\nTHREE.CubeRefractionMapping = function () {};\r\n\r\nTHREE.SphericalReflectionMapping = function () {};\r\nTHREE.SphericalRefractionMapping = function () {};\r\n\r\n// Wrapping modes\r\n\r\nTHREE.RepeatWrapping = 1000;\r\nTHREE.ClampToEdgeWrapping = 1001;\r\nTHREE.MirroredRepeatWrapping = 1002;\r\n\r\n// Filters\r\n\r\nTHREE.NearestFilter = 1003;\r\nTHREE.NearestMipMapNearestFilter = 1004;\r\nTHREE.NearestMipMapLinearFilter = 1005;\r\nTHREE.LinearFilter = 1006;\r\nTHREE.LinearMipMapNearestFilter = 1007;\r\nTHREE.LinearMipMapLinearFilter = 1008;\r\n\r\n// Texture Decoders\r\n\r\nTHREE.Linear = 3000;\r\nTHREE.sRGB = 3001;\r\nTHREE.RGBE = 3002;\r\nTHREE.LogLUV = 3003;\r\nTHREE.RGBM7 = 3004;\r\nTHREE.RGBM16 = 3005;\r\n\r\n// Data types\r\n\r\nTHREE.UnsignedByteType = 1009;\r\nTHREE.ByteType = 1010;\r\nTHREE.ShortType = 1011;\r\nTHREE.UnsignedShortType = 1012;\r\nTHREE.IntType = 1013;\r\nTHREE.UnsignedIntType = 1014;\r\nTHREE.FloatType = 1015;\r\nTHREE.HalfType = 2005;\r\n\r\n// Pixel types\r\n\r\n//THREE.UnsignedByteType = 1009;\r\nTHREE.UnsignedShort4444Type = 1016;\r\nTHREE.UnsignedShort5551Type = 1017;\r\nTHREE.UnsignedShort565Type = 1018;\r\n\r\n// Pixel formats\r\n\r\nTHREE.AlphaFormat = 1019;\r\nTHREE.RGBFormat = 1020;\r\nTHREE.RGBAFormat = 1021;\r\nTHREE.LuminanceFormat = 1022;\r\nTHREE.LuminanceAlphaFormat = 1023;\r\n\r\n// Compressed texture formats\r\n\r\nTHREE.RGB_S3TC_DXT1_Format = 2001;\r\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\nTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\r\n/*\r\n// Potential future PVRTC compressed texture formats\r\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n*/\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Color = function ( color ) {\r\n\r\n\tif ( arguments.length === 3 ) {\r\n\r\n\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\r\n\r\n\t}\r\n\r\n\treturn this.set( color )\r\n\r\n};\r\n\r\nTHREE.Color.prototype = {\r\n\r\n\tconstructor: THREE.Color,\r\n\r\n\tr: 1, g: 1, b: 1,\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tif ( value instanceof THREE.Color ) {\r\n\r\n\t\t\tthis.copy( value );\r\n\r\n\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\tthis.setHex( value );\r\n\r\n\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\tthis.setStyle( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHex: function ( hex ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRGB: function ( r, g, b ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHSL: function ( h, s, l ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tif ( s === 0 ) {\r\n\r\n\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar hue2rgb = function ( p, q, t ) {\r\n\r\n\t\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\t\treturn p;\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetStyle: function ( style ) {\r\n\r\n\t\t// rgb(255,0,0)\r\n\r\n\t\tif ( /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test( style ) ) {\r\n\r\n\t\t\tvar color = /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec( style );\r\n\r\n\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t// rgb(100%,0%,0%)\r\n\r\n\t\tif ( /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test( style ) ) {\r\n\r\n\t\t\tvar color = /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec( style );\r\n\r\n\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t// #ff0000\r\n\r\n\t\tif ( /^\\#([0-9a-f]{6})$/i.test( style ) ) {\r\n\r\n\t\t\tvar color = /^\\#([0-9a-f]{6})$/i.exec( style );\r\n\r\n\t\t\tthis.setHex( parseInt( color[ 1 ], 16 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t// #f00\r\n\r\n\t\tif ( /^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test( style ) ) {\r\n\r\n\t\t\tvar color = /^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec( style );\r\n\r\n\t\t\tthis.setHex( parseInt( color[ 1 ] + color[ 1 ] + color[ 2 ] + color[ 2 ] + color[ 3 ] + color[ 3 ], 16 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t// red\r\n\r\n\t\tif ( /^(\\w+)$/i.test( style ) ) {\r\n\r\n\t\t\tthis.setHex( THREE.ColorKeywords[ style ] );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\r\n\t},\r\n\r\n\tcopy: function ( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyGammaToLinear: function ( color ) {\r\n\r\n\t\tthis.r = color.r * color.r;\r\n\t\tthis.g = color.g * color.g;\r\n\t\tthis.b = color.b * color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyLinearToGamma: function ( color ) {\r\n\r\n\t\tthis.r = Math.sqrt( color.r );\r\n\t\tthis.g = Math.sqrt( color.g );\r\n\t\tthis.b = Math.sqrt( color.b );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertGammaToLinear: function () {\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tthis.r = r * r;\r\n\t\tthis.g = g * g;\r\n\t\tthis.b = b * b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertLinearToGamma: function () {\r\n\r\n\t\tthis.r = Math.sqrt( this.r );\r\n\t\tthis.g = Math.sqrt( this.g );\r\n\t\tthis.b = Math.sqrt( this.b );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetHex: function () {\r\n\r\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t},\r\n\r\n\tgetHexString: function () {\r\n\r\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t},\r\n\r\n\tgetHSL: function ( optionalTarget ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tvar max = Math.max( r, g, b );\r\n\t\tvar min = Math.min( r, g, b );\r\n\r\n\t\tvar hue, saturation;\r\n\t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\thsl.h = hue;\r\n\t\thsl.s = saturation;\r\n\t\thsl.l = lightness;\r\n\r\n\t\treturn hsl;\r\n\r\n\t},\r\n\r\n\tgetStyle: function () {\r\n\r\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t},\r\n\r\n\toffsetHSL: function ( h, s, l ) {\r\n\r\n\t\tvar hsl = this.getHSL();\r\n\r\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddColors: function ( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.r = array[ 0 ];\r\n\t\tthis.g = array[ 1 ];\r\n\t\tthis.b = array[ 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\treturn [ this.r, this.g, this.b ];\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Color().setRGB( this.r, this.g, this.b );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ColorKeywords = { \"aliceblue\": 0xF0F8FF, \"antiquewhite\": 0xFAEBD7, \"aqua\": 0x00FFFF, \"aquamarine\": 0x7FFFD4, \"azure\": 0xF0FFFF,\r\n\"beige\": 0xF5F5DC, \"bisque\": 0xFFE4C4, \"black\": 0x000000, \"blanchedalmond\": 0xFFEBCD, \"blue\": 0x0000FF, \"blueviolet\": 0x8A2BE2,\r\n\"brown\": 0xA52A2A, \"burlywood\": 0xDEB887, \"cadetblue\": 0x5F9EA0, \"chartreuse\": 0x7FFF00, \"chocolate\": 0xD2691E, \"coral\": 0xFF7F50,\r\n\"cornflowerblue\": 0x6495ED, \"cornsilk\": 0xFFF8DC, \"crimson\": 0xDC143C, \"cyan\": 0x00FFFF, \"darkblue\": 0x00008B, \"darkcyan\": 0x008B8B,\r\n\"darkgoldenrod\": 0xB8860B, \"darkgray\": 0xA9A9A9, \"darkgreen\": 0x006400, \"darkgrey\": 0xA9A9A9, \"darkkhaki\": 0xBDB76B, \"darkmagenta\": 0x8B008B,\r\n\"darkolivegreen\": 0x556B2F, \"darkorange\": 0xFF8C00, \"darkorchid\": 0x9932CC, \"darkred\": 0x8B0000, \"darksalmon\": 0xE9967A, \"darkseagreen\": 0x8FBC8F,\r\n\"darkslateblue\": 0x483D8B, \"darkslategray\": 0x2F4F4F, \"darkslategrey\": 0x2F4F4F, \"darkturquoise\": 0x00CED1, \"darkviolet\": 0x9400D3,\r\n\"deeppink\": 0xFF1493, \"deepskyblue\": 0x00BFFF, \"dimgray\": 0x696969, \"dimgrey\": 0x696969, \"dodgerblue\": 0x1E90FF, \"firebrick\": 0xB22222,\r\n\"floralwhite\": 0xFFFAF0, \"forestgreen\": 0x228B22, \"fuchsia\": 0xFF00FF, \"gainsboro\": 0xDCDCDC, \"ghostwhite\": 0xF8F8FF, \"gold\": 0xFFD700,\r\n\"goldenrod\": 0xDAA520, \"gray\": 0x808080, \"green\": 0x008000, \"greenyellow\": 0xADFF2F, \"grey\": 0x808080, \"honeydew\": 0xF0FFF0, \"hotpink\": 0xFF69B4,\r\n\"indianred\": 0xCD5C5C, \"indigo\": 0x4B0082, \"ivory\": 0xFFFFF0, \"khaki\": 0xF0E68C, \"lavender\": 0xE6E6FA, \"lavenderblush\": 0xFFF0F5, \"lawngreen\": 0x7CFC00,\r\n\"lemonchiffon\": 0xFFFACD, \"lightblue\": 0xADD8E6, \"lightcoral\": 0xF08080, \"lightcyan\": 0xE0FFFF, \"lightgoldenrodyellow\": 0xFAFAD2, \"lightgray\": 0xD3D3D3,\r\n\"lightgreen\": 0x90EE90, \"lightgrey\": 0xD3D3D3, \"lightpink\": 0xFFB6C1, \"lightsalmon\": 0xFFA07A, \"lightseagreen\": 0x20B2AA, \"lightskyblue\": 0x87CEFA,\r\n\"lightslategray\": 0x778899, \"lightslategrey\": 0x778899, \"lightsteelblue\": 0xB0C4DE, \"lightyellow\": 0xFFFFE0, \"lime\": 0x00FF00, \"limegreen\": 0x32CD32,\r\n\"linen\": 0xFAF0E6, \"magenta\": 0xFF00FF, \"maroon\": 0x800000, \"mediumaquamarine\": 0x66CDAA, \"mediumblue\": 0x0000CD, \"mediumorchid\": 0xBA55D3,\r\n\"mediumpurple\": 0x9370DB, \"mediumseagreen\": 0x3CB371, \"mediumslateblue\": 0x7B68EE, \"mediumspringgreen\": 0x00FA9A, \"mediumturquoise\": 0x48D1CC,\r\n\"mediumvioletred\": 0xC71585, \"midnightblue\": 0x191970, \"mintcream\": 0xF5FFFA, \"mistyrose\": 0xFFE4E1, \"moccasin\": 0xFFE4B5, \"navajowhite\": 0xFFDEAD,\r\n\"navy\": 0x000080, \"oldlace\": 0xFDF5E6, \"olive\": 0x808000, \"olivedrab\": 0x6B8E23, \"orange\": 0xFFA500, \"orangered\": 0xFF4500, \"orchid\": 0xDA70D6,\r\n\"palegoldenrod\": 0xEEE8AA, \"palegreen\": 0x98FB98, \"paleturquoise\": 0xAFEEEE, \"palevioletred\": 0xDB7093, \"papayawhip\": 0xFFEFD5, \"peachpuff\": 0xFFDAB9,\r\n\"peru\": 0xCD853F, \"pink\": 0xFFC0CB, \"plum\": 0xDDA0DD, \"powderblue\": 0xB0E0E6, \"purple\": 0x800080, \"red\": 0xFF0000, \"rosybrown\": 0xBC8F8F,\r\n\"royalblue\": 0x4169E1, \"saddlebrown\": 0x8B4513, \"salmon\": 0xFA8072, \"sandybrown\": 0xF4A460, \"seagreen\": 0x2E8B57, \"seashell\": 0xFFF5EE,\r\n\"sienna\": 0xA0522D, \"silver\": 0xC0C0C0, \"skyblue\": 0x87CEEB, \"slateblue\": 0x6A5ACD, \"slategray\": 0x708090, \"slategrey\": 0x708090, \"snow\": 0xFFFAFA,\r\n\"springgreen\": 0x00FF7F, \"steelblue\": 0x4682B4, \"tan\": 0xD2B48C, \"teal\": 0x008080, \"thistle\": 0xD8BFD8, \"tomato\": 0xFF6347, \"turquoise\": 0x40E0D0,\r\n\"violet\": 0xEE82EE, \"wheat\": 0xF5DEB3, \"white\": 0xFFFFFF, \"whitesmoke\": 0xF5F5F5, \"yellow\": 0xFFFF00, \"yellowgreen\": 0x9ACD32 };\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Quaternion = function ( x, y, z, w ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Quaternion.prototype = {\r\n\r\n\tconstructor: THREE.Quaternion,\r\n\r\n\t_x: 0,_y: 0, _z: 0, _w: 0,\r\n\r\n\t_euler: undefined,\r\n\r\n\t_updateEuler: function ( callback ) {\r\n\r\n\t\tif ( this._euler !== undefined ) {\r\n\r\n\t\t\tthis._euler.setFromQuaternion( this, undefined, false );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis._updateEuler();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis._updateEuler();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis._updateEuler();\r\n\r\n\t},\r\n\r\n\tget w () {\r\n\r\n\t\treturn this._w;\r\n\r\n\t},\r\n\r\n\tset w ( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis._updateEuler();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis._updateEuler();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( quaternion ) {\r\n\r\n\t\tthis._x = quaternion._x;\r\n\t\tthis._y = quaternion._y;\r\n\t\tthis._z = quaternion._z;\r\n\t\tthis._w = quaternion._w;\r\n\r\n\t\tthis._updateEuler();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\tif ( ! ( euler instanceof THREE.Euler ) ) return THREE.onerror( 'expecting a Euler', euler );\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t}\r\n\r\n\t\tif ( update !== false ) this._updateEuler();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\t\t// axis have to be normalized\r\n\r\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis._updateEuler();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t//if ( ! ( m instanceof THREE.Matrix4 ) ) return THREE.onerror( 'expecting a Matrix4', m );\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\t\r\n\r\n\t\tvar te = m.elements,\r\n\r\n\t\t\tm11 = te[0], m12 = te[4], m13 = te[8],\r\n\t\t\tm21 = te[1], m22 = te[5], m23 = te[9],\r\n\t\t\tm31 = te[2], m32 = te[6], m33 = te[10],\r\n\r\n\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\ts;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = (m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = (m12 + m21 ) / s;\r\n\t\t\tthis._z = (m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = (m13 - m31 ) / s;\r\n\t\t\tthis._x = (m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = (m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis._updateEuler();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tinverse: function () {\r\n\r\n\t\tthis.conjugate().normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\t\r\n\tadd: function ( q ) {\r\n\r\n\t\tthis._x += q._x;\r\n\t\tthis._y += q._y;\r\n\t\tthis._z += q._z;\r\n\t\tthis._w += q._w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( q ) {\r\n\r\n\t\tthis._x -= q._x;\r\n\t\tthis._y -= q._y;\r\n\t\tthis._z -= q._z;\r\n\t\tthis._w -= q._w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis._x *= s;\r\n\t\tthis._y *= s;\r\n\t\tthis._z *= s;\r\n\t\tthis._w *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconjugate: function () {\r\n\r\n\t\tthis._x *= -1;\r\n\t\tthis._y *= -1;\r\n\t\tthis._z *= -1;\r\n\r\n\t\tthis._updateEuler();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tvar l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( q, p ) {\r\n\r\n\t\tif ( p !== undefined ) {\r\n\r\n\t\t\tTHREE.onwarning( 'DEPRECATED: Quaternion\\'s .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t},\r\n\r\n\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis._updateEuler();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tTHREE.onwarning( 'DEPRECATED: Quaternion\\'s .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\treturn vector.applyQuaternion( this );\r\n\r\n\t},\r\n\r\n\tslerp: function ( qb, t ) {\r\n\r\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\tthis._w = -qb._w;\r\n\t\t\tthis._x = -qb._x;\r\n\t\t\tthis._y = -qb._y;\r\n\t\t\tthis._z = -qb._z;\r\n\r\n\t\t\tcosHalfTheta = -cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy( qb );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\r\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\r\n\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\tthis._updateEuler();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tthis._w = array[ 3 ];\r\n\r\n\t\tthis._updateEuler();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\treturn [ this._x, this._y, this._z, this._w ];\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Quaternion( this._x, this._y, this._z, this._w );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\r\n\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n}\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.Vector2 = function ( x, y ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\r\n};\r\n\r\nTHREE.Vector2.prototype = {\r\n\r\n\tconstructor: THREE.Vector2,\r\n\r\n\tset: function ( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: return THREE.onerror( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: return THREE.onerror( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.onwarning( 'DEPRECATED: Vector2\\'s .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.onwarning( 'DEPRECATED: Vector2\\'s .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.x *= s;\r\n\t\tthis.y *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tclampScalar: ( function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function ( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\tmax = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\t\t\r\n\t} )(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\treturn this.multiplyScalar( - 1 );\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.x = array[ 0 ];\r\n\t\tthis.y = array[ 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\treturn [ this.x, this.y ];\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Vector2( this.x, this.y );\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector3 = function ( x, y, z ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\r\n};\r\n\r\nTHREE.Vector3.prototype = {\r\n\r\n\tconstructor: THREE.Vector3,\r\n\r\n\tset: function ( x, y, z ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: return THREE.onerror( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: return THREE.onerror( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.onwarning( 'DEPRECATED: Vector3\\'s .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.onwarningn( 'DEPRECATED: Vector3\\'s .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.onwarning( 'DEPRECATED: Vector3\\'s .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyEuler: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function ( euler ) {\r\n\r\n\t\t\tif ( ! ( euler instanceof THREE.Euler ) ) return THREE.onerror( 'expecting an Euler', euler );\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyAxisAngle: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix3: function ( m ) {\r\n\r\n\t\t//if ( ! ( m instanceof THREE.Matrix3 ) ) return THREE.onerror( 'expecting an Matrix3', m );\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[0] * x + e[3] * y + e[6] * z;\r\n\t\tthis.y = e[1] * x + e[4] * y + e[7] * z;\r\n\t\tthis.z = e[2] * x + e[5] * y + e[8] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t//if ( ! ( m instanceof THREE.Matrix4 ) ) return THREE.onerror( 'expecting an Matrix4', m );\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[0] * x + e[4] * y + e[8]  * z + e[12];\r\n\t\tthis.y = e[1] * x + e[5] * y + e[9]  * z + e[13];\r\n\t\tthis.z = e[2] * x + e[6] * y + e[10] * z + e[14];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyProjection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 projection matrix\r\n\t\t//if ( ! ( m instanceof THREE.Matrix4 ) ) return THREE.onerror( 'expecting an Matrix4', m );\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\t\tvar d = 1 / ( e[3] * x + e[7] * y + e[11] * z + e[15] ); // perspective divide\r\n\r\n\t\tthis.x = ( e[0] * x + e[4] * y + e[8]  * z + e[12] ) * d;\r\n\t\tthis.y = ( e[1] * x + e[5] * y + e[9]  * z + e[13] ) * d;\r\n\t\tthis.z = ( e[2] * x + e[6] * y + e[10] * z + e[14] ) * d;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyQuaternion: function ( q ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar qx = q.x;\r\n\t\tvar qy = q.y;\r\n\t\tvar qz = q.z;\r\n\t\tvar qw = q.w;\r\n\r\n\t\t// calculate quat * vector\r\n\r\n\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\tvar iw = -qx * x - qy * y - qz * z;\r\n\r\n\t\t// calculate result * inverse quat\r\n\r\n\t\tthis.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n\t\tthis.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n\t\tthis.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttransformDirection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[0] * x + e[4] * y + e[8]  * z;\r\n\t\tthis.y = e[1] * x + e[5] * y + e[9]  * z;\r\n\t\tthis.z = e[2] * x + e[6] * y + e[10] * z;\r\n\r\n\t\tthis.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: ( function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function ( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\tmax = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\treturn this.multiplyScalar( - 1 );\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength  ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcross: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.onwarning( 'DEPRECATED: Vector3\\'s .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tthis.x = y * v.z - z * v.y;\r\n\t\tthis.y = z * v.x - x * v.z;\r\n\t\tthis.z = x * v.y - y * v.x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossVectors: function ( a, b ) {\r\n\r\n\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tprojectOnVector: function () {\r\n\r\n\t\tvar v1, dot;\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( vector ).normalize();\r\n\r\n\t\t\tdot = this.dot( v1 );\r\n\r\n\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tprojectOnPlane: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( planeNormal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\treturn this.sub( v1 );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\treflect: function () {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( normal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tangleTo: function ( v ) {\r\n\r\n\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( THREE.Math.clamp( theta, -1, 1 ) );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x;\r\n\t\tvar dy = this.y - v.y;\r\n\t\tvar dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t},\r\n\r\n\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\r\n\t\tTHREE.onerror( \"REMOVED: Vector3\\'s setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.\");\r\n\r\n\t},\r\n\r\n\tsetEulerFromQuaternion: function ( q, order ) {\r\n\r\n\t\tTHREE.onerror( \"REMOVED: Vector3\\'s setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.\");\r\n\r\n\t},\r\n\r\n\tgetPositionFromMatrix: function ( m ) {\r\n\r\n\t\tTHREE.onwarning( \"DEPRECATED: Vector3\\'s .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code.\" );\r\n\r\n\t\treturn this.setFromMatrixPosition( m );\r\n\r\n\t},\r\n\r\n\tgetScaleFromMatrix: function ( m ) {\r\n\r\n\t\tTHREE.onwarning( \"DEPRECATED: Vector3\\'s .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code.\" );\r\n\r\n\t\treturn this.setFromMatrixScale( m );\r\n\t},\r\n\r\n\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\r\n\t\tTHREE.onwarning( \"DEPRECATED: Vector3\\'s .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code.\" );\r\n\r\n\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\r\n\t},\r\n\r\n\tsetFromMatrixPosition: function ( m ) {\r\n\r\n\t\tthis.x = m.elements[ 12 ];\r\n\t\tthis.y = m.elements[ 13 ];\r\n\t\tthis.z = m.elements[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixScale: function ( m ) {\r\n\r\n\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[  2 ] ).length();\r\n\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[  6 ] ).length();\r\n\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\r\n\t\tvar offset = index * 4;\r\n\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tthis.x = me[ offset ];\r\n\t\tthis.y = me[ offset + 1 ];\r\n\t\tthis.z = me[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.x = array[ 0 ];\r\n\t\tthis.y = array[ 1 ];\r\n\t\tthis.z = array[ 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\treturn [ this.x, this.y, this.z ];\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Vector3( this.x, this.y, this.z );\r\n\r\n\t}\r\n\r\n};\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector4 = function ( x, y, z, w ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Vector4.prototype = {\r\n\r\n\tconstructor: THREE.Vector4,\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: return THREE.onerror( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: return THREE.onerror( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.onwarning( 'DEPRECATED: Vector4\\'s .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.onwarning( 'DEPRECATED: Vector4\\'s .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\tthis.w *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t//if ( ! ( m instanceof THREE.Matrix4 ) ) return THREE.onerror( 'expecting a Matrix4', m );\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\t\tvar w = this.w;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\r\n\t\tthis.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\r\n\t\tthis.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\r\n\t\tthis.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\t\t\tthis.w *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t\tthis.w = 1;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t this.x = 1;\r\n\t\t\t this.y = 0;\r\n\t\t\t this.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t this.x = q.x / s;\r\n\t\t\t this.y = q.y / s;\r\n\t\t\t this.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[0], m12 = te[4], m13 = te[8],\r\n\t\t\tm21 = te[1], m22 = te[5], m23 = te[9],\r\n\t\t\tm31 = te[2], m32 = te[6], m33 = te[10];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t  && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t  && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t  && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t  && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t  && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) { // m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) { // m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else { // m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w > v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < min.w ) {\r\n\r\n\t\t\tthis.w = min.w;\r\n\r\n\t\t} else if ( this.w > max.w ) {\r\n\r\n\t\t\tthis.w = max.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: ( function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function ( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\tmax = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n    floor: function () {\r\n\r\n        this.x = Math.floor( this.x );\r\n        this.y = Math.floor( this.y );\r\n        this.z = Math.floor( this.z );\r\n        this.w = Math.floor( this.w );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    ceil: function () {\r\n\r\n        this.x = Math.ceil( this.x );\r\n        this.y = Math.ceil( this.y );\r\n        this.z = Math.ceil( this.z );\r\n        this.w = Math.ceil( this.w );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    round: function () {\r\n\r\n        this.x = Math.round( this.x );\r\n        this.y = Math.round( this.y );\r\n        this.z = Math.round( this.z );\r\n        this.w = Math.round( this.w );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    roundToZero: function () {\r\n\r\n        this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n        this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n        this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n        this.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n\tnegate: function () {\r\n\r\n\t\treturn this.multiplyScalar( -1 );\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.x = array[ 0 ];\r\n\t\tthis.y = array[ 1 ];\r\n\t\tthis.z = array[ 2 ];\r\n\t\tthis.w = array[ 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\treturn [ this.x, this.y, this.z, this.w ];\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Vector4( this.x, this.y, this.z, this.w );\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Euler = function ( x, y, z, order ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\r\n};\r\n\r\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\nTHREE.Euler.DefaultOrder = 'XYZ';\r\n\r\nTHREE.Euler.prototype = {\r\n\r\n\tconstructor: THREE.Euler,\r\n\r\n\t_x: 0, _y: 0, _z: 0, _order: THREE.Euler.DefaultOrder,\r\n\r\n\t_quaternion: undefined,\r\n\r\n\t_updateQuaternion: function () {\r\n\r\n\t\tif ( this._quaternion !== undefined ) {\r\n\r\n\t\t\tthis._quaternion.setFromEuler( this, false );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis._updateQuaternion();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis._updateQuaternion();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis._updateQuaternion();\r\n\r\n\t},\r\n\r\n\tget order () {\r\n\r\n\t\treturn this._order;\r\n\r\n\t},\r\n\r\n\tset order ( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis._updateQuaternion();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order || this._order;\r\n\r\n\t\tthis._updateQuaternion();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromVector: function ( v, order ) {\r\n\r\n\t\tthis._x = v.x;\r\n\t\tthis._y = v.y;\r\n\t\tthis._z = v.z;\r\n\t\tthis._order = order || this._order;\r\n\r\n\t\tthis._updateQuaternion();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis._updateQuaternion();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n\t\t//if ( ! ( m instanceof THREE.Matrix4 ) ) return THREE.onerror( 'expecting a Matrix4', m );\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\tfunction clamp( x ) {\r\n\r\n\t\t\treturn Math.min( Math.max( x, -1 ), 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar te = m.elements;\r\n\t\tvar m11 = te[0], m12 = te[4], m13 = te[8];\r\n\t\tvar m21 = te[1], m22 = te[5], m23 = te[9];\r\n\t\tvar m31 = te[2], m32 = te[6], m33 = te[10];\r\n\r\n\t\torder = order || this._order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._y = Math.asin( clamp( m13 ) );\r\n\r\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = Math.asin( - clamp( m23 ) );\r\n\r\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = Math.asin( clamp( m32 ) );\r\n\r\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._y = Math.asin( - clamp( m31 ) );\r\n\r\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._z = Math.asin( clamp( m21 ) );\r\n\r\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._z = Math.asin( - clamp( m12 ) );\r\n\r\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tTHREE.onwarning( 'WARNING: Euler.setFromRotationMatrix() given unsupported order: ' + order )\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update !== false ) this._updateQuaternion();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromQuaternion: function() {\r\n\r\n\t   var mIntermediate = null;\r\n\t   \r\n\t   return function( q, order, update ) {\r\n\t   \r\n\t   \t  mIntermediate = mIntermediate || new THREE.Matrix4();\r\n\t      mIntermediate.makeRotationFromQuaternion( q );\r\n\t      this.setFromRotationMatrix( mIntermediate, order, update );\r\n\t   \r\n\t      return this;\r\n\t   };\r\n\r\n\t}(),\r\n\r\n\treorder: function () {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\tvar q = new THREE.Quaternion();\r\n\r\n\t\treturn function ( newOrder ) {\r\n\r\n\t\t\tq.setFromEuler( this );\r\n\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\r\n\t\t};\r\n\r\n\r\n\t}(),\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis._updateQuaternion();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\treturn [ this._x, this._y, this._z, this._order ];\r\n\r\n\t},\r\n\r\n\tequals: function ( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t},\r\n\r\n\r\n\ttoVector3: function ( optionalResult ) {\r\n\r\n\t\tif( optionalResult ) {\r\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Euler( this._x, this._y, this._z, this._order );\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Line3 = function ( start, end ) {\r\n\r\n\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Line3.prototype = {\r\n\r\n\tconstructor: THREE.Line3,\r\n\r\n\tset: function ( start, end ) {\r\n\r\n\t\tthis.start.copy( start );\r\n\t\tthis.end.copy( end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( line ) {\r\n\r\n\t\tthis.start.copy( line.start );\r\n\t\tthis.end.copy( line.end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tdelta: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.end, this.start );\r\n\r\n\t},\r\n\r\n\tdistanceSq: function () {\r\n\r\n\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t},\r\n\r\n\tdistance: function () {\r\n\r\n\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tclosestPointToPointParameter: function() {\r\n\r\n\t\tvar startP = new THREE.Vector3();\r\n\t\tvar startEnd = new THREE.Vector3();\r\n\r\n\t\treturn function ( point, clampToLine ) {\r\n\r\n\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n\t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n\t\t\tif ( clampToLine ) {\r\n\r\n\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn t;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\r\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.start.applyMatrix4( matrix );\r\n\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( line ) {\r\n\r\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Line3().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Box2 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( -Infinity, -Infinity );\r\n\r\n};\r\n\r\nTHREE.Box2.prototype = {\r\n\r\n\tconstructor: THREE.Box2,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\tvar point = points[ 0 ];\r\n\r\n\t\t\tthis.min.copy( point );\r\n\t\t\tthis.max.copy( point );\r\n\r\n\t\t\tfor ( var i = 1, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tpoint = points[ i ];\r\n\r\n\t\t\t\tif ( point.x < this.min.x ) {\r\n\r\n\t\t\t\t\tthis.min.x = point.x;\r\n\r\n\t\t\t\t} else if ( point.x > this.max.x ) {\r\n\r\n\t\t\t\t\tthis.max.x = point.x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( point.y < this.min.y ) {\r\n\r\n\t\t\t\t\tthis.min.y = point.y;\r\n\r\n\t\t\t\t} else if ( point.y > this.max.y ) {\r\n\r\n\t\t\t\t\tthis.max.y = point.y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = Infinity;\r\n\t\tthis.max.x = this.max.y = -Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( -scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Box2().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Box3 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( -Infinity, -Infinity, -Infinity );\r\n\r\n};\r\n\r\nTHREE.Box3.prototype = {\r\n\r\n\tconstructor: THREE.Box3,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x ) {\r\n\r\n\t\t\tthis.min.x = point.x;\r\n\r\n\t\t} else if ( point.x > this.max.x ) {\r\n\r\n\t\t\tthis.max.x = point.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( point.y < this.min.y ) {\r\n\r\n\t\t\tthis.min.y = point.y;\r\n\r\n\t\t} else if ( point.y > this.max.y ) {\r\n\r\n\t\t\tthis.max.y = point.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( point.z < this.min.z ) {\r\n\r\n\t\t\tthis.min.z = point.z;\r\n\r\n\t\t} else if ( point.z > this.max.z ) {\r\n\r\n\t\t\tthis.max.z = point.z;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\tvar point = points[ 0 ];\r\n\r\n\t\t\tthis.min.copy( point );\r\n\t\t\tthis.max.copy( point );\r\n\r\n\t\t\tfor ( var i = 1, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.addPoint( points[ i ] )\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function() {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromObject: function() {\r\n\r\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t// accounting for both the object's, and childrens', world transforms\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function( object ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tobject.traverse( function ( node ) {\r\n\r\n\t\t\t\tif ( node.geometry !== undefined && node.geometry.vertices !== undefined ) {\r\n\r\n\t\t\t\t\tvar vertices = node.geometry.vertices;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i++ ) {\r\n\r\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\r\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = -Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( -scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function() {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetBoundingSphere: function() {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\r\n\t\t\tresult.center = this.center();\r\n\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function() {\r\n\r\n\t\tvar points = [\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t];\r\n\r\n\t\treturn function ( matrix ) {\r\n\r\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\tpoints[0].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\tpoints[1].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\tpoints[2].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\tpoints[3].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\tpoints[4].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\tpoints[5].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\tpoints[6].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\tpoints[7].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\r\n\t\t\tthis.makeEmpty();\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Box3().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Matrix3 = function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\tthis.elements = new Float32Array(9);\r\n\r\n\tthis.set(\r\n\r\n\t\t( n11 !== undefined ) ? n11 : 1, n12 || 0, n13 || 0,\r\n\t\tn21 || 0, ( n22 !== undefined ) ? n22 : 1, n23 || 0,\r\n\t\tn31 || 0, n32 || 0, ( n33 !== undefined ) ? n33 : 1\r\n\r\n\t);\r\n};\r\n\r\nTHREE.Matrix3.prototype = {\r\n\r\n\tconstructor: THREE.Matrix3,\r\n\r\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[0] = n11; te[3] = n12; te[6] = n13;\r\n\t\tte[1] = n21; te[4] = n22; te[7] = n23;\r\n\t\tte[2] = n31; te[5] = n32; te[8] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tvar me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[0], me[3], me[6],\r\n\t\t\tme[1], me[4], me[7],\r\n\t\t\tme[2], me[5], me[8]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tTHREE.onwarning( 'DEPRECATED: Matrix3\\'s .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix3( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function() {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( a ) {\r\n\r\n\t\t\tfor ( var i = 0, il = a.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\tv1.x = a[ i ];\r\n\t\t\t\tv1.y = a[ i + 1 ];\r\n\t\t\t\tv1.z = a[ i + 2 ];\r\n\r\n\t\t\t\tv1.applyMatrix3(this);\r\n\r\n\t\t\t\ta[ i ]     = v1.x;\r\n\t\t\t\ta[ i + 1 ] = v1.y;\r\n\t\t\t\ta[ i + 2 ] = v1.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn a;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[0] *= s; te[3] *= s; te[6] *= s;\r\n\t\tte[1] *= s; te[4] *= s; te[7] *= s;\r\n\t\tte[2] *= s; te[5] *= s; te[8] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a = te[0], b = te[1], c = te[2],\r\n\t\t\td = te[3], e = te[4], f = te[5],\r\n\t\t\tg = te[6], h = te[7], i = te[8];\r\n\r\n\t\treturn a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( matrix, errorOnInvertible ) {\r\n\r\n\t\tif ( ! ( matrix instanceof THREE.Matrix4 ) ) return THREE.onerror( 'expecting a Matrix4', matrix );\r\n\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\r\n\t\tvar me = matrix.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] =   me[10] * me[5] - me[6] * me[9];\r\n\t\tte[ 1 ] = - me[10] * me[1] + me[2] * me[9];\r\n\t\tte[ 2 ] =   me[6] * me[1] - me[2] * me[5];\r\n\t\tte[ 3 ] = - me[10] * me[4] + me[6] * me[8];\r\n\t\tte[ 4 ] =   me[10] * me[0] - me[2] * me[8];\r\n\t\tte[ 5 ] = - me[6] * me[0] + me[2] * me[4];\r\n\t\tte[ 6 ] =   me[9] * me[4] - me[5] * me[8];\r\n\t\tte[ 7 ] = - me[9] * me[0] + me[1] * me[8];\r\n\t\tte[ 8 ] =   me[5] * me[0] - me[1] * me[4];\r\n\r\n\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\r\n\t\t// no inverse\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tif ( errorOnInvertible === true ) {\r\n\r\n\t\t\t\treturn THREE.onerror( \"Matrix3.getInverse(): can't invert matrix, determinant is 0\", this );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1.0 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar tmp, m = this.elements;\r\n\r\n\t\ttmp = m[1]; m[1] = m[3]; m[3] = tmp;\r\n\t\ttmp = m[2]; m[2] = m[6]; m[6] = tmp;\r\n\t\ttmp = m[5]; m[5] = m[7]; m[7] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetNormalMatrix: function ( m ) {\r\n\r\n\t\t//if ( ! ( m instanceof THREE.Matrix4 ) ) return THREE.onerror( 'expecting a Matrix4', m );\r\n\r\n\t\tthis.getInverse( m ).transpose();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttransposeIntoArray: function ( r ) {\r\n\r\n\t\tvar m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn new THREE.Matrix3(\r\n\r\n\t\t\tte[0], te[3], te[6],\r\n\t\t\tte[1], te[4], te[7],\r\n\t\t\tte[2], te[5], te[8]\r\n\r\n\t\t);\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\n\r\nTHREE.Matrix4 = function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\tthis.elements = new Float32Array( 16 );\r\n\r\n\t// TODO: if n11 is undefined, then just set to identity, otherwise copy all other values into matrix\r\n\t//   we should not support semi specification of Matrix4, it is just weird.\r\n\r\n\tvar te = this.elements;\r\n\r\n\tte[0] = ( n11 !== undefined ) ? n11 : 1; te[4] = n12 || 0; te[8] = n13 || 0; te[12] = n14 || 0;\r\n\tte[1] = n21 || 0; te[5] = ( n22 !== undefined ) ? n22 : 1; te[9] = n23 || 0; te[13] = n24 || 0;\r\n\tte[2] = n31 || 0; te[6] = n32 || 0; te[10] = ( n33 !== undefined ) ? n33 : 1; te[14] = n34 || 0;\r\n\tte[3] = n41 || 0; te[7] = n42 || 0; te[11] = n43 || 0; te[15] = ( n44 !== undefined ) ? n44 : 1;\r\n\r\n};\r\n\r\nTHREE.Matrix4.prototype = {\r\n\r\n\tconstructor: THREE.Matrix4,\r\n\r\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[0] = n11; te[4] = n12; te[8] = n13; te[12] = n14;\r\n\t\tte[1] = n21; te[5] = n22; te[9] = n23; te[13] = n24;\r\n\t\tte[2] = n31; te[6] = n32; te[10] = n33; te[14] = n34;\r\n\t\tte[3] = n41; te[7] = n42; te[11] = n43; te[15] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tthis.elements.set( m.elements );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractPosition: function ( m ) {\r\n\r\n\t\tTHREE.onwarning( 'DEPRECATED: Matrix4\\'s .extractPosition() has been renamed to .copyPosition().' );\r\n\t\treturn this.copyPosition( m );\r\n\r\n\t},\r\n\r\n\tcopyPosition: function ( m ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tte[12] = me[12];\r\n\t\tte[13] = me[13];\r\n\t\tte[14] = me[14];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\txAxis.set( te[0], te[1], te[2] );\r\n\t\tyAxis.set( te[4], te[5], te[6] );\r\n\t\tzAxis.set( te[8], te[9], te[10] );\r\n\r\n\t\treturn this;\r\n\t\t\r\n\t},\r\n\r\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.identity();\r\n\r\n\t\tvar te = this.elements;\r\n\t    te.elements[0] = xAxis.x; te.elements[1] = xAxis.y; te.elements[2] = xAxis.z;\r\n\t    te.elements[4] = yAxis.x; te.elements[5] = yAxis.y; te.elements[6] = yAxis.z;\r\n\t    te.elements[8] = zAxis.x; te.elements[9] = zAxis.y; te.elements[10] = zAxis.z;\r\n\r\n\t    return this;\r\n\r\n\t},\r\n\r\n\textractRotation: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( m ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tvar scaleX = 1 / v1.set( me[0], me[1], me[2] ).length();\r\n\t\t\tvar scaleY = 1 / v1.set( me[4], me[5], me[6] ).length();\r\n\t\t\tvar scaleZ = 1 / v1.set( me[8], me[9], me[10] ).length();\r\n\r\n\t\t\tte[0] = me[0] * scaleX;\r\n\t\t\tte[1] = me[1] * scaleX;\r\n\t\t\tte[2] = me[2] * scaleX;\r\n\r\n\t\t\tte[4] = me[4] * scaleY;\r\n\t\t\tte[5] = me[5] * scaleY;\r\n\t\t\tte[6] = me[6] * scaleY;\r\n\r\n\t\t\tte[8] = me[8] * scaleZ;\r\n\t\t\tte[9] = me[9] * scaleZ;\r\n\t\t\tte[10] = me[10] * scaleZ;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeRotationFromEuler: function ( euler ) {\r\n\r\n\t\tif ( ! ( euler instanceof THREE.Euler ) ) return THREE.onerror( 'expecting a Euler', euler );\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[0] = c * e;\r\n\t\t\tte[4] = - c * f;\r\n\t\t\tte[8] = d;\r\n\r\n\t\t\tte[1] = af + be * d;\r\n\t\t\tte[5] = ae - bf * d;\r\n\t\t\tte[9] = - b * c;\r\n\r\n\t\t\tte[2] = bf - ae * d;\r\n\t\t\tte[6] = be + af * d;\r\n\t\t\tte[10] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[0] = ce + df * b;\r\n\t\t\tte[4] = de * b - cf;\r\n\t\t\tte[8] = a * d;\r\n\r\n\t\t\tte[1] = a * f;\r\n\t\t\tte[5] = a * e;\r\n\t\t\tte[9] = - b;\r\n\r\n\t\t\tte[2] = cf * b - de;\r\n\t\t\tte[6] = df + ce * b;\r\n\t\t\tte[10] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[0] = ce - df * b;\r\n\t\t\tte[4] = - a * f;\r\n\t\t\tte[8] = de + cf * b;\r\n\r\n\t\t\tte[1] = cf + de * b;\r\n\t\t\tte[5] = a * e;\r\n\t\t\tte[9] = df - ce * b;\r\n\r\n\t\t\tte[2] = - a * d;\r\n\t\t\tte[6] = b;\r\n\t\t\tte[10] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[0] = c * e;\r\n\t\t\tte[4] = be * d - af;\r\n\t\t\tte[8] = ae * d + bf;\r\n\r\n\t\t\tte[1] = c * f;\r\n\t\t\tte[5] = bf * d + ae;\r\n\t\t\tte[9] = af * d - be;\r\n\r\n\t\t\tte[2] = - d;\r\n\t\t\tte[6] = b * c;\r\n\t\t\tte[10] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[0] = c * e;\r\n\t\t\tte[4] = bd - ac * f;\r\n\t\t\tte[8] = bc * f + ad;\r\n\r\n\t\t\tte[1] = f;\r\n\t\t\tte[5] = a * e;\r\n\t\t\tte[9] = - b * e;\r\n\r\n\t\t\tte[2] = - d * e;\r\n\t\t\tte[6] = ad * f + bc;\r\n\t\t\tte[10] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[0] = c * e;\r\n\t\t\tte[4] = - f;\r\n\t\t\tte[8] = d * e;\r\n\r\n\t\t\tte[1] = ac * f + bd;\r\n\t\t\tte[5] = a * e;\r\n\t\t\tte[9] = ad * f - bc;\r\n\r\n\t\t\tte[2] = bc * f - ad;\r\n\t\t\tte[6] = b * e;\r\n\t\t\tte[10] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// last column\r\n\t\tte[3] = 0;\r\n\t\tte[7] = 0;\r\n\t\tte[11] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[12] = 0;\r\n\t\tte[13] = 0;\r\n\t\tte[14] = 0;\r\n\t\tte[15] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tTHREE.onwarning( 'DEPRECATED: Matrix4\\'s .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code.' );\r\n\r\n\t\treturn this.makeRotationFromQuaternion( q );\r\n\r\n\t},\r\n\r\n\tmakeRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tte[0] = 1 - ( yy + zz );\r\n\t\tte[4] = xy - wz;\r\n\t\tte[8] = xz + wy;\r\n\r\n\t\tte[1] = xy + wz;\r\n\t\tte[5] = 1 - ( xx + zz );\r\n\t\tte[9] = yz - wx;\r\n\r\n\t\tte[2] = xz - wy;\r\n\t\tte[6] = yz + wx;\r\n\t\tte[10] = 1 - ( xx + yy );\r\n\r\n\t\t// last column\r\n\t\tte[3] = 0;\r\n\t\tte[7] = 0;\r\n\t\tte[11] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[12] = 0;\r\n\t\tte[13] = 0;\r\n\t\tte[14] = 0;\r\n\t\tte[15] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlookAt: function() {\r\n\r\n\t\tvar x = new THREE.Vector3();\r\n\t\tvar y = new THREE.Vector3();\r\n\t\tvar z = new THREE.Vector3();\r\n\r\n\t\treturn function ( eye, target, up ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tz.subVectors( eye, target ).normalize();\r\n\r\n\t\t\tif ( z.length() === 0 ) {\r\n\r\n\t\t\t\tz.z = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\tif ( x.length() === 0 ) {\r\n\r\n\t\t\t\tz.x += 0.0001;\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ty.crossVectors( z, x );\r\n\r\n\r\n\t\t\tte[0] = x.x; te[4] = y.x; te[8] = z.x;\r\n\t\t\tte[1] = x.y; te[5] = y.y; te[9] = z.y;\r\n\t\t\tte[2] = x.z; te[6] = y.z; te[10] = z.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiply: function ( m, n ) {\r\n\r\n\t\tif ( n !== undefined ) {\r\n\r\n\t\t\tTHREE.onwarning( 'DEPRECATED: Matrix4\\'s .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t},\r\n\r\n\tmultiplyList: function ( listOfMatrices ) {\r\n\r\n\t\tfor (var i = 0, il = listOfMatrices.length; i < il ; i++) {\r\n\t\t  this.multiplyMatrices( this, listOfMatrices[ i ] );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyMatricesList: function ( listOfMatrices ) {\r\n\r\n\t\tif( listOfMatrices.length > 0 ) {\r\n\t\t\r\n\t\t\tthis.copy( listOfMatrices[0] );\r\n\r\n\t\t\tthis.multiplyList( listOfMatrices.slice( 1 ) );\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tthis.identity();\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\tif ( ! ( a instanceof THREE.Matrix4 ) ) return THREE.onerror( 'expecting a Matrix4', a );\r\n\t\tif ( ! ( b instanceof THREE.Matrix4 ) ) return THREE.onerror( 'expecting a Matrix4', b );\r\n\r\n\t\tvar ae = a.elements;\r\n\t\tvar be = b.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a11 = ae[0], a12 = ae[4], a13 = ae[8], a14 = ae[12];\r\n\t\tvar a21 = ae[1], a22 = ae[5], a23 = ae[9], a24 = ae[13];\r\n\t\tvar a31 = ae[2], a32 = ae[6], a33 = ae[10], a34 = ae[14];\r\n\t\tvar a41 = ae[3], a42 = ae[7], a43 = ae[11], a44 = ae[15];\r\n\r\n\t\tvar b11 = be[0], b12 = be[4], b13 = be[8], b14 = be[12];\r\n\t\tvar b21 = be[1], b22 = be[5], b23 = be[9], b24 = be[13];\r\n\t\tvar b31 = be[2], b32 = be[6], b33 = be[10], b34 = be[14];\r\n\t\tvar b41 = be[3], b42 = be[7], b43 = be[11], b44 = be[15];\r\n\r\n\t\tte[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyToArray: function ( a, b, r ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tthis.multiplyMatrices( a, b );\r\n\r\n\t\tr[ 0 ] = te[0]; r[ 1 ] = te[1]; r[ 2 ] = te[2]; r[ 3 ] = te[3];\r\n\t\tr[ 4 ] = te[4]; r[ 5 ] = te[5]; r[ 6 ] = te[6]; r[ 7 ] = te[7];\r\n\t\tr[ 8 ]  = te[8]; r[ 9 ]  = te[9]; r[ 10 ] = te[10]; r[ 11 ] = te[11];\r\n\t\tr[ 12 ] = te[12]; r[ 13 ] = te[13]; r[ 14 ] = te[14]; r[ 15 ] = te[15];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[0] *= s; te[4] *= s; te[8] *= s; te[12] *= s;\r\n\t\tte[1] *= s; te[5] *= s; te[9] *= s; te[13] *= s;\r\n\t\tte[2] *= s; te[6] *= s; te[10] *= s; te[14] *= s;\r\n\t\tte[3] *= s; te[7] *= s; te[11] *= s; te[15] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tTHREE.onwarning( 'DEPRECATED: Matrix4\\'s .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\treturn vector.applyProjection( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector4: function ( vector ) {\r\n\r\n\t\tTHREE.onwarning( 'DEPRECATED: Matrix4\\'s .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function() {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( a ) {\r\n\r\n\t\t\tfor ( var i = 0, il = a.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\tv1.x = a[ i ];\r\n\t\t\t\tv1.y = a[ i + 1 ];\r\n\t\t\t\tv1.z = a[ i + 2 ];\r\n\r\n\t\t\t\tv1.applyProjection( this );\r\n\r\n\t\t\t\ta[ i ]     = v1.x;\r\n\t\t\t\ta[ i + 1 ] = v1.y;\r\n\t\t\t\ta[ i + 2 ] = v1.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn a;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateAxis: function ( v ) {\r\n\r\n\t\tTHREE.onwarning( 'DEPRECATED: Matrix4\\'s .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\r\n\t\tv.transformDirection( this );\r\n\r\n\t},\r\n\r\n\tcrossVector: function ( vector ) {\r\n\r\n\t\tTHREE.onwarning( 'DEPRECATED: Matrix4\\'s .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar n11 = te[0], n12 = te[4], n13 = te[8], n14 = te[12];\r\n\t\tvar n21 = te[1], n22 = te[5], n23 = te[9], n24 = te[13];\r\n\t\tvar n31 = te[2], n32 = te[6], n33 = te[10], n34 = te[14];\r\n\t\tvar n41 = te[3], n42 = te[7], n43 = te[11], n44 = te[15];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+n14 * n23 * n32\r\n\t\t\t\t-n13 * n24 * n32\r\n\t\t\t\t-n14 * n22 * n33\r\n\t\t\t\t+n12 * n24 * n33\r\n\t\t\t\t+n13 * n22 * n34\r\n\t\t\t\t-n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+n11 * n23 * n34\r\n\t\t\t\t-n11 * n24 * n33\r\n\t\t\t\t+n14 * n21 * n33\r\n\t\t\t\t-n13 * n21 * n34\r\n\t\t\t\t+n13 * n24 * n31\r\n\t\t\t\t-n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+n11 * n24 * n32\r\n\t\t\t\t-n11 * n22 * n34\r\n\t\t\t\t-n14 * n21 * n32\r\n\t\t\t\t+n12 * n21 * n34\r\n\t\t\t\t+n14 * n22 * n31\r\n\t\t\t\t-n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t-n13 * n22 * n31\r\n\t\t\t\t-n11 * n23 * n32\r\n\t\t\t\t+n11 * n22 * n33\r\n\t\t\t\t+n13 * n21 * n32\r\n\t\t\t\t-n12 * n21 * n33\r\n\t\t\t\t+n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar tmp;\r\n\r\n\t\ttmp = te[1]; te[1] = te[4]; te[4] = tmp;\r\n\t\ttmp = te[2]; te[2] = te[8]; te[8] = tmp;\r\n\t\ttmp = te[6]; te[6] = te[9]; te[9] = tmp;\r\n\r\n\t\ttmp = te[3]; te[3] = te[12]; te[12] = tmp;\r\n\t\ttmp = te[7]; te[7] = te[13]; te[13] = tmp;\r\n\t\ttmp = te[11]; te[11] = te[14]; te[14] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArray: function ( flat ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tflat[ 0 ] = te[0]; flat[ 1 ] = te[1]; flat[ 2 ] = te[2]; flat[ 3 ] = te[3];\r\n\t\tflat[ 4 ] = te[4]; flat[ 5 ] = te[5]; flat[ 6 ] = te[6]; flat[ 7 ] = te[7];\r\n\t\tflat[ 8 ] = te[8]; flat[ 9 ] = te[9]; flat[ 10 ] = te[10]; flat[ 11 ] = te[11];\r\n\t\tflat[ 12 ] = te[12]; flat[ 13 ] = te[13]; flat[ 14 ] = te[14]; flat[ 15 ] = te[15];\r\n\r\n\t\treturn flat;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function( flat, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tflat[ offset ] = te[0];\r\n\t\tflat[ offset + 1 ] = te[1];\r\n\t\tflat[ offset + 2 ] = te[2];\r\n\t\tflat[ offset + 3 ] = te[3];\r\n\r\n\t\tflat[ offset + 4 ] = te[4];\r\n\t\tflat[ offset + 5 ] = te[5];\r\n\t\tflat[ offset + 6 ] = te[6];\r\n\t\tflat[ offset + 7 ] = te[7];\r\n\r\n\t\tflat[ offset + 8 ]  = te[8];\r\n\t\tflat[ offset + 9 ]  = te[9];\r\n\t\tflat[ offset + 10 ] = te[10];\r\n\t\tflat[ offset + 11 ] = te[11];\r\n\r\n\t\tflat[ offset + 12 ] = te[12];\r\n\t\tflat[ offset + 13 ] = te[13];\r\n\t\tflat[ offset + 14 ] = te[14];\r\n\t\tflat[ offset + 15 ] = te[15];\r\n\r\n\t\treturn flat;\r\n\r\n\t},\r\n\r\n\tgetPosition: function() {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tTHREE.onwarning( 'DEPRECATED: Matrix4\\'s .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\treturn v1.set( te[12], te[13], te[14] );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetPosition: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[12] = v.x;\r\n\t\tte[13] = v.y;\r\n\t\tte[14] = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( m, errorOnInvertible ) {\r\n\r\n\t\t//if ( ! ( m instanceof THREE.Matrix4 ) ) return THREE.onerror( 'expecting a Matrix4', m );\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tvar n11 = me[0], n12 = me[4], n13 = me[8], n14 = me[12];\r\n\t\tvar n21 = me[1], n22 = me[5], n23 = me[9], n24 = me[13];\r\n\t\tvar n31 = me[2], n32 = me[6], n33 = me[10], n34 = me[14];\r\n\t\tvar n41 = me[3], n42 = me[7], n43 = me[11], n44 = me[15];\r\n\r\n\t\tte[0] = n23*n34*n42 - n24*n33*n42 + n24*n32*n43 - n22*n34*n43 - n23*n32*n44 + n22*n33*n44;\r\n\t\tte[4] = n14*n33*n42 - n13*n34*n42 - n14*n32*n43 + n12*n34*n43 + n13*n32*n44 - n12*n33*n44;\r\n\t\tte[8] = n13*n24*n42 - n14*n23*n42 + n14*n22*n43 - n12*n24*n43 - n13*n22*n44 + n12*n23*n44;\r\n\t\tte[12] = n14*n23*n32 - n13*n24*n32 - n14*n22*n33 + n12*n24*n33 + n13*n22*n34 - n12*n23*n34;\r\n\t\tte[1] = n24*n33*n41 - n23*n34*n41 - n24*n31*n43 + n21*n34*n43 + n23*n31*n44 - n21*n33*n44;\r\n\t\tte[5] = n13*n34*n41 - n14*n33*n41 + n14*n31*n43 - n11*n34*n43 - n13*n31*n44 + n11*n33*n44;\r\n\t\tte[9] = n14*n23*n41 - n13*n24*n41 - n14*n21*n43 + n11*n24*n43 + n13*n21*n44 - n11*n23*n44;\r\n\t\tte[13] = n13*n24*n31 - n14*n23*n31 + n14*n21*n33 - n11*n24*n33 - n13*n21*n34 + n11*n23*n34;\r\n\t\tte[2] = n22*n34*n41 - n24*n32*n41 + n24*n31*n42 - n21*n34*n42 - n22*n31*n44 + n21*n32*n44;\r\n\t\tte[6] = n14*n32*n41 - n12*n34*n41 - n14*n31*n42 + n11*n34*n42 + n12*n31*n44 - n11*n32*n44;\r\n\t\tte[10] = n12*n24*n41 - n14*n22*n41 + n14*n21*n42 - n11*n24*n42 - n12*n21*n44 + n11*n22*n44;\r\n\t\tte[14] = n14*n22*n31 - n12*n24*n31 - n14*n21*n32 + n11*n24*n32 + n12*n21*n34 - n11*n22*n34;\r\n\t\tte[3] = n23*n32*n41 - n22*n33*n41 - n23*n31*n42 + n21*n33*n42 + n22*n31*n43 - n21*n32*n43;\r\n\t\tte[7] = n12*n33*n41 - n13*n32*n41 + n13*n31*n42 - n11*n33*n42 - n12*n31*n43 + n11*n32*n43;\r\n\t\tte[11] = n13*n22*n41 - n12*n23*n41 - n13*n21*n42 + n11*n23*n42 + n12*n21*n43 - n11*n22*n43;\r\n\t\tte[15] = n12*n23*n31 - n13*n22*n31 + n13*n21*n32 - n11*n23*n32 - n12*n21*n33 + n11*n22*n33;\r\n\r\n\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\r\n\t\tif ( det == 0 ) {\r\n\r\n\t\t\tif ( errorOnInvertible === true ) {\r\n\r\n\t\t\t\t return THREE.onerror( \"Matrix4.getInverse(): can't invert matrix, determinant is 0\", this );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( v ) {\r\n\r\n\t\tTHREE.onerror( 'DEPRECATED: Matrix4\\'s .translate() has been removed.');\r\n\r\n\t},\r\n\r\n\trotateX: function ( angle ) {\r\n\r\n\t\tTHREE.onerror( 'DEPRECATED: Matrix4\\'s .rotateX() has been removed.');\r\n\r\n\t},\r\n\r\n\trotateY: function ( angle ) {\r\n\r\n\t\tTHREE.onerror( 'DEPRECATED: Matrix4\\'s .rotateY() has been removed.');\r\n\r\n\t},\r\n\r\n\trotateZ: function ( angle ) {\r\n\r\n\t\tTHREE.onerror( 'DEPRECATED: Matrix4\\'s .rotateZ() has been removed.');\r\n\r\n\t},\r\n\r\n\trotateByAxis: function ( axis, angle ) {\r\n\r\n\t\tTHREE.onerror( 'DEPRECATED: Matrix4\\'s .rotateByAxis() has been removed.');\r\n\r\n\t},\r\n\r\n\tscale: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[0] *= x; te[4] *= y; te[8] *= z;\r\n\t\tte[1] *= x; te[5] *= y; te[9] *= z;\r\n\t\tte[2] *= x; te[6] *= y; te[10] *= z;\r\n\t\tte[3] *= x; te[7] *= y; te[11] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetMaxScaleOnAxis: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\r\n\t\tvar scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\r\n\t\tvar scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\r\n\t},\r\n\r\n\tmakeTranslation: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, x,\r\n\t\t\t0, 1, 0, y,\r\n\t\t\t0, 0, 1, z,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationX: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0,  0, 0,\r\n\t\t\t0, c, -s, 0,\r\n\t\t\t0, s,  c, 0,\r\n\t\t\t0, 0,  0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationY: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t-s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationZ: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, -s, 0, 0,\r\n\t\t\ts,  c, 0, 0,\r\n\t\t\t0,  0, 1, 0,\r\n\t\t\t0,  0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tvar c = Math.cos( angle );\r\n\t\tvar s = Math.sin( angle );\r\n\t\tvar t = 1 - c;\r\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\tvar tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\t return this;\r\n\r\n\t},\r\n\r\n\tmakeScale: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\r\n\tmakeShear: function ( vector3Shear, reverseStyle ) {\r\n\r\n\t\tvar xy = vector3Shear.x;\r\n    \tvar xz = vector3Shear.y;\r\n    \tvar yz = vector3Shear.z;\r\n\r\n\t\tif ( reverseStyle ) {\r\n\r\n\t\t  this.set(\r\n\t\t    1,  0,  0,  0,\r\n\t\t    xy, 1,  0,  0,\r\n\t\t    xz, yz, 1,  0,\r\n\t\t    0,   0,  0,  1\r\n\t\t  );\r\n\r\n\t\t} else {\r\n\t\t  // Maya style\r\n\t\t  this.set(\r\n\t\t    1,  xy, xz, 0,\r\n\t\t    0,  1,  yz, 0,\r\n\t\t    0,  0,  1,  0,\r\n\t\t    0,  0,  0,  1\r\n\t\t  );\r\n\t\t}\r\n\r\n\t    return this;\r\n\r\n\t},\r\n\r\n\tcompose: function ( position, quaternion, scale ) {\r\n\r\n\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\tthis.scale( scale );\r\n\t\tthis.setPosition( position );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdecompose: function () {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( position, quaternion, scale ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar sx = vector.set( te[0], te[1], te[2] ).length();\r\n\t\t\tvar sy = vector.set( te[4], te[5], te[6] ).length();\r\n\t\t\tvar sz = vector.set( te[8], te[9], te[10] ).length();\r\n\r\n\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\tvar det = this.determinant();\r\n\t\t\tif( det < 0 ) {\r\n\t\t\t\tsx = -sx;\r\n\t\t\t}\r\n\r\n\t\t\tposition.x = te[12];\r\n\t\t\tposition.y = te[13];\r\n\t\t\tposition.z = te[14];\r\n\r\n\t\t\t// scale the rotation part\r\n\r\n\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\r\n\t\t\tvar invSX = 1 / sx;\r\n\t\t\tvar invSY = 1 / sy;\r\n\t\t\tvar invSZ = 1 / sz;\r\n\r\n\t\t\tmatrix.elements[0] *= invSX;\r\n\t\t\tmatrix.elements[1] *= invSX;\r\n\t\t\tmatrix.elements[2] *= invSX;\r\n\r\n\t\t\tmatrix.elements[4] *= invSY;\r\n\t\t\tmatrix.elements[5] *= invSY;\r\n\t\t\tmatrix.elements[6] *= invSY;\r\n\r\n\t\t\tmatrix.elements[8] *= invSZ;\r\n\t\t\tmatrix.elements[9] *= invSZ;\r\n\t\t\tmatrix.elements[10] *= invSZ;\r\n\r\n\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n\t\t\tscale.x = sx;\r\n\t\t\tscale.y = sy;\r\n\t\t\tscale.z = sz;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeFrustum: function ( left, right, bottom, top, near, far, filmOffset, filmSize ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = 2 * near / ( right - left );\r\n\t\tvar y = 2 * near / ( top - bottom );\r\n\r\n\t\tvar a = ( right + left ) / ( right - left );\r\n\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n\t\tte[0] = x;\tte[4] = 0;\tte[8] = a;\tte[12] = 0;\r\n\t\tte[1] = 0;\tte[5] = y;\tte[9] = b;\tte[13] = 0;\r\n\t\tte[2] = 0;\tte[6] = 0;\tte[10] = c;\tte[14] = d;\r\n\t\tte[3] = 0;\tte[7] = 0;\tte[11] = - 1;\tte[15] = 0;\r\n\r\n\t\tif( filmOffset && filmSize ) {\r\n\t\t\t// shift principle point, details: http://ksimek.github.io/2013/08/13/intrinsic/\r\n\t\t\tif( filmSize.x !== 0 ) {\r\n\t\t\t\tte[8] += 2 * filmOffset.x / filmSize.x;\r\n\t\t\t}\r\n\t\t\tif( filmSize.y !== 0 ) {\r\n\t\t\t\tte[9] += 2 * filmOffset.y / filmSize.y;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakePerspective: function ( fov, aspect, near, far, filmOffset, filmSize ) {\r\n\r\n\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\tvar ymin = - ymax;\r\n\t\tvar xmin = ymin * aspect;\r\n\t\tvar xmax = ymax * aspect;\r\n\r\n\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far, filmOffset, filmSize );\r\n\r\n\t},\r\n\r\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar w = right - left;\r\n\t\tvar h = top - bottom;\r\n\t\tvar p = far - near;\r\n\r\n\t\tvar x = ( right + left ) / w;\r\n\t\tvar y = ( top + bottom ) / h;\r\n\t\tvar z = ( far + near ) / p;\r\n\r\n\t\tte[0] = 2 / w;\tte[4] = 0;\tte[8] = 0;\tte[12] = -x;\r\n\t\tte[1] = 0;\tte[5] = 2 / h;\tte[9] = 0;\tte[13] = -y;\r\n\t\tte[2] = 0;\tte[6] = 0;\tte[10] = -2/p;\tte[14] = -z;\r\n\t\tte[3] = 0;\tte[7] = 0;\tte[11] = 0;\tte[15] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn new THREE.Matrix4(\r\n\r\n\t\t\tte[0], te[4], te[8], te[12],\r\n\t\t\tte[1], te[5], te[9], te[13],\r\n\t\t\tte[2], te[6], te[10], te[14],\r\n\t\t\tte[3], te[7], te[11], te[15]\r\n\r\n\t\t);\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Ray = function ( origin, direction ) {\r\n\r\n\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Ray.prototype = {\r\n\r\n\tconstructor: THREE.Ray,\r\n\r\n\tset: function ( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t},\r\n\r\n\trecast: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( t ) {\r\n\r\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.subVectors( point, this.origin );\r\n\t\tvar directionDistance = result.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn result.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t\t// point behind the ray\r\n\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\treturn this.origin.distanceTo( point );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t\treturn v1.distanceTo( point );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tdistanceSqToSegment: function( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t// It returns the min distance between the ray and the segment\r\n\t\t// defined by v0 and v1\r\n\t\t// It can also set two optional targets :\r\n\t\t// - The closest point on the ray\r\n\t\t// - The closest point on the segment\r\n\r\n\t\tvar segCenter = v0.clone().add( v1 ).multiplyScalar( 0.5 );\r\n\t\tvar segDir = v1.clone().sub( v0 ).normalize();\r\n\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\tvar diff = this.origin.clone().sub( segCenter );\r\n\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\tvar b0 = diff.dot( this.direction );\r\n\t\tvar b1 = - diff.dot( segDir );\r\n\t\tvar c = diff.lengthSq();\r\n\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n\t\tif ( det >= 0 ) {\r\n\r\n\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\textDet = segExtent * det;\r\n\r\n\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0) );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( s1 <= - extDet) {\r\n\r\n\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t}\r\n\r\n\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\toptionalPointOnRay.copy( this.direction.clone().multiplyScalar( s0 ).add( this.origin ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\toptionalPointOnSegment.copy( segDir.clone().multiplyScalar( s1 ).add( segCenter ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn sqrDist;\r\n\r\n\t},\r\n\r\n\tisIntersectionSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n\t},\r\n\r\n\tisIntersectionPlane: function ( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tdistanceToPlane: function ( plane ) {\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\tif ( denominator == 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif( plane.distanceToPoint( this.origin ) == 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t :  null;\r\n\r\n\t},\r\n\r\n\tintersectPlane: function ( plane, optionalTarget ) {\r\n\r\n\t\tvar t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn this.at( t, optionalTarget );\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function () {\r\n\t\t\r\n\t\tvar v = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tintersectBox: function ( box , optionalTarget ) {\r\n\r\n\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\r\n\t\tvar tmin,tmax,tymin,tymax,tzmin,tzmax;\r\n\r\n\t\tvar invdirx = 1/this.direction.x,\r\n\t\t\tinvdiry = 1/this.direction.y,\r\n\t\t\tinvdirz = 1/this.direction.z;\r\n\r\n\t\tvar origin = this.origin;\r\n\r\n\t\tif (invdirx >= 0) {\r\n\t\t\t\t\r\n\t\t\ttmin = (box.min.x - origin.x) * invdirx;\r\n\t\t\ttmax = (box.max.x - origin.x) * invdirx;\r\n\r\n\t\t} else { \r\n\r\n\t\t\ttmin = (box.max.x - origin.x) * invdirx;\r\n\t\t\ttmax = (box.min.x - origin.x) * invdirx;\r\n\t\t}\t\t\t\r\n\r\n\t\tif (invdiry >= 0) {\r\n\t\t\r\n\t\t\ttymin = (box.min.y - origin.y) * invdiry;\r\n\t\t\ttymax = (box.max.y - origin.y) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = (box.max.y - origin.y) * invdiry;\r\n\t\t\ttymax = (box.min.y - origin.y) * invdiry;\r\n\t\t}\r\n\r\n\t\tif ((tmin > tymax) || (tymin > tmax)) return null;\r\n\r\n\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\t\t\r\n\t\tif (tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\tif (tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\tif (invdirz >= 0) {\r\n\t\t\r\n\t\t\ttzmin = (box.min.z - origin.z) * invdirz;\r\n\t\t\ttzmax = (box.max.z - origin.z) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = (box.max.z - origin.z) * invdirz;\r\n\t\t\ttzmax = (box.min.z - origin.z) * invdirz;\r\n\t\t}\r\n\r\n\t\tif ((tmin > tzmax) || (tzmin > tmax)) return null;\r\n\r\n\t\tif (tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif (tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\r\n\t},\r\n\r\n\tintersectTriangle: function() {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\t\tvar diff = new THREE.Vector3();\r\n\t\tvar edge1 = new THREE.Vector3();\r\n\t\tvar edge2 = new THREE.Vector3();\r\n\t\tvar normal = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\r\n\t\t\tedge1.subVectors( b, a );\r\n\t\t\tedge2.subVectors( c, a );\r\n\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\tvar sign;\r\n\r\n\t\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\tsign = 1;\r\n\r\n\t\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\t\tsign = - 1;\r\n\t\t\t\tDdN = - DdN;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n\t\t\t// b1 < 0, no intersection\r\n\t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n\t\t\t// b2 < 0, no intersection\r\n\t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n\t\t\t// t < 0, no intersection\r\n\t\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ray intersects triangle.\r\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\t\r\n\t\t}\r\n\t\r\n\t}(),\r\n\r\n\tapplyMatrix4: function ( matrix4 ) {\r\n\r\n\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.sub( this.origin );\r\n\t\tthis.direction.normalize();\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tequals: function ( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Ray().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Sphere = function ( center, radius ) {\r\n\r\n\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n};\r\n\r\nTHREE.Sphere.prototype = {\r\n\r\n\tconstructor: THREE.Sphere,\r\n\r\n\tset: function ( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\r\n\tsetFromPoints: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\r\n\t\treturn function ( points, optionalCenter )  {\r\n\r\n\t\t\tvar center = this.center;\r\n\r\n\t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar maxRadiusSq = 0, cx = center.x, cy = center.y, cz = center.z;\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar pt = points[ i ];\r\n\t\t\t\tvar dx = cx - pt.x;\r\n\t\t\t\tvar dy = cy - pt.y;\r\n\t\t\t\tvar dz = cz - pt.z;\r\n\r\n\t\t\t\tvar distanceSquared = dx * dx + dy * dy + dz * dz;\r\n\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, distanceSquared );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\treturn this;\t\t\t\r\n \t\t\r\n \t\t};\r\n\r\n\t}(),\r\n\r\n\tcopy: function ( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\treturn ( this.radius <= 0 );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t},\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\tgetBoundingBox: function ( optionalTarget ) {\r\n\r\n\t\tvar box = optionalTarget || new THREE.Box3();\r\n\r\n\t\tbox.set( this.center, this.center );\r\n\t\tbox.expandByScalar( this.radius );\r\n\r\n\t\treturn box;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Sphere().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\tthis.planes = [\r\n\r\n\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\r\n\t];\r\n\r\n};\r\n\r\nTHREE.Frustum.prototype = {\r\n\r\n\tconstructor: THREE.Frustum,\r\n\r\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tplanes[0].copy( p0 );\r\n\t\tplanes[1].copy( p1 );\r\n\t\tplanes[2].copy( p2 );\r\n\t\tplanes[3].copy( p3 );\r\n\t\tplanes[4].copy( p4 );\r\n\t\tplanes[5].copy( p5 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( frustum ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tplanes[i].copy( frustum.planes[i] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrix: function ( m ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar me = m.elements;\r\n\t\tvar me0 = me[0], me1 = me[1], me2 = me[2], me3 = me[3];\r\n\t\tvar me4 = me[4], me5 = me[5], me6 = me[6], me7 = me[7];\r\n\t\tvar me8 = me[8], me9 = me[9], me10 = me[10], me11 = me[11];\r\n\t\tvar me12 = me[12], me13 = me[13], me14 = me[14], me15 = me[15];\r\n\r\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tintersectsObject: function () {\r\n\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar center = sphere.center;\r\n\t\tvar negRadius = -sphere.radius;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tintersectsBox : function() {\r\n\r\n\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\tp2 = new THREE.Vector3();\r\n\r\n\t\treturn function( box ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\t\t\t\r\n\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\t\t\t\r\n\t\t\t\tvar plane = planes[i];\r\n\t\t\t\t\r\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\t\t\t\t\r\n\t\t\t\t// if both outside plane, no intersection\r\n\r\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn false;\r\n\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Frustum().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Plane = function ( normal, constant ) {\r\n\r\n\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n};\r\n\r\nTHREE.Plane.prototype = {\r\n\r\n\tconstructor: THREE.Plane,\r\n\r\n\tset: function ( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponents: function ( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCoplanarPoints: function() {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c ) {\r\n\r\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcopy: function ( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.constant *= -1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t},\r\n\r\n\tdistanceToSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t},\r\n\r\n\tprojectPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\r\n\t},\r\n\r\n\torthoPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\r\n\t},\r\n\r\n\tisIntersectionLine: function ( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t},\r\n\r\n\tintersectLine: function() {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( line, optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tvar direction = line.delta( v1 );\r\n\r\n\t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n\t\t\tif ( denominator == 0 ) {\r\n\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif( this.distanceToPoint( line.start ) == 0 ) {\r\n\r\n\t\t\t\t\treturn result.copy( line.start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\t\tif( t < 0 || t > 1 ) {\r\n\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcoplanarPoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function() {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar m1 = new THREE.Matrix3();\r\n\r\n\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\r\n\t\t\tif ( ! ( matrix instanceof THREE.Matrix4 ) ) return THREE.onerror( 'expecting a Matrix4', matrix );\r\n\r\n\t\t\t// compute new normal based on theory here:\r\n\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\t\t\t\r\n\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant == this.constant );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Plane().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Math = {\r\n\r\n\tPI2: Math.PI * 2,\r\n\tDegreeToRadiansFactor: Math.PI / 180,\r\n\tRadianToDegreesFactor: 180 / Math.PI,\r\n\r\n\tgenerateUUID: function () {\r\n\r\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\t\t\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\r\n\t\tvar uuid = new Array(36);\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i == 8 || i == 13 || i == 18 || i == 23 ) {\r\n\t\t\t\r\n\t\t\t\t\tuuid[ i ] = '-';\r\n\t\t\t\r\n\t\t\t\t} else if ( i == 14 ) {\r\n\t\t\t\r\n\t\t\t\t\tuuid[ i ] = '4';\r\n\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\r\n\t\t\t\t\tif (rnd <= 0x02) rnd = 0x2000000 + (Math.random()*0x1000000)|0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\tuuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn uuid.join('');\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\t// Clamp value to range <a, b>\r\n\r\n\tclamp: function ( x, a, b ) {\r\n\r\n\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\r\n\t},\r\n\r\n\t// Clamp value to range <a, inf)\r\n\r\n\tclampBottom: function ( x, a ) {\r\n\r\n\t\treturn x < a ? a : x;\r\n\r\n\t},\r\n\r\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t},\r\n\r\n\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min )/( max - min );\r\n\r\n\t\treturn x*x*(3 - 2*x);\r\n\r\n\t},\r\n\r\n\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min )/( max - min );\r\n\r\n\t\treturn x*x*x*(x*(x*6 - 15) + 10);\r\n\r\n\t},\r\n\r\n\t// Random float from <0, 1> with 16 bits of randomness\r\n\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\r\n\trandom16: function () {\r\n\r\n\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\r\n\t},\r\n\r\n\t// Random integer from <low, high> interval\r\n\r\n\trandInt: function ( low, high ) {\r\n\r\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n\t},\r\n\r\n\t// Random float from <low, high> interval\r\n\r\n\trandFloat: function ( low, high ) {\r\n\r\n\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t},\r\n\r\n\t// Random float from <-range/2, range/2> interval\r\n\r\n\trandFloatSpread: function ( range ) {\r\n\r\n\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t},\r\n\r\n\tsign: function ( x ) {\r\n\r\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : 0;\r\n\r\n\t},\r\n\r\n\tdegToRad: function ( degrees ) {\r\n\r\n\t\treturn degrees * this.DegreeToRadiansFactor;\r\n\r\n\t},\r\n\r\n\tradToDeg: function ( radians ) {\r\n\r\n\t\treturn radians * this.RadianToDegreesFactor;\r\n\r\n\t},\r\n\r\n\tisPowerOfTwo: function ( value ) {\r\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Spline = function ( points ) {\r\n\r\n\tthis.points = points;\r\n\r\n\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\tpoint, intPoint, weight, w2, w3,\r\n\tpa, pb, pc, pd;\r\n\r\n\tthis.initFromArray = function( a ) {\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0; i < a.length; i++ ) {\r\n\r\n\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getPoint = function ( k ) {\r\n\r\n\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\tintPoint = Math.floor( point );\r\n\t\tweight = point - intPoint;\r\n\r\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\tc[ 1 ] = intPoint;\r\n\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\r\n\t\tpa = this.points[ c[ 0 ] ];\r\n\t\tpb = this.points[ c[ 1 ] ];\r\n\t\tpc = this.points[ c[ 2 ] ];\r\n\t\tpd = this.points[ c[ 3 ] ];\r\n\r\n\t\tw2 = weight * weight;\r\n\t\tw3 = weight * w2;\r\n\r\n\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\r\n\t\treturn v3;\r\n\r\n\t};\r\n\r\n\tthis.getControlPointsArray = function () {\r\n\r\n\t\tvar i, p, l = this.points.length,\r\n\t\t\tcoords = [];\r\n\r\n\t\tfor ( i = 0; i < l; i ++ ) {\r\n\r\n\t\t\tp = this.points[ i ];\r\n\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\r\n\t\t}\r\n\r\n\t\treturn coords;\r\n\r\n\t};\r\n\r\n\t// approximate length by summing linear segments\r\n\r\n\tthis.getLength = function ( nSubDivisions ) {\r\n\r\n\t\tvar i, index, nSamples, position,\r\n\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tchunkLengths = [],\r\n\t\t\ttotalLength = 0;\r\n\r\n\t\t// first point has 0 length\r\n\r\n\t\tchunkLengths[ 0 ] = 0;\r\n\r\n\t\tif ( !nSubDivisions ) nSubDivisions = 100;\r\n\r\n\t\tnSamples = this.points.length * nSubDivisions;\r\n\r\n\t\toldPosition.copy( this.points[ 0 ] );\r\n\r\n\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\r\n\t\t\tindex = i / nSamples;\r\n\r\n\t\t\tposition = this.getPoint( index );\r\n\t\t\ttmpVec.copy( position );\r\n\r\n\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\r\n\t\t\toldPosition.copy( position );\r\n\r\n\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\tintPoint = Math.floor( point );\r\n\r\n\t\t\tif ( intPoint != oldIntPoint ) {\r\n\r\n\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\toldIntPoint = intPoint;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// last point ends with total length\r\n\r\n\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\r\n\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\r\n\t};\r\n\r\n\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\r\n\t\tvar i, j,\r\n\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\tlinearDistance, realDistance,\r\n\t\t\tsampling, position,\r\n\t\t\tnewpoints = [],\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tsl = this.getLength();\r\n\r\n\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\r\n\t\tfor ( i = 1; i < this.points.length; i++ ) {\r\n\r\n\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\r\n\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\r\n\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\r\n\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\r\n\t\t\tfor ( j = 1; j < sampling - 1; j++ ) {\r\n\r\n\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.points = newpoints;\r\n\r\n\t};\r\n\r\n\t// Catmull-Rom\r\n\r\n\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t};\r\n\r\n};\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Triangle = function ( a, b, c ) {\r\n\r\n\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Triangle.normal = function() {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\r\n\treturn function ( a, b, c, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tresult.subVectors( c, b );\r\n\t\tv0.subVectors( a, b );\r\n\t\tresult.cross( v0 );\r\n\r\n\t\tvar resultLengthSq = result.lengthSq();\r\n\t\tif( resultLengthSq > 0 ) {\r\n\r\n\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.set( 0, 0, 0 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// static/instance method to calculate barycoordinates\r\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\nTHREE.Triangle.barycoordFromPoint = function() {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c, optionalTarget ) {\r\n\r\n\t\tv0.subVectors( c, a );\r\n\t\tv1.subVectors( b, a );\r\n\t\tv2.subVectors( point, a );\r\n\r\n\t\tvar dot00 = v0.dot( v0 );\r\n\t\tvar dot01 = v0.dot( v1 );\r\n\t\tvar dot02 = v0.dot( v2 );\r\n\t\tvar dot11 = v1.dot( v1 );\r\n\t\tvar dot12 = v1.dot( v2 );\r\n\r\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t// colinear or singular triangle\r\n\t\tif( denom == 0 ) {\r\n\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\treturn result.set( -2, -1, -1 );\r\n\t\t}\r\n\r\n\t\tvar invDenom = 1 / denom;\r\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycoordinates must always sum to 1\r\n\t\treturn result.set( 1 - u - v, v, u );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.containsPoint = function() {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c ) {\r\n\r\n\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\r\n\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.prototype = {\r\n\r\n\tconstructor: THREE.Triangle,\r\n\r\n\tset: function ( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[i0] );\r\n\t\tthis.b.copy( points[i1] );\r\n\t\tthis.c.copy( points[i2] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tarea: function() {\r\n\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\tv1.subVectors( this.a, this.b );\r\n\r\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmidpoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t},\r\n\r\n\tnormal: function ( optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tplane: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Plane();\r\n\r\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tequals: function ( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Triangle().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Vertex = function ( v ) {\r\n\r\n\treturn THREE.onerror( 'THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.' );\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.UV = function ( u, v ) {\r\n\r\n\tTHREE.onerror( 'THREE.UV has been DEPRECATED. Use THREE.Vector2 instead.')\r\n\treturn new THREE.Vector2( u, v );\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Clock = function ( autoStart ) {\r\n\r\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.oldTime = 0;\r\n\tthis.elapsedTime = 0;\r\n\r\n\tthis.running = false;\r\n\r\n};\r\n\r\nTHREE.Clock.prototype = {\r\n\r\n\tconstructor: THREE.Clock,\r\n\r\n\tstart: function () {\r\n\r\n\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t? self.performance.now()\r\n\t\t\t\t\t: Date.now();\r\n\r\n\t\tthis.oldTime = this.startTime;\r\n\t\tthis.running = true;\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.getElapsedTime();\r\n\t\tthis.running = false;\r\n\r\n\t},\r\n\r\n\tgetElapsedTime: function () {\r\n\r\n\t\tthis.getDelta();\r\n\t\treturn this.elapsedTime;\r\n\r\n\t},\r\n\r\n\tgetDelta: function () {\r\n\r\n\t\tvar diff = 0;\r\n\r\n\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\tthis.start();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.running ) {\r\n\r\n\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t? self.performance.now()\r\n\t\t\t\t\t: Date.now();\r\n\r\n\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t}\r\n\r\n\t\treturn diff;\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nTHREE.EventDispatcher = function () {}\r\n\r\nTHREE.EventDispatcher.prototype = {\r\n\r\n\tconstructor: THREE.EventDispatcher,\r\n\r\n\tapply: function ( object ) {\r\n\r\n\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\r\n\t},\r\n\r\n\taddEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\thasEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tremoveEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tdispatchEvent: function () {\r\n\r\n\t\tvar array = [];\r\n\r\n\t\treturn function ( event ) {\r\n\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ event.type ];\r\n\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\t\tevent.target = this;\r\n\r\n\t\t\t\tvar length = listenerArray.length;\r\n\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}()\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://exocortex.com/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\r\n\r\n( function ( THREE ) {\r\n\r\n\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\r\n\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near || 0;\r\n\t\tthis.far = far || Infinity;\r\n\r\n\t};\r\n\r\n\tvar sphere = new THREE.Sphere();\r\n\tvar localRay = new THREE.Ray();\r\n\tvar facePlane = new THREE.Plane();\r\n\tvar intersectPoint = new THREE.Vector3();\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\r\n\tvar descSort = function ( a, b ) {\r\n\r\n\t\treturn a.distance - b.distance;\r\n\r\n\t};\r\n\r\n\tvar vA = new THREE.Vector3();\r\n\tvar vB = new THREE.Vector3();\r\n\tvar vC = new THREE.Vector3();\r\n\r\n\tvar intersectObject = function ( object, raycaster, intersects ) {\r\n\r\n\t\tif ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\tmatrixPosition.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\r\n\t\t\tvar distance = raycaster.ray.distanceToPoint( matrixPosition );\r\n\r\n\t\t\tif ( distance > object.scale.x ) {\r\n\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.push( {\r\n\r\n\t\t\t\tdistance: distance,\r\n\t\t\t\tpoint: object.position,\r\n\t\t\t\tface: null,\r\n\t\t\t\tobject: object\r\n\r\n\t\t\t} );\r\n\r\n\t\t} else if ( object instanceof THREE.LOD ) {\r\n\r\n\t\t\tmatrixPosition.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n\t\t\tintersectObject( object.getObjectForDistance( distance ), raycaster, intersects );\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Check boundingBox before continuing\r\n\t\t\t\r\n\t\t\tinverseMatrix.getInverse( object.matrixWorld );  \r\n\t\t\tlocalRay.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tif ( localRay.isIntersectionBox( geometry.boundingBox ) === false )  {\r\n\r\n\t\t\t\t\treturn intersects;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} \r\n\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material === undefined ) return intersects;\r\n\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\t\tvar a, b, c;\r\n\t\t\t\tvar precision = raycaster.precision;\r\n\r\n\t\t\t\tif ( attributes.index !== undefined ) {\r\n\r\n\t\t\t\t\tvar offsets = geometry.offsets;\r\n\t\t\t\t\tvar indices = attributes.index.array;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\t\tfor ( var oi = 0, ol = offsets.length; oi < ol; ++oi ) {\r\n\r\n\t\t\t\t\t\tvar start = offsets[ oi ].start;\r\n\t\t\t\t\t\tvar count = offsets[ oi ].count;\r\n\t\t\t\t\t\tvar index = offsets[ oi ].index;\r\n\r\n\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\ta = index + indices[ i ];\r\n\t\t\t\t\t\t\tb = index + indices[ i + 1 ]; \r\n\t\t\t\t\t\t\tc = index + indices[ i + 2 ];\r\n\r\n\t\t\t\t\t\t\tvA.set(\r\n\t\t\t\t\t\t\t\tpositions[ a * 3 ],\r\n\t\t\t\t\t\t\t\tpositions[ a * 3 + 1 ],\r\n\t\t\t\t\t\t\t\tpositions[ a * 3 + 2 ]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tvB.set(\r\n\t\t\t\t\t\t\t\tpositions[ b * 3 ],\r\n\t\t\t\t\t\t\t\tpositions[ b * 3 + 1 ],\r\n\t\t\t\t\t\t\t\tpositions[ b * 3 + 2 ]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tvC.set(\r\n\t\t\t\t\t\t\t\tpositions[ c * 3 ],\r\n\t\t\t\t\t\t\t\tpositions[ c * 3 + 1 ],\r\n\t\t\t\t\t\t\t\tpositions[ c * 3 + 2 ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar intersectionPoint = localRay.intersectTriangle( vC, vB, vA, true ); \r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tvar intersectionPoint = localRay.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( intersectionPoint === null ) continue;\r\n\r\n\t\t\t\t\t\t\tintersectionPoint.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPoint );\r\n\r\n\t\t\t\t\t\t\tif ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t\tpoint: intersectionPoint,\r\n\t\t\t\t\t\t\t\tindices: [a, b, c],\r\n\t\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar offsets = geometry.offsets;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = attributes.position.array.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\ta = i;\r\n\t\t\t\t\t\tb = i + 1;\r\n\t\t\t\t\t\tc = i + 2;\r\n\r\n\t\t\t\t\t\tvA.set(\r\n\t\t\t\t\t\t\tpositions[ a * 3 ],\r\n\t\t\t\t\t\t\tpositions[ a * 3 + 1 ],\r\n\t\t\t\t\t\t\tpositions[ a * 3 + 2 ]\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tvB.set(\r\n\t\t\t\t\t\t\tpositions[ b * 3 ],\r\n\t\t\t\t\t\t\tpositions[ b * 3 + 1 ],\r\n\t\t\t\t\t\t\tpositions[ b * 3 + 2 ]\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tvC.set(\r\n\t\t\t\t\t\t\tpositions[ c * 3 ],\r\n\t\t\t\t\t\t\tpositions[ c * 3 + 1 ],\r\n\t\t\t\t\t\t\tpositions[ c * 3 + 2 ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar intersectionPoint = localRay.intersectTriangle( vC, vB, vA, true ); \r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar intersectionPoint = localRay.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( intersectionPoint === null ) continue;\r\n\r\n\t\t\t\t\t\tintersectionPoint.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPoint );\r\n\r\n\t\t\t\t\t\tif ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tpoint: intersectionPoint,\r\n\t\t\t\t\t\t\tindices: [a, b, c],\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\tvar isFaceMaterial = object.material instanceof THREE.MeshFaceMaterial;\r\n\t\t\t\tvar objectMaterials = isFaceMaterial === true ? object.material.materials : null;\r\n\r\n\t\t\t\tvar a, b, c, d;\r\n\t\t\t\tvar precision = raycaster.precision;\r\n\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\tfor ( var f = 0, fl = geometry.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tvar face = geometry.faces[ f ];\r\n\r\n\t\t\t\t\tvar material = isFaceMaterial === true ? objectMaterials[ face.materialIndex ] : object.material;\r\n\r\n\t\t\t\t\tif ( material === undefined ) continue;\r\n\r\n\t\t\t\t\ta = vertices[ face.a ];\r\n\t\t\t\t\tb = vertices[ face.b ];\r\n\t\t\t\t\tc = vertices[ face.c ];\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true ) {\r\n\r\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\t\tvar morphInfluences = object.morphTargetInfluences;\r\n\r\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n\t\t\t\t\t\t\tvA.x += ( targets[ face.a ].x - a.x ) * influence;\r\n\t\t\t\t\t\t\tvA.y += ( targets[ face.a ].y - a.y ) * influence;\r\n\t\t\t\t\t\t\tvA.z += ( targets[ face.a ].z - a.z ) * influence;\r\n\r\n\t\t\t\t\t\t\tvB.x += ( targets[ face.b ].x - b.x ) * influence;\r\n\t\t\t\t\t\t\tvB.y += ( targets[ face.b ].y - b.y ) * influence;\r\n\t\t\t\t\t\t\tvB.z += ( targets[ face.b ].z - b.z ) * influence;\r\n\r\n\t\t\t\t\t\t\tvC.x += ( targets[ face.c ].x - c.x ) * influence;\r\n\t\t\t\t\t\t\tvC.y += ( targets[ face.c ].y - c.y ) * influence;\r\n\t\t\t\t\t\t\tvC.z += ( targets[ face.c ].z - c.z ) * influence;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvA.add( a );\r\n\t\t\t\t\t\tvB.add( b );\r\n\t\t\t\t\t\tvC.add( c );\r\n\r\n\t\t\t\t\t\ta = vA;\r\n\t\t\t\t\t\tb = vB;\r\n\t\t\t\t\t\tc = vC;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar intersectionPoint = localRay.intersectTriangle( c, b, a, true );\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar intersectionPoint = localRay.intersectTriangle( a, b, c, material.side !== THREE.DoubleSide );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( intersectionPoint === null ) continue;\r\n\r\n\t\t\t\t\tintersectionPoint.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPoint );\r\n\r\n\t\t\t\t\tif ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPoint,\r\n\t\t\t\t\t\tface: face,\r\n\t\t\t\t\t\tfaceIndex: f,\r\n\t\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar precision = raycaster.linePrecision;\r\n\t\t\tvar precisionSq = precision * precision;\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\t\t\t\r\n\t\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinverseMatrix.getInverse( object.matrixWorld );\r\n\t\t\tlocalRay.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\t\t/* if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t} else */ if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar nbVertices = vertices.length;\r\n\t\t\t\tvar interSegment = new THREE.Vector3();\r\n\t\t\t\tvar interRay = new THREE.Vector3();\r\n\t\t\t\tvar step = object.type === THREE.LineStrip ? 1 : 2;\r\n\r\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i = i + step ) {\r\n\r\n\t\t\t\t\tvar distSq = localRay.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tvar distance = localRay.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( object.matrixWorld ),\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tvar intersectDescendants = function ( object, raycaster, intersects ) {\r\n\r\n\t\tvar descendants = object.getDescendants();\r\n\r\n\t\tfor ( var i = 0, l = descendants.length; i < l; i ++ ) {\r\n\r\n\t\t\tintersectObject( descendants[ i ], raycaster, intersects );\r\n\r\n\t\t}\r\n\t};\r\n\r\n\t//\r\n\r\n\tTHREE.Raycaster.prototype.precision = 0.0001;\r\n\tTHREE.Raycaster.prototype.linePrecision = 1;\r\n\r\n\tTHREE.Raycaster.prototype.set = function ( origin, direction ) {\r\n\r\n\t\tthis.ray.set( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t};\r\n\r\n\tTHREE.Raycaster.prototype.intersectObject = function ( object, recursive ) {\r\n\r\n\t\tvar intersects = [];\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tintersectDescendants( object, this, intersects );\r\n\r\n\t\t}\r\n\r\n\t\tintersectObject( object, this, intersects );\r\n\r\n\t\tintersects.sort( descSort );\r\n\r\n\t\treturn intersects;\r\n\r\n\t};\r\n\r\n\tTHREE.Raycaster.prototype.intersectObjects = function ( objects, recursive ) {\r\n\r\n\t\tvar intersects = [];\r\n\r\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\tintersectObject( objects[ i ], this, intersects );\r\n\r\n\t\t\tif ( recursive === true ) {\r\n\r\n\t\t\t\tintersectDescendants( objects[ i ], this, intersects );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tintersects.sort( descSort );\r\n\r\n\t\treturn intersects;\r\n\r\n\t};\r\n\r\n}( THREE ) );\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Object3D = function () {\r\n\r\n\tthis.id = THREE.Object3DIdCount ++;\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\tthis.className = \"Object3D\";\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.parent = undefined;\r\n\tthis.children = [];\r\n\r\n\tthis.up = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\tthis.position = new THREE.Vector3();\r\n\tthis._rotation = new THREE.Euler();\r\n\tthis._quaternion = new THREE.Quaternion();\r\n\tthis.scale = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\t// keep rotation and quaternion in sync\r\n\r\n\tthis._rotation._quaternion = this.quaternion;\r\n\tthis._quaternion._euler = this.rotation;\r\n\r\n\tthis.renderDepth = null;\r\n\r\n\tthis.rotationAutoUpdate = true;\r\n\r\n\tthis.matrix = new THREE.Matrix4();\r\n\tthis.matrixWorld = new THREE.Matrix4();\r\n\r\n\tthis.matrixAutoUpdate = true;\r\n\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.receiveShadow = false;\r\n\r\n\tthis.frustumCulled = true;\r\n\r\n\tthis.userData = {};\r\n\r\n};\r\n\r\n\r\nTHREE.Object3D.prototype = {\r\n\r\n\tconstructor: THREE.Object3D,\r\n\t\r\n\tget rotation () { \r\n\t\treturn this._rotation; \r\n\t},\r\n\r\n\tset rotation ( value ) {\r\n\t\t\r\n\t\tthis._rotation = value;\r\n\t\tthis._rotation._quaternion = this._quaternion;\r\n\t\tthis._quaternion._euler = this._rotation;\r\n\t\tthis._rotation._updateQuaternion();\r\n\t\t\r\n\t},\r\n\r\n\tget quaternion () { \r\n\t\treturn this._quaternion; \r\n\t},\r\n\t\r\n\tset quaternion ( value ) {\r\n\t\t\r\n\t\tthis._quaternion = value;\r\n\t\tthis._quaternion._euler = this._rotation;\r\n\t\tthis._rotation._quaternion = this._quaternion;\r\n\t\tthis._quaternion._updateEuler();\r\n\t\t\r\n\t},\r\n\r\n\tget eulerOrder () {\r\n\r\n\t\tTHREE.onwarning( 'DEPRECATED: Object3D\\'s .eulerOrder has been moved to Object3D\\'s .rotation.order.' );\r\n\r\n\t\treturn this.rotation.order;\r\n\r\n\t},\r\n\r\n\tset eulerOrder ( value ) {\r\n\r\n\t\tTHREE.onwarning( 'DEPRECATED: Object3D\\'s .eulerOrder has been moved to Object3D\\'s .rotation.order.' );\r\n\r\n\t\tthis.rotation.order = value;\r\n\r\n\t},\r\n\r\n\tget useQuaternion () {\r\n\r\n\t\tTHREE.onwarning( 'DEPRECATED: Object3D\\'s .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset useQuaternion ( value ) {\r\n\r\n\t\tTHREE.onwarning( 'DEPRECATED: Object3D\\'s .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t},\r\n\r\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t},\r\n\r\n\tsetRotationFromEuler: function ( euler ) {\r\n\r\n\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t},\r\n\r\n\tsetRotationFromMatrix: function ( m ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t// assumes q is normalized\r\n\r\n\t\tthis.quaternion.copy( q );\r\n\r\n\t},\r\n\r\n\trotateOnAxis: function() {\r\n\r\n\t\t// rotate object on axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar q1 = new THREE.Quaternion();\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\tthis.quaternion.multiply( q1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\trotateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateOnAxis: function () {\r\n\r\n\t\t// translate object by distance along axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( axis, distance ) {\r\n\r\n\t\t\tv1.copy( axis );\r\n\r\n\t\t\tv1.applyQuaternion( this.quaternion );\r\n\r\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( distance, axis ) {\r\n\r\n\t\tTHREE.onwarning( 'DEPRECATED: Object3D\\'s .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed.' );\r\n\t\treturn this.translateOnAxis( axis, distance );\r\n\r\n\t},\r\n\r\n\ttranslateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlocalToWorld: function ( vector ) {\r\n\r\n\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tworldToLocal: function () {\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tadd: function ( object ) {\r\n\r\n\t\tif ( object === this ) {\r\n\r\n\t\t\tTHREE.onwarning( 'THREE.Object3D.add: An object can\\'t be added as a child of itself.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Object3D ) {\r\n\r\n\t\t\tif ( object.parent !== undefined ) {\r\n\r\n\t\t\t\tobject.parent.remove( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.parent = this;\r\n\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n\t\t\tthis.children.push( object );\r\n\r\n\t\t\t// add to scene\r\n\r\n\t\t\tvar scene = this;\r\n\r\n\t\t\twhile ( scene.parent !== undefined ) {\r\n\r\n\t\t\t\tscene = scene.parent;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( scene !== undefined && scene instanceof THREE.Scene )  {\r\n\r\n\t\t\t\tscene.__addObject( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tremove: function ( object ) {\r\n\r\n\t\tvar index = this.children.indexOf( object );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tobject.parent = undefined;\r\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t\t// remove from scene\r\n\r\n\t\t\tvar scene = this;\r\n\r\n\t\t\twhile ( scene.parent !== undefined ) {\r\n\r\n\t\t\t\tscene = scene.parent;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( scene !== undefined && scene instanceof THREE.Scene ) {\r\n\r\n\t\t\t\tscene.__removeObject( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverse: function ( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetObjectById: function ( id, recursive ) {\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar child = this.children[ i ];\r\n\r\n\t\t\tif ( child.id === id ) {\r\n\r\n\t\t\t\treturn child;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( recursive === true ) {\r\n\r\n\t\t\t\tchild = child.getObjectById( id, recursive );\r\n\r\n\t\t\t\tif ( child !== undefined ) {\r\n\r\n\t\t\t\t\treturn child;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t},\r\n\r\n\tgetObjectByName: function ( name, recursive ) {\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar child = this.children[ i ];\r\n\r\n\t\t\tif ( child.name === name ) {\r\n\r\n\t\t\t\treturn child;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( recursive === true ) {\r\n\r\n\t\t\t\tchild = child.getObjectByName( name, recursive );\r\n\r\n\t\t\t\tif ( child !== undefined ) {\r\n\r\n\t\t\t\t\treturn child;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t},\r\n\r\n\tgetChildByName: function ( name, recursive ) {\r\n\r\n\t\tTHREE.onwarning( 'DEPRECATED: Object3D\\'s .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\treturn this.getObjectByName( name, recursive );\r\n\r\n\t},\r\n\r\n\tgetDescendants: function ( array ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\r\n\t\tArray.prototype.push.apply( array, this.children );\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].getDescendants( array );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tupdateMatrix: function () {\r\n\r\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\r\n\t\t\tif ( this.parent === undefined ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function ( object, recursive ) {\r\n\r\n\t\tif ( object === undefined ) object = new THREE.Object3D();\r\n\t\tif ( recursive === undefined ) recursive = true;\r\n\r\n\t\tobject.name = this.name;\r\n\r\n\t\tobject.up.copy( this.up );\r\n\r\n\t\tobject.position.copy( this.position );\r\n\t\tobject.quaternion.copy( this.quaternion );\r\n\t\tobject.scale.copy( this.scale );\r\n\r\n\t\tobject.renderDepth = this.renderDepth;\r\n\r\n\t\tobject.rotationAutoUpdate = this.rotationAutoUpdate;\r\n\r\n\t\tobject.matrix.copy( this.matrix );\r\n\t\tobject.matrixWorld.copy( this.matrixWorld );\r\n\r\n\t\tobject.matrixAutoUpdate = this.matrixAutoUpdate;\r\n\t\tobject.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate;\r\n\r\n\t\tobject.visible = this.visible;\r\n\r\n\t\tobject.castShadow = this.castShadow;\r\n\t\tobject.receiveShadow = this.receiveShadow;\r\n\r\n\t\tobject.frustumCulled = this.frustumCulled;\r\n\r\n\t\tobject.userData = JSON.parse( JSON.stringify( this.userData ) );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\tvar child = this.children[ i ];\r\n\t\t\t\tobject.add( child.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\r\nTHREE.Object3DIdCount = 0;\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author julianwa / https://github.com/julianwa\r\n */\r\n\r\nTHREE.Projector = function () {\r\n\r\n\tvar _object, _objectCount, _objectPool = [], _objectPoolLength = 0,\r\n\t_vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,\r\n\t_face, _faceCount, _facePool = [], _facePoolLength = 0,\r\n\t_line, _lineCount, _linePool = [], _linePoolLength = 0,\r\n\t_sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0,\r\n\r\n\t_renderData = { objects: [], lights: [], elements: [] },\r\n\r\n\t_vA = new THREE.Vector3(),\r\n\t_vB = new THREE.Vector3(),\r\n\t_vC = new THREE.Vector3(),\r\n\r\n\t_vector3 = new THREE.Vector3(),\r\n\t_vector4 = new THREE.Vector4(),\r\n\r\n\t_clipBox = new THREE.Box3( new THREE.Vector3( -1, -1, -1 ), new THREE.Vector3( 1, 1, 1 ) ),\r\n\t_boundingBox = new THREE.Box3(),\r\n\t_points3 = new Array( 3 ),\r\n\t_points4 = new Array( 4 ),\r\n\r\n\t_viewMatrix = new THREE.Matrix4(),\r\n\t_viewProjectionMatrix = new THREE.Matrix4(),\r\n\r\n\t_modelMatrix,\r\n\t_modelViewProjectionMatrix = new THREE.Matrix4(),\r\n\r\n\t_normalMatrix = new THREE.Matrix3(),\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\r\n\t_clippedVertex1PositionScreen = new THREE.Vector4(),\r\n\t_clippedVertex2PositionScreen = new THREE.Vector4();\r\n\r\n\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\r\n\t\treturn vector.applyProjection( _viewProjectionMatrix );\r\n\r\n\t};\r\n\r\n\tthis.unprojectVector = function () {\r\n\r\n\t\tvar projectionMatrixInverse = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector, camera ) {\r\n\r\n\t\t\tprojectionMatrixInverse.getInverse( camera.projectionMatrix );\r\n\t\t\t_viewProjectionMatrix.multiplyMatrices( camera.matrixWorld, projectionMatrixInverse );\r\n\r\n\t\t\treturn vector.applyProjection( _viewProjectionMatrix );\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\tthis.pickingRay = function ( vector, camera ) {\r\n\r\n\t\t// set two vectors with opposing z values\r\n\t\tvector.z = -1.0;\r\n\t\tvar end = new THREE.Vector3( vector.x, vector.y, 1.0 );\r\n\r\n\t\tthis.unprojectVector( vector, camera );\r\n\t\tthis.unprojectVector( end, camera );\r\n\r\n\t\t// find direction from vector to end\r\n\t\tend.sub( vector ).normalize();\r\n\r\n\t\treturn new THREE.Raycaster( vector, end );\r\n\r\n\t};\r\n\r\n\tvar projectObject = function ( object ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Light ) {\r\n\r\n\t\t\t_renderData.lights.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Sprite ) {\r\n\r\n\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\r\n\t\t\t\t_object = getNextObjectInPool();\r\n\t\t\t\t_object.id = object.id;\r\n\t\t\t\t_object.object = object;\r\n\r\n\t\t\t\tif ( object.renderDepth !== null ) {\r\n\r\n\t\t\t\t\t_object.z = object.renderDepth;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t_vector3.applyProjection( _viewProjectionMatrix );\r\n\t\t\t\t\t_object.z = _vector3.z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_renderData.objects.push( _object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, l = object.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( object.children[ i ] );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tvar projectGraph = function ( root, sortObjects ) {\r\n\r\n\t\t_objectCount = 0;\r\n\r\n\t\t_renderData.objects.length = 0;\r\n\t\t_renderData.lights.length = 0;\r\n\r\n\t\tprojectObject( root );\r\n\r\n\t\tif ( sortObjects === true ) {\r\n\r\n\t\t\t_renderData.objects.sort( painterSort );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tvar RenderList = function () {\r\n\r\n\t\tvar normals = [];\r\n\r\n\t\tvar object = null;\r\n\t\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\t\tvar setObject = function ( value ) {\r\n\r\n\t\t\tobject = value;\r\n\t\t\tnormalMatrix.getNormalMatrix( object.matrixWorld );\r\n\r\n\t\t\tnormals.length = 0;\r\n\r\n\t\t};\r\n\r\n\t\tvar projectVertex = function ( vertex ) {\r\n\r\n\t\t\tvar position = vertex.position;\r\n\t\t\tvar positionWorld = vertex.positionWorld;\r\n\t\t\tvar positionScreen = vertex.positionScreen;\r\n\r\n\t\t\tpositionWorld.copy( position ).applyMatrix4( _modelMatrix );\r\n\t\t\tpositionScreen.copy( positionWorld ).applyMatrix4( _viewProjectionMatrix );\r\n\r\n\t\t\tvar invW = 1 / positionScreen.w;\r\n\r\n\t\t\tpositionScreen.x *= invW;\r\n\t\t\tpositionScreen.y *= invW;\r\n\t\t\tpositionScreen.z *= invW;\r\n\r\n\t\t\tvertex.visible = positionScreen.x >= -1 && positionScreen.x <= 1 &&\r\n\t\t\t\t\t positionScreen.y >= -1 && positionScreen.y <= 1 &&\r\n\t\t\t\t\t positionScreen.z >= -1 && positionScreen.z <= 1;\r\n\r\n\t\t};\r\n\r\n\t\tvar pushVertex = function ( x, y, z ) {\r\n\r\n\t\t\t_vertex = getNextVertexInPool();\r\n\t\t\t_vertex.position.set( x, y, z );\r\n\r\n\t\t\tprojectVertex( _vertex );\r\n\r\n\t\t};\r\n\r\n\t\tvar pushNormal = function ( x, y, z ) {\r\n\r\n\t\t\tnormals.push( x, y, z );\r\n\r\n\t\t};\r\n\r\n\t\tvar checkTriangleVisibility = function ( v1, v2, v3 ) {\r\n\r\n\t\t\t_points3[ 0 ] = v1.positionScreen;\r\n\t\t\t_points3[ 1 ] = v2.positionScreen;\r\n\t\t\t_points3[ 2 ] = v3.positionScreen;\r\n\r\n\t\t\tif ( v1.visible === true || v2.visible === true || v3.visible === true ||\r\n\t\t\t\t_clipBox.isIntersectionBox( _boundingBox.setFromPoints( _points3 ) ) ) {\r\n\r\n\t\t\t\treturn ( ( v3.positionScreen.x - v1.positionScreen.x ) *\r\n\t\t\t\t\t    ( v2.positionScreen.y - v1.positionScreen.y ) -\r\n\t\t\t\t\t    ( v3.positionScreen.y - v1.positionScreen.y ) *\r\n\t\t\t\t\t    ( v2.positionScreen.x - v1.positionScreen.x ) ) < 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t};\r\n\r\n\t\tvar pushLine = function ( a, b ) {\r\n\r\n\t\t\tvar v1 = _vertexPool[ a ];\r\n\t\t\tvar v2 = _vertexPool[ b ];\r\n\r\n\t\t\t_line = getNextLineInPool();\r\n\r\n\t\t\t_line.id = object.id;\r\n\t\t\t_line.v1.copy( v1 );\r\n\t\t\t_line.v2.copy( v2 );\r\n\t\t\t_line.z = ( v1.positionScreen.z + v2.positionScreen.z ) / 2;\r\n\r\n\t\t\t_line.material = object.material;\r\n\r\n\t\t\t_renderData.elements.push( _line );\r\n\r\n\t\t};\r\n\r\n\t\tvar pushTriangle = function ( a, b, c ) {\r\n\r\n\t\t\tvar v1 = _vertexPool[ a ];\r\n\t\t\tvar v2 = _vertexPool[ b ];\r\n\t\t\tvar v3 = _vertexPool[ c ];\r\n\r\n\t\t\tif ( checkTriangleVisibility( v1, v2, v3 ) === true ) {\r\n\r\n\t\t\t\t_face = getNextFaceInPool();\r\n\r\n\t\t\t\t_face.id = object.id;\r\n\t\t\t\t_face.v1.copy( v1 );\r\n\t\t\t\t_face.v2.copy( v2 );\r\n\t\t\t\t_face.v3.copy( v3 );\r\n\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\r\n\r\n\t\t\t\tfor ( var i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\tvar offset = arguments[ i ] * 3;\r\n\t\t\t\t\tvar normal = _face.vertexNormalsModel[ i ];\r\n\r\n\t\t\t\t\tnormal.set( normals[ offset + 0 ], normals[ offset + 1 ], normals[ offset + 2 ] );\r\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_face.vertexNormalsLength = 3;\r\n\r\n\t\t\t\t_face.material = object.material;\r\n\r\n\t\t\t\t_renderData.elements.push( _face );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\treturn {\r\n\t\t\tsetObject: setObject,\r\n\t\t\tprojectVertex: projectVertex,\r\n\t\t\tcheckTriangleVisibility: checkTriangleVisibility,\r\n\t\t\tpushVertex: pushVertex,\r\n\t\t\tpushNormal: pushNormal,\r\n\t\t\tpushLine: pushLine,\r\n\t\t\tpushTriangle: pushTriangle\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tvar renderList = new RenderList();\r\n\r\n\tthis.projectScene = function ( scene, camera, sortObjects, sortElements ) {\r\n\r\n\t\tvar object, geometry, vertices, faces, face, faceVertexNormals, faceVertexUvs, uvs,\r\n\t\tisFaceMaterial, objectMaterials;\r\n\r\n\t\t_faceCount = 0;\r\n\t\t_lineCount = 0;\r\n\t\t_spriteCount = 0;\r\n\r\n\t\t_renderData.elements.length = 0;\r\n\r\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\t\tif ( camera.parent === undefined ) camera.updateMatrixWorld();\r\n\r\n\t\t_viewMatrix.copy( camera.matrixWorldInverse.getInverse( camera.matrixWorld ) );\r\n\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\r\n\r\n\t\t_frustum.setFromMatrix( _viewProjectionMatrix );\r\n\r\n\t\tprojectGraph( scene, sortObjects );\r\n\r\n\t\tfor ( var o = 0, ol = _renderData.objects.length; o < ol; o ++ ) {\r\n\r\n\t\t\tobject = _renderData.objects[ o ].object;\r\n\t\t\tgeometry = object.geometry;\r\n\r\n\t\t\trenderList.setObject( object );\r\n\r\n\t\t\t_modelMatrix = object.matrixWorld;\r\n\r\n\t\t\t_vertexCount = 0;\r\n\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\t\tif ( attributes.position === undefined ) continue;\r\n\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = normals.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\trenderList.pushNormal( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( attributes.index !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar indices = attributes.index.array;\r\n\r\n\t\t\t\t\t\tif ( offsets.length > 0 ) {\r\n\r\n\t\t\t\t\t\t\tfor ( var o = 0; o < offsets.length; o ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar offset = offsets[ o ];\r\n\t\t\t\t\t\t\t\tvar index = offset.index;\r\n\r\n\t\t\t\t\t\t\t\tfor ( var i = offset.start, l = offset.start + offset.count; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ] + index, indices[ i + 1 ] + index, indices[ i + 2 ] + index );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\trenderList.pushTriangle( i, i + 1, i + 2 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\tvertices = geometry.vertices;\r\n\t\t\t\t\tfaces = geometry.faces;\r\n\t\t\t\t\tfaceVertexUvs = geometry.faceVertexUvs;\r\n\r\n\t\t\t\t\t_normalMatrix.getNormalMatrix( _modelMatrix );\r\n\r\n\t\t\t\t\tisFaceMaterial = object.material instanceof THREE.MeshFaceMaterial;\r\n\t\t\t\t\tobjectMaterials = isFaceMaterial === true ? object.material : null;\r\n\r\n\t\t\t\t\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\t\t\t\tvar vertex = vertices[ v ];\r\n\t\t\t\t\t\trenderList.pushVertex( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\tface = faces[ f ];\r\n\r\n\t\t\t\t\t\tvar material = isFaceMaterial === true\r\n\t\t\t\t\t\t\t? objectMaterials.materials[ face.materialIndex ]\r\n\t\t\t\t\t\t\t: object.material;\r\n\r\n\t\t\t\t\t\tif ( material === undefined ) continue;\r\n\r\n\t\t\t\t\t\tvar side = material.side;\r\n\r\n\t\t\t\t\t\tvar v1 = _vertexPool[ face.a ];\r\n\t\t\t\t\t\tvar v2 = _vertexPool[ face.b ];\r\n\t\t\t\t\t\tvar v3 = _vertexPool[ face.c ];\r\n\r\n\t\t\t\t\t\tif ( material.morphTargets === true ) {\r\n\r\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\t\t\tvar morphInfluences = object.morphTargetInfluences;\r\n\r\n\t\t\t\t\t\t\tvar v1p = v1.position;\r\n\t\t\t\t\t\t\tvar v2p = v2.position;\r\n\t\t\t\t\t\t\tvar v3p = v3.position;\r\n\r\n\t\t\t\t\t\t\t_vA.set( 0, 0, 0 );\r\n\t\t\t\t\t\t\t_vB.set( 0, 0, 0 );\r\n\t\t\t\t\t\t\t_vC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n\t\t\t\t\t\t\t\t_vA.x += ( targets[ face.a ].x - v1p.x ) * influence;\r\n\t\t\t\t\t\t\t\t_vA.y += ( targets[ face.a ].y - v1p.y ) * influence;\r\n\t\t\t\t\t\t\t\t_vA.z += ( targets[ face.a ].z - v1p.z ) * influence;\r\n\r\n\t\t\t\t\t\t\t\t_vB.x += ( targets[ face.b ].x - v2p.x ) * influence;\r\n\t\t\t\t\t\t\t\t_vB.y += ( targets[ face.b ].y - v2p.y ) * influence;\r\n\t\t\t\t\t\t\t\t_vB.z += ( targets[ face.b ].z - v2p.z ) * influence;\r\n\r\n\t\t\t\t\t\t\t\t_vC.x += ( targets[ face.c ].x - v3p.x ) * influence;\r\n\t\t\t\t\t\t\t\t_vC.y += ( targets[ face.c ].y - v3p.y ) * influence;\r\n\t\t\t\t\t\t\t\t_vC.z += ( targets[ face.c ].z - v3p.z ) * influence;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tv1.position.add( _vA );\r\n\t\t\t\t\t\t\tv2.position.add( _vB );\r\n\t\t\t\t\t\t\tv3.position.add( _vC );\r\n\r\n\t\t\t\t\t\t\trenderList.projectVertex( v1 );\r\n\t\t\t\t\t\t\trenderList.projectVertex( v2 );\r\n\t\t\t\t\t\t\trenderList.projectVertex( v3 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar visible = renderList.checkTriangleVisibility( v1, v2, v3 );\r\n\r\n\t\t\t\t\t\tif ( ( visible === false && side === THREE.FrontSide ) ||\r\n\t\t\t\t\t\t\t ( visible === true && side === THREE.BackSide ) ) continue;\r\n\r\n\t\t\t\t\t\t_face = getNextFaceInPool();\r\n\r\n\t\t\t\t\t\t_face.id = object.id;\r\n\t\t\t\t\t\t_face.v1.copy( v1 );\r\n\t\t\t\t\t\t_face.v2.copy( v2 );\r\n\t\t\t\t\t\t_face.v3.copy( v3 );\r\n\r\n\t\t\t\t\t\t_face.normalModel.copy( face.normal );\r\n\r\n\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\r\n\r\n\t\t\t\t\t\t\t_face.normalModel.negate();\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_face.normalModel.applyMatrix3( _normalMatrix ).normalize();\r\n\r\n\t\t\t\t\t\t_face.centroidModel.copy( face.centroid ).applyMatrix4( _modelMatrix );\r\n\r\n\t\t\t\t\t\tfaceVertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\t\t\tfor ( var n = 0, nl = Math.min( faceVertexNormals.length, 3 ); n < nl; n ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar normalModel = _face.vertexNormalsModel[ n ];\r\n\t\t\t\t\t\t\tnormalModel.copy( faceVertexNormals[ n ] );\r\n\r\n\t\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\r\n\r\n\t\t\t\t\t\t\t\tnormalModel.negate();\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tnormalModel.applyMatrix3( _normalMatrix ).normalize();\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_face.vertexNormalsLength = faceVertexNormals.length;\r\n\r\n\t\t\t\t\t\tfor ( var c = 0, cl = Math.min( faceVertexUvs.length, 3 ); c < cl; c ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvs = faceVertexUvs[ c ][ f ];\r\n\r\n\t\t\t\t\t\t\tif ( uvs === undefined ) continue;\r\n\r\n\t\t\t\t\t\t\tfor ( var u = 0, ul = uvs.length; u < ul; u ++ ) {\r\n\r\n\t\t\t\t\t\t\t\t_face.uvs[ c ][ u ] = uvs[ u ];\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_face.color = face.color;\r\n\t\t\t\t\t\t_face.material = material;\r\n\r\n\t\t\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\r\n\r\n\t\t\t\t\t\t_renderData.elements.push( _face );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\t\t\tif ( attributes.position !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( attributes.index !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tvar indices = attributes.index.array;\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 2 ) {\r\n\r\n\t\t\t\t\t\t\t\trenderList.pushLine( indices[ i ], indices[ i + 1 ] );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = ( positions.length / 3 ) - 1; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\trenderList.pushLine( i, i + 1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\r\n\r\n\t\t\t\t\tvertices = object.geometry.vertices;\r\n\r\n\t\t\t\t\tif ( vertices.length === 0 ) continue;\r\n\r\n\t\t\t\t\tv1 = getNextVertexInPool();\r\n\t\t\t\t\tv1.positionScreen.copy( vertices[ 0 ] ).applyMatrix4( _modelViewProjectionMatrix );\r\n\r\n\t\t\t\t\t// Handle LineStrip and LinePieces\r\n\t\t\t\t\tvar step = object.type === THREE.LinePieces ? 2 : 1;\r\n\r\n\t\t\t\t\tfor ( var v = 1, vl = vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\t\t\t\tv1 = getNextVertexInPool();\r\n\t\t\t\t\t\tv1.positionScreen.copy( vertices[ v ] ).applyMatrix4( _modelViewProjectionMatrix );\r\n\r\n\t\t\t\t\t\tif ( ( v + 1 ) % step > 0 ) continue;\r\n\r\n\t\t\t\t\t\tv2 = _vertexPool[ _vertexCount - 2 ];\r\n\r\n\t\t\t\t\t\t_clippedVertex1PositionScreen.copy( v1.positionScreen );\r\n\t\t\t\t\t\t_clippedVertex2PositionScreen.copy( v2.positionScreen );\r\n\r\n\t\t\t\t\t\tif ( clipLine( _clippedVertex1PositionScreen, _clippedVertex2PositionScreen ) === true ) {\r\n\r\n\t\t\t\t\t\t\t// Perform the perspective divide\r\n\t\t\t\t\t\t\t_clippedVertex1PositionScreen.multiplyScalar( 1 / _clippedVertex1PositionScreen.w );\r\n\t\t\t\t\t\t\t_clippedVertex2PositionScreen.multiplyScalar( 1 / _clippedVertex2PositionScreen.w );\r\n\r\n\t\t\t\t\t\t\t_line = getNextLineInPool();\r\n\r\n\t\t\t\t\t\t\t_line.id = object.id;\r\n\t\t\t\t\t\t\t_line.v1.positionScreen.copy( _clippedVertex1PositionScreen );\r\n\t\t\t\t\t\t\t_line.v2.positionScreen.copy( _clippedVertex2PositionScreen );\r\n\r\n\t\t\t\t\t\t\t_line.z = Math.max( _clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z );\r\n\r\n\t\t\t\t\t\t\t_line.material = object.material;\r\n\r\n\t\t\t\t\t\t\tif ( object.material.vertexColors === THREE.VertexColors ) {\r\n\r\n\t\t\t\t\t\t\t\t_line.vertexColors[ 0 ].copy( object.geometry.colors[ v ] );\r\n\t\t\t\t\t\t\t\t_line.vertexColors[ 1 ].copy( object.geometry.colors[ v - 1 ] );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t_renderData.elements.push( _line );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\t\t_vector4.set( _modelMatrix.elements[12], _modelMatrix.elements[13], _modelMatrix.elements[14], 1 );\r\n\t\t\t\t_vector4.applyMatrix4( _viewProjectionMatrix );\r\n\r\n\t\t\t\tvar invW = 1 / _vector4.w;\r\n\r\n\t\t\t\t_vector4.z *= invW;\r\n\r\n\t\t\t\tif ( _vector4.z >= -1 && _vector4.z <= 1 ) {\r\n\r\n\t\t\t\t\t_sprite = getNextSpriteInPool();\r\n\t\t\t\t\t_sprite.id = object.id;\r\n\t\t\t\t\t_sprite.x = _vector4.x * invW;\r\n\t\t\t\t\t_sprite.y = _vector4.y * invW;\r\n\t\t\t\t\t_sprite.z = _vector4.z;\r\n\t\t\t\t\t_sprite.object = object;\r\n\r\n\t\t\t\t\t_sprite.rotation = object.rotation;\r\n\r\n\t\t\t\t\t_sprite.scale.x = object.scale.x * Math.abs( _sprite.x - ( _vector4.x + camera.projectionMatrix.elements[0] ) / ( _vector4.w + camera.projectionMatrix.elements[12] ) );\r\n\t\t\t\t\t_sprite.scale.y = object.scale.y * Math.abs( _sprite.y - ( _vector4.y + camera.projectionMatrix.elements[5] ) / ( _vector4.w + camera.projectionMatrix.elements[13] ) );\r\n\r\n\t\t\t\t\t_sprite.material = object.material;\r\n\r\n\t\t\t\t\t_renderData.elements.push( _sprite );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( sortElements === true ) _renderData.elements.sort( painterSort );\r\n\r\n\t\treturn _renderData;\r\n\r\n\t};\r\n\r\n\t// Pools\r\n\r\n\tfunction getNextObjectInPool() {\r\n\r\n\t\tif ( _objectCount === _objectPoolLength ) {\r\n\r\n\t\t\tvar object = new THREE.RenderableObject();\r\n\t\t\t_objectPool.push( object );\r\n\t\t\t_objectPoolLength ++;\r\n\t\t\t_objectCount ++;\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t\treturn _objectPool[ _objectCount ++ ];\r\n\r\n\t}\r\n\r\n\tfunction getNextVertexInPool() {\r\n\r\n\t\tif ( _vertexCount === _vertexPoolLength ) {\r\n\r\n\t\t\tvar vertex = new THREE.RenderableVertex();\r\n\t\t\t_vertexPool.push( vertex );\r\n\t\t\t_vertexPoolLength ++;\r\n\t\t\t_vertexCount ++;\r\n\t\t\treturn vertex;\r\n\r\n\t\t}\r\n\r\n\t\treturn _vertexPool[ _vertexCount ++ ];\r\n\r\n\t}\r\n\r\n\tfunction getNextFaceInPool() {\r\n\r\n\t\tif ( _faceCount === _facePoolLength ) {\r\n\r\n\t\t\tvar face = new THREE.RenderableFace();\r\n\t\t\t_facePool.push( face );\r\n\t\t\t_facePoolLength ++;\r\n\t\t\t_faceCount ++;\r\n\t\t\treturn face;\r\n\r\n\t\t}\r\n\r\n\t\treturn _facePool[ _faceCount ++ ];\r\n\r\n\r\n\t}\r\n\r\n\tfunction getNextLineInPool() {\r\n\r\n\t\tif ( _lineCount === _linePoolLength ) {\r\n\r\n\t\t\tvar line = new THREE.RenderableLine();\r\n\t\t\t_linePool.push( line );\r\n\t\t\t_linePoolLength ++;\r\n\t\t\t_lineCount ++\r\n\t\t\treturn line;\r\n\r\n\t\t}\r\n\r\n\t\treturn _linePool[ _lineCount ++ ];\r\n\r\n\t}\r\n\r\n\tfunction getNextSpriteInPool() {\r\n\r\n\t\tif ( _spriteCount === _spritePoolLength ) {\r\n\r\n\t\t\tvar sprite = new THREE.RenderableSprite();\r\n\t\t\t_spritePool.push( sprite );\r\n\t\t\t_spritePoolLength ++;\r\n\t\t\t_spriteCount ++\r\n\t\t\treturn sprite;\r\n\r\n\t\t}\r\n\r\n\t\treturn _spritePool[ _spriteCount ++ ];\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction painterSort( a, b ) {\r\n\r\n\t\tif ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else if ( a.id !== b.id ) {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn 0;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction clipLine( s1, s2 ) {\r\n\r\n\t\tvar alpha1 = 0, alpha2 = 1,\r\n\r\n\t\t// Calculate the boundary coordinate of each vertex for the near and far clip planes,\r\n\t\t// Z = -1 and Z = +1, respectively.\r\n\t\tbc1near =  s1.z + s1.w,\r\n\t\tbc2near =  s2.z + s2.w,\r\n\t\tbc1far =  - s1.z + s1.w,\r\n\t\tbc2far =  - s2.z + s2.w;\r\n\r\n\t\tif ( bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0 ) {\r\n\r\n\t\t\t// Both vertices lie entirely within all clip planes.\r\n\t\t\treturn true;\r\n\r\n\t\t} else if ( ( bc1near < 0 && bc2near < 0) || (bc1far < 0 && bc2far < 0 ) ) {\r\n\r\n\t\t\t// Both vertices lie entirely outside one of the clip planes.\r\n\t\t\treturn false;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// The line segment spans at least one clip plane.\r\n\r\n\t\t\tif ( bc1near < 0 ) {\r\n\r\n\t\t\t\t// v1 lies outside the near plane, v2 inside\r\n\t\t\t\talpha1 = Math.max( alpha1, bc1near / ( bc1near - bc2near ) );\r\n\r\n\t\t\t} else if ( bc2near < 0 ) {\r\n\r\n\t\t\t\t// v2 lies outside the near plane, v1 inside\r\n\t\t\t\talpha2 = Math.min( alpha2, bc1near / ( bc1near - bc2near ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( bc1far < 0 ) {\r\n\r\n\t\t\t\t// v1 lies outside the far plane, v2 inside\r\n\t\t\t\talpha1 = Math.max( alpha1, bc1far / ( bc1far - bc2far ) );\r\n\r\n\t\t\t} else if ( bc2far < 0 ) {\r\n\r\n\t\t\t\t// v2 lies outside the far plane, v2 inside\r\n\t\t\t\talpha2 = Math.min( alpha2, bc1far / ( bc1far - bc2far ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( alpha2 < alpha1 ) {\r\n\r\n\t\t\t\t// The line segment spans two boundaries, but is outside both of them.\r\n\t\t\t\t// (This can't happen when we're only clipping against just near/far but good\r\n\t\t\t\t//  to leave the check here for future usage if other clip planes are added.)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Update the s1 and s2 vertices to match the clipped line segment.\r\n\t\t\t\ts1.lerp( s2, alpha1 );\r\n\t\t\t\ts2.lerp( s1, 1 - alpha2 );\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\r\n\tthis.a = a;\r\n\tthis.b = b;\r\n\tthis.c = c;\r\n\r\n\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\tthis.vertexNormals = normal instanceof Array ? normal : [ ];\r\n\r\n\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\tthis.vertexColors = color instanceof Array ? color : [];\r\n\r\n\tthis.vertexTangents = [];\r\n\r\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n\tthis.centroid = new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Face3.prototype = {\r\n\r\n\tconstructor: THREE.Face3,\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar face = new THREE.Face3( this.a, this.b, this.c );\r\n\r\n\t\tface.normal.copy( this.normal );\r\n\t\tface.color.copy( this.color );\r\n\t\tface.centroid.copy( this.centroid );\r\n\r\n\t\tface.materialIndex = this.materialIndex;\r\n\r\n\t\tvar i, il;\r\n\t\tfor ( i = 0, il = this.vertexNormals.length; i < il; i ++ ) face.vertexNormals[ i ] = this.vertexNormals[ i ].clone();\r\n\t\tfor ( i = 0, il = this.vertexColors.length; i < il; i ++ ) face.vertexColors[ i ] = this.vertexColors[ i ].clone();\r\n\t\tfor ( i = 0, il = this.vertexTangents.length; i < il; i ++ ) face.vertexTangents[ i ] = this.vertexTangents[ i ].clone();\r\n\r\n\t\treturn face;\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\r\n\tTHREE.onwarning( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.')\r\n\r\n\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.BufferGeometry = function () {\r\n\r\n\tthis.id = THREE.GeometryIdCount ++;\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\tthis.className = \"BufferGeometry\";\r\n\tthis.name = '';\r\n\r\n\t// attributes\r\n\r\n\tthis.attributes = {};\r\n\r\n\t// offsets for chunks when using indexed elements\r\n\r\n\tthis.offsets = [];\r\n\r\n\t// boundings\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n};\r\n\r\nTHREE.BufferGeometry.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometry,\r\n\r\n\taddAttribute: function ( name, type, numItems, itemSize ) {\r\n\r\n\t\tthis.attributes[ name ] = {\r\n\r\n\t\t\tarray: new type( numItems * itemSize ),\r\n\t\t\titemSize: itemSize\r\n\r\n\t\t};\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar position = this.attributes.position;\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tmatrix.multiplyVector3Array( position.array );\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tvar normal = this.attributes.normal;\r\n\r\n\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tnormalMatrix.multiplyVector3Array( normal.array );\r\n\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t}\r\n\r\n\t\tvar positions = this.attributes[ \"position\" ].array;\r\n\r\n\t\tif ( positions ) {\r\n\r\n\t\t\tvar bb = this.boundingBox;\r\n\r\n\t\t\tif( positions.length >= 3 ) {\r\n\t\t\t\tbb.min.x = bb.max.x = positions[ 0 ];\r\n\t\t\t\tbb.min.y = bb.max.y = positions[ 1 ];\r\n\t\t\t\tbb.min.z = bb.max.z = positions[ 2 ];\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 3, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\tvar x = positions[ i ];\r\n\t\t\t\tvar y = positions[ i + 1 ];\r\n\t\t\t\tvar z = positions[ i + 2 ];\r\n\r\n\t\t\t\t// bounding box\r\n\r\n\t\t\t\tif ( x < bb.min.x ) {\r\n\r\n\t\t\t\t\tbb.min.x = x;\r\n\r\n\t\t\t\t} else if ( x > bb.max.x ) {\r\n\r\n\t\t\t\t\tbb.max.x = x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( y < bb.min.y ) {\r\n\r\n\t\t\t\t\tbb.min.y = y;\r\n\r\n\t\t\t\t} else if ( y > bb.max.y ) {\r\n\r\n\t\t\t\t\tbb.max.y = y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( z < bb.min.z ) {\r\n\r\n\t\t\t\t\tbb.min.z = z;\r\n\r\n\t\t\t\t} else if ( z > bb.max.z ) {\r\n\r\n\t\t\t\t\tbb.max.z = z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\r\n\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes[ \"position\" ].array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tbox.makeEmpty();\r\n\r\n\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\t\t\t\t\tbox.addPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbox.center( center );\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tif ( this.attributes[ \"position\" ] ) {\r\n\r\n\t\t\tvar i, il;\r\n\t\t\tvar j, jl;\r\n\r\n\t\t\tvar nVertexElements = this.attributes[ \"position\" ].array.length;\r\n\r\n\t\t\tif ( this.attributes[ \"normal\" ] === undefined ) {\r\n\r\n\t\t\t\tthis.attributes[ \"normal\" ] = {\r\n\r\n\t\t\t\t\titemSize: 3,\r\n\t\t\t\t\tarray: new Float32Array( nVertexElements )\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\tfor ( i = 0, il = this.attributes[ \"normal\" ].array.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tthis.attributes[ \"normal\" ].array[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes[ \"position\" ].array;\r\n\t\t\tvar normals = this.attributes[ \"normal\" ].array;\r\n\r\n\t\t\tvar vA, vB, vC, x, y, z,\r\n\r\n\t\t\tpA = new THREE.Vector3(),\r\n\t\t\tpB = new THREE.Vector3(),\r\n\t\t\tpC = new THREE.Vector3(),\r\n\r\n\t\t\tcb = new THREE.Vector3(),\r\n\t\t\tab = new THREE.Vector3();\r\n\r\n\t\t\t// indexed elements\r\n\r\n\t\t\tif ( this.attributes[ \"index\" ] ) {\r\n\r\n\t\t\t\tvar indices = this.attributes[ \"index\" ].array;\r\n\r\n\t\t\t\tvar offsets = this.offsets;\r\n\r\n\t\t\t\tfor ( j = 0, jl = offsets.length; j < jl; ++ j ) {\r\n\r\n\t\t\t\t\tvar start = offsets[ j ].start;\r\n\t\t\t\t\tvar count = offsets[ j ].count;\r\n\t\t\t\t\tvar index = offsets[ j ].index;\r\n\r\n\t\t\t\t\tfor ( i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvA = index + indices[ i ];\r\n\t\t\t\t\t\tvB = index + indices[ i + 1 ];\r\n\t\t\t\t\t\tvC = index + indices[ i + 2 ];\r\n\r\n\t\t\t\t\t\tx = positions[ vA * 3 ];\r\n\t\t\t\t\t\ty = positions[ vA * 3 + 1 ];\r\n\t\t\t\t\t\tz = positions[ vA * 3 + 2 ];\r\n\t\t\t\t\t\tpA.set( x, y, z );\r\n\r\n\t\t\t\t\t\tx = positions[ vB * 3 ];\r\n\t\t\t\t\t\ty = positions[ vB * 3 + 1 ];\r\n\t\t\t\t\t\tz = positions[ vB * 3 + 2 ];\r\n\t\t\t\t\t\tpB.set( x, y, z );\r\n\r\n\t\t\t\t\t\tx = positions[ vC * 3 ];\r\n\t\t\t\t\t\ty = positions[ vC * 3 + 1 ];\r\n\t\t\t\t\t\tz = positions[ vC * 3 + 2 ];\r\n\t\t\t\t\t\tpC.set( x, y, z );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ vA * 3     ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vA * 3 + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vA * 3 + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vB * 3     ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vB * 3 + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vB * 3 + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vC * 3     ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vC * 3 + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vC * 3 + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tx = positions[ i ];\r\n\t\t\t\t\ty = positions[ i + 1 ];\r\n\t\t\t\t\tz = positions[ i + 2 ];\r\n\t\t\t\t\tpA.set( x, y, z );\r\n\r\n\t\t\t\t\tx = positions[ i + 3 ];\r\n\t\t\t\t\ty = positions[ i + 4 ];\r\n\t\t\t\t\tz = positions[ i + 5 ];\r\n\t\t\t\t\tpB.set( x, y, z );\r\n\r\n\t\t\t\t\tx = positions[ i + 6 ];\r\n\t\t\t\t\ty = positions[ i + 7 ];\r\n\t\t\t\t\tz = positions[ i + 8 ];\r\n\t\t\t\t\tpC.set( x, y, z );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnormals[ i     ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tnormalizeNormals: function () {\r\n\r\n\t\tvar normals = this.attributes[ \"normal\" ].array;\r\n\r\n\t\tvar x, y, z, n;\r\n\r\n\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\r\n\t\t\tx = normals[ i ];\r\n\t\t\ty = normals[ i + 1 ];\r\n\t\t\tz = normals[ i + 2 ];\r\n\r\n\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\t\tnormals[ i     ] *= n;\r\n\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\tnormals[ i + 2 ] *= n;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\t// based on http://www.terathon.com/code/tangent.html\r\n\t\t// (per vertex tangents)\r\n\r\n\t\tif ( this.attributes[ \"index\" ] === undefined ||\r\n\t\t\t this.attributes[ \"position\" ] === undefined ||\r\n\t\t\t this.attributes[ \"normal\" ] === undefined ||\r\n\t\t\t this.attributes[ \"uv\" ] === undefined ) {\r\n\r\n\t\t\tTHREE.onwarning( \"Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()\" );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar indices = this.attributes[ \"index\" ].array;\r\n\t\tvar positions = this.attributes[ \"position\" ].array;\r\n\t\tvar normals = this.attributes[ \"normal\" ].array;\r\n\t\tvar uvs = this.attributes[ \"uv\" ].array;\r\n\r\n\t\tvar nVertices = positions.length / 3;\r\n\r\n\t\tif ( this.attributes[ \"tangent\" ] === undefined ) {\r\n\r\n\t\t\tvar nTangentElements = 4 * nVertices;\r\n\r\n\t\t\tthis.attributes[ \"tangent\" ] = {\r\n\r\n\t\t\t\titemSize: 4,\r\n\t\t\t\tarray: new Float32Array( nTangentElements )\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar tangents = this.attributes[ \"tangent\" ].array;\r\n\r\n\t\tvar tan1 = [], tan2 = [];\r\n\r\n\t\tfor ( var k = 0; k < nVertices; k ++ ) {\r\n\r\n\t\t\ttan1[ k ] = new THREE.Vector3();\r\n\t\t\ttan2[ k ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tvar xA, yA, zA,\r\n\t\t\txB, yB, zB,\r\n\t\t\txC, yC, zC,\r\n\r\n\t\t\tuA, vA,\r\n\t\t\tuB, vB,\r\n\t\t\tuC, vC,\r\n\r\n\t\t\tx1, x2, y1, y2, z1, z2,\r\n\t\t\ts1, s2, t1, t2, r;\r\n\r\n\t\tvar sdir = new THREE.Vector3(), tdir = new THREE.Vector3();\r\n\r\n\t\tfunction handleTriangle( a, b, c ) {\r\n\r\n\t\t\txA = positions[ a * 3 ];\r\n\t\t\tyA = positions[ a * 3 + 1 ];\r\n\t\t\tzA = positions[ a * 3 + 2 ];\r\n\r\n\t\t\txB = positions[ b * 3 ];\r\n\t\t\tyB = positions[ b * 3 + 1 ];\r\n\t\t\tzB = positions[ b * 3 + 2 ];\r\n\r\n\t\t\txC = positions[ c * 3 ];\r\n\t\t\tyC = positions[ c * 3 + 1 ];\r\n\t\t\tzC = positions[ c * 3 + 2 ];\r\n\r\n\t\t\tuA = uvs[ a * 2 ];\r\n\t\t\tvA = uvs[ a * 2 + 1 ];\r\n\r\n\t\t\tuB = uvs[ b * 2 ];\r\n\t\t\tvB = uvs[ b * 2 + 1 ];\r\n\r\n\t\t\tuC = uvs[ c * 2 ];\r\n\t\t\tvC = uvs[ c * 2 + 1 ];\r\n\r\n\t\t\tx1 = xB - xA;\r\n\t\t\tx2 = xC - xA;\r\n\r\n\t\t\ty1 = yB - yA;\r\n\t\t\ty2 = yC - yA;\r\n\r\n\t\t\tz1 = zB - zA;\r\n\t\t\tz2 = zC - zA;\r\n\r\n\t\t\ts1 = uB - uA;\r\n\t\t\ts2 = uC - uA;\r\n\r\n\t\t\tt1 = vB - vA;\r\n\t\t\tt2 = vC - vA;\r\n\r\n\t\t\tr = 1.0 / ( s1 * t2 - s2 * t1 );\r\n\r\n\t\t\tsdir.set(\r\n\t\t\t\t( t2 * x1 - t1 * x2 ) * r,\r\n\t\t\t\t( t2 * y1 - t1 * y2 ) * r,\r\n\t\t\t\t( t2 * z1 - t1 * z2 ) * r\r\n\t\t\t);\r\n\r\n\t\t\ttdir.set(\r\n\t\t\t\t( s1 * x2 - s2 * x1 ) * r,\r\n\t\t\t\t( s1 * y2 - s2 * y1 ) * r,\r\n\t\t\t\t( s1 * z2 - s2 * z1 ) * r\r\n\t\t\t);\r\n\r\n\t\t\ttan1[ a ].add( sdir );\r\n\t\t\ttan1[ b ].add( sdir );\r\n\t\t\ttan1[ c ].add( sdir );\r\n\r\n\t\t\ttan2[ a ].add( tdir );\r\n\t\t\ttan2[ b ].add( tdir );\r\n\t\t\ttan2[ c ].add( tdir );\r\n\r\n\t\t}\r\n\r\n\t\tvar i, il;\r\n\t\tvar j, jl;\r\n\t\tvar iA, iB, iC;\r\n\r\n\t\tvar offsets = this.offsets;\r\n\r\n\t\tfor ( j = 0, jl = offsets.length; j < jl; ++ j ) {\r\n\r\n\t\t\tvar start = offsets[ j ].start;\r\n\t\t\tvar count = offsets[ j ].count;\r\n\t\t\tvar index = offsets[ j ].index;\r\n\r\n\t\t\tfor ( i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\tiA = index + indices[ i ];\r\n\t\t\t\tiB = index + indices[ i + 1 ];\r\n\t\t\t\tiC = index + indices[ i + 2 ];\r\n\r\n\t\t\t\thandleTriangle( iA, iB, iC );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar tmp = new THREE.Vector3(), tmp2 = new THREE.Vector3();\r\n\t\tvar n = new THREE.Vector3(), n2 = new THREE.Vector3();\r\n\t\tvar w, t, test;\r\n\r\n\t\tfunction handleVertex( v ) {\r\n\r\n\t\t\tn.x = normals[ v * 3 ];\r\n\t\t\tn.y = normals[ v * 3 + 1 ];\r\n\t\t\tn.z = normals[ v * 3 + 2 ];\r\n\r\n\t\t\tn2.copy( n );\r\n\r\n\t\t\tt = tan1[ v ];\r\n\r\n\t\t\t// Gram-Schmidt orthogonalize\r\n\r\n\t\t\ttmp.copy( t );\r\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\r\n\r\n\t\t\t// Calculate handedness\r\n\r\n\t\t\ttmp2.crossVectors( n2, t );\r\n\t\t\ttest = tmp2.dot( tan2[ v ] );\r\n\t\t\tw = ( test < 0.0 ) ? -1.0 : 1.0;\r\n\r\n\t\t\ttangents[ v * 4     ] = tmp.x;\r\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\r\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\r\n\t\t\ttangents[ v * 4 + 3 ] = w;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( j = 0, jl = offsets.length; j < jl; ++ j ) {\r\n\r\n\t\t\tvar start = offsets[ j ].start;\r\n\t\t\tvar count = offsets[ j ].count;\r\n\t\t\tvar index = offsets[ j ].index;\r\n\r\n\t\t\tfor ( i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\tiA = index + indices[ i ];\r\n\t\t\t\tiB = index + indices[ i + 1 ];\r\n\t\t\t\tiC = index + indices[ i + 2 ];\r\n\r\n\t\t\t\thandleVertex( iA );\r\n\t\t\t\thandleVertex( iB );\r\n\t\t\t\thandleVertex( iC );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/*\r\n\t\tcomputeOffsets\r\n\t\tCompute the draw offset for large models by chunking the index buffer into chunks of 65k addressable vertices.\r\n\t\tThis method will effectively rewrite the index buffer and remap all attributes to match the new indices.\r\n\t\tWARNING: This method will also expand the vertex count to prevent sprawled triangles across draw offsets.\r\n\t\tindexBufferSize - Defaults to 65535, but allows for larger or smaller chunks.\r\n\t*/\r\n\tcomputeOffsets: function(indexBufferSize) {\r\n\r\n\t\tvar size = indexBufferSize;\r\n\t\tif(indexBufferSize === undefined)\r\n\t\t\tsize = 65535; //WebGL limits type of index buffer values to 16-bit.\r\n\r\n\t\tvar s = Date.now();\r\n\r\n\t\tvar indices = this.attributes['index'].array;\r\n\t\tvar vertices = this.attributes['position'].array;\r\n\r\n\t\tvar verticesCount = (vertices.length/3);\r\n\t\tvar facesCount = (indices.length/3);\r\n\r\n\t\t/*\r\n\t\tconsole.log(\"Computing buffers in offsets of \"+size+\" -> indices:\"+indices.length+\" vertices:\"+vertices.length);\r\n\t\tconsole.log(\"Faces to process: \"+(indices.length/3));\r\n\t\tconsole.log(\"Reordering \"+verticesCount+\" vertices.\");\r\n\t\t*/\r\n\r\n\t\tvar sortedIndices = new Uint16Array( indices.length ); //16-bit buffers\r\n\t\tvar indexPtr = 0;\r\n\t\tvar vertexPtr = 0;\r\n\r\n\t\tvar offsets = [ { start:0, count:0, index:0 } ];\r\n\t\tvar offset = offsets[0];\r\n\r\n\t\tvar duplicatedVertices = 0;\r\n\t\tvar newVerticeMaps = 0;\r\n\t\tvar faceVertices = new Int32Array(6);\r\n\t\tvar vertexMap = new Int32Array( vertices.length );\r\n\t\tvar revVertexMap = new Int32Array( vertices.length );\r\n\t\tfor(var j = 0; j < vertices.length; j++) { vertexMap[j] = -1; revVertexMap[j] = -1; }\r\n\r\n\t\t/*\r\n\t\t\tTraverse every face and reorder vertices in the proper offsets of 65k.\r\n\t\t\tWe can have more than 65k entries in the index buffer per offset, but only reference 65k values.\r\n\t\t*/\r\n\t\tfor(var findex = 0; findex < facesCount; findex++) {\r\n\t\t\tnewVerticeMaps = 0;\r\n\r\n\t\t\tfor(var vo = 0; vo < 3; vo++) {\r\n\t\t\t\tvar vid = indices[ findex*3 + vo ];\r\n\t\t\t\tif(vertexMap[vid] == -1) {\r\n\t\t\t\t\t//Unmapped vertice\r\n\t\t\t\t\tfaceVertices[vo*2] = vid;\r\n\t\t\t\t\tfaceVertices[vo*2+1] = -1;\r\n\t\t\t\t\tnewVerticeMaps++;\r\n\t\t\t\t} else if(vertexMap[vid] < offset.index) {\r\n\t\t\t\t\t//Reused vertices from previous block (duplicate)\r\n\t\t\t\t\tfaceVertices[vo*2] = vid;\r\n\t\t\t\t\tfaceVertices[vo*2+1] = -1;\r\n\t\t\t\t\tduplicatedVertices++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//Reused vertice in the current block\r\n\t\t\t\t\tfaceVertices[vo*2] = vid;\r\n\t\t\t\t\tfaceVertices[vo*2+1] = vertexMap[vid];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar faceMax = vertexPtr + newVerticeMaps;\r\n\t\t\tif(faceMax > (offset.index + size)) {\r\n\t\t\t\tvar new_offset = { start:indexPtr, count:0, index:vertexPtr };\r\n\t\t\t\toffsets.push(new_offset);\r\n\t\t\t\toffset = new_offset;\r\n\r\n\t\t\t\t//Re-evaluate reused vertices in light of new offset.\r\n\t\t\t\tfor(var v = 0; v < 6; v+=2) {\r\n\t\t\t\t\tvar new_vid = faceVertices[v+1];\r\n\t\t\t\t\tif(new_vid > -1 && new_vid < offset.index)\r\n\t\t\t\t\t\tfaceVertices[v+1] = -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//Reindex the face.\r\n\t\t\tfor(var v = 0; v < 6; v+=2) {\r\n\t\t\t\tvar vid = faceVertices[v];\r\n\t\t\t\tvar new_vid = faceVertices[v+1];\r\n\r\n\t\t\t\tif(new_vid === -1)\r\n\t\t\t\t\tnew_vid = vertexPtr++;\r\n\r\n\t\t\t\tvertexMap[vid] = new_vid;\r\n\t\t\t\trevVertexMap[new_vid] = vid;\r\n\t\t\t\tsortedIndices[indexPtr++] = new_vid - offset.index; //XXX overflows at 16bit\r\n\t\t\t\toffset.count++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Move all attribute values to map to the new computed indices , also expand the vertice stack to match our new vertexPtr. */\r\n\t\tthis.reorderBuffers(sortedIndices, revVertexMap, vertexPtr);\r\n\t\tthis.offsets = offsets;\r\n\r\n\t\t/*\r\n\t\tvar orderTime = Date.now();\r\n\t\tconsole.log(\"Reorder time: \"+(orderTime-s)+\"ms\");\r\n\t\tconsole.log(\"Duplicated \"+duplicatedVertices+\" vertices.\");\r\n\t\tconsole.log(\"Compute Buffers time: \"+(Date.now()-s)+\"ms\");\r\n\t\tconsole.log(\"Draw offsets: \"+offsets.length);\r\n\t\t*/\r\n\r\n\t\treturn offsets;\r\n\t},\r\n\r\n\t/*\r\n\t\treoderBuffers:\r\n\t\tReorder attributes based on a new indexBuffer and indexMap.\r\n\t\tindexBuffer - Uint16Array of the new ordered indices.\r\n\t\tindexMap - Int32Array where the position is the new vertex ID and the value the old vertex ID for each vertex.\r\n\t\tvertexCount - Amount of total vertices considered in this reordering (in case you want to grow the vertice stack).\r\n\t*/\r\n\treorderBuffers: function(indexBuffer, indexMap, vertexCount) {\r\n\r\n\t\t/* Create a copy of all attributes for reordering. */\r\n\t\tvar sortedAttributes = {};\r\n\t\tvar types = [ Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];\r\n\t\tfor( var attr in this.attributes ) {\r\n\t\t\tif(attr == 'index')\r\n\t\t\t\tcontinue;\r\n\t\t\tvar sourceArray = this.attributes[attr].array;\r\n\t\t\tfor ( var i = 0, il = types.length; i < il; i++ ) {\r\n\t\t\t\tvar type = types[i];\r\n\t\t\t\tif (sourceArray instanceof type) {\r\n\t\t\t\t\tsortedAttributes[attr] = new type( this.attributes[attr].itemSize * vertexCount );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Move attribute positions based on the new index map */\r\n\t\tfor(var new_vid = 0; new_vid < vertexCount; new_vid++) {\r\n\t\t\tvar vid = indexMap[new_vid];\r\n\t\t\tfor ( var attr in this.attributes ) {\r\n\t\t\t\tif(attr == 'index')\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tvar attrArray = this.attributes[attr].array;\r\n\t\t\t\tvar attrSize = this.attributes[attr].itemSize;\r\n\t\t\t\tvar sortedAttr = sortedAttributes[attr];\r\n\t\t\t\tfor(var k = 0; k < attrSize; k++)\r\n\t\t\t\t\tsortedAttr[ new_vid * attrSize + k ] = attrArray[ vid * attrSize + k ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Carry the new sorted buffers locally */\r\n\t\tthis.attributes['index'].array = indexBuffer;\r\n\t\tfor ( var attr in this.attributes ) {\r\n\t\t\tif(attr == 'index')\r\n\t\t\t\tcontinue;\r\n\t\t\tthis.attributes[attr].array = sortedAttributes[attr];\r\n\t\t\tthis.attributes[attr].numItems = this.attributes[attr].itemSize * vertexCount;\r\n\t\t}\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tvar types = [ Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];\r\n\r\n\t\tfor ( var attr in this.attributes ) {\r\n\r\n\t\t\tvar sourceAttr = this.attributes[ attr ];\r\n\t\t\tvar sourceArray = sourceAttr.array;\r\n\r\n\t\t\tvar attribute = {\r\n\r\n\t\t\t\titemSize: sourceAttr.itemSize,\r\n\t\t\t\tarray: null\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var i = 0, il = types.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar type = types[ i ];\r\n\r\n\t\t\t\tif ( sourceArray instanceof type ) {\r\n\r\n\t\t\t\t\tattribute.array = new type( sourceArray );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.attributes[ attr ] = attribute;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar offset = this.offsets[ i ];\r\n\r\n\t\t\tgeometry.offsets.push( {\r\n\r\n\t\t\t\tstart: offset.start,\r\n\t\t\t\tindex: offset.index,\r\n\t\t\t\tcount: offset.count\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Geometry = function () {\r\n\r\n\tthis.id = THREE.GeometryIdCount ++;\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\tthis.className = \"Geometry\";\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.vertices = [];\r\n\tthis.colors = [];  // one-to-one vertex colors, used in ParticleSystem and Line\r\n\r\n\tthis.faces = [];\r\n\r\n\tthis.faceVertexUvs = [[]];\r\n\r\n\tthis.morphTargets = [];\r\n\tthis.morphColors = [];\r\n\tthis.morphNormals = [];\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\tthis.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\tthis.hasTangents = true;\r\n\r\n\tthis.dynamic = true; // the intermediate typed arrays will be deleted when set to false\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.elementsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.tangentsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.lineDistancesNeedUpdate = false;\r\n\r\n\tthis.buffersNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.Geometry.prototype = {\r\n\r\n\tconstructor: THREE.Geometry,\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertex.applyMatrix4( matrix );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tface.centroid.applyMatrix4( matrix );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox instanceof THREE.Box3 ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere instanceof THREE.Sphere ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeCentroids: function () {\r\n\r\n\t\tvar f, fl, face;\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\t\t\tface.centroid.set( 0, 0, 0 );\r\n\r\n\t\t\tface.centroid.add( this.vertices[ face.a ] );\r\n\t\t\tface.centroid.add( this.vertices[ face.b ] );\r\n\t\t\tface.centroid.add( this.vertices[ face.c ] );\r\n\t\t\tface.centroid.divideScalar( 3 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ f ];\r\n\r\n\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n\t\t\tcb.subVectors( vC, vB );\r\n\t\t\tab.subVectors( vA, vB );\r\n\t\t\tcb.cross( ab );\r\n\r\n\t\t\tcb.normalize();\r\n\r\n\t\t\tface.normal.copy( cb );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n\t\tvar v, vl, f, fl, face, vertices;\r\n\r\n\t\tvertices = new Array( this.vertices.length );\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( areaWeighted ) {\r\n\r\n\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n\t\t\tvar vA, vB, vC, vD;\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3(),\r\n\t\t\t\tdb = new THREE.Vector3(), dc = new THREE.Vector3(), bc = new THREE.Vector3();\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ].normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.vertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\tface.vertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\tface.vertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeMorphNormals: function () {\r\n\r\n\t\tvar i, il, f, fl, face;\r\n\r\n\t\t// save original normals\r\n\t\t// - create temp variables on first access\r\n\t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\ttmpGeo.faces = this.faces;\r\n\r\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t// create on first access\r\n\r\n\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\r\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n\t\t\t// set vertices to morph target\r\n\r\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n\t\t\t// compute morph normals\r\n\r\n\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\ttmpGeo.computeVertexNormals();\r\n\r\n\t\t\t// store morph normals\r\n\r\n\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n\t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore original normals\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\t// based on http://www.terathon.com/code/tangent.html\r\n\t\t// tangents go to vertices\r\n\r\n\t\tvar f, fl, v, vl, i, il, vertexIndex,\r\n\t\t\tface, uv, vA, vB, vC, uvA, uvB, uvC,\r\n\t\t\tx1, x2, y1, y2, z1, z2,\r\n\t\t\ts1, s2, t1, t2, r, t, test,\r\n\t\t\ttan1 = [], tan2 = [],\r\n\t\t\tsdir = new THREE.Vector3(), tdir = new THREE.Vector3(),\r\n\t\t\ttmp = new THREE.Vector3(), tmp2 = new THREE.Vector3(),\r\n\t\t\tn = new THREE.Vector3(), w;\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\ttan1[ v ] = new THREE.Vector3();\r\n\t\t\ttan2[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTriangle( context, a, b, c, ua, ub, uc ) {\r\n\r\n\t\t\tvA = context.vertices[ a ];\r\n\t\t\tvB = context.vertices[ b ];\r\n\t\t\tvC = context.vertices[ c ];\r\n\r\n\t\t\tuvA = uv[ ua ];\r\n\t\t\tuvB = uv[ ub ];\r\n\t\t\tuvC = uv[ uc ];\r\n\r\n\t\t\tx1 = vB.x - vA.x;\r\n\t\t\tx2 = vC.x - vA.x;\r\n\t\t\ty1 = vB.y - vA.y;\r\n\t\t\ty2 = vC.y - vA.y;\r\n\t\t\tz1 = vB.z - vA.z;\r\n\t\t\tz2 = vC.z - vA.z;\r\n\r\n\t\t\ts1 = uvB.x - uvA.x;\r\n\t\t\ts2 = uvC.x - uvA.x;\r\n\t\t\tt1 = uvB.y - uvA.y;\r\n\t\t\tt2 = uvC.y - uvA.y;\r\n\r\n\t\t\tr = 1.0 / ( s1 * t2 - s2 * t1 );\r\n\t\t\tsdir.set( ( t2 * x1 - t1 * x2 ) * r,\r\n\t\t\t\t\t  ( t2 * y1 - t1 * y2 ) * r,\r\n\t\t\t\t\t  ( t2 * z1 - t1 * z2 ) * r );\r\n\t\t\ttdir.set( ( s1 * x2 - s2 * x1 ) * r,\r\n\t\t\t\t\t  ( s1 * y2 - s2 * y1 ) * r,\r\n\t\t\t\t\t  ( s1 * z2 - s2 * z1 ) * r );\r\n\r\n\t\t\ttan1[ a ].add( sdir );\r\n\t\t\ttan1[ b ].add( sdir );\r\n\t\t\ttan1[ c ].add( sdir );\r\n\r\n\t\t\ttan2[ a ].add( tdir );\r\n\t\t\ttan2[ b ].add( tdir );\r\n\t\t\ttan2[ c ].add( tdir );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\t\t\tuv = this.faceVertexUvs[ 0 ][ f ]; // use UV layer 0 for tangents\r\n\r\n\t\t\thandleTriangle( this, face.a, face.b, face.c, 0, 1, 2 );\r\n\r\n\t\t}\r\n\r\n\t\tvar faceIndex = [ 'a', 'b', 'c', 'd' ];\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tfor ( i = 0; i < Math.min( face.vertexNormals.length, 3 ); i++ ) {\r\n\r\n\t\t\t\tn.copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\tvertexIndex = face[ faceIndex[ i ] ];\r\n\r\n\t\t\t\tt = tan1[ vertexIndex ];\r\n\r\n\t\t\t\t// Gram-Schmidt orthogonalize\r\n\r\n\t\t\t\ttmp.copy( t );\r\n\t\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\r\n\r\n\t\t\t\t// Calculate handedness\r\n\r\n\t\t\t\ttmp2.crossVectors( face.vertexNormals[ i ], t );\r\n\t\t\t\ttest = tmp2.dot( tan2[ vertexIndex ] );\r\n\t\t\t\tw = (test < 0.0) ? -1.0 : 1.0;\r\n\r\n\t\t\t\tface.vertexTangents[ i ] = new THREE.Vector4( tmp.x, tmp.y, tmp.z, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.hasTangents = true;\r\n\r\n\t},\r\n\r\n\tcomputeLineDistances: function ( ) {\r\n\r\n\t\tvar d = 0;\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tif ( i > 0 ) {\r\n\r\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.lineDistances[ i ] = d;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\t/*\r\n\t * Checks for duplicate vertices with hashmap.\r\n\t * Duplicated vertices are removed\r\n\t * and faces' vertices are updated.\r\n\t */\r\n\r\n\tmergeVertices: function () {\r\n\r\n\t\tvar verticesMap = {}; // Hashmap for looking up vertice by position coordinates (and making sure they are unique)\r\n\t\tvar unique = [], changes = [];\r\n\r\n\t\tvar v, key;\r\n\t\tvar precisionPoints = 4; // number of decimal points, eg. 4 for epsilon of 0.0001\r\n\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\tvar i,il, face;\r\n\t\tvar indices, k, j, jl, u;\r\n\r\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tv = this.vertices[ i ];\r\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\r\n\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t// have to remove them from the geometry.\r\n\t\tvar faceIndicesToRemove = [];\r\n\r\n\t\tfor( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = this.faces[ i ];\r\n\r\n\t\t\tface.a = changes[ face.a ];\r\n\t\t\tface.b = changes[ face.b ];\r\n\t\t\tface.c = changes[ face.c ];\r\n\r\n\t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n\t\t\tvar dupIndex = -1;\r\n\r\n\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\t\t\t\tif ( indices[ n ] == indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n\t\t\tthis.faces.splice( idx, 1 );\r\n\r\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Use unique set of vertices\r\n\r\n\t\tvar diff = this.vertices.length - unique.length;\r\n\t\tthis.vertices = unique;\r\n\t\treturn diff;\r\n\r\n\t},\r\n\r\n\t// Geometry splitting\r\n\r\n\tmakeGroups: ( function () {\r\n\r\n\t\tvar geometryGroupCounter = 0;\r\n\t\t\r\n\t\treturn function ( usesFaceMaterial ) {\r\n\r\n\t\t\tvar f, fl, face, materialIndex,\r\n\t\t\t\tgroupHash, hash_map = {};\r\n\r\n\t\t\tvar numMorphTargets = this.morphTargets.length;\r\n\t\t\tvar numMorphNormals = this.morphNormals.length;\r\n\r\n\t\t\tthis.geometryGroups = {};\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\t\t\tmaterialIndex = usesFaceMaterial ? face.materialIndex : 0;\r\n\r\n\t\t\t\tif ( ! ( materialIndex in hash_map ) ) {\r\n\r\n\t\t\t\t\thash_map[ materialIndex ] = { 'hash': materialIndex, 'counter': 0 };\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroupHash = hash_map[ materialIndex ].hash + '_' + hash_map[ materialIndex ].counter;\r\n\r\n\t\t\t\tif ( ! ( groupHash in this.geometryGroups ) ) {\r\n\r\n\t\t\t\t\tthis.geometryGroups[ groupHash ] = { 'faces3': [], 'materialIndex': materialIndex, 'vertices': 0, 'numMorphTargets': numMorphTargets, 'numMorphNormals': numMorphNormals };\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.geometryGroups[ groupHash ].vertices + 3 > 65535 ) {\r\n\r\n\t\t\t\t\thash_map[ materialIndex ].counter += 1;\r\n\t\t\t\t\tgroupHash = hash_map[ materialIndex ].hash + '_' + hash_map[ materialIndex ].counter;\r\n\r\n\t\t\t\t\tif ( ! ( groupHash in this.geometryGroups ) ) {\r\n\r\n\t\t\t\t\t\tthis.geometryGroups[ groupHash ] = { 'faces3': [], 'materialIndex': materialIndex, 'vertices': 0, 'numMorphTargets': numMorphTargets, 'numMorphNormals': numMorphNormals };\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.geometryGroups[ groupHash ].faces3.push( f );\r\n\t\t\t\tthis.geometryGroups[ groupHash ].vertices += 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.geometryGroupsList = [];\r\n\r\n\t\t\tfor ( var g in this.geometryGroups ) {\r\n\r\n\t\t\t\tthis.geometryGroups[ g ].id = geometryGroupCounter ++;\r\n\r\n\t\t\t\tthis.geometryGroupsList.push( this.geometryGroups[ g ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\t\t\r\n\t} )(),\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar geometry = new THREE.Geometry();\r\n\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tgeometry.vertices.push( vertices[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = this.faces;\r\n\r\n\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tgeometry.faces.push( faces[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\r\n\t\tfor ( var i = 0, il = uvs.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar uv = uvs[ i ], uvCopy = [];\r\n\r\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tuvCopy.push( new THREE.Vector2( uv[ j ].x, uv[ j ].y ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.faceVertexUvs[ 0 ].push( uvCopy );\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.morphTargets = this.morphTargets.slice( 0 );\r\n\t\tgeometry.morphColors = this.morphColors.slice( 0 );\r\n\t\tgeometry.morphNormals = this.morphNormals.slice( 0 );\r\n\t\tgeometry.skinWeights = this.skinWeights.slice( 0 );\r\n\t\tgeometry.skinIndices = this.skinIndices.slice( 0 );\r\n\t\tgeometry.lineDistances = this.lineDistances.slice( 0 );\r\n\r\n\t\tif( this.boundingBox )\tgeometry.boundingBox = this.boundingBox.clone();\r\n\t\tif( this.boundingSphere ) geometry.boundingSphere = this.boundingSphere.clone();\r\n\r\n\t\tgeometry.hasTangents = this.hasTangents;\r\n\r\n\t\tgeometry.dynamic = this.dynamic; // the intermediate typed arrays will be deleted when set to false\r\n\r\n\t\treturn geometry;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\r\nTHREE.GeometryIdCount = 0;\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Geometry2 = function ( size ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\tthis.className = \"Geometry2\";\r\n\r\n\tthis.vertices = this.addAttribute( 'position', Float32Array, size, 3 ).array;\r\n\tthis.normals = this.addAttribute( 'normal', Float32Array, size, 3 ).array;\r\n\tthis.uvs = this.addAttribute( 'uv', Float32Array, size, 2 ).array;\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n};\r\n\r\nTHREE.Geometry2.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.Camera = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\tthis.projectionMatrix = new THREE.Matrix4();\r\n\r\n\tthis.normalizedViewport = { x: 0, y: 0, width: 1.0, height: 1.0 };\r\n};\r\n\r\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.Camera.prototype.lookAt = function () {\r\n\r\n\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\r\n\tvar m1 = new THREE.Matrix4();\r\n\r\n\treturn function ( vector ) {\r\n\r\n\t\tm1.lookAt( this.position, vector, this.up );\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.clone = function (camera) {\r\n\r\n\tif ( camera === undefined ) camera = new THREE.Camera();\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, camera );\r\n\r\n\tcamera.matrixWorldInverse.copy( this.matrixWorldInverse );\r\n\tcamera.projectionMatrix.copy( this.projectionMatrix );\r\n\r\n\tcamera.normalizedViewport = {\r\n\t\tx: this.normalizedViewport.x,\r\n\t\ty: this.normalizedViewport.y,\r\n\t\twidth: this.normalizedViewport.width,\r\n\t\theight: this.normalizedViewport.height\r\n\t};\r\n\r\n\treturn camera;\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.left = left;\r\n\tthis.right = right;\r\n\tthis.top = top;\r\n\tthis.bottom = bottom;\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\r\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tthis.projectionMatrix.makeOrthographic( this.left, this.right, this.top, this.bottom, this.near, this.far );\r\n\r\n\r\n\r\n  \tvar viewportMatrix = new THREE.Matrix4();\r\n  \tviewportMatrix.elements[0] *= this.normalizedViewport.width;\r\n  \tviewportMatrix.elements[1] *= this.normalizedViewport.height;\r\n  \tviewportMatrix.elements[12] += this.normalizedViewport.x;\r\n  \tviewportMatrix.elements[13] += this.normalizedViewport.y;\r\n \tthis.projectionMatrix = viewportMatrix.multiply( this.projectionMatrix );\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.clone = function () {\r\n\r\n\tvar camera = new THREE.OrthographicCamera();\r\n\r\n\tTHREE.Camera.prototype.clone.call( this, camera );\r\n\r\n\tcamera.left = this.left;\r\n\tcamera.right = this.right;\r\n\tcamera.top = this.top;\r\n\tcamera.bottom = this.bottom;\r\n\t\r\n\tcamera.near = this.near;\r\n\tcamera.far = this.far;\r\n\r\n\treturn camera;\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.PerspectiveCamera = function ( fov, aspect, near, far, filmSize, filmOffset ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.fov = fov !== undefined ? fov : 50;\r\n\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\tthis.near = near !== undefined ? near : 0.1;\r\n\tthis.far = far !== undefined ? far : 2000;\r\n\tthis.filmSize = filmSize !== undefined ? filmSize : new THREE.Vector2( 1, 1 );\r\n\tthis.filmOffset = filmOffset !== undefined ? filmOffset : new THREE.Vector2( 0, 0 );\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\r\n\r\n/**\r\n * Uses Focal Length (in mm) to estimate and set FOV\r\n * 35mm (fullframe) camera is used if frame size is not specified;\r\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\r\n\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\r\n\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\tthis.updateProjectionMatrix();\r\n\r\n}\r\n\r\n\r\n/**\r\n * Sets an offset in a larger frustum. This is useful for multi-window or\r\n * multi-monitor/multi-machine setups.\r\n *\r\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n * the monitors are in grid like this\r\n *\r\n *   +---+---+---+\r\n *   | A | B | C |\r\n *   +---+---+---+\r\n *   | D | E | F |\r\n *   +---+---+---+\r\n *\r\n * then for each monitor you would call it like this\r\n *\r\n *   var w = 1920;\r\n *   var h = 1080;\r\n *   var fullWidth = w * 3;\r\n *   var fullHeight = h * 2;\r\n *\r\n *   --A--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n *   --B--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n *   --C--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n *   --D--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n *   --E--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n *   --F--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n *\r\n *   Note there is no reason monitors have to be the same size or in a grid.\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\tthis.fullWidth = fullWidth;\r\n\tthis.fullHeight = fullHeight;\r\n\tthis.x = x;\r\n\tthis.y = y;\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tif ( this.fullWidth ) {\r\n\r\n\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\tvar top = Math.tan( THREE.Math.degToRad( this.fov * 0.5 ) ) * this.near;\r\n\t\tvar bottom = - top;\r\n\t\tvar left = aspect * bottom;\r\n\t\tvar right = aspect * top;\r\n\t\tvar width = Math.abs( right - left );\r\n\t\tvar height = Math.abs( top - bottom );\r\n\r\n\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\tthis.near,\r\n\t\t\tthis.far,\r\n\t\t\tthis.filmOffset,\r\n\t\t\tthis.filmSize\r\n\t\t);\r\n\r\n\t} else {\r\n\r\n\t\tthis.projectionMatrix.makePerspective( this.fov, this.aspect, this.near, this.far, this.filmOffset, this.filmSize );\r\n\r\n\t}\r\n\r\n  \tvar viewportMatrix = new THREE.Matrix4();\r\n  \tviewportMatrix.elements[0] *= this.normalizedViewport.width;\r\n  \tviewportMatrix.elements[1] *= this.normalizedViewport.height;\r\n  \tviewportMatrix.elements[12] += this.normalizedViewport.x;\r\n  \tviewportMatrix.elements[13] += this.normalizedViewport.y;\r\n \tthis.projectionMatrix = viewportMatrix.multiply( this.projectionMatrix );\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.clone = function () {\r\n\r\n\tvar camera = new THREE.PerspectiveCamera();\r\n\r\n\tTHREE.Camera.prototype.clone.call( this, camera );\r\n\r\n\tcamera.fov = this.fov;\r\n\tcamera.aspect = this.aspect;\r\n\tcamera.near = this.near;\r\n\tcamera.far = this.far;\r\n\tcamera.filmSize = this.filmSize;\r\n\tcamera.filmOffset = this.filmOffset;\r\n\r\n\treturn camera;\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n \r\nTHREE.Light = function ( color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n};\r\n\r\nTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.Light.prototype.clone = function ( light ) {\r\n\r\n\tif ( light === undefined ) light = new THREE.Light();\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, light );\r\n\r\n\tlight.color.copy( this.color );\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AmbientLight = function ( color ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n};\r\n\r\nTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\n\r\nTHREE.AmbientLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.AmbientLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n/**\r\n * @author bhouston / http://clara.io/\r\n * @author MPanknin / http://www.redplant.de/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.AreaLight = function ( color, intensity, distance, decayExponent, physicalFalloff ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.decayExponent = ( decayExponent !== undefined ) ? decayExponent : 0;\t// for physically correct lights, should be 2.\r\n\tthis.physicalFalloff = ( physicalFalloff !== undefined ) ? physicalFalloff : false;\r\n\r\n\tthis.width = 1.0;\r\n\tthis.height = 1.0;\r\n\r\n\t// TODO: implement shadow maps.  -bhouston, Oct 15, 2014\r\n};\r\n\r\nTHREE.AreaLight.prototype = Object.create( THREE.Light.prototype );\r\n\r\nTHREE.AreaLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.AreaLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\tlight.target = this.target.clone();\r\n\t\r\n\tlight.intensity = this.intensity;\r\n\tlight.distance = this.distance;\r\n\tlight.decayExponent = this.decayExponent;\r\n\tlight.physicalFalloff = this.physicalFalloff;\r\n\r\n\tlight.width = this.width;\r\n\tlight.height = this.height;\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DirectionalLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\t//\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\r\n\tthis.shadowCameraLeft = -500;\r\n\tthis.shadowCameraRight = 500;\r\n\tthis.shadowCameraTop = 500;\r\n\tthis.shadowCameraBottom = -500;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\t//\r\n\r\n\tthis.shadowCascade = false;\r\n\r\n\tthis.shadowCascadeOffset = new THREE.Vector3( 0, 0, -1000 );\r\n\tthis.shadowCascadeCount = 2;\r\n\r\n\tthis.shadowCascadeBias = [ 0, 0, 0 ];\r\n\tthis.shadowCascadeWidth = [ 512, 512, 512 ];\r\n\tthis.shadowCascadeHeight = [ 512, 512, 512 ];\r\n\r\n\tthis.shadowCascadeNearZ = [ -1.000, 0.990, 0.998 ];\r\n\tthis.shadowCascadeFarZ  = [  0.990, 0.998, 1.000 ];\r\n\r\n\tthis.shadowCascadeArray = [];\r\n\r\n\t//\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\n\r\nTHREE.DirectionalLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.DirectionalLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\tlight.target = this.target.clone();\r\n\r\n\tlight.intensity = this.intensity;\r\n\r\n\tlight.castShadow = this.castShadow;\r\n\tlight.onlyShadow = this.onlyShadow;\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\r\n\tTHREE.Light.call( this, skyColor );\r\n\r\n\tthis.position.set( 0, 100, 0 );\r\n\r\n\tthis.groundColor = new THREE.Color( groundColor );\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\n\r\nTHREE.HemisphereLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.HemisphereLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\tlight.groundColor.copy( this.groundColor );\r\n\tlight.intensity = this.intensity;\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLight = function ( color, intensity, distance, decayExponent, physicalFalloff ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.decayExponent = ( decayExponent !== undefined ) ? decayExponent : 0;;\t// for physically correct lights, should be 2.\r\n\tthis.physicalFalloff = ( physicalFalloff !== undefined ) ? physicalFalloff : false;\r\n};\r\n\r\nTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\n\r\nTHREE.PointLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.PointLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\tlight.intensity = this.intensity;\r\n\tlight.distance = this.distance;\r\n\tlight.decayExponent = this.decayExponent;\r\n\tlight.physicalFalloff = this.physicalFalloff;\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decayExponent, physicalFalloff ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.decayExponent = ( decayExponent !== undefined ) ? decayExponent : 0;;\t// for physically correct lights, should be 2.\r\n\tthis.physicalFalloff = ( physicalFalloff !== undefined ) ? physicalFalloff : false;\r\n\r\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\t//\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\tthis.shadowCameraFov = 50;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\t//\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\n\r\nTHREE.SpotLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.SpotLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\tlight.target = this.target.clone();\r\n\r\n\tlight.intensity = this.intensity;\r\n\tlight.distance = this.distance;\r\n\tlight.angle = this.angle;\r\n\tlight.exponent = this.exponent;\r\n\tlight.decayExponent = this.decayExponent;\r\n\tlight.physicalFalloff = this.physicalFalloff;\r\n\r\n\tlight.castShadow = this.castShadow;\r\n\tlight.onlyShadow = this.onlyShadow;\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Loader = function ( showStatus ) {\r\n\r\n\tthis.showStatus = showStatus;\r\n\tthis.statusDomElement = showStatus ? THREE.Loader.prototype.addStatusElement() : null;\r\n\r\n\tthis.onLoadStart = function () {};\r\n\tthis.onLoadProgress = function () {};\r\n\tthis.onLoadComplete = function () {};\r\n\r\n};\r\n\r\nTHREE.Loader.prototype = {\r\n\r\n\tconstructor: THREE.Loader,\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\taddStatusElement: function () {\r\n\r\n\t\tvar e = document.createElement( \"div\" );\r\n\r\n\t\te.style.position = \"absolute\";\r\n\t\te.style.right = \"0px\";\r\n\t\te.style.top = \"0px\";\r\n\t\te.style.fontSize = \"0.8em\";\r\n\t\te.style.textAlign = \"left\";\r\n\t\te.style.background = \"rgba(0,0,0,0.25)\";\r\n\t\te.style.color = \"#fff\";\r\n\t\te.style.width = \"120px\";\r\n\t\te.style.padding = \"0.5em 0.5em 0.5em 0.5em\";\r\n\t\te.style.zIndex = 1000;\r\n\r\n\t\te.innerHTML = \"Loading ...\";\r\n\r\n\t\treturn e;\r\n\r\n\t},\r\n\r\n\tupdateProgress: function ( progress ) {\r\n\r\n\t\tvar message = \"Loaded \";\r\n\r\n\t\tif ( progress.total ) {\r\n\r\n\t\t\tmessage += ( 100 * progress.loaded / progress.total ).toFixed(0) + \"%\";\r\n\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmessage += ( progress.loaded / 1000 ).toFixed(2) + \" KB\";\r\n\r\n\t\t}\r\n\r\n\t\tthis.statusDomElement.innerHTML = message;\r\n\r\n\t},\r\n\r\n\textractUrlBase: function ( url ) {\r\n\r\n\t\tvar parts = url.split( '/' );\r\n\r\n\t\tif ( parts.length === 1 ) return './';\r\n\r\n\t\tparts.pop();\r\n\r\n\t\treturn parts.join( '/' ) + '/';\r\n\r\n\t},\r\n\r\n\tinitMaterials: function ( materials, texturePath ) {\r\n\r\n\t\tvar array = [];\r\n\r\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n\t\t\tarray[ i ] = THREE.Loader.prototype.createMaterial( materials[ i ], texturePath );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tneedsTangents: function ( materials ) {\r\n\r\n\t\tfor( var i = 0, il = materials.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar m = materials[ i ];\r\n\r\n\t\t\tif ( m instanceof THREE.ShaderMaterial ) return true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tcreateMaterial: function ( m, texturePath ) {\r\n\r\n\t\tvar _this = this;\r\n\r\n\t\tfunction is_pow2( n ) {\r\n\r\n\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\treturn Math.floor( l ) == l;\r\n\r\n\t\t}\r\n\r\n\t\tfunction nearest_pow2( n ) {\r\n\r\n\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\treturn Math.pow( 2, Math.round(  l ) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction load_image( where, url ) {\r\n\r\n\t\t\tvar image = new Image();\r\n\r\n\t\t\timage.onload = function () {\r\n\r\n\t\t\t\tif ( !is_pow2( this.width ) || !is_pow2( this.height ) ) {\r\n\r\n\t\t\t\t\tvar width = nearest_pow2( this.width );\r\n\t\t\t\t\tvar height = nearest_pow2( this.height );\r\n\r\n\t\t\t\t\twhere.image.width = width;\r\n\t\t\t\t\twhere.image.height = height;\r\n\t\t\t\t\twhere.image.getContext( '2d' ).drawImage( this, 0, 0, width, height );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\twhere.image = this;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhere.needsUpdate = true;\r\n\r\n\t\t\t};\r\n\r\n\t\t\tif ( _this.crossOrigin !== undefined ) image.crossOrigin = _this.crossOrigin;\r\n\t\t\timage.src = url;\r\n\r\n\t\t}\r\n\r\n\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\r\n\t\t\tvar isCompressed = /\\.dds$/i.test( sourceFile );\r\n\r\n\t\t\tvar fullPath = texturePath + sourceFile;\r\n\r\n\t\t\tif ( isCompressed ) {\r\n\r\n\t\t\t\tvar texture = THREE.ImageUtils.loadCompressedTexture( fullPath );\r\n\r\n\t\t\t\twhere[ name ] = texture;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar texture = document.createElement( 'canvas' );\r\n\r\n\t\t\t\twhere[ name ] = new THREE.Texture( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t\twhere[ name ].sourceFile = sourceFile;\r\n\r\n\t\t\tif( repeat ) {\r\n\r\n\t\t\t\twhere[ name ].repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\r\n\t\t\t\tif ( repeat[ 0 ] !== 1 ) where[ name ].wrapS = THREE.RepeatWrapping;\r\n\t\t\t\tif ( repeat[ 1 ] !== 1 ) where[ name ].wrapT = THREE.RepeatWrapping;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset ) {\r\n\r\n\t\t\t\twhere[ name ].offset.set( offset[ 0 ], offset[ 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( wrap ) {\r\n\r\n\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t\"repeat\": THREE.RepeatWrapping,\r\n\t\t\t\t\t\"mirror\": THREE.MirroredRepeatWrapping\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) where[ name ].wrapS = wrapMap[ wrap[ 0 ] ];\r\n\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) where[ name ].wrapT = wrapMap[ wrap[ 1 ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( anisotropy ) {\r\n\r\n\t\t\t\twhere[ name ].anisotropy = anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\tload_image( where[ name ], fullPath );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction rgb2hex( rgb ) {\r\n\r\n\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\r\n\t\t}\r\n\r\n\t\t// defaults\r\n\r\n\t\tvar mtype = \"MeshLambertMaterial\";\r\n\t\tvar mpars = { color: 0xeeeeee, opacity: 1.0, map: null, lightMap: null, normalMap: null, bumpMap: null, wireframe: false };\r\n\r\n\t\t// parameters from model file\r\n\r\n\t\tif ( m.shading ) {\r\n\r\n\t\t\tvar shading = m.shading.toLowerCase();\r\n\r\n\t\t\tif ( shading === \"phong\" ) mtype = \"MeshPhongMaterial\";\r\n\t\t\telse if ( shading === \"basic\" ) mtype = \"MeshBasicMaterial\";\r\n\t\t\telse if ( shading === \"physical\" ) mtype = \"MeshPhysicalMaterial\";\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\r\n\t\t\tmpars.blending = THREE[ m.blending ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.transparent !== undefined || m.opacity < 1.0 ) {\r\n\r\n\t\t\tmpars.transparent = m.transparent;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.depthTest !== undefined ) {\r\n\r\n\t\t\tmpars.depthTest = m.depthTest;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.depthWrite !== undefined ) {\r\n\r\n\t\t\tmpars.depthWrite = m.depthWrite;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.visible !== undefined ) {\r\n\r\n\t\t\tmpars.visible = m.visible;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.flipSided !== undefined ) {\r\n\r\n\t\t\tmpars.side = THREE.BackSide;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.doubleSided !== undefined ) {\r\n\r\n\t\t\tmpars.side = THREE.DoubleSide;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.wireframe !== undefined ) {\r\n\r\n\t\t\tmpars.wireframe = m.wireframe;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.vertexColors !== undefined ) {\r\n\r\n\t\t\tif ( m.vertexColors === \"face\" ) {\r\n\r\n\t\t\t\tmpars.vertexColors = THREE.FaceColors;\r\n\r\n\t\t\t} else if ( m.vertexColors ) {\r\n\r\n\t\t\t\tmpars.vertexColors = THREE.VertexColors;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// colors\r\n\r\n\t\tif ( m.colorDiffuse ) {\r\n\r\n\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\r\n\r\n\t\t} else if ( m.DbgColor ) {\r\n\r\n\t\t\tmpars.color = m.DbgColor;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.colorSpecular ) {\r\n\r\n\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.colorAmbient ) {\r\n\r\n\t\t\tmpars.ambient = rgb2hex( m.colorAmbient );\r\n\r\n\t\t}\r\n\r\n\t\t// modifiers\r\n\r\n\t\tif ( m.transparency ) {\r\n\r\n\t\t\tmpars.opacity = m.transparency;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.specularCoef ) {\r\n\r\n\t\t\tmpars.shininess = m.specularCoef;\r\n\r\n\t\t}\r\n\r\n\t\t// textures\r\n\r\n\t\tif ( m.mapDiffuse && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, \"map\", m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapLight && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, \"lightMap\", m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapBump && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, \"bumpMap\", m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapNormal && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, \"normalMap\", m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapSpecular && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, \"specularMap\", m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( m.mapBumpScale ) {\r\n\r\n\t\t\tmpars.bumpScale = m.mapBumpScale;\r\n\r\n\t\t}\r\n\r\n\t\t// special case for normal mapped material\r\n\r\n\t\tif ( m.mapNormal ) {\r\n\r\n\t\t\tvar shader = THREE.ShaderLib[ \"normalmap\" ];\r\n\t\t\tvar uniforms = THREE.UniformsUtils.clone( shader.uniforms );\r\n\r\n\t\t\tuniforms[ \"tNormal\" ].value = mpars.normalMap;\r\n\r\n\t\t\tif ( m.mapNormalFactor ) {\r\n\r\n\t\t\t\tuniforms[ \"uNormalScale\" ].value.set( m.mapNormalFactor, m.mapNormalFactor );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( mpars.map ) {\r\n\r\n\t\t\t\tuniforms[ \"tDiffuse\" ].value = mpars.map;\r\n\t\t\t\tuniforms[ \"enableDiffuse\" ].value = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( mpars.specularMap ) {\r\n\r\n\t\t\t\tuniforms[ \"tSpecular\" ].value = mpars.specularMap;\r\n\t\t\t\tuniforms[ \"enableSpecular\" ].value = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( mpars.lightMap ) {\r\n\r\n\t\t\t\tuniforms[ \"tAO\" ].value = mpars.lightMap;\r\n\t\t\t\tuniforms[ \"enableAO\" ].value = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// for the moment don't handle displacement texture\r\n\r\n\t\t\tuniforms[ \"diffuse\" ].value.setHex( mpars.color );\r\n\t\t\tuniforms[ \"specular\" ].value.setHex( mpars.specular );\r\n\t\t\tuniforms[ \"ambient\" ].value.setHex( mpars.ambient );\r\n\r\n\t\t\tuniforms[ \"shininess\" ].value = mpars.shininess;\r\n\r\n\t\t\tif ( mpars.opacity !== undefined ) {\r\n\r\n\t\t\t\tuniforms[ \"opacity\" ].value = mpars.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar parameters = { fragmentShader: shader.fragmentShader, vertexShader: shader.vertexShader, uniforms: uniforms, lights: true, fog: true };\r\n\t\t\tvar material = new THREE.ShaderMaterial( parameters );\r\n\r\n\t\t\tif ( mpars.transparent ) {\r\n\r\n\t\t\t\tmaterial.transparent = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar material = new THREE[ mtype ]( mpars );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.XHRLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.XHRLoader.prototype = {\r\n\r\n\tconstructor: THREE.XHRLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar request = new XMLHttpRequest();\r\n\r\n\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\t\tonLoad( event.target.responseText );\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( onError !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\t\tonError( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\r\n\t\trequest.open( 'GET', url, true );\r\n\t\trequest.send( null );\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ImageLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ImageLoader.prototype = {\r\n\r\n\tconstructor: THREE.ImageLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar image = document.createElement( 'img' );\r\n\r\n\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\t\t\tonLoad( this );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( onError !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\t\tonError( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\timage.src = url;\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\treturn image;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.JSONLoader = function ( showStatus ) {\r\n\r\n\tTHREE.Loader.call( this, showStatus );\r\n\r\n\tthis.withCredentials = false;\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype = Object.create( THREE.Loader.prototype );\r\n\r\nTHREE.JSONLoader.prototype.load = function ( url, callback, texturePath ) {\r\n\r\n\tvar scope = this;\r\n\r\n\t// todo: unify load API to for easier SceneLoader use\r\n\r\n\ttexturePath = texturePath && ( typeof texturePath === \"string\" ) ? texturePath : this.extractUrlBase( url );\r\n\r\n\tthis.onLoadStart();\r\n\tthis.loadAjaxJSON( this, url, callback, texturePath );\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype.loadAjaxJSON = function ( context, url, callback, texturePath, callbackProgress ) {\r\n\r\n\tvar xhr = new XMLHttpRequest();\r\n\r\n\tvar length = 0;\r\n\r\n\txhr.onreadystatechange = function () {\r\n\r\n\t\tif ( xhr.readyState === xhr.DONE ) {\r\n\r\n\t\t\tif ( xhr.status === 200 || xhr.status === 0 ) {\r\n\r\n\t\t\t\tif ( xhr.responseText ) {\r\n\r\n\t\t\t\t\tvar json = JSON.parse( xhr.responseText );\r\n\r\n\t\t\t\t\tif ( json.metadata.type === 'scene' ) {\r\n\r\n\t\t\t\t\t\tTHREE.onerror( 'THREE.JSONLoader: \"' + url + '\" seems to be a Scene. Use THREE.SceneLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar result = context.parse( json, texturePath );\r\n\t\t\t\t\tcallback( result.geometry, result.materials );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tTHREE.onerror( 'THREE.JSONLoader: \"' + url + '\" seems to be unreachable or the file is empty.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// in context of more complex asset initialization\r\n\t\t\t\t// do not block on single failed file\r\n\t\t\t\t// maybe should go even one more level up\r\n\r\n\t\t\t\tcontext.onLoadComplete();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tTHREE.onerror( 'THREE.JSONLoader: Couldn\\'t load \"' + url + '\" (' + xhr.status + ')' );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( xhr.readyState === xhr.LOADING ) {\r\n\r\n\t\t\tif ( callbackProgress ) {\r\n\r\n\t\t\t\tif ( length === 0 ) {\r\n\r\n\t\t\t\t\tlength = xhr.getResponseHeader( 'Content-Length' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallbackProgress( { total: length, loaded: xhr.responseText.length } );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( xhr.readyState === xhr.HEADERS_RECEIVED ) {\r\n\r\n\t\t\tif ( callbackProgress !== undefined ) {\r\n\r\n\t\t\t\tlength = xhr.getResponseHeader( \"Content-Length\" );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\txhr.open( \"GET\", url, true );\r\n\txhr.withCredentials = this.withCredentials;\r\n\txhr.send( null );\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype.parse = function ( json, texturePath ) {\r\n\r\n\tvar scope = this,\r\n\tgeometry = new THREE.Geometry(),\r\n\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\r\n\tparseModel( scale );\r\n\r\n\tparseSkin();\r\n\tparseMorphing( scale );\r\n\r\n\tgeometry.computeCentroids();\r\n\tgeometry.computeFaceNormals();\r\n\tgeometry.computeBoundingSphere();\r\n\r\n\tfunction parseModel( scale ) {\r\n\r\n\t\tfunction isBitSet( value, position ) {\r\n\r\n\t\t\treturn value & ( 1 << position );\r\n\r\n\t\t}\r\n\r\n\t\tvar i, j, fi,\r\n\r\n\t\toffset, zLength,\r\n\r\n\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n\t\ttype,\r\n\t\tisQuad,\r\n\t\thasMaterial,\r\n\t\thasFaceVertexUv,\r\n\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\thasFaceColor, hasFaceVertexColor,\r\n\r\n\t\tvertex, face, faceA, faceB, color, hex, normal,\r\n\r\n\t\tuvLayer, uv, u, v,\r\n\r\n\t\tfaces = json.faces,\r\n\t\tvertices = json.vertices,\r\n\t\tnormals = json.normals,\r\n\t\tcolors = json.colors,\r\n\r\n\t\tnUvLayers = 0;\r\n\r\n\t\tif ( json.uvs !== undefined ) {\r\n\r\n\t\t\t// disregard empty arrays\r\n\r\n\t\t\tfor ( i = 0; i < json.uvs.length; i++ ) {\r\n\r\n\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( i = 0; i < nUvLayers; i++ ) {\r\n\r\n\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\toffset = 0;\r\n\t\tzLength = vertices.length;\r\n\r\n\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\tvertex = new THREE.Vector3();\r\n\r\n\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\r\n\t\t\tgeometry.vertices.push( vertex );\r\n\r\n\t\t}\r\n\r\n\t\toffset = 0;\r\n\t\tzLength = faces.length;\r\n\r\n\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\ttype = faces[ offset ++ ];\r\n\r\n\r\n\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\thasFaceColor\t    = isBitSet( type, 6 );\r\n\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\r\n\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n\t\t\tif ( isQuad ) {\r\n\r\n\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\toffset += 4;\r\n\r\n\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i++ ) {\r\n\r\n\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = []\r\n\r\n\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 4; i++ ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\tfaceB.color.setHex( hex );\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 4; i++ ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\tgeometry.faces.push( faceB );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\tface.c = faces[ offset ++ ];\r\n\r\n\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i++ ) {\r\n\r\n\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 3; i++ ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 3; i++ ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.faces.push( face );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction parseSkin() {\r\n\r\n\t\tif ( json.skinWeights ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += 2 ) {\r\n\r\n\t\t\t\tvar x = json.skinWeights[ i     ];\r\n\t\t\t\tvar y = json.skinWeights[ i + 1 ];\r\n\t\t\t\tvar z = 0;\r\n\t\t\t\tvar w = 0;\r\n\r\n\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.skinIndices ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += 2 ) {\r\n\r\n\t\t\t\tvar a = json.skinIndices[ i     ];\r\n\t\t\t\tvar b = json.skinIndices[ i + 1 ];\r\n\t\t\t\tvar c = 0;\r\n\t\t\t\tvar d = 0;\r\n\r\n\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.bones = json.bones;\r\n\r\n\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\r\n\t\t\t\tTHREE.onwarning( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// could change this to json.animations[0] or remove completely\r\n\t\t\r\n\t\tgeometry.animation = json.animation;\r\n\t\tgeometry.animations = json.animations;\r\n\r\n\t};\r\n\r\n\tfunction parseMorphing( scale ) {\r\n\r\n\t\tif ( json.morphTargets !== undefined ) {\r\n\r\n\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\r\n\r\n\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\r\n\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\tsrcVertices = json.morphTargets [ i ].vertices;\r\n\r\n\t\t\t\tfor( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n\t\t\t\t\tdstVertices.push( vertex );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.morphColors !== undefined ) {\r\n\r\n\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\r\n\r\n\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i++ ) {\r\n\r\n\t\t\t\tgeometry.morphColors[ i ] = {};\r\n\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n\t\t\t\tgeometry.morphColors[ i ].colors = [];\r\n\r\n\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\r\n\t\t\t\tsrcColors = json.morphColors [ i ].colors;\r\n\r\n\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\r\n\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\r\n\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n\t\t\t\t\tdstColors.push( color );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tif ( json.materials === undefined ) {\r\n\r\n\t\treturn { geometry: geometry };\r\n\r\n\t} else {\r\n\r\n\t\tvar materials = this.initMaterials( json.materials, texturePath );\r\n\r\n\t\tif ( this.needsTangents( materials ) ) {\r\n\r\n\t\t\tgeometry.computeTangents();\r\n\r\n\t\t}\r\n\r\n\t\treturn { geometry: geometry, materials: materials };\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar loaded = 0, total = 0;\r\n\r\n\tthis.onLoad = onLoad;\r\n\tthis.onProgress = onProgress;\r\n\tthis.onError = onError;\r\n\r\n\tthis.itemStart = function ( url ) {\r\n\r\n\t\ttotal ++;\r\n\r\n\t};\r\n\r\n\tthis.itemEnd = function ( url ) {\r\n\r\n\t\tloaded ++;\r\n\r\n\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\tscope.onProgress( url, loaded, total );\r\n\r\n\t\t}\r\n\r\n\t\tif ( loaded === total && scope.onLoad !== undefined ) {\r\n\r\n\t\t\tscope.onLoad();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometryLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.BufferGeometryLoader.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometryLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader();\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tvar attributes = json.attributes;\r\n\t\tvar offsets = json.offsets;\r\n\t\tvar boundingSphere = json.boundingSphere;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\tgeometry.attributes[ key ] = {\r\n\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\tarray: new self[ attribute.type ]( attribute.array )\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( offsets !== undefined ) {\r\n\r\n\t\t\tgeometry.offsets = JSON.parse( JSON.stringify( offsets ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\tgeometry.boundingSphere = new THREE.Sphere(\r\n\t\t\t\tnew THREE.Vector3().fromArray( boundingSphere.center !== undefined ? boundingSphere.center : [ 0, 0, 0 ] ),\r\n\t\t\t\tboundingSphere.radius\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Geometry2Loader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.Geometry2Loader.prototype = {\r\n\r\n\tconstructor: THREE.Geometry2Loader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader();\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar geometry = new THREE.Geometry2( json.vertices.length / 3 );\r\n\r\n\t\tvar attributes = [ 'vertices', 'normals', 'uvs' ];\r\n\t\tvar boundingSphere = json.boundingSphere;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\t\t\tgeometry[ attribute ].set( json[ attribute ] );\r\n\r\n\t\t}\r\n\r\n\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\tgeometry.boundingSphere = new THREE.Sphere(\r\n\t\t\t\tnew THREE.Vector3().fromArray( boundingSphere.center !== undefined ? boundingSphere.center : [ 0, 0, 0 ] ),\r\n\t\t\t\tboundingSphere.radius\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MaterialLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.MaterialLoader.prototype = {\r\n\r\n\tconstructor: THREE.MaterialLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader();\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar material = new THREE[ json.type ];\r\n\r\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\tif ( json.ambient !== undefined ) material.ambient.setHex( json.ambient );\r\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\tif ( json.falloff !== undefined ) material.falloff = json.falloff;\r\n\t\tif ( json.falloffColor !== undefined ) material.falloffColor.setHex( json.falloffColor );\r\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\r\n\t\tif ( json.metallic !== undefined ) material.metallic = json.metallic;\r\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\r\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\r\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\r\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\r\n\t\tif ( json.translucency !== undefined ) material.translucency.setHex( json.translucency );\r\n\t\tif ( json.translucencyNormalAlpha !== undefined ) material.translucencyNormalAlpha = json.translucencyNormalAlpha;\r\n\t\tif ( json.translucencyNormalPower !== undefined ) material.translucencyNormalPower = json.translucencyNormalPower;\r\n\t\tif ( json.translucencyViewAlpha !== undefined ) material.translucencyViewAlpha = json.translucencyViewAlpha;\r\n\t\tif ( json.translucencyViewPower !== undefined ) material.translucencyViewPower = json.translucencyViewPower;\r\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\r\n\t\tif ( json.materials !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ObjectLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ObjectLoader.prototype = {\r\n\r\n\tconstructor: THREE.ObjectLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\t\tvar materials = this.parseMaterials( json.materials );\r\n\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n\t\treturn object;\r\n\r\n\t},\r\n\r\n\tparseGeometries: function ( json ) {\r\n\r\n\t\tvar geometries = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\tvar geometry2Loader = new THREE.Geometry2Loader();\r\n\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar geometry;\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\tcase 'PlaneGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.PlaneGeometry(\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\tcase 'CubeGeometry': // DEPRECATED\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CylinderGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.openEnded\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data.data );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Geometry2':\r\n\r\n\t\t\t\t\t\tgeometry = geometry2Loader.parse( data.data );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Geometry':\r\n\r\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data ).geometry;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\r\n\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometries;\r\n\r\n\t},\r\n\r\n\tparseMaterials: function ( json ) {\r\n\r\n\t\tvar materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar loader = new THREE.MaterialLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\t\t\t\tvar material = loader.parse( data );\r\n\r\n\t\t\t\tmaterial.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) material.name = data.name;\r\n\r\n\t\t\t\tmaterials[ data.uuid ] = material;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t},\r\n\r\n\tparseObject: function () {\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( data, geometries, materials ) {\r\n\r\n\t\t\tvar object;\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'Scene':\r\n\r\n\t\t\t\t\tobject = new THREE.Scene();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay, data.physicalFalloff );\r\n\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay, data.physicalFalloff );\r\n\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AreaLight':\r\n\r\n\t\t\t\t\tobject = new THREE.AreaLight( data.color, data.intensity, data.distance, data.decayExponent, data.decay, data.physicalFalloff );\r\n\t\t\t\t\tobject.width = data.width || 1;\r\n\t\t\t\t\tobject.height = data.height || 1;\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\t\tvar geometry = geometries[ data.geometry ];\r\n\t\t\t\t\tvar material = materials[ data.material ];\r\n\r\n\t\t\t\t\tif ( geometry === undefined ) {\r\n\r\n\t\t\t\t\t\tTHREE.onerror( 'THREE.ObjectLoader: Undefined geometry ' + data.geometry );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( material === undefined ) {\r\n\r\n\t\t\t\t\t\tTHREE.onerror( 'THREE.ObjectLoader: Undefined material ' + data.material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobject = new THREE.Mesh( geometry, material );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\t\tvar material = materials[ data.material ];\r\n\r\n\t\t\t\t\tif ( material === undefined ) {\r\n\r\n\t\t\t\t\t\tTHREE.onerror( 'THREE.ObjectLoader: Undefined material ' + data.material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobject = new THREE.Sprite( material );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tobject = new THREE.Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\r\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\r\n\t\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\t\tfor ( var child in data.children ) {\r\n\r\n\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t}()\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SceneLoader = function () {\r\n\r\n\tthis.onLoadStart = function () {};\r\n\tthis.onLoadProgress = function() {};\r\n\tthis.onLoadComplete = function () {};\r\n\r\n\tthis.callbackSync = function () {};\r\n\tthis.callbackProgress = function () {};\r\n\r\n\tthis.geometryHandlers = {};\r\n\tthis.hierarchyHandlers = {};\r\n\r\n\tthis.addGeometryHandler( \"ascii\", THREE.JSONLoader );\r\n\r\n};\r\n\r\nTHREE.SceneLoader.prototype = {\r\n\r\n\tconstructor: THREE.SceneLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tscope.parse( JSON.parse( text ), onLoad, url );\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\taddGeometryHandler: function ( typeID, loaderClass ) {\r\n\r\n\t\tthis.geometryHandlers[ typeID ] = { \"loaderClass\": loaderClass };\r\n\r\n\t},\r\n\r\n\taddHierarchyHandler: function ( typeID, loaderClass ) {\r\n\r\n\t\tthis.hierarchyHandlers[ typeID ] = { \"loaderClass\": loaderClass };\r\n\r\n\t},\r\n\r\n\tparse: function ( json, callbackFinished, url ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar urlBase = THREE.Loader.prototype.extractUrlBase( url );\r\n\r\n\t\tvar geometry, material, camera, fog,\r\n\t\t\ttexture, images, color,\r\n\t\t\tlight, hex, intensity,\r\n\t\t\tcounter_models, counter_textures,\r\n\t\t\ttotal_models, total_textures,\r\n\t\t\tresult;\r\n\r\n\t\tvar target_array = [];\r\n\r\n\t\tvar data = json;\r\n\r\n\t\t// async geometry loaders\r\n\r\n\t\tfor ( var typeID in this.geometryHandlers ) {\r\n\r\n\t\t\tvar loaderClass = this.geometryHandlers[ typeID ][ \"loaderClass\" ];\r\n\t\t\tthis.geometryHandlers[ typeID ][ \"loaderObject\" ] = new loaderClass();\r\n\r\n\t\t}\r\n\r\n\t\t// async hierachy loaders\r\n\r\n\t\tfor ( var typeID in this.hierarchyHandlers ) {\r\n\r\n\t\t\tvar loaderClass = this.hierarchyHandlers[ typeID ][ \"loaderClass\" ];\r\n\t\t\tthis.hierarchyHandlers[ typeID ][ \"loaderObject\" ] = new loaderClass();\r\n\r\n\t\t}\r\n\r\n\t\tcounter_models = 0;\r\n\t\tcounter_textures = 0;\r\n\r\n\t\tresult = {\r\n\r\n\t\t\tscene: new THREE.Scene(),\r\n\t\t\tgeometries: {},\r\n\t\t\tface_materials: {},\r\n\t\t\tmaterials: {},\r\n\t\t\ttextures: {},\r\n\t\t\tobjects: {},\r\n\t\t\tcameras: {},\r\n\t\t\tlights: {},\r\n\t\t\tfogs: {},\r\n\t\t\tempties: {},\r\n\t\t\tgroups: {}\r\n\r\n\t\t};\r\n\r\n\t\tif ( data.transform ) {\r\n\r\n\t\t\tvar position = data.transform.position,\r\n\t\t\t\trotation = data.transform.rotation,\r\n\t\t\t\tscale = data.transform.scale;\r\n\r\n\t\t\tif ( position ) {\r\n\r\n\t\t\t\tresult.scene.position.fromArray( position );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( rotation ) {\r\n\r\n\t\t\t\tresult.scene.rotation.fromArray( rotation );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( scale ) {\r\n\r\n\t\t\t\tresult.scene.scale.fromArray( scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( position || rotation || scale ) {\r\n\r\n\t\t\t\tresult.scene.updateMatrix();\r\n\t\t\t\tresult.scene.updateMatrixWorld();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction get_url( source_url, url_type ) {\r\n\r\n\t\t\tif ( url_type == \"relativeToHTML\" ) {\r\n\r\n\t\t\t\treturn source_url;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn urlBase + source_url;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\t// toplevel loader function, delegates to handle_children\r\n\r\n\t\tfunction handle_objects() {\r\n\r\n\t\t\thandle_children( result.scene, data.objects );\r\n\r\n\t\t}\r\n\r\n\t\t// handle all the children from the loaded json and attach them to given parent\r\n\r\n\t\tfunction handle_children( parent, children ) {\r\n\r\n\t\t\tvar mat, dst, pos, rot, scl, quat;\r\n\r\n\t\t\tfor ( var objID in children ) {\r\n\r\n\t\t\t\t// check by id if child has already been handled,\r\n\t\t\t\t// if not, create new object\r\n\r\n\t\t\t\tvar object = result.objects[ objID ];\r\n\t\t\t\tvar objJSON = children[ objID ];\r\n\r\n\t\t\t\tif ( object === undefined ) {\r\n\r\n\t\t\t\t\t// meshes\r\n\r\n\t\t\t\t\tif ( objJSON.type && ( objJSON.type in scope.hierarchyHandlers ) ) {\r\n\r\n\t\t\t\t\t\tif ( objJSON.loading === undefined ) {\r\n\r\n\t\t\t\t\t\t\tvar reservedTypes = {\r\n\t\t\t\t\t\t\t\t\"type\": 1, \"url\": 1, \"material\": 1,\r\n\t\t\t\t\t\t\t\t\"position\": 1, \"rotation\": 1, \"scale\" : 1,\r\n\t\t\t\t\t\t\t\t\"visible\": 1, \"children\": 1, \"userData\": 1,\r\n\t\t\t\t\t\t\t\t\"skin\": 1, \"morph\": 1, \"mirroredLoop\": 1, \"duration\": 1\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\tvar loaderParameters = {};\r\n\r\n\t\t\t\t\t\t\tfor ( var parType in objJSON ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( ! ( parType in reservedTypes ) ) {\r\n\r\n\t\t\t\t\t\t\t\t\tloaderParameters[ parType ] = objJSON[ parType ];\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tmaterial = result.materials[ objJSON.material ];\r\n\r\n\t\t\t\t\t\t\tobjJSON.loading = true;\r\n\r\n\t\t\t\t\t\t\tvar loader = scope.hierarchyHandlers[ objJSON.type ][ \"loaderObject\" ];\r\n\r\n\t\t\t\t\t\t\t// ColladaLoader\r\n\r\n\t\t\t\t\t\t\tif ( loader.options ) {\r\n\r\n\t\t\t\t\t\t\t\tloader.load( get_url( objJSON.url, data.urlBaseType ), create_callback_hierachy( objID, parent, material, objJSON ) );\r\n\r\n\t\t\t\t\t\t\t// UTF8Loader\r\n\t\t\t\t\t\t\t// OBJLoader\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tloader.load( get_url( objJSON.url, data.urlBaseType ), create_callback_hierachy( objID, parent, material, objJSON ), loaderParameters );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( objJSON.geometry !== undefined ) {\r\n\r\n\t\t\t\t\t\tgeometry = result.geometries[ objJSON.geometry ];\r\n\r\n\t\t\t\t\t\t// geometry already loaded\r\n\r\n\t\t\t\t\t\tif ( geometry ) {\r\n\r\n\t\t\t\t\t\t\tvar needsTangents = false;\r\n\r\n\t\t\t\t\t\t\tmaterial = result.materials[ objJSON.material ];\r\n\t\t\t\t\t\t\tneedsTangents = material instanceof THREE.ShaderMaterial;\r\n\r\n\t\t\t\t\t\t\tpos = objJSON.position;\r\n\t\t\t\t\t\t\trot = objJSON.rotation;\r\n\t\t\t\t\t\t\tscl = objJSON.scale;\r\n\t\t\t\t\t\t\tmat = objJSON.matrix;\r\n\t\t\t\t\t\t\tquat = objJSON.quaternion;\r\n\r\n\t\t\t\t\t\t\t// use materials from the model file\r\n\t\t\t\t\t\t\t// if there is no material specified in the object\r\n\r\n\t\t\t\t\t\t\tif ( ! objJSON.material ) {\r\n\r\n\t\t\t\t\t\t\t\tmaterial = new THREE.MeshFaceMaterial( result.face_materials[ objJSON.geometry ] );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// use materials from the model file\r\n\t\t\t\t\t\t\t// if there is just empty face material\r\n\t\t\t\t\t\t\t// (must create new material as each model has its own face material)\r\n\r\n\t\t\t\t\t\t\tif ( ( material instanceof THREE.MeshFaceMaterial ) && material.materials.length === 0 ) {\r\n\r\n\t\t\t\t\t\t\t\tmaterial = new THREE.MeshFaceMaterial( result.face_materials[ objJSON.geometry ] );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\t\t\t\t\t\tfor ( var i = 0; i < material.materials.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\t\tneedsTangents = needsTangents || ( material.materials[ i ] instanceof THREE.ShaderMaterial );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( needsTangents ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.computeTangents();\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( objJSON.skin ) {\r\n\r\n\t\t\t\t\t\t\t\tobject = new THREE.SkinnedMesh( geometry, material );\r\n\r\n\t\t\t\t\t\t\t} else if ( objJSON.morph ) {\r\n\r\n\t\t\t\t\t\t\t\tobject = new THREE.MorphAnimMesh( geometry, material );\r\n\r\n\t\t\t\t\t\t\t\tif ( objJSON.duration !== undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\tobject.duration = objJSON.duration;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif ( objJSON.time !== undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\tobject.time = objJSON.time;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif ( objJSON.mirroredLoop !== undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\tobject.mirroredLoop = objJSON.mirroredLoop;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\t\t\t\t\t\t\tgeometry.computeMorphNormals();\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tobject = new THREE.Mesh( geometry, material );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tobject.name = objID;\r\n\r\n\t\t\t\t\t\t\tif ( mat ) {\r\n\r\n\t\t\t\t\t\t\t\tobject.matrixAutoUpdate = false;\r\n\t\t\t\t\t\t\t\tobject.matrix.set(\r\n\t\t\t\t\t\t\t\t\tmat[0],  mat[1],  mat[2],  mat[3],\r\n\t\t\t\t\t\t\t\t\tmat[4],  mat[5],  mat[6],  mat[7],\r\n\t\t\t\t\t\t\t\t\tmat[8],  mat[9],  mat[10], mat[11],\r\n\t\t\t\t\t\t\t\t\tmat[12], mat[13], mat[14], mat[15]\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tobject.position.fromArray( pos );\r\n\r\n\t\t\t\t\t\t\t\tif ( quat ) {\r\n\r\n\t\t\t\t\t\t\t\t\tobject.quaternion.fromArray( quat );\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tobject.rotation.fromArray( rot );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tobject.scale.fromArray( scl );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tobject.visible = objJSON.visible;\r\n\t\t\t\t\t\t\tobject.castShadow = objJSON.castShadow;\r\n\t\t\t\t\t\t\tobject.receiveShadow = objJSON.receiveShadow;\r\n\r\n\t\t\t\t\t\t\tparent.add( object );\r\n\r\n\t\t\t\t\t\t\tresult.objects[ objID ] = object;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// lights\r\n\r\n\t\t\t\t\t} else if ( objJSON.type === \"AmbientLight\" || objJSON.type === \"PointLight\" ||\r\n\t\t\t\t\t\tobjJSON.type === \"DirectionalLight\" || objJSON.type === \"SpotLight\" ||\r\n\t\t\t\t\t\tobjJSON.type === \"HemisphereLight\" || objJSON.type === \"AreaLight\" ) {\r\n\r\n\t\t\t\t\t\tvar color = objJSON.color;\r\n\t\t\t\t\t\tvar intensity = objJSON.intensity;\r\n\t\t\t\t\t\tvar distance = objJSON.distance;\r\n\t\t\t\t\t\tvar position = objJSON.position;\r\n\t\t\t\t\t\tvar rotation = objJSON.rotation;\r\n\r\n\t\t\t\t\t\tswitch ( objJSON.type ) {\r\n\r\n\t\t\t\t\t\t\tcase 'AmbientLight':\r\n\t\t\t\t\t\t\t\tlight = new THREE.AmbientLight( color );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'PointLight':\r\n\t\t\t\t\t\t\t\tlight = new THREE.PointLight( color, intensity, distance );\r\n\t\t\t\t\t\t\t\tlight.position.fromArray( position );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'DirectionalLight':\r\n\t\t\t\t\t\t\t\tlight = new THREE.DirectionalLight( color, intensity );\r\n\t\t\t\t\t\t\t\tlight.position.fromArray( objJSON.direction );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'SpotLight':\r\n\t\t\t\t\t\t\t\tlight = new THREE.SpotLight( color, intensity, distance, 1 );\r\n\t\t\t\t\t\t\t\tlight.angle = objJSON.angle;\r\n\t\t\t\t\t\t\t\tlight.position.fromArray( position );\r\n\t\t\t\t\t\t\t\tlight.target.set( position[ 0 ], position[ 1 ] - distance, position[ 2 ] );\r\n\t\t\t\t\t\t\t\tlight.target.applyEuler( new THREE.Euler( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ], 'XYZ' ) );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'HemisphereLight':\r\n\t\t\t\t\t\t\t\tlight = new THREE.DirectionalLight( color, intensity, distance );\r\n\t\t\t\t\t\t\t\tlight.target.set( position[ 0 ], position[ 1 ] - distance, position[ 2 ] );\r\n\t\t\t\t\t\t\t\tlight.target.applyEuler( new THREE.Euler( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ], 'XYZ' ) );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'AreaLight':\r\n\t\t\t\t\t\t\t\tlight = new THREE.AreaLight(color, intensity);\r\n\t\t\t\t\t\t\t\tlight.position.fromArray( position );\r\n\t\t\t\t\t\t\t\tlight.width = objJSON.size;\r\n\t\t\t\t\t\t\t\tlight.height = objJSON.size_y;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tparent.add( light );\r\n\r\n\t\t\t\t\t\tlight.name = objID;\r\n\t\t\t\t\t\tresult.lights[ objID ] = light;\r\n\t\t\t\t\t\tresult.objects[ objID ] = light;\r\n\r\n\t\t\t\t\t// cameras\r\n\r\n\t\t\t\t\t} else if ( objJSON.type === \"PerspectiveCamera\" || objJSON.type === \"OrthographicCamera\" ) {\r\n\r\n\t\t\t\t\t\tpos = objJSON.position;\r\n\t\t\t\t\t\trot = objJSON.rotation;\r\n\t\t\t\t\t\tquat = objJSON.quaternion;\r\n\r\n\t\t\t\t\t\tif ( objJSON.type === \"PerspectiveCamera\" ) {\r\n\r\n\t\t\t\t\t\t\tcamera = new THREE.PerspectiveCamera( objJSON.fov, objJSON.aspect, objJSON.near, objJSON.far );\r\n\r\n\t\t\t\t\t\t} else if ( objJSON.type === \"OrthographicCamera\" ) {\r\n\r\n\t\t\t\t\t\t\tcamera = new THREE.OrthographicCamera( objJSON.left, objJSON.right, objJSON.top, objJSON.bottom, objJSON.near, objJSON.far );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcamera.name = objID;\r\n\t\t\t\t\t\tcamera.position.fromArray( pos );\r\n\r\n\t\t\t\t\t\tif ( quat !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tcamera.quaternion.fromArray( quat );\r\n\r\n\t\t\t\t\t\t} else if ( rot !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tcamera.rotation.fromArray( rot );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tparent.add( camera );\r\n\r\n\t\t\t\t\t\tresult.cameras[ objID ] = camera;\r\n\t\t\t\t\t\tresult.objects[ objID ] = camera;\r\n\r\n\t\t\t\t\t// pure Object3D\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpos = objJSON.position;\r\n\t\t\t\t\t\trot = objJSON.rotation;\r\n\t\t\t\t\t\tscl = objJSON.scale;\r\n\t\t\t\t\t\tquat = objJSON.quaternion;\r\n\r\n\t\t\t\t\t\tobject = new THREE.Object3D();\r\n\t\t\t\t\t\tobject.name = objID;\r\n\t\t\t\t\t\tobject.position.fromArray( pos );\r\n\r\n\t\t\t\t\t\tif ( quat ) {\r\n\r\n\t\t\t\t\t\t\tobject.quaternion.fromArray( quat );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tobject.rotation.fromArray( rot );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tobject.scale.fromArray( scl );\r\n\t\t\t\t\t\tobject.visible = ( objJSON.visible !== undefined ) ? objJSON.visible : false;\r\n\r\n\t\t\t\t\t\tparent.add( object );\r\n\r\n\t\t\t\t\t\tresult.objects[ objID ] = object;\r\n\t\t\t\t\t\tresult.empties[ objID ] = object;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( object ) {\r\n\r\n\t\t\t\t\t\tif ( objJSON.userData !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tfor ( var key in objJSON.userData ) {\r\n\r\n\t\t\t\t\t\t\t\tvar value = objJSON.userData[ key ];\r\n\t\t\t\t\t\t\t\tobject.userData[ key ] = value;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( objJSON.groups !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0; i < objJSON.groups.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar groupID = objJSON.groups[ i ];\r\n\r\n\t\t\t\t\t\t\t\tif ( result.groups[ groupID ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\tresult.groups[ groupID ] = [];\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tresult.groups[ groupID ].push( objID );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( object !== undefined && objJSON.children !== undefined ) {\r\n\r\n\t\t\t\t\thandle_children( object, objJSON.children );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction handle_mesh( geo, mat, id ) {\r\n\r\n\t\t\tresult.geometries[ id ] = geo;\r\n\t\t\tresult.face_materials[ id ] = mat;\r\n\t\t\thandle_objects();\r\n\r\n\t\t};\r\n\r\n\t\tfunction handle_hierarchy( node, id, parent, material, obj ) {\r\n\r\n\t\t\tvar p = obj.position;\r\n\t\t\tvar r = obj.rotation;\r\n\t\t\tvar q = obj.quaternion;\r\n\t\t\tvar s = obj.scale;\r\n\r\n\t\t\tnode.position.fromArray( p );\r\n\r\n\t\t\tif ( q ) {\r\n\r\n\t\t\t\tnode.quaternion.fromArray( q );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode.rotation.fromArray( r );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnode.scale.fromArray( s );\r\n\r\n\t\t\t// override children materials\r\n\t\t\t// if object material was specified in JSON explicitly\r\n\r\n\t\t\tif ( material ) {\r\n\r\n\t\t\t\tnode.traverse( function ( child ) {\r\n\r\n\t\t\t\t\tchild.material = material;\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// override children visibility\r\n\t\t\t// with root node visibility as specified in JSON\r\n\r\n\t\t\tvar visible = ( obj.visible !== undefined ) ? obj.visible : true;\r\n\r\n\t\t\tnode.traverse( function ( child ) {\r\n\r\n\t\t\t\tchild.visible = visible;\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tparent.add( node );\r\n\r\n\t\t\tnode.name = id;\r\n\r\n\t\t\tresult.objects[ id ] = node;\r\n\t\t\thandle_objects();\r\n\r\n\t\t};\r\n\r\n\t\tfunction create_callback_geometry( id ) {\r\n\r\n\t\t\treturn function ( geo, mat ) {\r\n\r\n\t\t\t\tgeo.name = id;\r\n\r\n\t\t\t\thandle_mesh( geo, mat, id );\r\n\r\n\t\t\t\tcounter_models -= 1;\r\n\r\n\t\t\t\tscope.onLoadComplete();\r\n\r\n\t\t\t\tasync_callback_gate();\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction create_callback_hierachy( id, parent, material, obj ) {\r\n\r\n\t\t\treturn function ( event ) {\r\n\r\n\t\t\t\tvar result;\r\n\r\n\t\t\t\t// loaders which use EventDispatcher\r\n\r\n\t\t\t\tif ( event.content ) {\r\n\r\n\t\t\t\t\tresult = event.content;\r\n\r\n\t\t\t\t// ColladaLoader\r\n\r\n\t\t\t\t} else if ( event.dae ) {\r\n\r\n\t\t\t\t\tresult = event.scene;\r\n\r\n\r\n\t\t\t\t// UTF8Loader\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tresult = event;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\thandle_hierarchy( result, id, parent, material, obj );\r\n\r\n\t\t\t\tcounter_models -= 1;\r\n\r\n\t\t\t\tscope.onLoadComplete();\r\n\r\n\t\t\t\tasync_callback_gate();\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction create_callback_embed( id ) {\r\n\r\n\t\t\treturn function ( geo, mat ) {\r\n\r\n\t\t\t\tgeo.name = id;\r\n\r\n\t\t\t\tresult.geometries[ id ] = geo;\r\n\t\t\t\tresult.face_materials[ id ] = mat;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction async_callback_gate() {\r\n\r\n\t\t\tvar progress = {\r\n\r\n\t\t\t\ttotalModels : total_models,\r\n\t\t\t\ttotalTextures : total_textures,\r\n\t\t\t\tloadedModels : total_models - counter_models,\r\n\t\t\t\tloadedTextures : total_textures - counter_textures\r\n\r\n\t\t\t};\r\n\r\n\t\t\tscope.callbackProgress( progress, result );\r\n\r\n\t\t\tscope.onLoadProgress();\r\n\r\n\t\t\tif ( counter_models === 0 && counter_textures === 0 ) {\r\n\r\n\t\t\t\tfinalize();\r\n\t\t\t\tcallbackFinished( result );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction finalize() {\r\n\r\n\t\t\t// take care of targets which could be asynchronously loaded objects\r\n\r\n\t\t\tfor ( var i = 0; i < target_array.length; i ++ ) {\r\n\r\n\t\t\t\tvar ta = target_array[ i ];\r\n\r\n\t\t\t\tvar target = result.objects[ ta.targetName ];\r\n\r\n\t\t\t\tif ( target ) {\r\n\r\n\t\t\t\t\tta.object.target = target;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// if there was error and target of specified name doesn't exist in the scene file\r\n\t\t\t\t\t// create instead dummy target\r\n\t\t\t\t\t// (target must be added to scene explicitly as parent is already added)\r\n\r\n\t\t\t\t\tta.object.target = new THREE.Object3D();\r\n\t\t\t\t\tresult.scene.add( ta.object.target );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tta.object.target.userData.targetInverse = ta.object;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tvar callbackTexture = function ( count ) {\r\n\r\n\t\t\tcounter_textures -= count;\r\n\t\t\tasync_callback_gate();\r\n\r\n\t\t\tscope.onLoadComplete();\r\n\r\n\t\t};\r\n\r\n\t\t// must use this instead of just directly calling callbackTexture\r\n\t\t// because of closure in the calling context loop\r\n\r\n\t\tvar generateTextureCallback = function ( count ) {\r\n\r\n\t\t\treturn function () {\r\n\r\n\t\t\t\tcallbackTexture( count );\r\n\r\n\t\t\t};\r\n\r\n\t\t};\r\n\r\n\t\tfunction traverse_json_hierarchy( objJSON, callback ) {\r\n\r\n\t\t\tcallback( objJSON );\r\n\r\n\t\t\tif ( objJSON.children !== undefined ) {\r\n\r\n\t\t\t\tfor ( var objChildID in objJSON.children ) {\r\n\r\n\t\t\t\t\ttraverse_json_hierarchy( objJSON.children[ objChildID ], callback );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\t// first go synchronous elements\r\n\r\n\t\t// fogs\r\n\r\n\t\tvar fogID, fogJSON;\r\n\r\n\t\tfor ( fogID in data.fogs ) {\r\n\r\n\t\t\tfogJSON = data.fogs[ fogID ];\r\n\r\n\t\t\tif ( fogJSON.type === \"linear\" ) {\r\n\r\n\t\t\t\tfog = new THREE.Fog( 0x000000, fogJSON.near, fogJSON.far );\r\n\r\n\t\t\t} else if ( fogJSON.type === \"exp2\" ) {\r\n\r\n\t\t\t\tfog = new THREE.FogExp2( 0x000000, fogJSON.density );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcolor = fogJSON.color;\r\n\t\t\tfog.color.setRGB( color[0], color[1], color[2] );\r\n\r\n\t\t\tresult.fogs[ fogID ] = fog;\r\n\r\n\t\t}\r\n\r\n\t\t// now come potentially asynchronous elements\r\n\r\n\t\t// geometries\r\n\r\n\t\t// count how many geometries will be loaded asynchronously\r\n\r\n\t\tvar geoID, geoJSON;\r\n\r\n\t\tfor ( geoID in data.geometries ) {\r\n\r\n\t\t\tgeoJSON = data.geometries[ geoID ];\r\n\r\n\t\t\tif ( geoJSON.type in this.geometryHandlers ) {\r\n\r\n\t\t\t\tcounter_models += 1;\r\n\r\n\t\t\t\tscope.onLoadStart();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// count how many hierarchies will be loaded asynchronously\r\n\r\n\t\tfor ( var objID in data.objects ) {\r\n\r\n\t\t\ttraverse_json_hierarchy( data.objects[ objID ], function ( objJSON ) {\r\n\r\n\t\t\t\tif ( objJSON.type && ( objJSON.type in scope.hierarchyHandlers ) ) {\r\n\r\n\t\t\t\t\tcounter_models += 1;\r\n\r\n\t\t\t\t\tscope.onLoadStart();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\ttotal_models = counter_models;\r\n\r\n\t\tfor ( geoID in data.geometries ) {\r\n\r\n\t\t\tgeoJSON = data.geometries[ geoID ];\r\n\r\n\t\t\tif ( geoJSON.type === \"cube\" ) {\r\n\r\n\t\t\t\tgeometry = new THREE.BoxGeometry( geoJSON.width, geoJSON.height, geoJSON.depth, geoJSON.widthSegments, geoJSON.heightSegments, geoJSON.depthSegments );\r\n\t\t\t\tgeometry.name = geoID;\r\n\t\t\t\tresult.geometries[ geoID ] = geometry;\r\n\r\n\t\t\t} else if ( geoJSON.type === \"plane\" ) {\r\n\r\n\t\t\t\tgeometry = new THREE.PlaneGeometry( geoJSON.width, geoJSON.height, geoJSON.widthSegments, geoJSON.heightSegments );\r\n\t\t\t\tgeometry.name = geoID;\r\n\t\t\t\tresult.geometries[ geoID ] = geometry;\r\n\r\n\t\t\t} else if ( geoJSON.type === \"sphere\" ) {\r\n\r\n\t\t\t\tgeometry = new THREE.SphereGeometry( geoJSON.radius, geoJSON.widthSegments, geoJSON.heightSegments );\r\n\t\t\t\tgeometry.name = geoID;\r\n\t\t\t\tresult.geometries[ geoID ] = geometry;\r\n\r\n\t\t\t} else if ( geoJSON.type === \"cylinder\" ) {\r\n\r\n\t\t\t\tgeometry = new THREE.CylinderGeometry( geoJSON.topRad, geoJSON.botRad, geoJSON.height, geoJSON.radSegs, geoJSON.heightSegs );\r\n\t\t\t\tgeometry.name = geoID;\r\n\t\t\t\tresult.geometries[ geoID ] = geometry;\r\n\r\n\t\t\t} else if ( geoJSON.type === \"torus\" ) {\r\n\r\n\t\t\t\tgeometry = new THREE.TorusGeometry( geoJSON.radius, geoJSON.tube, geoJSON.segmentsR, geoJSON.segmentsT );\r\n\t\t\t\tgeometry.name = geoID;\r\n\t\t\t\tresult.geometries[ geoID ] = geometry;\r\n\r\n\t\t\t} else if ( geoJSON.type === \"icosahedron\" ) {\r\n\r\n\t\t\t\tgeometry = new THREE.IcosahedronGeometry( geoJSON.radius, geoJSON.subdivisions );\r\n\t\t\t\tgeometry.name = geoID;\r\n\t\t\t\tresult.geometries[ geoID ] = geometry;\r\n\r\n\t\t\t} else if ( geoJSON.type in this.geometryHandlers ) {\r\n\r\n\t\t\t\tvar loaderParameters = {};\r\n\r\n\t\t\t\tfor ( var parType in geoJSON ) {\r\n\r\n\t\t\t\t\tif ( parType !== \"type\" && parType !== \"url\" ) {\r\n\r\n\t\t\t\t\t\tloaderParameters[ parType ] = geoJSON[ parType ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar loader = this.geometryHandlers[ geoJSON.type ][ \"loaderObject\" ];\r\n\t\t\t\tloader.load( get_url( geoJSON.url, data.urlBaseType ), create_callback_geometry( geoID ), loaderParameters );\r\n\r\n\t\t\t} else if ( geoJSON.type === \"embedded\" ) {\r\n\r\n\t\t\t\tvar modelJson = data.embeds[ geoJSON.id ],\r\n\t\t\t\t\ttexture_path = \"\";\r\n\r\n\t\t\t\t// pass metadata along to jsonLoader so it knows the format version\r\n\r\n\t\t\t\tmodelJson.metadata = data.metadata;\r\n\r\n\t\t\t\tif ( modelJson ) {\r\n\r\n\t\t\t\t\tvar jsonLoader = this.geometryHandlers[ \"ascii\" ][ \"loaderObject\" ];\r\n\t\t\t\t\tvar model = jsonLoader.parse( modelJson, texture_path );\r\n\t\t\t\t\tcreate_callback_embed( geoID )( model.geometry, model.materials );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// textures\r\n\r\n\t\t// count how many textures will be loaded asynchronously\r\n\r\n\t\tvar textureID, textureJSON;\r\n\r\n\t\tfor ( textureID in data.textures ) {\r\n\r\n\t\t\ttextureJSON = data.textures[ textureID ];\r\n\r\n\t\t\tif ( textureJSON.url instanceof Array ) {\r\n\r\n\t\t\t\tcounter_textures += textureJSON.url.length;\r\n\r\n\t\t\t\tfor( var n = 0; n < textureJSON.url.length; n ++ ) {\r\n\r\n\t\t\t\t\tscope.onLoadStart();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcounter_textures += 1;\r\n\r\n\t\t\t\tscope.onLoadStart();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\ttotal_textures = counter_textures;\r\n\r\n\t\tfor ( textureID in data.textures ) {\r\n\r\n\t\t\ttextureJSON = data.textures[ textureID ];\r\n\r\n\t\t\tif ( textureJSON.mapping !== undefined && THREE[ textureJSON.mapping ] !== undefined ) {\r\n\r\n\t\t\t\ttextureJSON.mapping = new THREE[ textureJSON.mapping ]();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( textureJSON.url instanceof Array ) {\r\n\r\n\t\t\t\tvar count = textureJSON.url.length;\r\n\t\t\t\tvar url_array = [];\r\n\r\n\t\t\t\tfor( var i = 0; i < count; i ++ ) {\r\n\r\n\t\t\t\t\turl_array[ i ] = get_url( textureJSON.url[ i ], data.urlBaseType );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar isCompressed = /\\.dds$/i.test( url_array[ 0 ] );\r\n\r\n\t\t\t\tif ( isCompressed ) {\r\n\r\n\t\t\t\t\ttexture = THREE.ImageUtils.loadCompressedTextureCube( url_array, textureJSON.mapping, generateTextureCallback( count ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture = THREE.ImageUtils.loadTextureCube( url_array, textureJSON.mapping, generateTextureCallback( count ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar isCompressed = /\\.dds$/i.test( textureJSON.url );\r\n\t\t\t\tvar fullUrl = get_url( textureJSON.url, data.urlBaseType );\r\n\t\t\t\tvar textureCallback = generateTextureCallback( 1 );\r\n\r\n\t\t\t\tif ( isCompressed ) {\r\n\r\n\t\t\t\t\ttexture = THREE.ImageUtils.loadCompressedTexture( fullUrl, textureJSON.mapping, textureCallback );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture = THREE.ImageUtils.loadTexture( fullUrl, textureJSON.mapping, textureCallback );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( THREE[ textureJSON.minFilter ] !== undefined )\r\n\t\t\t\t\ttexture.minFilter = THREE[ textureJSON.minFilter ];\r\n\r\n\t\t\t\tif ( THREE[ textureJSON.magFilter ] !== undefined )\r\n\t\t\t\t\ttexture.magFilter = THREE[ textureJSON.magFilter ];\r\n\r\n\t\t\t\tif ( textureJSON.anisotropy ) texture.anisotropy = textureJSON.anisotropy;\r\n\r\n\t\t\t\tif ( textureJSON.repeat ) {\r\n\r\n\t\t\t\t\ttexture.repeat.set( textureJSON.repeat[ 0 ], textureJSON.repeat[ 1 ] );\r\n\r\n\t\t\t\t\tif ( textureJSON.repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( textureJSON.repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( textureJSON.offset ) {\r\n\r\n\t\t\t\t\ttexture.offset.set( textureJSON.offset[ 0 ], textureJSON.offset[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// handle wrap after repeat so that default repeat can be overriden\r\n\r\n\t\t\t\tif ( textureJSON.wrap ) {\r\n\r\n\t\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t\t\"repeat\": THREE.RepeatWrapping,\r\n\t\t\t\t\t\t\"mirror\": THREE.MirroredRepeatWrapping\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( wrapMap[ textureJSON.wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ textureJSON.wrap[ 0 ] ];\r\n\t\t\t\t\tif ( wrapMap[ textureJSON.wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ textureJSON.wrap[ 1 ] ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tresult.textures[ textureID ] = texture;\r\n\r\n\t\t}\r\n\r\n\t\t// materials\r\n\r\n\t\tvar matID, matJSON;\r\n\t\tvar parID;\r\n\r\n\t\tfor ( matID in data.materials ) {\r\n\r\n\t\t\tmatJSON = data.materials[ matID ];\r\n\r\n\t\t\tfor ( parID in matJSON.parameters ) {\r\n\r\n\t\t\t\tif ( parID === \"envMap\" || parID === \"map\" || parID === \"lightMap\" || parID === \"bumpMap\" ) {\r\n\r\n\t\t\t\t\tmatJSON.parameters[ parID ] = result.textures[ matJSON.parameters[ parID ] ];\r\n\r\n\t\t\t\t} else if ( parID === \"shading\" ) {\r\n\r\n\t\t\t\t\tmatJSON.parameters[ parID ] = ( matJSON.parameters[ parID ] === \"flat\" ) ? THREE.FlatShading : THREE.SmoothShading;\r\n\r\n\t\t\t\t} else if ( parID === \"side\" ) {\r\n\r\n\t\t\t\t\tif ( matJSON.parameters[ parID ] == \"double\" ) {\r\n\r\n\t\t\t\t\t\tmatJSON.parameters[ parID ] = THREE.DoubleSide;\r\n\r\n\t\t\t\t\t} else if ( matJSON.parameters[ parID ] == \"back\" ) {\r\n\r\n\t\t\t\t\t\tmatJSON.parameters[ parID ] = THREE.BackSide;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tmatJSON.parameters[ parID ] = THREE.FrontSide;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( parID === \"blending\" ) {\r\n\r\n\t\t\t\t\tmatJSON.parameters[ parID ] = matJSON.parameters[ parID ] in THREE ? THREE[ matJSON.parameters[ parID ] ] : THREE.NormalBlending;\r\n\r\n\t\t\t\t} else if ( parID === \"combine\" ) {\r\n\r\n\t\t\t\t\tmatJSON.parameters[ parID ] = matJSON.parameters[ parID ] in THREE ? THREE[ matJSON.parameters[ parID ] ] : THREE.MultiplyOperation;\r\n\r\n\t\t\t\t} else if ( parID === \"vertexColors\" ) {\r\n\r\n\t\t\t\t\tif ( matJSON.parameters[ parID ] == \"face\" ) {\r\n\r\n\t\t\t\t\t\tmatJSON.parameters[ parID ] = THREE.FaceColors;\r\n\r\n\t\t\t\t\t// default to vertex colors if \"vertexColors\" is anything else face colors or 0 / null / false\r\n\r\n\t\t\t\t\t} else if ( matJSON.parameters[ parID ] ) {\r\n\r\n\t\t\t\t\t\tmatJSON.parameters[ parID ] = THREE.VertexColors;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( parID === \"wrapRGB\" ) {\r\n\r\n\t\t\t\t\tvar v3 = matJSON.parameters[ parID ];\r\n\t\t\t\t\tmatJSON.parameters[ parID ] = new THREE.Vector3( v3[ 0 ], v3[ 1 ], v3[ 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( matJSON.parameters.opacity !== undefined && matJSON.parameters.opacity < 1.0 ) {\r\n\r\n\t\t\t\tmatJSON.parameters.transparent = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( matJSON.parameters.normalMap ) {\r\n\r\n\t\t\t\tvar shader = THREE.ShaderLib[ \"normalmap\" ];\r\n\t\t\t\tvar uniforms = THREE.UniformsUtils.clone( shader.uniforms );\r\n\r\n\t\t\t\tvar diffuse = matJSON.parameters.color;\r\n\t\t\t\tvar specular = matJSON.parameters.specular;\r\n\t\t\t\tvar ambient = matJSON.parameters.ambient;\r\n\t\t\t\tvar shininess = matJSON.parameters.shininess;\r\n\r\n\t\t\t\tuniforms[ \"tNormal\" ].value = result.textures[ matJSON.parameters.normalMap ];\r\n\r\n\t\t\t\tif ( matJSON.parameters.normalScale ) {\r\n\r\n\t\t\t\t\tuniforms[ \"uNormalScale\" ].value.set( matJSON.parameters.normalScale[ 0 ], matJSON.parameters.normalScale[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( matJSON.parameters.map ) {\r\n\r\n\t\t\t\t\tuniforms[ \"tDiffuse\" ].value = matJSON.parameters.map;\r\n\t\t\t\t\tuniforms[ \"enableDiffuse\" ].value = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( matJSON.parameters.envMap ) {\r\n\r\n\t\t\t\t\tuniforms[ \"tCube\" ].value = matJSON.parameters.envMap;\r\n\t\t\t\t\tuniforms[ \"enableReflection\" ].value = true;\r\n\t\t\t\t\tuniforms[ \"reflectivity\" ].value = matJSON.parameters.reflectivity;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( matJSON.parameters.lightMap ) {\r\n\r\n\t\t\t\t\tuniforms[ \"tAO\" ].value = matJSON.parameters.lightMap;\r\n\t\t\t\t\tuniforms[ \"enableAO\" ].value = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( matJSON.parameters.specularMap ) {\r\n\r\n\t\t\t\t\tuniforms[ \"tSpecular\" ].value = result.textures[ matJSON.parameters.specularMap ];\r\n\t\t\t\t\tuniforms[ \"enableSpecular\" ].value = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( matJSON.parameters.displacementMap ) {\r\n\r\n\t\t\t\t\tuniforms[ \"tDisplacement\" ].value = result.textures[ matJSON.parameters.displacementMap ];\r\n\t\t\t\t\tuniforms[ \"enableDisplacement\" ].value = true;\r\n\r\n\t\t\t\t\tuniforms[ \"uDisplacementBias\" ].value = matJSON.parameters.displacementBias;\r\n\t\t\t\t\tuniforms[ \"uDisplacementScale\" ].value = matJSON.parameters.displacementScale;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms[ \"diffuse\" ].value.setHex( diffuse );\r\n\t\t\t\tuniforms[ \"specular\" ].value.setHex( specular );\r\n\t\t\t\tuniforms[ \"ambient\" ].value.setHex( ambient );\r\n\r\n\t\t\t\tuniforms[ \"shininess\" ].value = shininess;\r\n\r\n\t\t\t\tif ( matJSON.parameters.opacity ) {\r\n\r\n\t\t\t\t\tuniforms[ \"opacity\" ].value = matJSON.parameters.opacity;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar parameters = { fragmentShader: shader.fragmentShader, vertexShader: shader.vertexShader, uniforms: uniforms, lights: true, fog: true };\r\n\r\n\t\t\t\tmaterial = new THREE.ShaderMaterial( parameters );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterial = new THREE[ matJSON.type ]( matJSON.parameters );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.name = matID;\r\n\r\n\t\t\tresult.materials[ matID ] = material;\r\n\r\n\t\t}\r\n\r\n\t\t// second pass through all materials to initialize MeshFaceMaterials\r\n\t\t// that could be referring to other materials out of order\r\n\r\n\t\tfor ( matID in data.materials ) {\r\n\r\n\t\t\tmatJSON = data.materials[ matID ];\r\n\r\n\t\t\tif ( matJSON.parameters.materials ) {\r\n\r\n\t\t\t\tvar materialArray = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < matJSON.parameters.materials.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar label = matJSON.parameters.materials[ i ];\r\n\t\t\t\t\tmaterialArray.push( result.materials[ label ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult.materials[ matID ].materials = materialArray;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// objects ( synchronous init of procedural primitives )\r\n\r\n\t\thandle_objects();\r\n\r\n\t\t// defaults\r\n\r\n\t\tif ( result.cameras && data.defaults.camera ) {\r\n\r\n\t\t\tresult.currentCamera = result.cameras[ data.defaults.camera ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( result.fogs && data.defaults.fog ) {\r\n\r\n\t\t\tresult.scene.fog = result.fogs[ data.defaults.fog ];\r\n\r\n\t\t}\r\n\r\n\t\t// synchronous callback\r\n\r\n\t\tscope.callbackSync( result );\r\n\r\n\t\t// just in case there are no async elements\r\n\r\n\t\tasync_callback_gate();\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.TextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.TextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.TextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.ImageLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\tvar texture = new THREE.Texture( image );\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Material = function () {\r\n\r\n\tthis.id = THREE.MaterialIdCount ++;\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.side = THREE.FrontSide;\r\n\r\n\tthis.opacity = 1;\r\n\tthis.transparent = false;\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\tthis.blendEquation = THREE.AddEquation;\r\n\r\n\tthis.depthTest = true;\r\n\tthis.depthWrite = true;\r\n\r\n\tthis.polygonOffset = false;\r\n\tthis.polygonOffsetFactor = 0;\r\n\tthis.polygonOffsetUnits = 0;\r\n\r\n\tthis.alphaTest = 0;\r\n\r\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis.needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.Material.prototype = {\r\n\r\n\tconstructor: THREE.Material,\r\n\r\n\tsetValues: function ( values ) {\r\n\r\n\t\tif ( values === undefined ) return;\r\n\r\n\t\tfor ( var key in values ) {\r\n\r\n\t\t\tvar newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\tTHREE.onwarning( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( key in this ) {\r\n\r\n\t\t\t\tvar currentValue = this[ key ];\r\n\r\n\t\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\r\n\t\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\r\n\t\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t\t} else if ( key == 'overdraw') {\r\n\r\n\t\t\t\t\t// ensure overdraw is backwards-compatable with legacy boolean type\r\n\t\t\t\t\tthis[ key ] = Number(newValue);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function ( material ) {\r\n\r\n\t\tif ( material === undefined ) material = new THREE.Material();\r\n\r\n\t\tmaterial.name = this.name;\r\n\r\n\t\tmaterial.side = this.side;\r\n\r\n\t\tmaterial.opacity = this.opacity;\r\n\t\tmaterial.transparent = this.transparent;\r\n\r\n\t\tmaterial.blending = this.blending;\r\n\r\n\t\tmaterial.blendSrc = this.blendSrc;\r\n\t\tmaterial.blendDst = this.blendDst;\r\n\t\tmaterial.blendEquation = this.blendEquation;\r\n\r\n\t\tmaterial.depthTest = this.depthTest;\r\n\t\tmaterial.depthWrite = this.depthWrite;\r\n\r\n\t\tmaterial.polygonOffset = this.polygonOffset;\r\n\t\tmaterial.polygonOffsetFactor = this.polygonOffsetFactor;\r\n\t\tmaterial.polygonOffsetUnits = this.polygonOffsetUnits;\r\n\r\n\t\tmaterial.alphaTest = this.alphaTest;\r\n\r\n\t\tmaterial.overdraw = this.overdraw;\r\n\r\n\t\tmaterial.visible = this.visible;\r\n\r\n\t\treturn material;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\r\nTHREE.MaterialIdCount = 0;\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\",\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\tthis.linecap = 'round';\r\n\tthis.linejoin = 'round';\r\n\r\n\tthis.vertexColors = false;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.LineBasicMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.LineBasicMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\r\n\tmaterial.linewidth = this.linewidth;\r\n\tmaterial.linecap = this.linecap;\r\n\tmaterial.linejoin = this.linejoin;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>,\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineDashedMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.scale = 1;\r\n\tthis.dashSize = 3;\r\n\tthis.gapSize = 1;\r\n\r\n\tthis.vertexColors = false;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.LineDashedMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.LineDashedMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\r\n\tmaterial.linewidth = this.linewidth;\r\n\r\n\tmaterial.scale = this.scale;\r\n\tmaterial.dashSize = this.dashSize;\r\n\tmaterial.gapSize = this.gapSize;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.MeshBasicMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshBasicMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\r\n\tmaterial.map = this.map;\r\n\r\n\tmaterial.lightMap = this.lightMap;\r\n\r\n\tmaterial.specularMap = this.specularMap;\r\n\r\n\tmaterial.envMap = this.envMap;\r\n\tmaterial.combine = this.combine;\r\n\tmaterial.reflectivity = this.reflectivity;\r\n\tmaterial.refractionRatio = this.refractionRatio;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\tmaterial.shading = this.shading;\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\tmaterial.wireframeLinecap = this.wireframeLinecap;\r\n\tmaterial.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.skinning = this.skinning;\r\n\tmaterial.morphTargets = this.morphTargets;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  ambient: <hex>,\r\n *  emissive: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.ambient = new THREE.Color( 0xffffff );\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\r\n\tthis.wrapAround = false;\r\n\tthis.wrapRGB = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.MeshLambertMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshLambertMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\tmaterial.ambient.copy( this.ambient );\r\n\tmaterial.emissive.copy( this.emissive );\r\n\r\n\tmaterial.wrapAround = this.wrapAround;\r\n\tmaterial.wrapRGB.copy( this.wrapRGB );\r\n\r\n\tmaterial.map = this.map;\r\n\r\n\tmaterial.lightMap = this.lightMap;\r\n\r\n\tmaterial.specularMap = this.specularMap;\r\n\r\n\tmaterial.envMap = this.envMap;\r\n\tmaterial.combine = this.combine;\r\n\tmaterial.reflectivity = this.reflectivity;\r\n\tmaterial.refractionRatio = this.refractionRatio;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\tmaterial.shading = this.shading;\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\tmaterial.wireframeLinecap = this.wireframeLinecap;\r\n\tmaterial.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.skinning = this.skinning;\r\n\tmaterial.morphTargets = this.morphTargets;\r\n\tmaterial.morphNormals = this.morphNormals;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  ambient: <hex>,\r\n *  emissive: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.ambient = new THREE.Color( 0x000000 );\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.specular = new THREE.Color( 0xffffff );\r\n\tthis.shininess = 30;\r\n\r\n\tthis.wrapAround = false;\r\n\tthis.wrapRGB = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tthis.map = null;\r\n\tthis.opacityMap = null;\r\n\r\n\tthis.lightMap = null;\r\n\tthis.emissiveMap = null;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.MeshPhongMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshPhongMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\tmaterial.ambient.copy( this.ambient );\r\n\tmaterial.emissive.copy( this.emissive );\r\n\tmaterial.specular.copy( this.specular );\r\n\tmaterial.shininess = this.shininess;\r\n\r\n\tmaterial.wrapAround = this.wrapAround;\r\n\tmaterial.wrapRGB.copy( this.wrapRGB );\r\n\r\n\tmaterial.map = this.map;\r\n\tmaterial.opacityMap = this.opacityMap;\r\n\r\n\tmaterial.lightMap = this.lightMap;\r\n\tmaterial.emissiveMap = this.emissiveMap;\r\n\r\n\tmaterial.bumpMap = this.bumpMap;\r\n\tmaterial.bumpScale = this.bumpScale;\r\n\r\n\tmaterial.normalMap = this.normalMap;\r\n\tmaterial.normalScale.copy( this.normalScale );\r\n\r\n\tmaterial.specularMap = this.specularMap;\r\n\r\n\tmaterial.envMap = this.envMap;\r\n\tmaterial.combine = this.combine;\r\n\tmaterial.reflectivity = this.reflectivity;\r\n\tmaterial.refractionRatio = this.refractionRatio;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\tmaterial.shading = this.shading;\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\tmaterial.wireframeLinecap = this.wireframeLinecap;\r\n\tmaterial.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.skinning = this.skinning;\r\n\tmaterial.morphTargets = this.morphTargets;\r\n\tmaterial.morphNormals = this.morphNormals;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n/**\r\n *\r\n * @author bhouston / http://clara.io/\r\n *\r\n */\r\n\r\nTHREE.MeshPhysicalMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.map = null;\r\n\tthis.opacityMap = null;\r\n\tthis.fog = true;\r\n\r\n\tthis.falloff = false;\r\n\tthis.falloffColor = new THREE.Color( 0xffffff );\r\n\tthis.falloffMap = null;\r\n\tthis.falloffBlendParams = new THREE.Vector4( 1.0, 0.0, 0.0, 1.0 );\r\n\r\n\tthis.specular = new THREE.Color( 0xffffff );\r\n\tthis.specularMap = null;\r\n\r\n\tthis.roughness = 0.5;\r\n\tthis.roughnessMap = null;\r\n\r\n\tthis.metallic = 0.0;\r\n\tthis.metallicMap = null;\r\n\r\n\tthis.clearCoat = 0.0;\t// 0 means no clear coat, 1 means complete clear coat.\r\n\tthis.clearCoatRoughness = 0.2;\r\n\r\n\tthis.anisotropy = 0.0;\t// valid range is [-1,1].-1 is max vertical elongation, 0 is normal, +1 is max horizontal elongation\r\n\tthis.anisotropyMap = null;\t// only R is read and considered to be anisotropy.  To get negative values, use texture brightness, gain\r\n\tthis.anisotropyRotation = 0.0; // converted to radias via multiplication by 2*PI.  Thus the range [ 0 - 1 ] maps to radian [0, PI].\r\n\tthis.anisotropyRotationMap = null;  // only R is read and considered to be anisotropyRotation.\r\n\r\n\tthis.translucency = new THREE.Color( 0x000000 );\r\n\tthis.translucencyMap = null;\r\n\tthis.translucencyNormalAlpha = 0.75;\r\n\tthis.translucencyNormalPower = 1.0;\r\n\tthis.translucencyViewPower = 2.0;\r\n\tthis.translucencyViewAlpha = 0.75;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.emissiveMap = null; \t// given off arbitrarily by the object in all directions.  Basically GI.\r\n\r\n\tthis.ambient = new THREE.Color( 0x000000 );\r\n\tthis.lightMap = null; // incoming light\r\n\r\n\tthis.envMap = null;  // Incoming environmental light.\r\n\tthis.diffuseEnvMap = null;  // irradiance light.\r\n\r\n\tthis.combine = THREE.AddOperation;\r\n\r\n\tthis.shading = THREE.SmoothShading\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.blending = THREE.CustomBlending;\r\n\tthis.blendSrc = THREE.OneFactor;\t// output of shader must be premultiplied\r\n\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\tthis.blendEquation = THREE.AddEquation;\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n};\r\n\r\nTHREE.MeshPhysicalMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.MeshPhysicalMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshPhysicalMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\tmaterial.map = this.map;\r\n\tmaterial.opacityMap = this.opacityMap;\r\n\tmaterial.fog = this.fog;\r\n\r\n\tmaterial.falloff = this.falloff;\r\n\tmaterial.falloffColor.copy( this.falloffColor );\r\n\tmaterial.falloffMap = this.falloffMap;\r\n\tmaterial.falloffBlendParams.copy( this.falloffBlendParams );\r\n\r\n\tmaterial.specular.copy( this.specular );\r\n\tmaterial.specularMap = this.specularMap;\r\n\r\n\tmaterial.roughness = this.roughness;\r\n\tmaterial.roughnessMap = this.roughnessMap;\r\n\tmaterial.metallic = this.metallic;\r\n\tmaterial.metallicMap = this.metallicMap;\r\n\r\n\tmaterial.shading = this.shading;\r\n\r\n\tmaterial.translucency.copy( this.translucency );\r\n\tmaterial.translucencyMap = this.translucencyMap;\r\n\tmaterial.translucencyNormalAlpha = this.translucencyNormalAlpha;\r\n\tmaterial.translucencyNormalPower = this.translucencyNormalPower;\r\n\tmaterial.translucencyViewPower = this.translucencyViewPower;\r\n\tmaterial.translucencyViewAlpha = this.translucencyViewAlpha;\r\n\r\n\tmaterial.bumpMap = this.bumpMap;\r\n\tmaterial.bumpScale = this.bumpScale;\r\n\r\n\tmaterial.normalMap = this.normalMap;\r\n\tmaterial.normalScale.copy( this.normalScale );\r\n\r\n\tmaterial.emissive.copy( this.emissive );\r\n\tmaterial.emissiveMap = this.emissiveMap;\r\n\r\n\tmaterial.ambient.copy( this.ambient );\r\n\tmaterial.lightMap = this.lightMap;\r\n\r\n\tmaterial.envMap = this.envMap;\r\n\tmaterial.diffuseEnvMap = this.diffuseEnvMap;\r\n\r\n\tmaterial.combine = this.combine;\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\tmaterial.wireframeLinecap = this.wireframeLinecap;\r\n\tmaterial.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.skinning = this.skinning;\r\n\tmaterial.morphTargets = this.morphTargets;\r\n\tmaterial.morphNormals = this.morphNormals;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.MeshDepthMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshDepthMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  shading: THREE.FlatShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this, parameters );\r\n\r\n\tthis.shading = THREE.FlatShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.MeshNormalMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshNormalMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.shading = this.shading;\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MeshFaceMaterial = function ( materials ) {\r\n\r\n\tthis.materials = materials instanceof Array ? materials : [];\r\n\r\n};\r\n\r\nTHREE.MeshFaceMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshFaceMaterial();\r\n\r\n\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\r\n\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\r\n\t}\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  vertexColors: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.size = 1;\r\n\tthis.sizeAttenuation = true;\r\n\r\n\tthis.vertexColors = false;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleSystemMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.ParticleSystemMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.ParticleSystemMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\r\n\tmaterial.map = this.map;\r\n\r\n\tmaterial.size = this.size;\r\n\tmaterial.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.ParticleBasicMaterial = THREE.ParticleSystemMaterial;\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n *\r\n *  defines: { \"label\" : \"value\" },\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.ShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.shaderID = null;\r\n\tthis.fragmentShader = \"void main() {}\";\r\n\tthis.vertexShader = \"void main() {}\";\r\n\tthis.uniforms = {};\r\n\tthis.defines = {};\r\n\tthis.attributes = null;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false; // set to use scene fog\r\n\r\n\tthis.lights = false; // set to use scene lights\r\n\r\n\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\r\n\tthis.skinning = false; // set to use skinning attribute streams\r\n\r\n\tthis.morphTargets = false; // set to use morph targets\r\n\tthis.morphNormals = false; // set to use morph normals\r\n\r\n\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\tthis.defaultAttributeValues = {\r\n\t\t\"color\" : [ 1, 1, 1],\r\n\t\t\"uv\" : [ 0, 0 ],\r\n\t\t\"uv2\" : [ 0, 0 ]\r\n\t};\r\n\r\n\t// By default, bind position to attribute index 0. In WebGL, attribute 0\r\n\t// should always be used to avoid potentially expensive emulation.\r\n\tthis.index0AttributeName = \"position\";\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.ShaderMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.ShaderMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.fragmentShader = this.fragmentShader;\r\n\tmaterial.vertexShader = this.vertexShader;\r\n\r\n\tmaterial.uniforms = THREE.UniformsUtils.clone( this.uniforms );\r\n\r\n\tmaterial.attributes = this.attributes;\r\n\tmaterial.defines = this.defines;\r\n\r\n\tmaterial.shading = this.shading;\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\tmaterial.lights = this.lights;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.skinning = this.skinning;\r\n\r\n\tmaterial.morphTargets = this.morphTargets;\r\n\tmaterial.morphNormals = this.morphNormals;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2(),\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.SpriteMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\t// defaults\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\tthis.map = null;\r\n\r\n\tthis.rotation = 0;\r\n\r\n\tthis.fog = false;\r\n\r\n\t// set parameters\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.SpriteMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.SpriteMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\tmaterial.map = this.map;\r\n\r\n\tmaterial.rotation = this.rotation;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  program: <function>,\r\n *  opacity: <float>,\r\n *  blending: THREE.NormalBlending\r\n * }\r\n */\r\n\r\nTHREE.SpriteCanvasMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\tthis.program = function ( context, color ) {};\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.SpriteCanvasMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\r\nTHREE.SpriteCanvasMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.SpriteCanvasMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\tmaterial.program = this.program;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.ParticleCanvasMaterial = THREE.SpriteCanvasMaterial;\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n * @author bhouston / https://clara.io/\r\n */\r\n\r\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tthis.id = THREE.TextureIdCount ++;\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.image = image;\r\n\tthis.mipmaps = [];\r\n\r\n\tthis.mapping = mapping !== undefined ? mapping : new THREE.UVMapping();\r\n\r\n\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\t// formula used\r\n\t// x' = ( x - gainPivot ) * gain + brightness + gainPivot\r\n\t// for standard contrast adjust, set gain to contrast, and gainPivot to 0.5\r\n\tthis.invert = false;\r\n\tthis.gainPivot = 0.0;\r\n\tthis.gain = 1.0;\r\n\tthis.brightness = 0.0;\r\n\tthis.encoding = THREE.sRGB;\r\n\r\n\tthis.generateMipmaps = true;\r\n\tthis.premultiplyAlpha = false;\r\n\tthis.flipY = true;\r\n\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\tthis._needsUpdate = false;\r\n\tthis.onUpdate = null;\r\n\r\n};\r\n\r\nTHREE.Texture.prototype = {\r\n\r\n\tconstructor: THREE.Texture,\r\n\r\n\tget needsUpdate () {\r\n\r\n\t\treturn this._needsUpdate;\r\n\r\n\t},\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.update();\r\n\r\n\t\tthis._needsUpdate = value;\r\n\r\n\t},\r\n\r\n\tclone: function ( texture ) {\r\n\r\n\t\tif ( texture === undefined ) texture = new THREE.Texture();\r\n\r\n\t\ttexture.image = this.image;\r\n\t\ttexture.mipmaps = this.mipmaps.slice(0);\r\n\r\n\t\ttexture.mapping = this.mapping;\r\n\r\n\t\ttexture.wrapS = this.wrapS;\r\n\t\ttexture.wrapT = this.wrapT;\r\n\r\n\t\ttexture.magFilter = this.magFilter;\r\n\t\ttexture.minFilter = this.minFilter;\r\n\r\n\t\ttexture.anisotropy = this.anisotropy;\r\n\r\n\t\ttexture.format = this.format;\r\n\t\ttexture.type = this.type;\r\n\r\n\t\ttexture.offset.copy( this.offset );\r\n\t\ttexture.repeat.copy( this.repeat );\r\n\r\n\t\ttexture.invert = this.invert;\r\n\t\ttexture.gainPivot = this.gainPivot;\r\n\t\ttexture.gain = this.gain;\r\n\t\ttexture.brightness = this.brightness;\r\n\t\ttexture.encoding = this.encoding;\r\n\r\n\t\ttexture.generateMipmaps = this.generateMipmaps;\r\n\t\ttexture.premultiplyAlpha = this.premultiplyAlpha;\r\n\t\ttexture.flipY = this.flipY;\r\n\t\ttexture.unpackAlignment = this.unpackAlignment;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\r\nTHREE.TextureIdCount = 0;\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { width: width, height: height };\r\n\tthis.mipmaps = mipmaps;\r\n\r\n\tthis.generateMipmaps = false; // WebGL currently can't generate mipmaps for compressed textures, they must be embedded in DDS file\r\n\r\n};\r\n\r\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\r\nTHREE.CompressedTexture.prototype.clone = function () {\r\n\r\n\tvar texture = new THREE.CompressedTexture();\r\n\r\n\tTHREE.Texture.prototype.clone.call( this, texture );\r\n\r\n\treturn texture;\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { data: data, width: width, height: height };\r\n\r\n};\r\n\r\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\r\nTHREE.DataTexture.prototype.clone = function () {\r\n\r\n\tvar texture = new THREE.DataTexture();\r\n\r\n\tTHREE.Texture.prototype.clone.call( this, texture );\r\n\r\n\treturn texture;\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ParticleSystem = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.ParticleSystemMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.sortParticles = false;\r\n\tthis.frustumCulled = false;\r\n\r\n};\r\n\r\nTHREE.ParticleSystem.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.ParticleSystem.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.ParticleSystem( this.geometry, this.material );\r\n\r\n\tobject.sortParticles = this.sortParticles;\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Line = function ( geometry, material, type ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.type = ( type !== undefined ) ? type : THREE.LineStrip;\r\n\r\n};\r\n\r\nTHREE.LineStrip = 0;\r\nTHREE.LinePieces = 1;\r\n\r\nTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.Line.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.Line( this.geometry, this.material, this.type );\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\r\n\r\nTHREE.Mesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.updateMorphTargets();\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\r\n\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\r\n\t\tthis.morphTargetBase = -1;\r\n\t\tthis.morphTargetForcedOrder = [];\r\n\t\tthis.morphTargetInfluences = [];\r\n\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\r\n\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\r\n\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\r\n\t\treturn this.morphTargetDictionary[ name ];\r\n\r\n\t}\r\n\r\n\tTHREE.onwarning( \"THREE.Mesh.getMorphTargetIndexByName: morph target \" + name + \" does not exist. Returning 0.\" );\r\n\r\n\treturn 0;\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.Mesh( this.geometry, this.material );\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Bone = function( belongsToSkin ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.skin = belongsToSkin;\r\n\tthis.skinMatrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.Bone.prototype.update = function ( parentSkinMatrix, forceUpdate ) {\r\n\r\n\t// update local\r\n\r\n\tif ( this.matrixAutoUpdate ) {\r\n\r\n\t\tforceUpdate |= this.updateMatrix();\r\n\r\n\t}\r\n\r\n\t// update skin matrix\r\n\r\n\tif ( forceUpdate || this.matrixWorldNeedsUpdate ) {\r\n\r\n\t\tif( parentSkinMatrix ) {\r\n\r\n\t\t\tthis.skinMatrix.multiplyMatrices( parentSkinMatrix, this.matrix );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.skinMatrix.copy( this.matrix );\r\n\r\n\t\t}\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\tforceUpdate = true;\r\n\r\n\t}\r\n\r\n\t// update children\r\n\r\n\tvar child, i, l = this.children.length;\r\n\r\n\tfor ( i = 0; i < l; i ++ ) {\r\n\r\n\t\tthis.children[ i ].update( this.skinMatrix, forceUpdate );\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\t//\r\n\r\n\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\r\n\t// init bones\r\n\r\n\tthis.identityMatrix = new THREE.Matrix4();\r\n\r\n\tthis.bones = [];\r\n\tthis.boneMatrices = [];\r\n\r\n\tvar b, bone, gbone, p, q, s;\r\n\r\n\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n\t\tfor ( b = 0; b < this.geometry.bones.length; b ++ ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tp = gbone.pos;\r\n\t\t\tq = gbone.rotq;\r\n\t\t\ts = gbone.scl;\r\n\r\n\t\t\tbone = this.addBone();\r\n\r\n\t\t\tbone.name = gbone.name;\r\n\t\t\tbone.position.set( p[0], p[1], p[2] );\r\n\t\t\tbone.quaternion.set( q[0], q[1], q[2], q[3] );\r\n\t\t\r\n\t\t\tif ( s !== undefined ) {\r\n\r\n\t\t\t\tbone.scale.set( s[0], s[1], s[2] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbone.scale.set( 1, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( b = 0; b < this.bones.length; b ++ ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\t\t\tbone = this.bones[ b ];\r\n\r\n\t\t\tif ( gbone.parent === -1 ) {\r\n\r\n\t\t\t\tthis.add( bone );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.bones[ gbone.parent ].add( bone );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar nBones = this.bones.length;\r\n\r\n\t\tif ( this.useVertexTexture ) {\r\n\r\n\t\t\t// layout (1 matrix = 4 pixels)\r\n\t\t\t//\tRGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t\t//  with  8x8  pixel texture max   16 bones  (8 * 8  / 4)\r\n\t\t\t//  \t 16x16 pixel texture max   64 bones (16 * 16 / 4)\r\n\t\t\t//  \t 32x32 pixel texture max  256 bones (32 * 32 / 4)\r\n\t\t\t//  \t 64x64 pixel texture max 1024 bones (64 * 64 / 4)\r\n\r\n\t\t\tvar size;\r\n\r\n\t\t\tif ( nBones > 256 )\r\n\t\t\t\tsize = 64;\r\n\t\t\telse if ( nBones > 64 )\r\n\t\t\t\tsize = 32;\r\n\t\t\telse if ( nBones > 16 )\r\n\t\t\t\tsize = 16;\r\n\t\t\telse\r\n\t\t\t\tsize = 8;\r\n\r\n\t\t\tthis.boneTextureWidth = size;\r\n\t\t\tthis.boneTextureHeight = size;\r\n\r\n\t\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\t\t\tthis.boneTexture.minFilter = THREE.NearestFilter;\r\n\t\t\tthis.boneTexture.magFilter = THREE.NearestFilter;\r\n\t\t\tthis.boneTexture.generateMipmaps = false;\r\n\t\t\tthis.boneTexture.flipY = false;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.boneMatrices = new Float32Array( 16 * nBones );\r\n\r\n\t\t}\r\n\r\n\t\tthis.pose();\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\r\nTHREE.SkinnedMesh.prototype.addBone = function( bone ) {\r\n\r\n\tif ( bone === undefined ) {\r\n\r\n\t\tbone = new THREE.Bone( this );\r\n\r\n\t}\r\n\r\n\tthis.bones.push( bone );\r\n\r\n\treturn bone;\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function () {\r\n\r\n\tvar offsetMatrix = new THREE.Matrix4();\r\n\r\n\treturn function ( force ) {\r\n\r\n\t\tthis.matrixAutoUpdate && this.updateMatrix();\r\n\r\n\t\t// update matrixWorld\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\r\n\r\n\t\t\tif ( this.parent ) {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar child = this.children[ i ];\r\n\r\n\t\t\tif ( child instanceof THREE.Bone ) {\r\n\r\n\t\t\t\tchild.update( this.identityMatrix, false );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tchild.updateMatrixWorld( true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// make a snapshot of the bones' rest position\r\n\r\n\t\tif ( this.boneInverses == undefined ) {\r\n\r\n\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t\tvar inverse = new THREE.Matrix4();\r\n\r\n\t\t\t\tinverse.getInverse( this.bones[ b ].skinMatrix );\r\n\r\n\t\t\t\tthis.boneInverses.push( inverse );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// flatten bone matrices to array\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t// compute the offset between the current and the original transform;\r\n\r\n\t\t\t// TODO: we could get rid of this multiplication step if the skinMatrix\r\n\t\t\t// was already representing the offset; however, this requires some\r\n\t\t\t// major changes to the animation system\r\n\r\n\t\t\toffsetMatrix.multiplyMatrices( this.bones[ b ].skinMatrix, this.boneInverses[ b ] );\r\n\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.useVertexTexture ) {\r\n\r\n\t\t\tthis.boneTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.SkinnedMesh.prototype.pose = function () {\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\r\n\tthis.normalizeSkinWeights();\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\r\n\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\r\n\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\r\n\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\r\n\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\tsw.multiplyScalar( scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) {\r\n\r\n\t\tobject = new THREE.SkinnedMesh( this.geometry, this.material, this.useVertexTexture );\r\n\r\n\t}\r\n\r\n\tTHREE.Mesh.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\t// API\r\n\r\n\tthis.duration = 1000; // milliseconds\r\n\tthis.mirroredLoop = false;\r\n\tthis.time = 0;\r\n\r\n\t// internals\r\n\r\n\tthis.lastKeyframe = 0;\r\n\tthis.currentKeyframe = 0;\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n\tthis.setFrameRange( 0, this.geometry.morphTargets.length - 1 );\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\r\nTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\r\n\tthis.startKeyframe = start;\r\n\tthis.endKeyframe = end;\r\n\r\n\tthis.length = this.endKeyframe - this.startKeyframe + 1;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\r\n\tthis.direction = -1;\r\n\tthis.directionBackwards = true;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tif ( ! geometry.animations ) geometry.animations = {};\r\n\r\n\tvar firstAnimation, animations = geometry.animations;\r\n\r\n\tvar pattern = /([a-z]+)(\\d+)/;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar parts = morph.name.match( pattern );\r\n\r\n\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\tvar label = parts[ 1 ];\r\n\t\t\tvar num = parts[ 2 ];\r\n\r\n\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: -Infinity };\r\n\r\n\t\t\tvar animation = animations[ label ];\r\n\r\n\t\t\tif ( i < animation.start ) animation.start = i;\r\n\t\t\tif ( i > animation.end ) animation.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = label;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\r\n\tif ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\r\n\tthis.geometry.animations[ label ] = { start: start, end: end };\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\r\n\tvar animation = this.geometry.animations[ label ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tthis.setFrameRange( animation.start, animation.end );\r\n\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n\t\tthis.time = 0;\r\n\r\n\t} else {\r\n\r\n\t\tTHREE.onwarning( \"animation[\" + label + \"] undefined\" );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\r\n\tvar frameTime = this.duration / this.length;\r\n\r\n\tthis.time += this.direction * delta;\r\n\r\n\tif ( this.mirroredLoop ) {\r\n\r\n\t\tif ( this.time > this.duration || this.time < 0 ) {\r\n\r\n\t\t\tthis.direction *= -1;\r\n\r\n\t\t\tif ( this.time > this.duration ) {\r\n\r\n\t\t\t\tthis.time = this.duration;\r\n\t\t\t\tthis.directionBackwards = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.time < 0 ) {\r\n\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t\tthis.directionBackwards = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tthis.time = this.time % this.duration;\r\n\r\n\t\tif ( this.time < 0 ) this.time += this.duration;\r\n\r\n\t}\r\n\r\n\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\r\n\tif ( keyframe !== this.currentKeyframe ) {\r\n\r\n\t\tthis.morphTargetInfluences[ this.lastKeyframe ] = 0;\r\n\t\tthis.morphTargetInfluences[ this.currentKeyframe ] = 1;\r\n\r\n\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\tthis.lastKeyframe = this.currentKeyframe;\r\n\t\tthis.currentKeyframe = keyframe;\r\n\r\n\t}\r\n\r\n\tvar mix = ( this.time % frameTime ) / frameTime;\r\n\r\n\tif ( this.directionBackwards ) {\r\n\r\n\t\tmix = 1 - mix;\r\n\r\n\t}\r\n\r\n\tthis.morphTargetInfluences[ this.currentKeyframe ] = mix;\r\n\tthis.morphTargetInfluences[ this.lastKeyframe ] = 1 - mix;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.MorphAnimMesh( this.geometry, this.material );\r\n\r\n\tobject.duration = this.duration;\r\n\tobject.mirroredLoop = this.mirroredLoop;\r\n\tobject.time = this.time;\r\n\r\n\tobject.lastKeyframe = this.lastKeyframe;\r\n\tobject.currentKeyframe = this.currentKeyframe;\r\n\r\n\tobject.direction = this.direction;\r\n\tobject.directionBackwards = this.directionBackwards;\r\n\r\n\tTHREE.Mesh.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LOD = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.objects = [];\r\n\r\n};\r\n\r\n\r\nTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\r\n\tif ( distance === undefined ) distance = 0;\r\n\r\n\tdistance = Math.abs( distance );\r\n\r\n\tfor ( var l = 0; l < this.objects.length; l ++ ) {\r\n\r\n\t\tif ( distance < this.objects[ l ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.objects.splice( l, 0, { distance: distance, object: object } );\r\n\tthis.add( object );\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\r\n\tfor ( var i = 1, l = this.objects.length; i < l; i ++ ) {\r\n\r\n\t\tif ( distance < this.objects[ i ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn this.objects[ i - 1 ].object;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( camera ) {\r\n\r\n\t\tif ( this.objects.length > 1 ) {\r\n\r\n\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n\t\t\tthis.objects[ 0 ].object.visible = true;\r\n\r\n\t\t\tfor ( var i = 1, l = this.objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( distance >= this.objects[ i ].distance ) {\r\n\r\n\t\t\t\t\tthis.objects[ i - 1 ].object.visible = false;\r\n\t\t\t\t\tthis.objects[ i     ].object.visible = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor( ; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.objects[ i ].object.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.LOD.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.LOD();\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\tfor ( var i = 0, l = this.objects.length; i < l; i ++ ) {\r\n\t\tvar x = this.objects[i].object.clone();\r\n\t\tx.visible = i === 0;\r\n\t\tobject.addLevel( x, this.objects[i].distance );\r\n\t}\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Sprite = ( function () {\r\n\r\n\tvar geometry = new THREE.Geometry2( 3 );\r\n\tgeometry.vertices.set( [ - 0.5, - 0.5, 0, 0.5, - 0.5, 0, 0.5, 0.5, 0 ] );\r\n\r\n\treturn function ( material ) {\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\n/*\r\n * Custom update matrix\r\n */\r\n\r\nTHREE.Sprite.prototype.updateMatrix = function () {\r\n\r\n\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.Sprite.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.Sprite( this.material );\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.Particle = THREE.Sprite;\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Scene = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.fog = null;\r\n\tthis.overrideMaterial = null;\r\n\r\n\tthis.autoUpdate = true; // checked by the renderer\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.__lights = [];\r\n\r\n\tthis.__objectsAdded = [];\r\n\tthis.__objectsRemoved = [];\r\n\r\n};\r\n\r\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.Scene.prototype.__addObject = function ( object ) {\r\n\r\n\tif ( object instanceof THREE.Light ) {\r\n\r\n\t\tif ( this.__lights.indexOf( object ) === - 1 ) {\r\n\r\n\t\t\tthis.__lights.push( object );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.target && object.target.parent === undefined ) {\r\n\r\n\t\t\tthis.add( object.target );\r\n\r\n\t\t}\r\n\r\n\t} else if ( !( object instanceof THREE.Camera || object instanceof THREE.Bone ) ) {\r\n\r\n\t\tthis.__objectsAdded.push( object );\r\n\r\n\t\t// check if previously removed\r\n\r\n\t\tvar i = this.__objectsRemoved.indexOf( object );\r\n\r\n\t\tif ( i !== -1 ) {\r\n\r\n\t\t\tthis.__objectsRemoved.splice( i, 1 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.dispatchEvent( { type: 'objectAdded', object: object } );\r\n\tobject.dispatchEvent( { type: 'addedToScene', scene: this } );\r\n\r\n\tfor ( var c = 0; c < object.children.length; c ++ ) {\r\n\r\n\t\tthis.__addObject( object.children[ c ] );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Scene.prototype.__removeObject = function ( object ) {\r\n\r\n\tif ( object instanceof THREE.Light ) {\r\n\r\n\t\tvar i = this.__lights.indexOf( object );\r\n\r\n\t\tif ( i !== -1 ) {\r\n\r\n\t\t\tthis.__lights.splice( i, 1 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.shadowCascadeArray ) {\r\n\r\n\t\t\tfor ( var x = 0; x < object.shadowCascadeArray.length; x ++ ) {\r\n\r\n\t\t\t\tthis.__removeObject( object.shadowCascadeArray[ x ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else if ( !( object instanceof THREE.Camera ) ) {\r\n\r\n\t\tthis.__objectsRemoved.push( object );\r\n\r\n\t\t// check if previously added\r\n\r\n\t\tvar i = this.__objectsAdded.indexOf( object );\r\n\r\n\t\tif ( i !== -1 ) {\r\n\r\n\t\t\tthis.__objectsAdded.splice( i, 1 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.dispatchEvent( { type: 'objectRemoved', object: object } );\r\n\tobject.dispatchEvent( { type: 'removedFromScene', scene: this } );\r\n\r\n\tfor ( var c = 0; c < object.children.length; c ++ ) {\r\n\r\n\t\tthis.__removeObject( object.children[ c ] );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Scene.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.Scene();\r\n\r\n\tTHREE.Object3D.prototype.clone.call(this, object);\r\n\r\n\tif ( this.fog !== null ) object.fog = this.fog.clone();\r\n\tif ( this.overrideMaterial !== null ) object.overrideMaterial = this.overrideMaterial.clone();\r\n\r\n\tobject.autoUpdate = this.autoUpdate;\r\n\tobject.matrixAutoUpdate = this.matrixAutoUpdate;\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Fog = function ( color, near, far ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 1;\r\n\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n};\r\n\r\nTHREE.Fog.prototype.clone = function () {\r\n\r\n\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.FogExp2 = function ( color, density ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n};\r\n\r\nTHREE.FogExp2.prototype.clone = function () {\r\n\r\n\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CanvasRenderer = function ( parameters ) {\r\n\r\n\tconsole.log( 'THREE.CanvasRenderer', THREE.REVISION );\r\n\r\n\tvar smoothstep = THREE.Math.smoothstep;\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar _this = this,\r\n\t_renderData, _elements, _lights,\r\n\t_projector = new THREE.Projector(),\r\n\r\n\t_canvas = parameters.canvas !== undefined\r\n\t\t\t? parameters.canvas\r\n\t\t\t: document.createElement( 'canvas' ),\r\n\r\n\t_canvasWidth = _canvas.width,\r\n\t_canvasHeight = _canvas.height,\r\n\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 ),\r\n\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 ),\r\n\t\r\n\t_context = _canvas.getContext( '2d', {\r\n\t\talpha: parameters.alpha === true\r\n\t} ),\r\n\r\n\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t_clearAlpha = 0,\r\n\r\n\t_contextGlobalAlpha = 1,\r\n\t_contextGlobalCompositeOperation = 0,\r\n\t_contextStrokeStyle = null,\r\n\t_contextFillStyle = null,\r\n\t_contextLineWidth = null,\r\n\t_contextLineCap = null,\r\n\t_contextLineJoin = null,\r\n\t_contextDashSize = null,\r\n\t_contextGapSize = 0,\r\n\r\n\t_camera,\r\n\r\n\t_v1, _v2, _v3, _v4,\r\n\t_v5 = new THREE.RenderableVertex(),\r\n\t_v6 = new THREE.RenderableVertex(),\r\n\r\n\t_v1x, _v1y, _v2x, _v2y, _v3x, _v3y,\r\n\t_v4x, _v4y, _v5x, _v5y, _v6x, _v6y,\r\n\r\n\t_color = new THREE.Color(),\r\n\t_color1 = new THREE.Color(),\r\n\t_color2 = new THREE.Color(),\r\n\t_color3 = new THREE.Color(),\r\n\t_color4 = new THREE.Color(),\r\n\r\n\t_diffuseColor = new THREE.Color(),\r\n\t_emissiveColor = new THREE.Color(),\r\n\r\n\t_lightColor = new THREE.Color(),\r\n\r\n\t_patterns = {},\r\n\r\n\t_near, _far,\r\n\r\n\t_image, _uvs,\r\n\t_uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y,\r\n\r\n\t_clipBox = new THREE.Box2(),\r\n\t_clearBox = new THREE.Box2(),\r\n\t_elemBox = new THREE.Box2(),\r\n\r\n\t_ambientLight = new THREE.Color(),\r\n\t_directionalLights = new THREE.Color(),\r\n\t_pointLights = new THREE.Color(),\r\n\r\n\t_vector3 = new THREE.Vector3(), // Needed for PointLight\r\n\t_normal = new THREE.Vector3(),\r\n\t_normalViewMatrix = new THREE.Matrix3(),\r\n\r\n\t_pixelMap, _pixelMapContext, _pixelMapImage, _pixelMapData,\r\n\t_gradientMap, _gradientMapContext, _gradientMapQuality = 16;\r\n\r\n\t_pixelMap = document.createElement( 'canvas' );\r\n\t_pixelMap.width = _pixelMap.height = 2;\r\n\r\n\t_pixelMapContext = _pixelMap.getContext( '2d' );\r\n\t_pixelMapContext.fillStyle = 'rgba(0,0,0,1)';\r\n\t_pixelMapContext.fillRect( 0, 0, 2, 2 );\r\n\r\n\t_pixelMapImage = _pixelMapContext.getImageData( 0, 0, 2, 2 );\r\n\t_pixelMapData = _pixelMapImage.data;\r\n\r\n\t_gradientMap = document.createElement( 'canvas' );\r\n\t_gradientMap.width = _gradientMap.height = _gradientMapQuality;\r\n\r\n\t_gradientMapContext = _gradientMap.getContext( '2d' );\r\n\t_gradientMapContext.translate( - _gradientMapQuality / 2, - _gradientMapQuality / 2 );\r\n\t_gradientMapContext.scale( _gradientMapQuality, _gradientMapQuality );\r\n\r\n\t_gradientMapQuality --; // Fix UVs\r\n\r\n\t// dash+gap fallbacks for Firefox and everything else\r\n\r\n\tif ( _context.setLineDash === undefined ) {\r\n\r\n\t\tif ( _context.mozDash !== undefined ) {\r\n\r\n\t\t\t_context.setLineDash = function ( values ) {\r\n\r\n\t\t\t\t_context.mozDash = values[ 0 ] !== null ? values : null;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_context.setLineDash = function () {}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.domElement = _canvas;\r\n\r\n\tthis.devicePixelRatio = parameters.devicePixelRatio !== undefined\r\n\t\t\t\t? parameters.devicePixelRatio\r\n\t\t\t\t: self.devicePixelRatio !== undefined\r\n\t\t\t\t\t? self.devicePixelRatio\r\n\t\t\t\t\t: 1;\r\n\r\n\tthis.autoClear = true;\r\n\tthis.sortObjects = true;\r\n\tthis.sortElements = true;\r\n\r\n\tthis.info = {\r\n\r\n\t\trender: {\r\n\r\n\t\t\tvertices: 0,\r\n\t\t\tfaces: 0\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// WebGLRenderer compatibility\r\n\r\n\tthis.supportsVertexTextures = function () {};\r\n\tthis.setFaceCulling = function () {};\r\n\r\n\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t_canvasWidth = width * this.devicePixelRatio;\r\n\t\t_canvasHeight = height * this.devicePixelRatio;\r\n\r\n\t\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 );\r\n\t\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 );\r\n\r\n\t\t_canvas.width = _canvasWidth;\r\n\t\t_canvas.height = _canvasHeight;\r\n\r\n\t\tif ( this.devicePixelRatio !== 1 && updateStyle !== false ) {\r\n\r\n\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t}\r\n\r\n\t\t_clipBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf ),\r\n\t\t_clipBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\r\n\r\n\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\r\n\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\r\n\r\n\t\t_contextGlobalAlpha = 1;\r\n\t\t_contextGlobalCompositeOperation = 0;\r\n\t\t_contextStrokeStyle = null;\r\n\t\t_contextFillStyle = null;\r\n\t\t_contextLineWidth = null;\r\n\t\t_contextLineCap = null;\r\n\t\t_contextLineJoin = null;\r\n\r\n\t};\r\n\r\n\tthis.setClearColor = function ( color, alpha ) {\r\n\r\n\t\t_clearColor.set( color );\r\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\r\n\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\r\n\r\n\t};\r\n\r\n\tthis.setClearColorHex = function ( hex, alpha ) {\r\n\r\n\t\tTHREE.onwarning( 'DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.' );\r\n\t\tthis.setClearColor( hex, alpha );\r\n\r\n\t};\r\n\r\n\tthis.getMaxAnisotropy = function () {\r\n\r\n\t\treturn 0;\r\n\r\n\t};\r\n\r\n\tthis.clear = function () {\r\n\r\n\t\t_context.setTransform( 1, 0, 0, - 1, _canvasWidthHalf, _canvasHeightHalf );\r\n\r\n\t\tif ( _clearBox.empty() === false ) {\r\n\r\n\t\t\t_clearBox.intersect( _clipBox );\r\n\t\t\t_clearBox.expandByScalar( 2 );\r\n\r\n\t\t\tif ( _clearAlpha < 1 ) {\r\n\r\n\t\t\t\t_context.clearRect(\r\n\t\t\t\t\t_clearBox.min.x | 0,\r\n\t\t\t\t\t_clearBox.min.y | 0,\r\n\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\r\n\t\t\t\t\t( _clearBox.max.y - _clearBox.min.y ) | 0\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _clearAlpha > 0 ) {\r\n\r\n\t\t\t\tsetBlending( THREE.NormalBlending );\r\n\t\t\t\tsetOpacity( 1 );\r\n\r\n\t\t\t\tsetFillStyle( 'rgba(' + Math.floor( _clearColor.r * 255 ) + ',' + Math.floor( _clearColor.g * 255 ) + ',' + Math.floor( _clearColor.b * 255 ) + ',' + _clearAlpha + ')' );\r\n\r\n\t\t\t\t_context.fillRect(\r\n\t\t\t\t\t_clearBox.min.x | 0,\r\n\t\t\t\t\t_clearBox.min.y | 0,\r\n\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\r\n\t\t\t\t\t( _clearBox.max.y - _clearBox.min.y ) | 0\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_clearBox.makeEmpty();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// compatibility\r\n\r\n\tthis.clearColor = function () {};\r\n\tthis.clearDepth = function () {};\r\n\tthis.clearStencil = function () {};\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\r\n\t\t\tTHREE.onerror( 'THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.autoClear === true ) this.clear();\r\n\r\n\t\t_context.setTransform( 1, 0, 0, - 1, _canvasWidthHalf, _canvasHeightHalf );\r\n\r\n\t\t_this.info.render.vertices = 0;\r\n\t\t_this.info.render.faces = 0;\r\n\r\n\t\t_renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );\r\n\t\t_elements = _renderData.elements;\r\n\t\t_lights = _renderData.lights;\r\n\t\t_camera = camera;\r\n\r\n\t\t_normalViewMatrix.getNormalMatrix( camera.matrixWorldInverse );\r\n\r\n\t\t/* DEBUG\r\n\t\tsetFillStyle( 'rgba( 0, 255, 255, 0.5 )' );\r\n\t\t_context.fillRect( _clipBox.min.x, _clipBox.min.y, _clipBox.max.x - _clipBox.min.x, _clipBox.max.y - _clipBox.min.y );\r\n\t\t*/\r\n\r\n\t\tcalculateLights();\r\n\r\n\t\tfor ( var e = 0, el = _elements.length; e < el; e ++ ) {\r\n\r\n\t\t\tvar element = _elements[ e ];\r\n\r\n\t\t\tvar material = element.material;\r\n\r\n\t\t\tif ( material === undefined || material.visible === false ) continue;\r\n\r\n\t\t\t_elemBox.makeEmpty();\r\n\r\n\t\t\tif ( element instanceof THREE.RenderableSprite ) {\r\n\r\n\t\t\t\t_v1 = element;\r\n\t\t\t\t_v1.x *= _canvasWidthHalf; _v1.y *= _canvasHeightHalf;\r\n\r\n\t\t\t\trenderSprite( _v1, element, material );\r\n\r\n\t\t\t} else if ( element instanceof THREE.RenderableLine ) {\r\n\r\n\t\t\t\t_v1 = element.v1; _v2 = element.v2;\r\n\r\n\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\r\n\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\r\n\r\n\t\t\t\t_elemBox.setFromPoints( [\r\n\t\t\t\t\t_v1.positionScreen,\r\n\t\t\t\t\t_v2.positionScreen\r\n\t\t\t\t] );\r\n\r\n\t\t\t\tif ( _clipBox.isIntersectionBox( _elemBox ) === true ) {\r\n\r\n\t\t\t\t\trenderLine( _v1, _v2, element, material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( element instanceof THREE.RenderableFace ) {\r\n\r\n\t\t\t\t_v1 = element.v1; _v2 = element.v2; _v3 = element.v3;\r\n\r\n\t\t\t\tif ( _v1.positionScreen.z < -1 || _v1.positionScreen.z > 1 ) continue;\r\n\t\t\t\tif ( _v2.positionScreen.z < -1 || _v2.positionScreen.z > 1 ) continue;\r\n\t\t\t\tif ( _v3.positionScreen.z < -1 || _v3.positionScreen.z > 1 ) continue;\r\n\r\n\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\r\n\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\r\n\t\t\t\t_v3.positionScreen.x *= _canvasWidthHalf; _v3.positionScreen.y *= _canvasHeightHalf;\r\n\r\n\t\t\t\tif ( material.overdraw > 0 ) {\r\n\r\n\t\t\t\t\texpand( _v1.positionScreen, _v2.positionScreen, material.overdraw );\r\n\t\t\t\t\texpand( _v2.positionScreen, _v3.positionScreen, material.overdraw );\r\n\t\t\t\t\texpand( _v3.positionScreen, _v1.positionScreen, material.overdraw );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_elemBox.setFromPoints( [\r\n\t\t\t\t\t_v1.positionScreen,\r\n\t\t\t\t\t_v2.positionScreen,\r\n\t\t\t\t\t_v3.positionScreen\r\n\t\t\t\t] );\r\n\r\n\t\t\t\tif ( _clipBox.isIntersectionBox( _elemBox ) === true ) {\r\n\r\n\t\t\t\t\trenderFace3( _v1, _v2, _v3, 0, 1, 2, element, material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/* DEBUG\r\n\t\t\tsetLineWidth( 1 );\r\n\t\t\tsetStrokeStyle( 'rgba( 0, 255, 0, 0.5 )' );\r\n\t\t\t_context.strokeRect( _elemBox.min.x, _elemBox.min.y, _elemBox.max.x - _elemBox.min.x, _elemBox.max.y - _elemBox.min.y );\r\n\t\t\t*/\r\n\r\n\t\t\t_clearBox.union( _elemBox );\r\n\r\n\t\t}\r\n\r\n\t\t/* DEBUG\r\n\t\tsetLineWidth( 1 );\r\n\t\tsetStrokeStyle( 'rgba( 255, 0, 0, 0.5 )' );\r\n\t\t_context.strokeRect( _clearBox.min.x, _clearBox.min.y, _clearBox.max.x - _clearBox.min.x, _clearBox.max.y - _clearBox.min.y );\r\n\t\t*/\r\n\r\n\t\t_context.setTransform( 1, 0, 0, 1, 0, 0 );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tfunction calculateLights() {\r\n\r\n\t\t_ambientLight.setRGB( 0, 0, 0 );\r\n\t\t_directionalLights.setRGB( 0, 0, 0 );\r\n\t\t_pointLights.setRGB( 0, 0, 0 );\r\n\r\n\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = _lights[ l ];\r\n\t\t\tvar lightColor = light.color;\r\n\r\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\t_ambientLight.add( lightColor );\r\n\r\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\t// for sprites\r\n\r\n\t\t\t\t_directionalLights.add( lightColor );\r\n\r\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\t// for sprites\r\n\r\n\t\t\t\t_pointLights.add( lightColor );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction calculateLight( position, normal, color ) {\r\n\r\n\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = _lights[ l ];\r\n\r\n\t\t\t_lightColor.copy( light.color );\r\n\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld ).normalize();\r\n\r\n\t\t\t\tvar amount = normal.dot( lightPosition );\r\n\r\n\t\t\t\tif ( amount <= 0 ) continue;\r\n\r\n\t\t\t\tamount *= light.intensity;\r\n\r\n\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\r\n\r\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld );\r\n\r\n\t\t\t\tvar amount = normal.dot( _vector3.subVectors( lightPosition, position ).normalize() );\r\n\r\n\t\t\t\tif ( amount <= 0 ) continue;\r\n\r\n\t\t\t\tamount *= light.distance == 0 ? 1 : 1 - Math.min( position.distanceTo( lightPosition ) / light.distance, 1 );\r\n\r\n\t\t\t\tif ( amount == 0 ) continue;\r\n\r\n\t\t\t\tamount *= light.intensity;\r\n\r\n\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderSprite( v1, element, material ) {\r\n\r\n\t\tsetOpacity( material.opacity );\r\n\t\tsetBlending( material.blending );\r\n\r\n\t\tvar scaleX = element.scale.x * _canvasWidthHalf;\r\n\t\tvar scaleY = element.scale.y * _canvasHeightHalf;\r\n\r\n\t\tvar dist = 0.5 * Math.sqrt( scaleX * scaleX + scaleY * scaleY ); // allow for rotated sprite\r\n\t\t_elemBox.min.set( v1.x - dist, v1.y - dist );\r\n\t\t_elemBox.max.set( v1.x + dist, v1.y + dist );\r\n\r\n\t\tif ( material instanceof THREE.SpriteMaterial ||\r\n\t\t\t material instanceof THREE.ParticleSystemMaterial ) { // Backwards compatibility\r\n\r\n\t\t\tvar texture = material.map;\r\n\r\n\t\t\tif ( texture !== null ) {\r\n\r\n\t\t\t\tif ( texture.hasEventListener( 'update', onTextureUpdate ) === false ) {\r\n\r\n\t\t\t\t\tif ( texture.image !== undefined && texture.image.width > 0 ) {\r\n\r\n\t\t\t\t\t\ttextureToPattern( texture );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.addEventListener( 'update', onTextureUpdate );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar pattern = _patterns[ texture.id ];\r\n\r\n\t\t\t\tif ( pattern !== undefined ) {\r\n\r\n\t\t\t\t\tsetFillStyle( pattern );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetFillStyle( 'rgba( 0, 0, 0, 1 )' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tvar bitmap = texture.image;\r\n\r\n\t\t\t\tvar ox = bitmap.width * texture.offset.x;\r\n\t\t\t\tvar oy = bitmap.height * texture.offset.y;\r\n\r\n\t\t\t\tvar sx = bitmap.width * texture.repeat.x;\r\n\t\t\t\tvar sy = bitmap.height * texture.repeat.y;\r\n\r\n\t\t\t\tvar cx = scaleX / sx;\r\n\t\t\t\tvar cy = scaleY / sy;\r\n\r\n\t\t\t\t_context.save();\r\n\t\t\t\t_context.translate( v1.x, v1.y );\r\n\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\r\n\t\t\t\t_context.translate( - scaleX / 2, - scaleY / 2 );\r\n\t\t\t\t_context.scale( cx, cy );\r\n\t\t\t\t_context.translate( - ox, - oy );\r\n\t\t\t\t_context.fillRect( ox, oy, sx, sy );\r\n\t\t\t\t_context.restore();\r\n\r\n\t\t\t} else { // no texture\r\n\r\n\t\t\t\tsetFillStyle( material.color.getStyle() );\r\n\r\n\t\t\t\t_context.save();\r\n\t\t\t\t_context.translate( v1.x, v1.y );\r\n\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\r\n\t\t\t\t_context.scale( scaleX, - scaleY );\r\n\t\t\t\t_context.fillRect( - 0.5, - 0.5, 1, 1 );\r\n\t\t\t\t_context.restore();\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( material instanceof THREE.SpriteCanvasMaterial ) {\r\n\r\n\t\t\tsetStrokeStyle( material.color.getStyle() );\r\n\t\t\tsetFillStyle( material.color.getStyle() );\r\n\r\n\t\t\t_context.save();\r\n\t\t\t_context.translate( v1.x, v1.y );\r\n\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\r\n\t\t\t_context.scale( scaleX, scaleY );\r\n\r\n\t\t\tmaterial.program( _context );\r\n\r\n\t\t\t_context.restore();\r\n\r\n\t\t}\r\n\r\n\t\t/* DEBUG\r\n\t\tsetStrokeStyle( 'rgb(255,255,0)' );\r\n\t\t_context.beginPath();\r\n\t\t_context.moveTo( v1.x - 10, v1.y );\r\n\t\t_context.lineTo( v1.x + 10, v1.y );\r\n\t\t_context.moveTo( v1.x, v1.y - 10 );\r\n\t\t_context.lineTo( v1.x, v1.y + 10 );\r\n\t\t_context.stroke();\r\n\t\t*/\r\n\r\n\t}\r\n\r\n\tfunction renderLine( v1, v2, element, material ) {\r\n\r\n\t\tsetOpacity( material.opacity );\r\n\t\tsetBlending( material.blending );\r\n\r\n\t\t_context.beginPath();\r\n\t\t_context.moveTo( v1.positionScreen.x, v1.positionScreen.y );\r\n\t\t_context.lineTo( v2.positionScreen.x, v2.positionScreen.y );\r\n\r\n\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n\t\t\tsetLineWidth( material.linewidth );\r\n\t\t\tsetLineCap( material.linecap );\r\n\t\t\tsetLineJoin( material.linejoin );\r\n\r\n\t\t\tif ( material.vertexColors !== THREE.VertexColors ) {\r\n\r\n\t\t\t\tsetStrokeStyle( material.color.getStyle() );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar colorStyle1 = element.vertexColors[0].getStyle();\r\n\t\t\t\tvar colorStyle2 = element.vertexColors[1].getStyle();\r\n\r\n\t\t\t\tif ( colorStyle1 === colorStyle2 ) {\r\n\r\n\t\t\t\t\tsetStrokeStyle( colorStyle1 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttry {\r\n\r\n\t\t\t\t\t\tvar grad = _context.createLinearGradient(\r\n\t\t\t\t\t\t\tv1.positionScreen.x,\r\n\t\t\t\t\t\t\tv1.positionScreen.y,\r\n\t\t\t\t\t\t\tv2.positionScreen.x,\r\n\t\t\t\t\t\t\tv2.positionScreen.y\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tgrad.addColorStop( 0, colorStyle1 );\r\n\t\t\t\t\t\tgrad.addColorStop( 1, colorStyle2 );\r\n\r\n\t\t\t\t\t} catch ( exception ) {\r\n\r\n\t\t\t\t\t\tgrad = colorStyle1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsetStrokeStyle( grad );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_context.stroke();\r\n\t\t\t_elemBox.expandByScalar( material.linewidth * 2 );\r\n\r\n\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n\t\t\tsetLineWidth( material.linewidth );\r\n\t\t\tsetLineCap( material.linecap );\r\n\t\t\tsetLineJoin( material.linejoin );\r\n\t\t\tsetStrokeStyle( material.color.getStyle() );\r\n\t\t\tsetDashAndGap( material.dashSize, material.gapSize );\r\n\r\n\t\t\t_context.stroke();\r\n\r\n\t\t\t_elemBox.expandByScalar( material.linewidth * 2 );\r\n\r\n\t\t\tsetDashAndGap( null, null );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderFace3( v1, v2, v3, uv1, uv2, uv3, element, material ) {\r\n\r\n\t\t_this.info.render.vertices += 3;\r\n\t\t_this.info.render.faces ++;\r\n\r\n\t\tsetOpacity( material.opacity );\r\n\t\tsetBlending( material.blending );\r\n\r\n\t\t_v1x = v1.positionScreen.x; _v1y = v1.positionScreen.y;\r\n\t\t_v2x = v2.positionScreen.x; _v2y = v2.positionScreen.y;\r\n\t\t_v3x = v3.positionScreen.x; _v3y = v3.positionScreen.y;\r\n\r\n\t\tdrawTriangle( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y );\r\n\r\n\t\tif ( ( material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshPhysicalMaterial ) && material.map === null ) {\r\n\r\n\t\t\t_diffuseColor.copy( material.color );\r\n\t\t\t_emissiveColor.copy( material.emissive );\r\n\r\n\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\r\n\r\n\t\t\t\t_diffuseColor.multiply( element.color );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.wireframe === false && material.shading === THREE.SmoothShading && element.vertexNormalsLength === 3 ) {\r\n\r\n\t\t\t\t_color1.copy( _ambientLight );\r\n\t\t\t\t_color2.copy( _ambientLight );\r\n\t\t\t\t_color3.copy( _ambientLight );\r\n\r\n\t\t\t\tcalculateLight( element.v1.positionWorld, element.vertexNormalsModel[ 0 ], _color1 );\r\n\t\t\t\tcalculateLight( element.v2.positionWorld, element.vertexNormalsModel[ 1 ], _color2 );\r\n\t\t\t\tcalculateLight( element.v3.positionWorld, element.vertexNormalsModel[ 2 ], _color3 );\r\n\r\n\t\t\t\t_color1.multiply( _diffuseColor ).add( _emissiveColor );\r\n\t\t\t\t_color2.multiply( _diffuseColor ).add( _emissiveColor );\r\n\t\t\t\t_color3.multiply( _diffuseColor ).add( _emissiveColor );\r\n\t\t\t\t_color4.addColors( _color2, _color3 ).multiplyScalar( 0.5 );\r\n\r\n\t\t\t\t_image = getGradientTexture( _color1, _color2, _color3, _color4 );\r\n\r\n\t\t\t\tclipImage( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, 0, 0, 1, 0, 0, 1, _image );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_color.copy( _ambientLight );\r\n\r\n\t\t\t\tcalculateLight( element.centroidModel, element.normalModel, _color );\r\n\r\n\t\t\t\t_color.multiply( _diffuseColor ).add( _emissiveColor );\r\n\r\n\t\t\t\tmaterial.wireframe === true\r\n\t\t\t\t\t? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\r\n\t\t\t\t\t: fillPath( _color );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tif ( material.map.mapping instanceof THREE.UVMapping ) {\r\n\r\n\t\t\t\t\t_uvs = element.uvs[ 0 ];\r\n\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[ uv1 ].x, _uvs[ uv1 ].y, _uvs[ uv2 ].x, _uvs[ uv2 ].y, _uvs[ uv3 ].x, _uvs[ uv3 ].y, material.map );\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t} else if ( material.envMap !== null ) {\r\n\r\n\t\t\t\tif ( material.envMap.mapping instanceof THREE.SphericalReflectionMapping ) {\r\n\r\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv1 ] ).applyMatrix3( _normalViewMatrix );\r\n\t\t\t\t\t_uv1x = 0.5 * _normal.x + 0.5;\r\n\t\t\t\t\t_uv1y = 0.5 * _normal.y + 0.5;\r\n\r\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv2 ] ).applyMatrix3( _normalViewMatrix );\r\n\t\t\t\t\t_uv2x = 0.5 * _normal.x + 0.5;\r\n\t\t\t\t\t_uv2y = 0.5 * _normal.y + 0.5;\r\n\r\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv3 ] ).applyMatrix3( _normalViewMatrix );\r\n\t\t\t\t\t_uv3x = 0.5 * _normal.x + 0.5;\r\n\t\t\t\t\t_uv3y = 0.5 * _normal.y + 0.5;\r\n\r\n\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap );\r\n\r\n\t\t\t\t}/* else if ( material.envMap.mapping === THREE.SphericalRefractionMapping ) {\r\n\r\n\r\n\r\n\t\t\t\t}*/\r\n\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_color.copy( material.color );\r\n\r\n\t\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\r\n\r\n\t\t\t\t\t_color.multiply( element.color );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterial.wireframe === true\r\n\t\t\t\t\t? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\r\n\t\t\t\t\t: fillPath( _color );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\t_near = _camera.near;\r\n\t\t\t_far = _camera.far;\r\n\r\n\t\t\t_color1.r = _color1.g = _color1.b = 1 - smoothstep( v1.positionScreen.z * v1.positionScreen.w, _near, _far );\r\n\t\t\t_color2.r = _color2.g = _color2.b = 1 - smoothstep( v2.positionScreen.z * v2.positionScreen.w, _near, _far );\r\n\t\t\t_color3.r = _color3.g = _color3.b = 1 - smoothstep( v3.positionScreen.z * v3.positionScreen.w, _near, _far );\r\n\t\t\t_color4.addColors( _color2, _color3 ).multiplyScalar( 0.5 );\r\n\r\n\t\t\t_image = getGradientTexture( _color1, _color2, _color3, _color4 );\r\n\r\n\t\t\tclipImage( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, 0, 0, 1, 0, 0, 1, _image );\r\n\r\n\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\tif ( material.shading === THREE.FlatShading ) {\r\n\r\n\t\t\t\t_normal.copy( element.normalModel ).applyMatrix3( _normalViewMatrix );\r\n\r\n\t\t\t\t_color.setRGB( _normal.x, _normal.y, _normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\r\n\r\n\t\t\t\tmaterial.wireframe === true\r\n\t\t\t\t\t? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\r\n\t\t\t\t\t: fillPath( _color );\r\n\r\n\t\t\t} else if ( material.shading === THREE.SmoothShading ) {\r\n\r\n\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv1 ] ).applyMatrix3( _normalViewMatrix );\r\n\t\t\t\t_color1.setRGB( _normal.x, _normal.y, _normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\r\n\r\n\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv2 ] ).applyMatrix3( _normalViewMatrix );\r\n\t\t\t\t_color2.setRGB( _normal.x, _normal.y, _normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\r\n\r\n\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv3 ] ).applyMatrix3( _normalViewMatrix );\r\n\t\t\t\t_color3.setRGB( _normal.x, _normal.y, _normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\r\n\r\n\t\t\t\t_color4.addColors( _color2, _color3 ).multiplyScalar( 0.5 );\r\n\r\n\t\t\t\t_image = getGradientTexture( _color1, _color2, _color3, _color4 );\r\n\r\n\t\t\t\tclipImage( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, 0, 0, 1, 0, 0, 1, _image );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction drawTriangle( x0, y0, x1, y1, x2, y2 ) {\r\n\r\n\t\t_context.beginPath();\r\n\t\t_context.moveTo( x0, y0 );\r\n\t\t_context.lineTo( x1, y1 );\r\n\t\t_context.lineTo( x2, y2 );\r\n\t\t_context.closePath();\r\n\r\n\t}\r\n\r\n\tfunction strokePath( color, linewidth, linecap, linejoin ) {\r\n\r\n\t\tsetLineWidth( linewidth );\r\n\t\tsetLineCap( linecap );\r\n\t\tsetLineJoin( linejoin );\r\n\t\tsetStrokeStyle( color.getStyle() );\r\n\r\n\t\t_context.stroke();\r\n\r\n\t\t_elemBox.expandByScalar( linewidth * 2 );\r\n\r\n\t}\r\n\r\n\tfunction fillPath( color ) {\r\n\r\n\t\tsetFillStyle( color.getStyle() );\r\n\t\t_context.fill();\r\n\r\n\t}\r\n\r\n\tfunction onTextureUpdate ( event ) {\r\n\r\n\t\ttextureToPattern( event.target );\r\n\r\n\t}\r\n\r\n\tfunction textureToPattern( texture ) {\r\n\r\n\t\tvar repeatX = texture.wrapS === THREE.RepeatWrapping;\r\n\t\tvar repeatY = texture.wrapT === THREE.RepeatWrapping;\r\n\r\n\t\tvar image = texture.image;\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = image.width;\r\n\t\tcanvas.height = image.height;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.setTransform( 1, 0, 0, - 1, 0, image.height );\r\n\t\tcontext.drawImage( image, 0, 0 );\r\n\r\n\t\t_patterns[ texture.id ] = _context.createPattern(\r\n\t\t\tcanvas, repeatX === true && repeatY === true\r\n\t\t\t\t? 'repeat'\r\n\t\t\t\t: repeatX === true && repeatY === false\r\n\t\t\t\t\t? 'repeat-x'\r\n\t\t\t\t\t: repeatX === false && repeatY === true\r\n\t\t\t\t\t\t? 'repeat-y'\r\n\t\t\t\t\t\t: 'no-repeat'\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tfunction patternPath( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture ) {\r\n\r\n\t\tif ( texture instanceof THREE.DataTexture ) return;\r\n\r\n\t\tif ( texture.hasEventListener( 'update', onTextureUpdate ) === false ) {\r\n\r\n\t\t\tif ( texture.image !== undefined && texture.image.width > 0 ) {\r\n\r\n\t\t\t\ttextureToPattern( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.addEventListener( 'update', onTextureUpdate );\r\n\r\n\t\t}\r\n\r\n\t\tvar pattern = _patterns[ texture.id ];\r\n\r\n\t\tif ( pattern !== undefined ) {\r\n\r\n\t\t\tsetFillStyle( pattern );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tsetFillStyle( 'rgba(0,0,0,1)' );\r\n\t\t\t_context.fill();\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\t\r\n\r\n\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\r\n\r\n\t\tvar a, b, c, d, e, f, det, idet,\r\n\t\toffsetX = texture.offset.x / texture.repeat.x,\r\n\t\toffsetY = texture.offset.y / texture.repeat.y,\r\n\t\twidth = texture.image.width * texture.repeat.x,\r\n\t\theight = texture.image.height * texture.repeat.y;\r\n\r\n\t\tu0 = ( u0 + offsetX ) * width;\r\n\t\tv0 = ( v0 + offsetY ) * height;\r\n\r\n\t\tu1 = ( u1 + offsetX ) * width;\r\n\t\tv1 = ( v1 + offsetY ) * height;\r\n\r\n\t\tu2 = ( u2 + offsetX ) * width;\r\n\t\tv2 = ( v2 + offsetY ) * height;\r\n\r\n\t\tx1 -= x0; y1 -= y0;\r\n\t\tx2 -= x0; y2 -= y0;\r\n\r\n\t\tu1 -= u0; v1 -= v0;\r\n\t\tu2 -= u0; v2 -= v0;\r\n\r\n\t\tdet = u1 * v2 - u2 * v1;\r\n\r\n\t\tif ( det === 0 ) return;\r\n\r\n\t\tidet = 1 / det;\r\n\r\n\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\r\n\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\r\n\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\r\n\t\td = ( u1 * y2 - u2 * y1 ) * idet;\r\n\r\n\t\te = x0 - a * u0 - c * v0;\r\n\t\tf = y0 - b * u0 - d * v0;\r\n\r\n\t\t_context.save();\r\n\t\t_context.transform( a, b, c, d, e, f );\r\n\t\t_context.fill();\r\n\t\t_context.restore();\r\n\r\n\t}\r\n\r\n\tfunction clipImage( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image ) {\r\n\r\n\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\r\n\r\n\t\tvar a, b, c, d, e, f, det, idet,\r\n\t\twidth = image.width - 1,\r\n\t\theight = image.height - 1;\r\n\r\n\t\tu0 *= width; v0 *= height;\r\n\t\tu1 *= width; v1 *= height;\r\n\t\tu2 *= width; v2 *= height;\r\n\r\n\t\tx1 -= x0; y1 -= y0;\r\n\t\tx2 -= x0; y2 -= y0;\r\n\r\n\t\tu1 -= u0; v1 -= v0;\r\n\t\tu2 -= u0; v2 -= v0;\r\n\r\n\t\tdet = u1 * v2 - u2 * v1;\r\n\r\n\t\tidet = 1 / det;\r\n\r\n\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\r\n\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\r\n\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\r\n\t\td = ( u1 * y2 - u2 * y1 ) * idet;\r\n\r\n\t\te = x0 - a * u0 - c * v0;\r\n\t\tf = y0 - b * u0 - d * v0;\r\n\r\n\t\t_context.save();\r\n\t\t_context.transform( a, b, c, d, e, f );\r\n\t\t_context.clip();\r\n\t\t_context.drawImage( image, 0, 0 );\r\n\t\t_context.restore();\r\n\r\n\t}\r\n\r\n\tfunction getGradientTexture( color1, color2, color3, color4 ) {\r\n\r\n\t\t// http://mrdoob.com/blog/post/710\r\n\r\n\t\t_pixelMapData[ 0 ] = ( color1.r * 255 ) | 0;\r\n\t\t_pixelMapData[ 1 ] = ( color1.g * 255 ) | 0;\r\n\t\t_pixelMapData[ 2 ] = ( color1.b * 255 ) | 0;\r\n\r\n\t\t_pixelMapData[ 4 ] = ( color2.r * 255 ) | 0;\r\n\t\t_pixelMapData[ 5 ] = ( color2.g * 255 ) | 0;\r\n\t\t_pixelMapData[ 6 ] = ( color2.b * 255 ) | 0;\r\n\r\n\t\t_pixelMapData[ 8 ] = ( color3.r * 255 ) | 0;\r\n\t\t_pixelMapData[ 9 ] = ( color3.g * 255 ) | 0;\r\n\t\t_pixelMapData[ 10 ] = ( color3.b * 255 ) | 0;\r\n\r\n\t\t_pixelMapData[ 12 ] = ( color4.r * 255 ) | 0;\r\n\t\t_pixelMapData[ 13 ] = ( color4.g * 255 ) | 0;\r\n\t\t_pixelMapData[ 14 ] = ( color4.b * 255 ) | 0;\r\n\r\n\t\t_pixelMapContext.putImageData( _pixelMapImage, 0, 0 );\r\n\t\t_gradientMapContext.drawImage( _pixelMap, 0, 0 );\r\n\r\n\t\treturn _gradientMap;\r\n\r\n\t}\r\n\r\n\t// Hide anti-alias gaps\r\n\r\n\tfunction expand( v1, v2, pixels ) {\r\n\r\n\t\tvar x = v2.x - v1.x, y = v2.y - v1.y,\r\n\t\tdet = x * x + y * y, idet;\r\n\r\n\t\tif ( det === 0 ) return;\r\n\r\n\t\tidet = pixels / Math.sqrt( det );\r\n\r\n\t\tx *= idet; y *= idet;\r\n\r\n\t\tv2.x += x; v2.y += y;\r\n\t\tv1.x -= x; v1.y -= y;\r\n\r\n\t}\r\n\r\n\t// Context cached methods.\r\n\r\n\tfunction setOpacity( value ) {\r\n\r\n\t\tif ( _contextGlobalAlpha !== value ) {\r\n\r\n\t\t\t_context.globalAlpha = value;\r\n\t\t\t_contextGlobalAlpha = value;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setBlending( value ) {\r\n\r\n\t\tif ( _contextGlobalCompositeOperation !== value ) {\r\n\r\n\t\t\tif ( value === THREE.NormalBlending ) {\r\n\r\n\t\t\t\t_context.globalCompositeOperation = 'source-over';\r\n\r\n\t\t\t} else if ( value === THREE.AdditiveBlending ) {\r\n\r\n\t\t\t\t_context.globalCompositeOperation = 'lighter';\r\n\r\n\t\t\t} else if ( value === THREE.SubtractiveBlending ) {\r\n\r\n\t\t\t\t_context.globalCompositeOperation = 'darker';\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_contextGlobalCompositeOperation = value;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setLineWidth( value ) {\r\n\r\n\t\tif ( _contextLineWidth !== value ) {\r\n\r\n\t\t\t_context.lineWidth = value;\r\n\t\t\t_contextLineWidth = value;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setLineCap( value ) {\r\n\r\n\t\t// \"butt\", \"round\", \"square\"\r\n\r\n\t\tif ( _contextLineCap !== value ) {\r\n\r\n\t\t\t_context.lineCap = value;\r\n\t\t\t_contextLineCap = value;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setLineJoin( value ) {\r\n\r\n\t\t// \"round\", \"bevel\", \"miter\"\r\n\r\n\t\tif ( _contextLineJoin !== value ) {\r\n\r\n\t\t\t_context.lineJoin = value;\r\n\t\t\t_contextLineJoin = value;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setStrokeStyle( value ) {\r\n\r\n\t\tif ( _contextStrokeStyle !== value ) {\r\n\r\n\t\t\t_context.strokeStyle = value;\r\n\t\t\t_contextStrokeStyle = value;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setFillStyle( value ) {\r\n\r\n\t\tif ( _contextFillStyle !== value ) {\r\n\r\n\t\t\t_context.fillStyle = value;\r\n\t\t\t_contextFillStyle = value;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setDashAndGap( dashSizeValue, gapSizeValue ) {\r\n\r\n\t\tif ( _contextDashSize !== dashSizeValue || _contextGapSize !== gapSizeValue ) {\r\n\r\n\t\t\t_context.setLineDash( [ dashSizeValue, gapSizeValue ] );\r\n\t\t\t_contextDashSize = dashSizeValue;\r\n\t\t\t_contextGapSize = gapSizeValue;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * Shader chunks for WebLG Shader library\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author bhouston / http://clara.io/\r\n */\r\n\r\nTHREE.ShaderChunk = {\r\n\r\n\t// FOG\r\n\r\n\tcommon: [\r\n\r\n\t\t\"#define PI 3.14159\",\r\n\t\t\"#define PI2 6.28318\",\r\n\t\t\"#define LOG2 1.442695\",\r\n\t\t\"#define ENCODING_Linear 3000\",\r\n\t\t\"#define ENCODING_sRGB 3001\",\r\n\t\t\"#define ENCODING_RGBE 3002\",\r\n\t\t\"#define ENCODING_RGBM7 3004\",\r\n\t\t\"#define ENCODING_RGBM16 3005\",\r\n\t\t\"#define SPECULAR_COEFF 0.18\",\r\n\t\t\"float square( float a ) { return a*a; }\",\r\n\t\t\"vec2  square( vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\",\r\n\t\t\"vec3  square( vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\",\r\n\t\t\"vec4  square( vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\",\r\n\t\t\"float saturate( float a ) { return clamp( a, 0.0, 1.0 ); }\",\r\n\t\t\"vec2  saturate( vec2 a )  { return clamp( a, 0.0, 1.0 ); }\",\r\n\t\t\"vec3  saturate( vec3 a )  { return clamp( a, 0.0, 1.0 ); }\",\r\n\t\t\"vec4  saturate( vec4 a )  { return clamp( a, 0.0, 1.0 ); }\",\r\n\t\t\"float average( float a ) { return a; }\",\r\n\t\t\"float average( vec2 a )  { return ( a.x + a.y) * 0.5; }\",\r\n\t\t\"float average( vec3 a )  { return ( a.x + a.y + a.z) * 0.3333333333; }\",\r\n\t\t\"float average( vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\",\r\n\t\t\"float whiteCompliment( float a ) { return saturate( 1.0 - a ); }\",\r\n\t\t\"vec2  whiteCompliment( vec2 a )  { return saturate( vec2(1.0) - a ); }\",\r\n\t\t\"vec3  whiteCompliment( vec3 a )  { return saturate( vec3(1.0) - a ); }\",\r\n\t\t\"vec4  whiteCompliment( vec4 a )  { return saturate( vec4(1.0) - a ); }\",\r\n\t\t\"vec3 projectOnPlane( vec3 point, vec3 pointOnPlane, vec3 planeNormal) {\",\r\n    \t\t\"float distance = dot( planeNormal, point-pointOnPlane );\",\r\n    \t\t\"return point - distance * planeNormal;\",\r\n\t\t\"}\",\r\n\t\t\"float sideOfPlane( vec3 point, vec3 pointOnPlane, vec3 planeNormal ) {\",\r\n   \t\t\t\"return sign( dot( point - pointOnPlane, planeNormal ) );\",\r\n\t\t\"}\",\r\n\t\t\"vec2 applyUVOffsetRepeat( vec2 uv, vec4 offsetRepeat ) {\",\r\n    \t\t\"return uv * offsetRepeat.zw + offsetRepeat.xy;\",\r\n\t\t\"}\",\r\n\t\t\"vec3 linePlaneIntersect( vec3 pointOnLine, vec3 lineDirection, vec3 pointOnPlane, vec3 planeNormal ) {\",\r\n   \t\t\t\"return pointOnLine + lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) );\",\r\n\t\t\"}\",\r\n\t\t\"vec4 applyGainBrightness( vec4 texel, vec4 gainBrightnessCoeff ) {\",\r\n\t\t\t\"if( gainBrightnessCoeff.w < 0.0 ) {\",\r\n\t\t\t\t\"texel.xyz = whiteCompliment( texel.xyz );\",\r\n\t\t\t\"}\",\r\n\t\t\t\"texel.xyz = ( texel.xyz - vec3( gainBrightnessCoeff.x ) ) * gainBrightnessCoeff.y + vec3( gainBrightnessCoeff.z + gainBrightnessCoeff.x );\",\r\n\t\t\t\"return texel;\",\r\n\t\t\"}\",\r\n\t\t\"vec4 texelDecode( vec4 texel, int encoding ) {\",\r\n\r\n\t\t\t\"if( encoding == 3001 ) {\",\t// sRGB\r\n\t\t\t\t\"texel = vec4( pow( max( texel.xyz, vec3( 0.0 ) ), vec3( 2.2 ) ), texel.w );\",\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"else if( encoding == 3002 ) {\",\t// RGBE / Radiance\r\n\t\t\t\t\"texel = vec4( texel.xyz * pow( 2.0, texel.w*256.0 - 128.0 ), 1.0 );\",\r\n\t\t\t\"}\",\r\n\r\n\t\t\t// TODO LogLUV decoding.\r\n\r\n\t\t\t\"else if( encoding == 3004 ) {\", // RGBM 7.0 / Marmoset\r\n\t\t\t\t\"texel = vec4( texel.xyz * texel.w * 7.0, 1.0 );\",\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"else if( encoding == 3005 ) {\", // RGBM 16\r\n\t\t\t\t\"texel = vec4( texel.xyz * texel.w * 16.0, 1.0 );\",\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"return texel;\",\r\n\t\t\"}\",\r\n\t].join(\"\\n\"),\r\n\r\n\t// FOG\r\n\r\n\tfog_pars_fragment: [\r\n\r\n\t\t\"#ifdef USE_FOG\",\r\n\r\n\t\t\t\"uniform vec3 fogColor;\",\r\n\r\n\t\t\t\"#ifdef FOG_EXP2\",\r\n\r\n\t\t\t\t\"uniform float fogDensity;\",\r\n\r\n\t\t\t\"#else\",\r\n\r\n\t\t\t\t\"uniform float fogNear;\",\r\n\t\t\t\t\"uniform float fogFar;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tfog_fragment: [\r\n\r\n\t\t\"#ifdef USE_FOG\",\r\n\r\n\t\t\t\"float depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"#ifdef FOG_EXP2\",\r\n\r\n\t\t\t\t\"float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\",\r\n\t\t\t\t\"fogFactor = 1.0 - saturate( fogFactor );\",\r\n\r\n\t\t\t\"#else\",\r\n\r\n\t\t\t\t\"float fogFactor = smoothstep( fogNear, fogFar, depth );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// DIFFUSE ENVIRONMENT MAP\r\n\r\n\tdiffuseenvmap_pars_fragment: [\r\n\r\n\t\t\"#if defined( USE_DIFFUSEENVMAP )\",\r\n\r\n\t\t\t\"uniform samplerCube diffuseEnvMap;\",\r\n\t\t\t\"uniform int diffuseEnvEncoding;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// ENVIRONMENT MAP\r\n\r\n\tenvmap_pars_fragment: [\r\n\r\n\t\t\"#if defined( USE_DIFFUSEENVMAP ) || defined( USE_ENVMAP )\",\r\n\r\n\t\t\t\"uniform float flipEnvMap;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#ifdef USE_ENVMAP\",\r\n\r\n\t\t\t\"uniform float reflectivity;\",\r\n\t\t\t\"uniform samplerCube envMap;\",\r\n\t\t\t\"uniform int combine;\",\r\n\t\t\t\"uniform int envEncoding;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tenvmap_fragment: [\r\n\r\n\t\t\"#if defined( USE_ENVMAP ) && ! defined( PHYSICAL )\",\r\n\r\n\t\t\t\"vec3 worldNormal = vec3( normalize( ( vec4( normal, 0.0 ) * viewMatrix ).xyz ) );\",\r\n\t\t\t\"vec3 worldView = -vec3( normalize( ( vec4( viewDirection, 0.0 ) * viewMatrix ).xyz ) );\",\r\n\r\n\t\t\t\"vec3 reflectVec = reflect( worldView, worldNormal );\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\t\"float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\",\r\n\r\n\t\t\t\t\"vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\",\r\n\r\n\t\t\t\"#else\",\r\n\r\n\t\t\t\t\"vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"cubeColor = texelDecode( cubeColor, envEncoding );\",\r\n\r\n\t\t\t\"float fresnelReflectivity = saturate( reflectivity );\",\r\n\r\n\t\t\t\"if ( combine == 1 ) {\",\r\n\r\n\t\t\t\t\"gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, fresnelReflectivity );\",\r\n\r\n\t\t\t\"} else if ( combine == 2 ) {\",\r\n\r\n\t\t\t\t\"gl_FragColor.xyz += cubeColor.xyz * fresnelReflectivity;\",\r\n\r\n\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\"gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, fresnelReflectivity );\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tworldpos_vertex : [\r\n\r\n\t\t\"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\",\r\n\r\n\t\t\t\"#ifdef USE_SKINNING\",\r\n\r\n\t\t\t\t\"vec4 worldPosition = modelMatrix * skinned;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\",\r\n\r\n\t\t\t\t\"vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\",\r\n\r\n\t\t\t\t\"vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// COLOR MAP (particles)\r\n\r\n\tmap_particle_pars_fragment: [\r\n\r\n\t\t\"#ifdef USE_MAP\",\r\n\r\n\t\t\t\"uniform sampler2D map;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\r\n\tmap_particle_fragment: [\r\n\r\n\t\t\"#ifdef USE_MAP\",\r\n\r\n\t\t\t\"gl_FragColor = gl_FragColor * texelDecode( texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) ), ENCODING_sRGB );\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// COLOR MAP (triangles)\r\n\r\n\tmap_pars_vertex: [\r\n\r\n\t\t\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_REFLECTIVITYMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALLICMAP ) || defined( USE_OPACITYMAP ) || defined( USE_FALLOFFMAP ) || defined( USE_TRANSLUCENCYMAP ) || defined( USE_ANISOTROPYMAP ) || defined( USE_ANISOTROPYROTATIONMAP )\",\r\n\r\n\t\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tmap_pars_fragment: [\r\n\r\n\t\t\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_REFLECTIVITYMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALLICMAP ) || defined( USE_OPACITYMAP ) || defined( USE_FALLOFFMAP ) || defined( USE_TRANSLUCENCYMAP ) || defined( USE_ANISOTROPYMAP ) || defined( USE_ANISOTROPYROTATIONMAP )\",\r\n\r\n\t\t\t\"varying vec2 vUv;\",\r\n\t\t\t\"uniform vec4 offsetRepeat;\",\r\n\t\t\t\"uniform vec4 gainBrightness;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#ifdef USE_MAP\",\r\n\r\n\t\t\t\"uniform sampler2D map;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tmap_vertex: [\r\n\r\n\t\t\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_REFLECTIVITYMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALLICMAP ) || defined( USE_OPACITYMAP ) || defined( USE_FALLOFFMAP ) || defined( USE_TRANSLUCENCYMAP ) || defined( USE_ANISOTROPYMAP ) || defined( USE_ANISOTROPYROTATIONMAP )\",\r\n\r\n\t\t\t\"vUv = uv;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tmap_fragment: [\r\n\r\n\t\t\"#if defined( USE_MAP ) || defined( USE_FALLOFFMAP )\",\r\n\r\n\t\t\t\"vec2 vUvLocal = applyUVOffsetRepeat( vUv, offsetRepeat );\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#ifdef USE_MAP\",\r\n\r\n\t\t\t\"vec4 texelColor = clamp( applyGainBrightness( texelDecode( texture2D( map, vUvLocal ), ENCODING_sRGB ), gainBrightness ), vec4(0.0), vec4(1.0) );\",\r\n\r\n\t\t\t\"gl_FragColor = gl_FragColor * texelColor;\",\r\n\r\n\t\t\t\"#if defined( PHYSICAL ) || defined( PHONG )\",\r\n\r\n\t\t\t\t\"diffuseColor *= texelColor.xyz;\",\r\n\r\n\t\t\t\"#endif\", // PHYSICAL\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// FALLOFF MAP\r\n\r\n\tfalloffmap_pars_fragment: [\r\n\r\n\t\t\"#ifdef USE_FALLOFFMAP\",\r\n\r\n\t\t\t\"uniform sampler2D falloffMap;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// OPACITY MAP\r\n\r\n\topacitymap_pars_fragment: [\r\n\r\n\t\t\"#ifdef USE_OPACITYMAP\",\r\n\r\n\t\t\t\"uniform sampler2D opacityMap;\",\r\n\t\t\t\"uniform vec4 opacityOffsetRepeat;\",\r\n\t\t\t\"uniform vec4 opacityGainBrightness;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\r\n\topacitymap_fragment: [\r\n\r\n\t\t\"#ifdef USE_OPACITYMAP\",\r\n\r\n\t\t\t\"vec2 vOpacityUv = applyUVOffsetRepeat( vUv, opacityOffsetRepeat );\",\r\n\t\t\t\"vec4 texelOpacity = applyGainBrightness( texture2D( opacityMap, vOpacityUv ), opacityGainBrightness );\",\r\n\r\n\t\t\t\"gl_FragColor.w = clamp( gl_FragColor.w * texelOpacity.r, 0.0, 1.0 );\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// TRANSLUCENCY MAP\r\n\r\n\ttranslucencymap_pars_fragment: [\r\n\r\n\t\t\"#ifdef USE_TRANSLUCENCYMAP\",\r\n\r\n\t\t\t\"uniform sampler2D translucencyMap;\",\r\n\t\t\t\"uniform vec4 translucencyOffsetRepeat;\",\r\n\t\t\t\"uniform vec4 translucencyGainBrightness;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\ttranslucencymap_fragment: [\r\n\r\n\t\t\"#ifdef USE_TRANSLUCENCYMAP\",\r\n\r\n\t\t\t\"vec2 vTranslucencyUv = applyUVOffsetRepeat( vUv, translucencyOffsetRepeat );\",\r\n\t\t\t\"vec4 texelTranslucency = applyGainBrightness( texture2D( translucencyMap, vTranslucencyUv ), translucencyGainBrightness );\",\r\n\r\n\t\t\t\"translucencyColor.xyz = clamp( translucencyColor.xyz * texelTranslucency.xyz, vec3( 0.0 ), vec3( 1.0 ) );\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// LIGHT MAP\r\n\r\n\tlightmap_pars_fragment: [\r\n\r\n\t\t\"#if defined( USE_LIGHTMAP ) || defined( USE_EMISSIVEMAP )\",\r\n\r\n\t\t\t\"varying vec2 vUv2;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if defined( USE_LIGHTMAP )\",\r\n\r\n\t\t\t\"uniform sampler2D lightMap;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if defined( USE_EMISSIVEMAP )\",\r\n\r\n\t\t\t\"uniform sampler2D emissiveMap;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tlightmap_pars_vertex: [\r\n\r\n\t\t\"#if defined( USE_LIGHTMAP ) || defined( USE_EMISSIVEMAP )\",\r\n\r\n\t\t\t\"varying vec2 vUv2;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tlightmap_fragment: [\r\n\r\n\t\t\"#ifdef USE_LIGHTMAP\",\r\n\r\n\t\t\t//\"gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tlightmap_vertex: [\r\n\r\n\t\t\"#if defined( USE_LIGHTMAP ) || defined( USE_EMISSIVEMAP )\",\r\n\r\n\t\t\t\"vUv2 = uv2;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\r\n\t// BUMP MAP\r\n\r\n\tbumpmap_pars_fragment: [\r\n\r\n\t\t\"#ifdef USE_BUMPMAP\",\r\n\r\n\t\t\t\"uniform sampler2D bumpMap;\",\r\n\t\t\t\"uniform vec4 bumpOffsetRepeat;\",\r\n\t\t\t\"uniform float bumpScale;\",\r\n\r\n\t\t\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\r\n\t\t\t//\thttp://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\r\n\r\n\t\t\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\r\n\r\n\t\t\t\"vec2 dHdxy_fwd() {\",\r\n\r\n\t\t\t\t\"#ifdef GL_OES_standard_derivatives\",\r\n\r\n\t\t\t\t\t\"vec2 vBumpUv = applyUVOffsetRepeat( vUv, bumpOffsetRepeat );\",\r\n\r\n\t\t\t\t\t\"vec2 dSTdx = dFdx( vBumpUv );\",\r\n\t\t\t\t\t\"vec2 dSTdy = dFdy( vBumpUv );\",\r\n\r\n\t\t\t\t\t\"float Hll = bumpScale * texture2D( bumpMap, vBumpUv ).x;\",\r\n\t\t\t\t\t\"float dBx = bumpScale * texture2D( bumpMap, vBumpUv + dSTdx ).x - Hll;\",\r\n\t\t\t\t\t\"float dBy = bumpScale * texture2D( bumpMap, vBumpUv + dSTdy ).x - Hll;\",\r\n\r\n\t\t\t\t\t\"return vec2( dBx, dBy );\",\r\n\r\n\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\"return vec2( 0.0, 0.0 );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\",\r\n\r\n\t\t\t\t\"#ifdef GL_OES_standard_derivatives\",\r\n\r\n\t\t\t\t\t\"vec3 vSigmaX = dFdx( surf_pos );\",\r\n\t\t\t\t\t\"vec3 vSigmaY = dFdy( surf_pos );\",\r\n\t\t\t\t\t\"vec3 vN = surf_norm;\",\t\t// normalized\r\n\r\n\t\t\t\t\t\"vec3 R1 = cross( vSigmaY, vN );\",\r\n\t\t\t\t\t\"vec3 R2 = cross( vN, vSigmaX );\",\r\n\r\n\t\t\t\t\t\"float fDet = dot( vSigmaX, R1 );\",\r\n\r\n\t\t\t\t\t\"vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\",\r\n\t\t\t\t\t\"return normalize( abs( fDet ) * surf_norm - vGrad );\",\r\n\r\n\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\"return surf_norm;\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// LIGHT ATTENUATION function\r\n\r\n\tlightattenuation_func_fragment: [\r\n\r\n\t\t\"float calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\",\r\n\t\t\t\"if ( decayExponent > 0.0 && cutoffDistance > 0.0 ) {\",\r\n\t\t\t  \"return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\",\r\n\t\t\t\"}\",\r\n\t\t\t\"else if ( decayExponent < 0.0 ) {\",\r\n\t\t\t\t// this is based upon UE4 light fall as described on page 11 of:\r\n\t\t\t\t//  https://de45xmedrsdbp.cloudfront.net/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\r\n\t\t\t\t\"float numerator = 1.0;\",\r\n\t\t\t\t\"if( cutoffDistance > 0.0 ) {\",\r\n\t\t\t\t\t\"numerator = ( saturate( 1.0 - pow( lightDistance / cutoffDistance, 4.0 ) ) );\",\r\n\t\t\t\t\t\"numerator *= numerator;\",\r\n\t\t\t\t\"} \",\r\n\t\t\t\t\"return numerator / ( ( lightDistance * lightDistance ) + 1.0 );\",\r\n\t\t\t\"}\",\r\n\t\t\t\"else {\",\r\n\t\t\t\t\"return 1.0;\",\r\n\t\t\t\"}\",\r\n\r\n\t\t\t/*\"float distanceAttenuation = 1.0 / pow( max( lightDistance, 0.0 ), decayExponent );\",\r\n\t\t\t\"if ( cutoffDistance > 0.0 ) {\",\r\n\t\t\t\t\"distanceAttenuation *= 1.0 - min( lightDistance / cutoffDistance, 1.0 );\",\r\n\t\t\t\"}\",\r\n\t\t\t\"return distanceAttenuation;\",*/\r\n\t\t\"}\",\r\n\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// NORMAL MAP\r\n\r\n\tnormalmap_pars_fragment: [\r\n\r\n\t\t\"#ifdef USE_NORMALMAP\",\r\n\r\n\t\t\t\"uniform sampler2D normalMap;\",\r\n\t\t\t\"uniform vec4 normalOffsetRepeat;\",\r\n\t\t\t\"uniform vec2 normalScale;\",\r\n\r\n\t\t\t// Per-Pixel Tangent Space Normal Mapping\r\n\t\t\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\r\n\r\n\t\t\t\"vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\",\r\n\r\n\t\t\t\t\"#ifdef GL_OES_standard_derivatives\",\r\n\r\n\t\t\t\t\t\"vec2 vNormalUv = applyUVOffsetRepeat( vUv, normalOffsetRepeat );\",\r\n\r\n\t\t\t\t\t\"vec3 q0 = dFdx( eye_pos.xyz );\",\r\n\t\t\t\t\t\"vec3 q1 = dFdy( eye_pos.xyz );\",\r\n\t\t\t\t\t\"vec2 st0 = dFdx( vNormalUv.st );\",\r\n\t\t\t\t\t\"vec2 st1 = dFdy( vNormalUv.st );\",\r\n\r\n\t\t\t\t\t\"vec3 S = normalize(  q0 * st1.t - q1 * st0.t );\",\r\n\t\t\t\t\t\"vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\",\r\n\t\t\t\t\t\"vec3 N = normalize( surf_norm );\",\r\n\r\n\t\t\t\t\t\"vec3 mapN = texture2D( normalMap, vNormalUv ).xyz * 2.0 - 1.0;\",\r\n\t\t\t\t\t\"mapN.xy = normalScale * mapN.xy;\",\r\n\t\t\t\t\t\"mat3 tsn = mat3( S, T, N );\",\r\n\t\t\t\t\t\"return normalize( tsn * mapN );\",\r\n\r\n\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\"return surf_norm;\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// ANISOTROPY MAP\r\n\r\n\tanisotropymap_pars_fragment: [\r\n\r\n\t\t\"#ifdef USE_ANISOTROPYMAP\",\r\n\r\n\t\t\t\"uniform sampler2D anisotropyMap;\",\r\n\t\t\t\"uniform vec4 anisotropyGainBrightness;\",\r\n\t\t\t\"uniform vec4 anisotropyOffsetRepeat;\",\r\n\r\n\t\t\"#endif\"\r\n\t].join(\"\\n\"),\r\n\r\n\tanisotropymap_fragment: [\r\n\r\n\t\t\"#ifdef USE_ANISOTROPYMAP\",\r\n\r\n\t\t\t\"vec2 vAnisotropyUv = applyUVOffsetRepeat( vUv, anisotropyOffsetRepeat );\",\r\n\r\n\t\t\"#else\",\r\n\r\n\t\t\t\"#ifdef ANISOTROPY\",\r\n\r\n\t\t\t\t\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_REFLECTIVITYMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALLICMAP ) || defined( USE_OPACITYMAP ) || defined( USE_FALLOFFMAP ) || defined( USE_TRANSLUCENCYMAP ) || defined( USE_ANISOTROPYMAP ) || defined( USE_ANISOTROPYROTATIONMAP )\",\r\n\r\n\t\t\t\t\t\"vec2 vAnisotropyUv = vUv;\",\r\n\r\n\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\"vec2 vAnisotropyUv = vec2( 0, 0 );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"float anisotropyStrength = anisotropy;\",\r\n\r\n\t\t\"#ifdef USE_ANISOTROPYMAP\",\r\n\r\n\t\t\t\"vec4 texelAnisotropy = applyGainBrightness( texture2D( anisotropyMap, vAnisotropyUv ), anisotropyGainBrightness );\",\r\n\t\t\t\"anisotropyStrength = clamp( anisotropyStrength + texelAnisotropy.r, -1.0, 1.0 );\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// ANISOTROPY ROTATION MAP\r\n\r\n\tanisotropyrotationmap_pars_fragment: [\r\n\r\n\t\t\"#ifdef USE_ANISOTROPYROTATIONMAP\",\r\n\r\n\t\t\t\"uniform sampler2D anisotropyRotationMap;\",\r\n\t\t\t\"uniform vec4 anisotropyRotationGainBrightness;\",\r\n\t\t\t\"uniform vec4 anisotropyRotationOffsetRepeat;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tanisotropyrotationmap_fragment: [\r\n\r\n\t\t\"float anisotropyRotationStrength = anisotropyRotation;\",\r\n\r\n\t\t\"#ifdef USE_ANISOTROPYROTATIONMAP\",\r\n\r\n\t\t\t\"vec2 vAnisotropyRotationUv = applyUVOffsetRepeat( vUv, anisotropyRotationOffsetRepeat );\",\r\n\t\t\t\"vec4 texelAnisotropyRotation = applyGainBrightness( texture2D( anisotropyRotationMap, vAnisotropyRotationUv ), anisotropyRotationGainBrightness );\",\r\n\t\t\t\"anisotropyRotationStrength += texelAnisotropyRotation.r;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// METALLIC MAP\r\n\r\n\tmetallicmap_pars_fragment: [\r\n\r\n\t\t\"#ifdef USE_METALLICMAP\",\r\n\r\n\t\t\t\"uniform sampler2D metallicMap;\",\r\n\t\t\t\"uniform vec4 metallicGainBrightness;\",\r\n\t\t\t\"uniform vec4 metallicOffsetRepeat;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tmetallicmap_fragment: [\r\n\r\n\t\t\"float metallicStrength = metallic;\",\r\n\r\n\t\t\"#ifdef USE_METALLICMAP\",\r\n\r\n\t\t\t\"vec2 vMetallicUv = applyUVOffsetRepeat( vUv, metallicOffsetRepeat );\",\r\n\t\t\t\"vec4 texelMetallic = applyGainBrightness( texture2D( metallicMap, vMetallicUv ), metallicGainBrightness );\",\r\n\t\t\t\"metallicStrength = clamp( metallicStrength * texelMetallic.r, 0.0, 1.0 );\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// ROUGHNESS MAP\r\n\r\n\troughnessmap_pars_fragment: [\r\n\r\n\t\t\"#ifdef USE_ROUGHNESSMAP\",\r\n\r\n\t\t\t\"uniform sampler2D roughnessMap;\",\r\n\t\t\t\"uniform vec4 roughnessOffsetRepeat;\",\r\n\t\t\t\"uniform vec4 roughnessGainBrightness;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\troughnessmap_fragment: [\r\n\r\n\t\t\"float roughnessStrength = roughness;\",\r\n\r\n\t\t\"#ifdef USE_ROUGHNESSMAP\",\r\n\r\n\t\t\t\"vec2 vRoughnessUv = applyUVOffsetRepeat( vUv, roughnessOffsetRepeat );\",\r\n\t\t\t\"vec4 texelRoughness = applyGainBrightness( texture2D( roughnessMap, vRoughnessUv ), roughnessGainBrightness );\",\r\n\t\t\t\"roughnessStrength = clamp( roughnessStrength * texelRoughness.r, 0.0, 1.0 );\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// SPECULAR MAP\r\n\r\n\tspecularmap_pars_fragment: [\r\n\r\n\t\t\"#ifdef USE_SPECULARMAP\",\r\n\r\n\t\t\t\"uniform sampler2D specularMap;\",\r\n\t\t\t\"uniform vec4 specularGainBrightness;\",\r\n\t\t\t\"uniform vec4 specularOffsetRepeat;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tspecularmap_fragment: [\r\n\r\n\t\t\"#ifdef PHYSICAL\",\r\n\t\t\t\"vec3 specularColor = specular;\",\r\n\t\t\"#else\",\r\n\t\t\t\"float specularStrength = 1.0;\",\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#ifdef USE_SPECULARMAP\",\r\n\r\n\t\t\t\"vec2 vSpecularUv = applyUVOffsetRepeat( vUv, specularOffsetRepeat );\",\r\n\t\t\t\"vec4 texelSpecular = applyGainBrightness( texelDecode( texture2D( specularMap, vSpecularUv ), ENCODING_sRGB ), specularGainBrightness );\",\r\n\r\n\t\t\t\"#ifdef PHYSICAL\",\r\n\t\t\t\t\"specularColor.rgb = clamp( specularColor.rgb * texelSpecular.rgb, vec3( 0.0 ), vec3( 1.0 ) );\",\r\n\t\t\t\"#else\",\r\n\t\t\t\t\"specularStrength = clamp( specularStrength * texelSpecular.r, 0.0, 1.0 );\",\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// LIGHTS LAMBERT\r\n\r\n\tlights_lambert_pars_vertex: [\r\n\r\n\t\t\"uniform vec3 ambient;\",\r\n\t\t\"uniform vec3 diffuse;\",\r\n\t\t\"uniform vec3 emissive;\",\r\n\r\n\t\t\"uniform vec3 ambientLightColor;\",\r\n\r\n\t\t\"#if MAX_DIR_LIGHTS > 0\",\r\n\r\n\t\t\t\"uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_HEMI_LIGHTS > 0\",\r\n\r\n\t\t\t\"uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n\t\t\t\"uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\",\r\n\t\t\t\"uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\",\r\n\t\t\t\"uniform float pointLightDecayExponent[ MAX_POINT_LIGHTS ];\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n\t\t\t\"uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\"uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\"uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\"uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\"uniform float spotLightDecayExponent[ MAX_SPOT_LIGHTS ];\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_AREA_LIGHTS > 0\",\r\n\r\n\t\t\t\"uniform vec3 areaLightColor[ MAX_AREA_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 areaLightPosition[ MAX_AREA_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 areaLightWidth[ MAX_AREA_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 areaLightHeight[ MAX_AREA_LIGHTS ];\",\r\n\t\t\t\"uniform float areaLightDistance[ MAX_AREA_LIGHTS ];\",\r\n\t\t\t\"uniform float areaLightDecayExponent[ MAX_AREA_LIGHTS ];\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#ifdef WRAP_AROUND\",\r\n\r\n\t\t\t\"uniform vec3 wrapRGB;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tlights_lambert_vertex: [\r\n\r\n\t\t\"vLightFront = vec3( 0.0 );\",\r\n\r\n\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"vLightBack = vec3( 0.0 );\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"transformedNormal = normalize( transformedNormal );\",\r\n\r\n\t\t\"#if MAX_DIR_LIGHTS > 0\",\r\n\r\n\t\t\"for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\",\r\n\r\n\t\t\t\"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\",\r\n\t\t\t\"vec3 dirVector = normalize( lDirection.xyz );\",\r\n\r\n\t\t\t\"float dotProduct = dot( transformedNormal, dirVector );\",\r\n\t\t\t\"vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\t\"vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\",\r\n\r\n\t\t\t\t\"#ifdef WRAP_AROUND\",\r\n\r\n\t\t\t\t\t\"vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"#ifdef WRAP_AROUND\",\r\n\r\n\t\t\t\t\"vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\",\r\n\t\t\t\t\"directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\",\r\n\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\t\t\"directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"vLightFront += directionalLightColor[ i ] * directionalLightWeighting;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\t\"vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\"}\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n\t\t\t\"for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\",\r\n\r\n\t\t\t\t\"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\",\r\n\t\t\t\t\"vec3 lVector = lPosition.xyz - mvPosition.xyz;\",\r\n\r\n\t\t\t\t\"float distanceAttenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecayExponent[i] );\",\r\n\r\n\t\t\t\t\"lVector = normalize( lVector );\",\r\n\t\t\t\t\"float dotProduct = dot( transformedNormal, lVector );\",\r\n\r\n\t\t\t\t\"vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\",\r\n\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\t\t\"vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\",\r\n\r\n\t\t\t\t\t\"#ifdef WRAP_AROUND\",\r\n\r\n\t\t\t\t\t\t\"vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"#ifdef WRAP_AROUND\",\r\n\r\n\t\t\t\t\t\"vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\",\r\n\t\t\t\t\t\"pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\",\r\n\r\n\t\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\t\t\t\"pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"vLightFront += pointLightColor[ i ] * pointLightWeighting * distanceAttenuation;\",\r\n\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\t\t\"vLightBack += pointLightColor[ i ] * pointLightWeightingBack * distanceAttenuation;\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n\t\t\t\"for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\",\r\n\r\n\t\t\t\t\"vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\",\r\n\t\t\t\t\"vec3 lVector = lPosition.xyz - mvPosition.xyz;\",\r\n\r\n\t\t\t\t\"float distanceAttenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecayExponent[i] );\",\r\n\r\n\t\t\t\t\"float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\",\r\n\r\n\t\t\t\t\"if ( spotEffect > spotLightAngleCos[ i ] ) {\",\r\n\r\n\t\t\t\t\t\"spotEffect = pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] );\",\r\n\r\n\t\t\t\t\t\"lVector = normalize( lVector );\",\r\n\r\n\t\t\t\t\t\"float dotProduct = dot( transformedNormal, lVector );\",\r\n\t\t\t\t\t\"vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\",\r\n\r\n\t\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\t\t\t\"vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\",\r\n\r\n\t\t\t\t\t\t\"#ifdef WRAP_AROUND\",\r\n\r\n\t\t\t\t\t\t\t\"vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\",\r\n\r\n\t\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\t\"#ifdef WRAP_AROUND\",\r\n\r\n\t\t\t\t\t\t\"vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\",\r\n\t\t\t\t\t\t\"spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\",\r\n\r\n\t\t\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\t\t\t\t\"spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\",\r\n\r\n\t\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\t\"vLightFront += spotLightColor[ i ] * spotLightWeighting * distanceAttenuation * spotEffect;\",\r\n\r\n\t\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\t\t\t\"vLightBack += spotLightColor[ i ] * spotLightWeightingBack * distanceAttenuation * spotEffect;\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"}\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_HEMI_LIGHTS > 0\",\r\n\r\n\t\t\t\"for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\",\r\n\r\n\t\t\t\t\"vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\",\r\n\t\t\t\t\"vec3 lVector = normalize( lDirection.xyz );\",\r\n\r\n\t\t\t\t\"float dotProduct = dot( transformedNormal, lVector );\",\r\n\r\n\t\t\t\t\"float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\",\r\n\t\t\t\t\"float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\",\r\n\r\n\t\t\t\t\"vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\",\r\n\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\t\t\"vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"vLightFront = ( vLightFront + ambientLightColor + ambient) * diffuse + emissive;\",\r\n\r\n\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"vLightBack = ( vLightFront + ambientLightColor + ambient) * diffuse + emissive;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// LIGHTS PHYSICAL\r\n\r\n\tlights_physical_pars_vertex: [\r\n\r\n\t\t\"#if MAX_SPOT_LIGHTS > 0 || MAX_AREA_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\r\n\tlights_physical_vertex: [\r\n\r\n\t\t\"#if MAX_SPOT_LIGHTS > 0 || MAX_AREA_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\",\r\n\r\n\t\t\t\"vWorldPosition = worldPosition.xyz;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#ifdef USE_SKINNING\",\r\n\r\n\t\t\t\"vNormal = normalize( normalMatrix * skinnedNormal.xyz );\",\r\n\r\n\t\t\t\"vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\",\r\n\t\t\t\"vTangent = normalize( normalMatrix * skinnedTangent.xyz );\",\r\n\r\n\t\t\"#else\",\r\n\r\n\t\t\t\"vNormal = normalize( normalMatrix * normal );\",\r\n\t\t\t\"vTangent = normalize( normalMatrix * tangent.xyz );\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\",\r\n\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tlights_physical_pars_fragment: [\r\n\r\n\t\t\"uniform vec3 ambientLightColor;\",\r\n\r\n\t\t\"#if MAX_DIR_LIGHTS > 0\",\r\n\r\n\t\t\t\"uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_HEMI_LIGHTS > 0\",\r\n\r\n\t\t\t\"uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n\t\t\t\"uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\",\r\n\t\t\t\"uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\",\r\n\t\t\t\"uniform float pointLightDecayExponent[ MAX_POINT_LIGHTS ];\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n\t\t\t\"uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\"uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\"uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\"uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\"uniform float spotLightDecayExponent[ MAX_SPOT_LIGHTS ];\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_AREA_LIGHTS > 0\",\r\n\r\n\t\t\t\"uniform vec3 areaLightColor[ MAX_AREA_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 areaLightPosition[ MAX_AREA_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 areaLightWidth[ MAX_AREA_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 areaLightHeight[ MAX_AREA_LIGHTS ];\",\r\n\t\t\t\"uniform float areaLightDistance[ MAX_AREA_LIGHTS ];\",\r\n\t\t\t\"uniform float areaLightDecayExponent[ MAX_AREA_LIGHTS ];\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_SPOT_LIGHTS > 0 || MAX_AREA_LIGHTS > 0 || defined( USE_BUMPMAP )\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#ifdef WRAP_AROUND\",\r\n\r\n\t\t\t\"uniform vec3 wrapRGB;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"varying vec3 vViewPosition;\",\r\n\t\t\"varying vec3 vTangent;\",\r\n\t\t\"varying vec3 vBinormal;\",\r\n\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t// classic Fresnel Schlick\r\n\t\t/*\"float Fresnel_Schlick( float hDotV ) {\",\r\n\t\t\t\"float F0 = 0.04;\",\r\n\t\t\t\"return F0 + ( 1.0 - F0 ) * pow( 1.0 - hDotV, 5.0 );\",\r\n\t\t\"}\",*/\r\n\r\n\t\t// Calcuate the Fresnel term using the Schlick approximation (using Unreal's blend to white method)  VALIDATED\r\n\t\t\"vec3 Fresnel_Schlick_SpecularBlendToWhite(vec3 specularColor, float hDotV) {\",\r\n\t\t\t\"float Fc = pow(max( 1.0 - hDotV, 0.0 ), 5.0);\",\r\n    \t\t\"return saturate( 50.0 * average( specularColor ) ) * Fc + (1.0 - Fc) * specularColor;\",\r\n\t\t\"}\",\r\n\r\n\t\t\"vec3 Fresnel_Schlick_SpecularBlendToWhiteRoughness(vec3 specularColor, float hDotV, float roughness) {\",\r\n\t\t\t\"float Fc = pow(max( 1.0 - hDotV, 0.0 ), 5.0) / ( 1.0 + 3.0 * roughness );\",\r\n\r\n    \t\t\"return mix( specularColor, vec3( saturate( 50.0 * average( specularColor ) ) ), Fc );\",\r\n\t\t\"}\",\r\n\r\n\t    // Calculate the distribution term  VALIDATED\r\n\t\t\"float Distribution_GGX( float roughness2, float nDotH ) {\",\r\n\t\t\t\"float denom = nDotH * nDotH * (roughness2 - 1.0) + 1.0;\",\r\n    \t\t\"return roughness2 / ( PI * square( denom ) + 0.0000001 );\",\r\n\t\t\"}\",\r\n\r\n\t\t// Calculated the anisotropic GGZ distrubtion term     VALIDATED\r\n\t\t\"float Distribution_GGXAniso( vec2 anisotropicM, vec2 xyDotH, float nDotH ) {\",\r\n    \t\t\"float anisoTerm = ( xyDotH.x * xyDotH.x / ( anisotropicM.x * anisotropicM.x ) + xyDotH.y * xyDotH.y / ( anisotropicM.y * anisotropicM.y ) + nDotH * nDotH );\",\r\n    \t\t\"return 1.0 / ( PI * anisotropicM.x * anisotropicM.y * anisoTerm * anisoTerm + 0.0000001 );\",\r\n\t\t\"}\",\r\n\r\n\t\t// useful for clear coat surfaces, use with Distribution_GGX.\r\n\t\t\"float Visibility_Kelemen( float vDotH ) {\",\r\n\t\t\t\"return 1.0 / ( 4.0 * vDotH * vDotH + 0.0000001 );\",\r\n\t\t\"}\",\r\n\r\n\t\t\"float Visibility_Schlick( float roughness2, float nDotL, float nDotV) {\",\r\n    \t\t\"float termL = (nDotL + sqrt(roughness2 + (1.0 - roughness2) * nDotL * nDotL));\",\r\n    \t\t\"float termV = (nDotV + sqrt(roughness2 + (1.0 - roughness2) * nDotV * nDotV));\",\r\n    \t\t\"return 1.0 / ( abs( termL * termV ) + 0.0000001 );\",\r\n\t\t\"}\",\r\n\r\n\t\t\"float Diffuse_Lambert() {\",\r\n    \t\t\"return 1.0 / PI;\",\r\n\t\t\"}\",\r\n\r\n\t\t\"float Diffuse_OrenNayer( float m2, float nDotV, float nDotL, float vDotH ) {\",\r\n\t\t\t\"float termA = 1.0 - 0.5 * m2 / (m2 + 0.33);\",\r\n\t\t\t\"float Cosri = 2.0 * vDotH - 1.0 - nDotV * nDotL;\",\r\n\t\t\t\"float termB = 0.45 * m2 / (m2 + 0.09) * Cosri * ( Cosri >= 0.0 ? min( 1.0, nDotL / nDotV ) : nDotL );\",\r\n\t\t\t\"return 1.0 / PI * ( nDotL * termA + termB );\",\r\n\t\t\"}\",\r\n\r\n\t\t// Helper for anisotropy rotation\r\n\t\t\"mat2 createRotationMat2( float rads) {\",\r\n\t\t\t\"float cos_rads = cos( rads );\",\r\n\t\t\t\"float sin_rads = sin( rads );\",\r\n    \t\t\"return mat2( vec2( cos_rads, sin_rads ), vec2( -sin_rads, cos_rads ) );\",\r\n\t\t\"}\",\r\n\r\n\t\t// Helper for anisotropy rotation\r\n\t\t\"vec2 calcAnisotropyUV( float anisotropyLocal) {\",\r\n\t\t\t\"float oneMinusAbsAnisotropy = 1.0 - min( abs( anisotropyLocal ) * 0.9, 0.9 );\",\r\n\t\t\t\"vec2 anisotropyUV = vec2 ( 1.0 / oneMinusAbsAnisotropy, oneMinusAbsAnisotropy );\",\r\n\t\t\t\"if( anisotropy < 0.0 ) {\",\r\n\t\t\t\t\"anisotropyUV.xy = anisotropyUV.yx;\", // swizzel\r\n\t\t\t\"}\",\r\n    \t\t\"return anisotropyUV;\",\r\n\t\t\"}\"\r\n\r\n\t\t//\"float horizonOcclusion( vec3 reflectionVector, vec3 originalNormal ) {\",\r\n\t\t//\t\"return quare( saturate( 1.0 + uHorizonOcclude*dot( dir, vertexNormal ) ) );\",\r\n\t\t//\"}\"\r\n\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tlights_physical_fragment: [\r\n\r\n\t\t\"mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normal );\",\r\n\r\n\t\t\"#ifdef USE_NORMALMAP\",\r\n\r\n\t\t\t\"normal = perturbNormal2Arb( -vViewPosition, normal );\",\r\n\r\n\t\t\t/*\"vec3 normalTex = texture2D( normalMap, vNormalUv ).xyz * 2.0 - 1.0;\",\r\n\t\t\t\"normalTex.xy *= normalScale;\",\r\n\t\t\t\"normalTex = perturbNormal2Arb( -viewDirection, normal );\",\r\n\r\n\t\t\t\"normal = tsb * normalTex;\",*/\r\n\r\n\t\t//\"vec3 originalNormal = normal;\",\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if defined( USE_BUMPMAP )\",\r\n\r\n\t\t\t\"normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#ifdef FALLOFF\",\r\n\r\n\t\t\t\"vec3 modulatedFalloffColor = falloffColor;\",\r\n\r\n\t\t\t\"#ifdef USE_FALLOFFMAP\",\r\n\r\n\t\t\t\t\"vec4 falloffTexelColor = texelDecode( texture2D( falloffMap, vUvLocal ), ENCODING_sRGB );\",\r\n\r\n\t\t\t\t\"modulatedFalloffColor = modulatedFalloffColor * falloffTexelColor.xyz;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"float fm = abs( dot( normal, viewDirection ) );\",\r\n\r\n\t\t\t// this is a hack, it needs to be fixed.\r\n\t\t\t\"fm = /*falloffBlendParams.x * fm + falloffBlendParams.y * */ ( fm * fm * ( 3.0 - 2.0 * fm ) );\",\r\n\r\n\t\t\t\"diffuseColor = mix( modulatedFalloffColor, diffuseColor, fm );\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"float nDotV = saturate( dot( normal, viewDirection ) );\",\r\n\t\t\"float m2 = pow( clamp( roughnessStrength, 0.02, 1.0 ), 4.0 );\",\r\n\t\t// specular is scaled by 0.08 per Disney PBR recommendations.\r\n\t\t\"float m2ClearCoat = pow( clamp( clearCoatRoughness, 0.02, 1.0 ), 4.0 );\",\r\n\r\n\t\t\"specularColor = mix( specularColor * SPECULAR_COEFF, diffuseColor, metallicStrength );\",\r\n\t\t\"diffuseColor *= ( 1.0 - metallicStrength );\",\r\n\r\n\t\t\"#ifdef ANISOTROPY\",\r\n\r\n\t\t\t\"vec2 anisotropicM = calcAnisotropyUV( anisotropyStrength ) * sqrt( m2 );\",\r\n\r\n\t\t\t\"#ifdef ANISOTROPYROTATION\",\r\n\t\t\t\t\"mat2 anisotropicRotationMatrix = createRotationMat2( anisotropyRotationStrength * 2.0 * PI );\",\r\n    \t\t\"#endif\",\r\n\r\n\t\t\t\"vec3 anisotropicS = tsb[1];\",\t// binormal in eye space.\r\n\t\t\t\"vec3 anisotropicT = tsb[0];\",\t// tangent in eye space.\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"vec3 totalLighting  = vec3( 0.0 );\",\r\n\r\n\t\t\"#if ( defined( USE_ENVMAP ) || defined( USE_DIFFUSEENVMAP ) ) && defined( PHYSICAL )\",\r\n\r\n\t\t\t\"{\",\r\n\r\n\t\t\t\t\"vec3 worldNormal = vec3( normalize( ( vec4( normal, 0.0 ) * viewMatrix ).xyz ) );\",\r\n\t\t\t\t\"vec3 worldView = -vec3( normalize( ( vec4( viewDirection, 0.0 ) * viewMatrix ).xyz ) );\",\r\n\r\n\t\t\t\t\"vec3 reflectVec = reflect( worldView, worldNormal );\",\r\n\r\n\t\t\t\t\"vec3 hVector = normal;//normalize( viewDirection.xyz + lVector.xyz );\",\r\n\t\t\t\t\"float nDotH = saturate( dot( normal, normal ) );\",\r\n\t\t\t\t\"float hDotV = saturate( dot( normal, viewDirection ) );\",\r\n\t\t\t\t\"float nDotL = hDotV;//saturate( dot( normal, lVector ) );\",\r\n\r\n\r\n\t\t\t\t\"vec3 queryVector = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\",\r\n\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\t\t\"queryVector *= ( -1.0 + 2.0 * float( gl_FrontFacing ) );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"vec3 worldEnvNormal = vec3( normalize( ( vec4( normal, 0.0 ) * viewMatrix ).xyz ) );\",\r\n\t\t\t\t\"worldEnvNormal = vec3( flipEnvMap * worldEnvNormal.x, worldEnvNormal.yz );\",\r\n\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\t\t\"worldEnvNormal *= ( -1.0 + 2.0 * float( gl_FrontFacing ) );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t// calculate diffuse map contribution\r\n\r\n\t\t\t\t\"vec4 diffuseEnvColor = vec4( 0.0, 0.0, 0.0, 1.0 );\",\r\n\r\n\t\t\t\t\"#if defined( USE_DIFFUSEENVMAP )\",\r\n\r\n\t\t\t\t\t\"diffuseEnvColor = texelDecode( textureCube( diffuseEnvMap, worldEnvNormal ), diffuseEnvEncoding );\",\r\n\r\n\t\t\t\t\"#elif defined( USE_ENVMAP )\",\r\n\r\n\t\t\t\t\t\"#if defined( TEXTURE_CUBE_LOD_EXT )\",\r\n\r\n\t\t\t\t\t\t\"diffuseEnvColor = texelDecode( textureCubeLodEXT( envMap, worldEnvNormal, 9.5 ), envEncoding );\",\r\n\r\n\t\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\t\"diffuseEnvColor = texelDecode( textureCube( envMap, worldEnvNormal, 10.0 ), envEncoding );\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t// calculate specular map contribution\r\n\r\n\t\t\t\t\"vec4 specularEnvColor = vec4( 0.0, 0.0, 0.0, 1.0 );\",\r\n\r\n\t\t\t\t\"#if defined( USE_ENVMAP )\",\r\n\r\n\t\t\t\t\t\"#if defined( TEXTURE_CUBE_LOD_EXT )\",\r\n\r\n\t\t\t\t\t\t\"specularEnvColor = texelDecode( textureCubeLodEXT( envMap, queryVector, roughnessStrength * 9.5 ), envEncoding );\",\r\n\r\n\t\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\t\"specularEnvColor = mix( texelDecode( textureCube( envMap, queryVector ), envEncoding ), texelDecode( textureCube( envMap, queryVector, 10.0 ), envEncoding ), roughnessStrength );\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"vec3 specClearCoat = vec3(0, 0, 0);\",\r\n\r\n\t\t\t\t\"#if defined( CLEARCOAT ) && defined( USE_ENVMAP )\",\r\n\r\n\t\t\t\t\t\"#if defined( TEXTURE_CUBE_LOD_EXT )\",\r\n\r\n\t\t\t\t\t\t\"vec4 specularClearCoatEnvColor = texelDecode( textureCubeLodEXT( envMap, queryVector, clearCoatRoughness * 9.5 ), envEncoding );\",\r\n\r\n\t\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\t\"vec4 specularClearCoatEnvColor = mix( texelDecode( textureCube( envMap, queryVector ), envEncoding ), texelDecode( textureCube( envMap, queryVector, 10.0 ), envEncoding ), clearCoatRoughness );\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\t\"vec3 fresnelClearCoat = Fresnel_Schlick_SpecularBlendToWhiteRoughness( vec3( SPECULAR_COEFF ), nDotL, m2ClearCoat );\",\r\n\t\t\t\t\t\"specClearCoat = specularClearCoatEnvColor.rgb * fresnelClearCoat;\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t    \"vec3 fresnelColor = Fresnel_Schlick_SpecularBlendToWhiteRoughness( specularColor, nDotL, m2 );\",\r\n\r\n\t\t\t    // Put it all together\r\n\t\t\t    \"vec3 spec = fresnelColor * specularEnvColor.rgb;\",\r\n\t\t\t    \"vec3 diff = diffuseColor * diffuseEnvColor.rgb;\",  // no Diffuse_Lambert() term, it is baked into irradiance.\r\n\r\n\t\t\t    \"vec3 shadingResult = spec + diff;\",\r\n\r\n\t\t\t    \"#ifdef CLEARCOAT\",\r\n\r\n\t\t\t\t\t\"shadingResult = mix( shadingResult, specClearCoat, clearCoat );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\t\t\t\t\t\t\t    // diffuse\r\n\t\t\t\t\"totalLighting  += shadingResult;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n\t\t\t\"for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\",\r\n\r\n\t\t\t\t\"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\",\r\n\t\t\t\t\"vec3 lVector = lPosition.xyz + vViewPosition.xyz;\",\r\n\r\n\t\t\t\t\"float distanceAttenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecayExponent[i] );\",\r\n\r\n\t\t\t\t\"vec3 incidentLight = pointLightColor[ i ] * distanceAttenuation;\",\r\n\r\n\t\t\t\t\"lVector = normalize( lVector );\",\r\n\r\n\t\t\t\t// diffuse\r\n\r\n\t\t\t\t\"vec3 hVector = normalize( viewDirection.xyz + lVector.xyz );\",\r\n\t\t\t\t\"float nDotH = saturate( dot( normal, hVector ) );\",\r\n\t\t\t\t\"float nDotL = saturate( dot( normal, lVector ) );\",\r\n\t\t\t\t\"float hDotV = saturate( dot( hVector, viewDirection ) );\",\r\n\r\n\t\t\t\t\"#ifdef CLEARCOAT\",\r\n\r\n\t\t\t\t\t\"float dClearCoat = Distribution_GGX( m2ClearCoat, nDotH );\",\r\n\t\t\t\t\t\"float visClearCoat = Visibility_Kelemen( hDotV );\",\r\n\t\t\t\t\t\"vec3 fresnelClearCoat = Fresnel_Schlick_SpecularBlendToWhite( vec3( SPECULAR_COEFF ), hDotV );\",\r\n\t\t\t\t\t\"vec3 specClearCoat = clamp( nDotL * dClearCoat * visClearCoat, 0.0, 10.0 ) * fresnelClearCoat;\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"#ifdef ANISOTROPY\",\r\n\r\n\t\t\t\t\t\"vec2 xyDotH = vec2( dot( anisotropicS, hVector ), dot( anisotropicT, hVector ) );\",\r\n\r\n\t\t\t\t\t\"#ifdef ANISOTROPYROTATION\",\r\n\t    \t\t\t\t\"xyDotH = anisotropicRotationMatrix * xyDotH;\",\r\n\t\t    \t\t\"#endif\",\r\n\r\n\t\t\t\t\t\"float d = Distribution_GGXAniso( anisotropicM, xyDotH, nDotH );\",\r\n\r\n\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t    \"float d = Distribution_GGX( m2, nDotH );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"float vis = Visibility_Schlick(m2, nDotL, nDotV);\",\r\n\t\t\t    \"vec3 fresnelColor = Fresnel_Schlick_SpecularBlendToWhite( specularColor, hDotV );\",\r\n\r\n\t\t\t    // Put it all together\r\n\t\t\t    \"vec3 spec = clamp( nDotL * d * vis, 0.0, 10.0 ) * fresnelColor;\",\r\n\t\t\t    \"vec3 diff = nDotL * Diffuse_Lambert() * diffuseColor;\",\r\n\r\n\t\t\t\t\"#ifdef TRANSLUCENCY\",\r\n\r\n\t\t\t\t    \"diff *= whiteCompliment( translucencyColor.xyz );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t    \"vec3 shadingResult = spec + diff;\",\r\n\r\n\t\t\t    \"#ifdef CLEARCOAT\",\r\n\r\n\t\t\t\t\t\"shadingResult = mix( shadingResult, specClearCoat, clearCoat );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\t\t\t\t\t\t\t    // diffuse\r\n\t\t\t\t\"totalLighting  += incidentLight * shadingResult;\",\r\n\r\n\t\t\t\t\"#ifdef TRANSLUCENCY\",\r\n\r\n\t\t\t\t\t\"float lightNormalTL = mix( 1.0, pow( abs( dot( lVector.xyz, normal ) ), translucencyNormalPower ), translucencyNormalAlpha );\",\r\n\r\n\t\t\t\t\t\"float viewNormalTL = mix( 1.0, pow( abs( dot( viewDirection.xyz, lVector.xyz) ), translucencyViewPower ), translucencyViewAlpha );\",\r\n\r\n\t\t\t\t\t\"totalLighting += lightNormalTL * viewNormalTL * translucencyColor.rgb * incidentLight;\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n\t\t\t\"for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\",\r\n\r\n\t\t\t\t\"vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\",\r\n\t\t\t\t\"vec3 lVector = lPosition.xyz + vViewPosition.xyz;\",\r\n\r\n\t\t\t\t\"float distanceAttenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecayExponent[i] );\",\r\n\r\n\t\t\t\t\"vec3 incidentLight = spotLightColor[ i ] * distanceAttenuation;\",\r\n\r\n\t\t\t\t\"lVector = normalize( lVector );\",\r\n\r\n\t\t\t\t\"float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\",\r\n\r\n\t\t\t\t\"if ( spotEffect > spotLightAngleCos[ i ] ) {\",\r\n\r\n\t\t\t\t\t\"spotEffect = pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] );\",\r\n\r\n\t\t\t\t\t// diffuse\r\n\r\n\t\t\t\t\t\"incidentLight *= spotEffect;\",\r\n\r\n\t\t\t\t\t\"vec3 hVector = normalize( viewDirection.xyz + lVector.xyz );\",\r\n\t\t\t\t\t\"float nDotH = saturate( dot( normal, hVector ) );\",\r\n\t\t\t\t\t\"float nDotL = saturate( dot( normal, lVector ) );\",\r\n\t\t\t\t\t\"float hDotV = saturate( dot( hVector, viewDirection ) );\",\r\n\r\n\t\t\t\t\t\"#ifdef CLEARCOAT\",\r\n\r\n\t\t\t\t\t\t\"float dClearCoat = Distribution_GGX( m2ClearCoat, nDotH );\",\r\n\t\t\t\t\t\t\"float visClearCoat = Visibility_Kelemen( hDotV );\",\r\n\t\t\t\t\t\t\"vec3 fresnelClearCoat = Fresnel_Schlick_SpecularBlendToWhite( vec3( SPECULAR_COEFF ), hDotV );\",\r\n\t\t\t\t\t\t\"vec3 specClearCoat = clamp( nDotL * dClearCoat * visClearCoat, 0.0, 10.0 ) * fresnelClearCoat;\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\t\"#ifdef ANISOTROPY\",\r\n\r\n\t\t\t\t\t\t\"vec2 xyDotH = vec2( dot( anisotropicS, hVector ), dot( anisotropicT, hVector ) );\",\r\n\r\n\t\t\t\t\t\t\"#ifdef ANISOTROPYROTATION\",\r\n\t\t    \t\t\t\t\"xyDotH = anisotropicRotationMatrix * xyDotH;\",\r\n\t\t\t    \t\t\"#endif\",\r\n\r\n\t\t\t\t\t\t\"float d = Distribution_GGXAniso( anisotropicM, xyDotH, nDotH );\",\r\n\r\n\t\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t    \"float d = Distribution_GGX( m2, nDotH );\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\t\"float vis = Visibility_Schlick(m2, nDotL, nDotV);\",\r\n\t\t\t\t    \"vec3 fresnelColor = Fresnel_Schlick_SpecularBlendToWhite( specularColor, hDotV );\",\r\n\r\n\t\t   \t\t\t// Put it all together\r\n\t\t\t\t    \"vec3 spec = clamp( nDotL * d * vis, 0.0, 10.0 ) * fresnelColor;\",\r\n\t\t\t\t    \"vec3 diff = nDotL * Diffuse_Lambert() * diffuseColor;\",\r\n\r\n\t\t\t\t\t\"#ifdef TRANSLUCENCY\",\r\n\r\n\t\t\t\t\t    \"diff *= whiteCompliment( translucencyColor.xyz );\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t    \"vec3 shadingResult = spec + diff;\",\r\n\r\n\t\t\t\t    \"#ifdef CLEARCOAT\",\r\n\r\n\t\t\t\t\t\t\"shadingResult = mix( shadingResult, specClearCoat, clearCoat );\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\t\t\t\t\t\t\t\t    // diffuse\r\n\t\t\t\t\t\"totalLighting  += incidentLight * shadingResult;\",\r\n\r\n\t\t\t\t\t\"#ifdef TRANSLUCENCY\",\r\n\r\n\t\t\t\t\t\t\"float lightNormalTL = mix( 1.0, pow( abs( dot( lVector.xyz, normal ) ), translucencyNormalPower ), translucencyNormalAlpha );\",\r\n\r\n\t\t\t\t\t\t\"float viewNormalTL = mix( 1.0, pow( abs( dot( viewDirection.xyz, lVector.xyz) ), translucencyViewPower ), translucencyViewAlpha );\",\r\n\r\n\t\t\t\t\t\t\"totalLighting += lightNormalTL * viewNormalTL * translucencyColor.rgb * incidentLight;\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"}\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_DIR_LIGHTS > 0\",\r\n\r\n\t\t\t\"for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\",\r\n\r\n\t\t\t\t\"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\",\r\n\t\t\t\t\"vec3 lVector = normalize( lDirection.xyz );\",\r\n\r\n\t\t\t\t\"vec3 incidentLight = directionalLightColor[ i ];\",\r\n\r\n\t\t\t\t\"vec3 hVector = normalize( viewDirection.xyz + lVector.xyz );\",\r\n\t\t\t\t\"float nDotH = saturate( dot( normal, hVector ) );\",\r\n\t\t\t\t\"float nDotL = saturate( dot( normal, lVector ) );\",\r\n\t\t\t\t\"float hDotV = saturate( dot( hVector, viewDirection ) );\",\r\n\r\n\t\t\t\t\"#ifdef CLEARCOAT\",\r\n\r\n\t\t\t\t\t\"float dClearCoat = Distribution_GGX( m2ClearCoat, nDotH );\",\r\n\t\t\t\t\t\"float visClearCoat = Visibility_Kelemen( hDotV );\",\r\n\t\t\t\t\t\"vec3 fresnelClearCoat = Fresnel_Schlick_SpecularBlendToWhite( vec3( SPECULAR_COEFF ), hDotV );\",\r\n\t\t\t\t\t\"vec3 specClearCoat = clamp( nDotL * dClearCoat * visClearCoat, 0.0, 10.0 ) * fresnelClearCoat;\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"#ifdef ANISOTROPY\",\r\n\r\n\t\t\t\t\t\"vec2 xyDotH = vec2( dot( anisotropicS, hVector ), dot( anisotropicT, hVector ) );\",\r\n\r\n\t\t\t\t\t\"#ifdef ANISOTROPYROTATION\",\r\n\t    \t\t\t\t\"xyDotH = anisotropicRotationMatrix * xyDotH;\",\r\n\t\t    \t\t\"#endif\",\r\n\r\n\t\t\t\t\t\"float d = Distribution_GGXAniso( anisotropicM, xyDotH, nDotH );\",\r\n\r\n\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t    \"float d = Distribution_GGX( m2, nDotH );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"float vis = Visibility_Schlick(m2, nDotL, nDotV);\",\r\n\t\t\t    \"vec3 fresnelColor = Fresnel_Schlick_SpecularBlendToWhite( specularColor, hDotV );\",\r\n\r\n\t   \t\t\t// Put it all together\r\n\t\t\t    \"vec3 spec = clamp( nDotL * d * vis, 0.0, 10.0 ) * fresnelColor;\",\r\n\t\t\t    \"vec3 diff = nDotL * Diffuse_Lambert() * diffuseColor;\",\r\n\r\n\t\t\t\t\"#ifdef TRANSLUCENCY\",\r\n\r\n\t\t\t\t    \"diff *= whiteCompliment( translucencyColor.xyz );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t    \"vec3 shadingResult = spec + diff;\",\r\n\r\n\t\t\t    \"#ifdef CLEARCOAT\",\r\n\r\n\t\t\t\t\t\"shadingResult = mix( shadingResult, specClearCoat, clearCoat );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\t\t\t\t\t\t\t    // diffuse\r\n\t\t\t\t\"totalLighting  += incidentLight * shadingResult;\",\r\n\r\n\t\t\t\t\"#ifdef TRANSLUCENCY\",\r\n\r\n\t\t\t\t\t\"float lightNormalTL = mix( 1.0, pow( abs( dot( lVector.xyz, normal ) ), translucencyNormalPower ), translucencyNormalAlpha );\",\r\n\r\n\t\t\t\t\t\"float viewNormalTL = mix( 1.0, pow( abs( dot( viewDirection.xyz, lVector.xyz) ), translucencyViewPower ), translucencyViewAlpha );\",\r\n\r\n\t\t\t\t\t\"totalLighting += lightNormalTL * viewNormalTL * translucencyColor.rgb * incidentLight;\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_HEMI_LIGHTS > 0\",\r\n\r\n\t\t\t\"for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\",\r\n\r\n\t\t\t\t\"vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\",\r\n\t\t\t\t\"vec3 lVector = normalize( lDirection.xyz );\",\r\n\r\n\t\t\t\t// diffuse\r\n\r\n\t\t\t\t\"float nDotL = dot( normal, lVector );\",\r\n\r\n\t\t\t\t// based on page 325 of Real-Time Rendering., equation (8.43)\r\n\t\t\t\t\"vec3 hemiColor = ( PI / 2.0 ) * ( ( 1.0 + nDotL ) * hemisphereLightSkyColor[ i ] + ( 1.0 - nDotL ) * hemisphereLightGroundColor[ i ] );\",\r\n\r\n\t\t\t\t\"totalLighting += diffuseColor * hemiColor;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_AREA_LIGHTS > 0\",\r\n\r\n\t\t\t\"for( int i = 0; i < MAX_AREA_LIGHTS; i ++ ) {\",\r\n\r\n\t\t\t\t\"vec3 lPosition = ( viewMatrix * vec4( areaLightPosition[ i ], 1.0 ) ).xyz;\",\r\n\t\t\t\t//\"vec3 lVector = lPosition.xyz + vViewPosition.xyz;\",\r\n\r\n\t\t\t\t\"vec3 width = areaLightWidth[ i ];\",\r\n\t\t\t\t\"vec3 height = areaLightHeight[ i ];\",\r\n\t\t\t\t\"vec3 up = normalize( ( viewMatrix * vec4( height, 0.0 ) ).xyz );\",\r\n\t\t\t\t\"vec3 right = normalize( ( viewMatrix * vec4( width, 0.0 ) ).xyz );\",\r\n\t\t\t\t\"vec3 pnormal = normalize( cross( right, up ) );\",\r\n\r\n\t\t\t\t\"float widthScalar = length( width );\",\r\n\t\t\t\t\"float heightScalar = length( height );\",\r\n\r\n\t\t\t\t//project onto plane and calculate direction from center to the projection.\r\n\t\t\t\t\"vec3 projection = projectOnPlane( -vViewPosition.xyz, lPosition, pnormal );\",  // projection in plane\r\n\t\t\t\t\"vec3 dir = projection - lPosition;\",\r\n\r\n\t\t\t\t//calculate distance from area:\r\n\t\t\t\t\"vec2 diagonal = vec2( dot( dir, right ), dot( dir, up ) );\",\r\n\t\t\t\t\"vec2 nearest2D = vec2( clamp( diagonal.x, -widthScalar, widthScalar ), clamp( diagonal.y, -heightScalar, heightScalar ) );\",\r\n\t\t\t\t\"vec3 nearestPointInside = lPosition + ( right *nearest2D.x + up * nearest2D.y );\",\r\n\r\n\t\t\t\t\"vec3 lVector = ( nearestPointInside + vViewPosition.xyz );\",\r\n\t\t\t\t\"float distanceAttenuation = calcLightAttenuation( length( lVector ), areaLightDistance[ i ], areaLightDecayExponent[i] );\",\r\n\t\t\t\t\"lVector = normalize( lVector );\",\r\n\r\n\t\t\t\t\"vec3 incidentLight = areaLightColor[ i ] * distanceAttenuation * 0.01;\", // the 0.01 is the area light intensity scaling.\r\n\r\n\t\t\t\t\"float nDotLDiffuse = saturate( dot( normal, lVector ) );\",\r\n\r\n\t\t   \t\t\"vec3 diff = Diffuse_Lambert() * diffuseColor * widthScalar * heightScalar;\",\r\n\r\n\t\t\t\t\"vec3 viewReflection = reflect( viewDirection.xyz, normal );\",\r\n\t\t\t\t\"vec3 reflectionLightPlaneIntersection = linePlaneIntersect( -vViewPosition.xyz, viewReflection, lPosition, pnormal );\",\r\n\r\n\t\t\t\t\"float specAngle = dot( viewReflection, pnormal );\",\r\n\r\n\t\t\t\t\"if ( specAngle < 0.0 ) {\",\r\n\r\n\t\t\t\t\t\"vec3 dirSpec = reflectionLightPlaneIntersection - lPosition;\",\r\n\t\t\t\t\t\"vec2 dirSpec2D = vec2( dot( dirSpec, right ), dot( dirSpec, up ) );\",\r\n\t\t\t\t\t\"vec2 nearestSpec2D = vec2( clamp( dirSpec2D.x, -widthScalar, widthScalar ), clamp( dirSpec2D.y, -heightScalar, heightScalar ) );\",\r\n\t\t\t\t\t\"lVector = normalize( lPosition + ( right *nearestSpec2D.x + up * nearestSpec2D.y ) + vViewPosition.xyz );\",\r\n\r\n\t\t\t\t\"} else { \",\r\n\r\n\t\t\t\t\t\"lVector = vec3( 0 );\",\r\n\r\n\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\"vec3 hVector = normalize( viewDirection.xyz + lVector.xyz );\",\r\n\t\t\t\t\"float nDotH = saturate( dot( normal, hVector ) );\",\r\n\t\t\t\t\"float nDotL = saturate( dot( normal, lVector ) );\",\r\n\t\t\t\t\"float hDotV = saturate( dot( hVector, viewDirection ) );\",\r\n\r\n\t\t\t\t\"#ifdef CLEARCOAT\",\r\n\r\n\t\t\t\t\t\"float dClearCoat = Distribution_GGX( m2ClearCoat, nDotH );\",\r\n\t\t\t\t\t\"float visClearCoat = Visibility_Kelemen( hDotV );\",\r\n\t\t\t\t\t\"vec3 fresnelClearCoat = Fresnel_Schlick_SpecularBlendToWhite( vec3( SPECULAR_COEFF ), hDotV );\",\r\n\t\t\t\t\t\"vec3 specClearCoat = clamp( nDotL * dClearCoat * visClearCoat, 0.0, 10.0 ) * fresnelClearCoat;\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"#ifdef TRANSLUCENCY\",\r\n\r\n\t\t\t\t    \"diff *= whiteCompliment( translucencyColor.xyz );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"#ifdef CLEARCOAT\",\r\n\r\n\t\t\t\t\t\"diff = mix( diff, specClearCoat, clearCoat );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\r\n\t\t\t\t\"#ifdef ANISOTROPY\",\r\n\r\n\t\t\t\t\t\"vec2 xyDotH = vec2( dot( anisotropicS, hVector ), dot( anisotropicT, hVector ) );\",\r\n\r\n\t\t\t\t\t\"#ifdef ANISOTROPYROTATION\",\r\n\t    \t\t\t\t\"xyDotH = anisotropicRotationMatrix * xyDotH;\",\r\n\t\t    \t\t\"#endif\",\r\n\r\n\t\t\t\t\t\"float d = Distribution_GGXAniso( anisotropicM, xyDotH, nDotH );\",\r\n\r\n\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t    \"float d = Distribution_GGX( m2, nDotH );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"float vis = Visibility_Schlick(m2, nDotL, nDotV);\",\r\n\t\t\t    \"vec3 fresnelColor = Fresnel_Schlick_SpecularBlendToWhite( specularColor, hDotV );\",\r\n\r\n\t   \t\t\t// Put it all together\r\n\t\t\t    \"vec3 spec = clamp( nDotL * d * vis, 0.0, 10.0 ) * fresnelColor;\",\r\n\r\n\t\t\t\t\"totalLighting  += incidentLight * spec;\",\r\n\t\t\t\t\"totalLighting  += incidentLight * nDotLDiffuse * diff;\",\r\n\r\n\t\t\t\t\"#ifdef TRANSLUCENCY\",\r\n\r\n\t\t\t\t\t\"float lightNormalTL = mix( 1.0, pow( abs( dot( lVector.xyz, normal ) ), translucencyNormalPower ), translucencyNormalAlpha );\",\r\n\r\n\t\t\t\t\t\"float viewNormalTL = mix( 1.0, pow( abs( dot( viewDirection.xyz, lVector.xyz) ), translucencyViewPower ), translucencyViewAlpha );\",\r\n\r\n\t\t\t\t\t\"totalLighting += lightNormalTL * viewNormalTL * translucencyColor.rgb * incidentLight;\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#ifdef CLEARCOAT\",\r\n\r\n\t\t\t\"totalLighting += diffuseColor * ( ambientLightColor * ( 1.0 - clearCoat ) );\",\r\n\r\n\t\t\"#else\",\r\n\r\n\t\t\t\"totalLighting += diffuseColor * ambientLightColor;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"gl_FragColor.xyz += totalLighting;\",\r\n\r\n\t\t\"vec3 emissiveLocal = emissive;\",\r\n\r\n\t\t\"#ifdef USE_EMISSIVEMAP\",\r\n\r\n\t\t\t\"vec3 emissiveColor = texture2D( emissiveMap, vUv2 ).xyz;\",\r\n\r\n\t\t\t\"#ifdef GAMMA_INPUT\",\r\n\r\n\t\t\t\t\"emissiveColor *= emissiveColor;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"emissiveLocal *= emissiveColor;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"gl_FragColor.xyz += emissiveLocal;\",\r\n\r\n\t\t\"vec3 ambientLocal = ambient;\",\r\n\r\n\t\t\"#ifdef USE_LIGHTMAP\",\r\n\r\n\t\t\t\"vec3 ambientColor = texture2D( lightMap, vUv2 ).xyz;\",\r\n\r\n\t\t\t\"#ifdef GAMMA_INPUT\",\r\n\r\n\t\t\t\t\"ambientColor *= ambientColor;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"ambientLocal *= ambientColor;\",\r\n\r\n\t\t\t\"#ifdef CLEARCOAT\",\r\n\r\n\t\t\t\t\"ambientLocal *= ( 1.0 - clearCoat );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"gl_FragColor.xyz += diffuseColor * ambientLocal;\",\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// LIGHTS PHONG\r\n\r\n\tlights_phong_pars_vertex: [\r\n\r\n\t\t\"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\r\n\tlights_phong_vertex: [\r\n\r\n\t\t\"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\",\r\n\r\n\t\t\t\"vWorldPosition = worldPosition.xyz;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tlights_phong_pars_fragment: [\r\n\r\n\t\t\"uniform vec3 ambientLightColor;\",\r\n\r\n\t\t\"#if MAX_DIR_LIGHTS > 0\",\r\n\r\n\t\t\t\"uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_HEMI_LIGHTS > 0\",\r\n\r\n\t\t\t\"uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n\t\t\t\"uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\",\r\n\t\t\t\"uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\",\r\n\t\t\t\"uniform float pointLightDecayExponent[ MAX_POINT_LIGHTS ];\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n\t\t\t\"uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\"uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\"uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\"uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\"uniform float spotLightDecayExponent[ MAX_SPOT_LIGHTS ];\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_AREA_LIGHTS > 0\",\r\n\r\n\t\t\t\"uniform vec3 areaLightColor[ MAX_AREA_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 areaLightPosition[ MAX_AREA_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 areaLightWidth[ MAX_AREA_LIGHTS ];\",\r\n\t\t\t\"uniform vec3 areaLightHeight[ MAX_AREA_LIGHTS ];\",\r\n\t\t\t\"uniform float areaLightDistance[ MAX_AREA_LIGHTS ];\",\r\n\t\t\t\"uniform float areaLightDecayExponent[ MAX_AREA_LIGHTS ];\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_SPOT_LIGHTS > 0 || MAX_AREA_LIGHTS > 0 || defined( USE_BUMPMAP )\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#ifdef WRAP_AROUND\",\r\n\r\n\t\t\t\"uniform vec3 wrapRGB;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"varying vec3 vViewPosition;\",\r\n\t\t\"varying vec3 vNormal;\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tlights_phong_fragment: [\r\n\r\n\t\t\"vec3 normal = normalize( vNormal );\",\r\n\t\t\"vec3 viewDirection = normalize( vViewPosition );\",\r\n\r\n\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#ifdef USE_NORMALMAP\",\r\n\r\n\t\t\t\"normal = perturbNormal2Arb( -vViewPosition, normal );\",\r\n\r\n\t\t\"#elif defined( USE_BUMPMAP )\",\r\n\r\n\t\t\t\"normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n\t\t\t\"vec3 pointDiffuse  = vec3( 0.0 );\",\r\n\t\t\t\"vec3 pointSpecular = vec3( 0.0 );\",\r\n\r\n\t\t\t\"for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\",\r\n\r\n\t\t\t\t\"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\",\r\n\t\t\t\t\"vec3 lVector = lPosition.xyz + vViewPosition.xyz;\",\r\n\r\n\t\t\t\t\"float distanceAttenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecayExponent[i] );\",\r\n\r\n\t\t\t\t\"lVector = normalize( lVector );\",\r\n\r\n\t\t\t\t// diffuse\r\n\r\n\t\t\t\t\"float dotProduct = dot( normal, lVector );\",\r\n\r\n\t\t\t\t\"float pointDiffuseWeight = max( dotProduct, 0.0 );\",\r\n\r\n\t\t\t\t\"pointDiffuse  += pointLightColor[ i ] * pointDiffuseWeight * distanceAttenuation;\",\r\n\r\n\t\t\t\t// specular\r\n\r\n\t\t\t\t\"vec3 pointHalfVector = normalize( lVector + viewDirection );\",\r\n\t\t\t\t\"float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\",\r\n\t\t\t\t\"float pointSpecularWeight = specularStrength * pow( max( pointDotNormalHalf, 0.0 ), shininess );\",\r\n\r\n\t\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n\t\t\t\t\"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\r\n\r\n\t\t\t\t\"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\",\r\n\t\t\t\t\"pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * distanceAttenuation * specularNormalization;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n\t\t\t\"vec3 spotDiffuse  = vec3( 0.0 );\",\r\n\t\t\t\"vec3 spotSpecular = vec3( 0.0 );\",\r\n\r\n\t\t\t\"for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\",\r\n\r\n\t\t\t\t\"vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\",\r\n\t\t\t\t\"vec3 lVector = lPosition.xyz + vViewPosition.xyz;\",\r\n\r\n\t\t\t\t\"float distanceAttenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecayExponent[i] );\",\r\n\r\n\t\t\t\t\"lVector = normalize( lVector );\",\r\n\r\n\t\t\t\t\"float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\",\r\n\r\n\t\t\t\t\"if ( spotEffect > spotLightAngleCos[ i ] ) {\",\r\n\r\n\t\t\t\t\t\"spotEffect = pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] );\",\r\n\r\n\t\t\t\t\t// diffuse\r\n\r\n\t\t\t\t\t\"float dotProduct = dot( normal, lVector );\",\r\n\r\n\t\t\t\t\t\"#ifdef WRAP_AROUND\",\r\n\r\n\t\t\t\t\t\t\"float spotDiffuseWeightFull = max( dotProduct, 0.0 );\",\r\n\t\t\t\t\t\t\"float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\",\r\n\r\n\t\t\t\t\t\t\"vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\",\r\n\r\n\t\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\t\"float spotDiffuseWeight = max( dotProduct, 0.0 );\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\t\"spotDiffuse += spotLightColor[ i ] * spotDiffuseWeight * distanceAttenuation * spotEffect;\",\r\n\r\n\t\t\t\t\t// specular\r\n\r\n\t\t\t\t\t\"vec3 spotHalfVector = normalize( lVector + viewDirection );\",\r\n\t\t\t\t\t\"float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\",\r\n\t\t\t\t\t\"float spotSpecularWeight = specularStrength * pow( max( spotDotNormalHalf, 0.0 ), shininess );\",\r\n\r\n\t\t\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n\t\t\t\t\t\"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\r\n\r\n\t\t\t\t\t\"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\",\r\n\t\t\t\t\t\"spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * distanceAttenuation * specularNormalization * spotEffect;\",\r\n\r\n\t\t\t\t\"}\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_DIR_LIGHTS > 0\",\r\n\r\n\t\t\t\"vec3 dirDiffuse  = vec3( 0.0 );\",\r\n\t\t\t\"vec3 dirSpecular = vec3( 0.0 );\" ,\r\n\r\n\t\t\t\"for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\",\r\n\r\n\t\t\t\t\"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\",\r\n\t\t\t\t\"vec3 dirVector = normalize( lDirection.xyz );\",\r\n\r\n\t\t\t\t// diffuse\r\n\r\n\t\t\t\t\"float dotProduct = dot( normal, dirVector );\",\r\n\r\n\t\t\t\t\"#ifdef WRAP_AROUND\",\r\n\r\n\t\t\t\t\t\"float dirDiffuseWeightFull = max( dotProduct, 0.0 );\",\r\n\t\t\t\t\t\"float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\",\r\n\r\n\t\t\t\t\t\"vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\",\r\n\r\n\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\"float dirDiffuseWeight = max( dotProduct, 0.0 );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"dirDiffuse  += directionalLightColor[ i ] * dirDiffuseWeight;\",\r\n\r\n\t\t\t\t// specular\r\n\r\n\t\t\t\t\"vec3 dirHalfVector = normalize( dirVector + viewDirection );\",\r\n\t\t\t\t\"float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\",\r\n\t\t\t\t\"float dirSpecularWeight = specularStrength * pow( max( dirDotNormalHalf, 0.0 ), shininess );\",\r\n\r\n\t\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n\t\t\t\t\"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\r\n\r\n\t\t\t\t//\"dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\",\r\n\r\n\t\t\t\t\"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\",\r\n\t\t\t\t\"dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\",\r\n\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_HEMI_LIGHTS > 0\",\r\n\r\n\t\t\t\"vec3 hemiDiffuse  = vec3( 0.0 );\",\r\n\t\t\t\"vec3 hemiSpecular = vec3( 0.0 );\" ,\r\n\r\n\t\t\t\"for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\",\r\n\r\n\t\t\t\t\"vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\",\r\n\t\t\t\t\"vec3 lVector = normalize( lDirection.xyz );\",\r\n\r\n\t\t\t\t// diffuse\r\n\r\n\t\t\t\t\"float dotProduct = dot( normal, lVector );\",\r\n\t\t\t\t\"float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\",\r\n\r\n\t\t\t\t\"vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\",\r\n\r\n\t\t\t\t\"hemiDiffuse += hemiColor;\",\r\n\r\n\t\t\t\t// specular (sky light)\r\n\r\n\t\t\t\t\"vec3 hemiHalfVectorSky = normalize( lVector + viewDirection );\",\r\n\t\t\t\t\"float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\",\r\n\t\t\t\t\"float hemiSpecularWeightSky = specularStrength * pow( max( hemiDotNormalHalfSky, 0.0 ), shininess );\",\r\n\r\n\t\t\t\t// specular (ground light)\r\n\r\n\t\t\t\t\"vec3 lVectorGround = -lVector;\",\r\n\r\n\t\t\t\t\"vec3 hemiHalfVectorGround = normalize( lVectorGround + viewDirection );\",\r\n\t\t\t\t\"float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\",\r\n\t\t\t\t\"float hemiSpecularWeightGround = specularStrength * pow( max( hemiDotNormalHalfGround, 0.0 ), shininess );\",\r\n\r\n\t\t\t\t\"float dotProductGround = dot( normal, lVectorGround );\",\r\n\r\n\t\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n\t\t\t\t\"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\r\n\r\n\t\t\t\t\"vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\",\r\n\t\t\t\t\"vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\",\r\n\t\t\t\t\"hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_AREA_LIGHTS > 0\",\r\n\r\n\t\t\t\"vec3 areaDiffuse  = vec3( 0.0 );\",\r\n\t\t\t\"vec3 areaSpecular = vec3( 0.0 );\",\r\n\r\n\t\t\t\"for( int i = 0; i < MAX_AREA_LIGHTS; i ++ ) {\",\r\n\r\n\t\t\t\t\"vec3 lPosition = ( viewMatrix * vec4( areaLightPosition[ i ], 1.0 ) ).xyz;\",\r\n\t\t\t\t//\"vec3 lVector = lPosition.xyz + vViewPosition.xyz;\",\r\n\r\n\t\t\t\t\"vec3 width = areaLightWidth[ i ];\",\r\n\t\t\t\t\"vec3 height = areaLightHeight[ i ];\",\r\n\t\t\t\t\"vec3 up = normalize( ( viewMatrix * vec4( height, 0.0 ) ).xyz );\",\r\n\t\t\t\t\"vec3 right = normalize( ( viewMatrix * vec4( width, 0.0 ) ).xyz );\",\r\n\t\t\t\t\"vec3 pnormal = normalize( cross( right, up ) );\",\r\n\r\n\t\t\t\t\"float widthScalar = length( width );\",\r\n\t\t\t\t\"float heightScalar = length( height );\",\r\n\r\n\t\t\t\t//project onto plane and calculate direction from center to the projection.\r\n\t\t\t\t\"vec3 projection = projectOnPlane( -vViewPosition.xyz, lPosition, pnormal );\",  // projection in plane\r\n\t\t\t\t\"vec3 dir = projection - lPosition;\",\r\n\r\n\t\t\t\t//calculate distance from area:\r\n\t\t\t\t\"vec2 diagonal = vec2( dot( dir, right ), dot( dir, up ) );\",\r\n\t\t\t\t\"vec2 nearest2D = vec2( clamp( diagonal.x, -widthScalar, widthScalar ), clamp( diagonal.y, -heightScalar, heightScalar ) );\",\r\n\t\t\t\t\"vec3 nearestPointInside = lPosition + ( right *nearest2D.x + up * nearest2D.y );\",\r\n\r\n\t\t\t\t\"vec3 lVector = ( nearestPointInside + vViewPosition.xyz );\",\r\n\t\t\t\t\"float distanceAttenuation = calcLightAttenuation( length( lVector ), areaLightDistance[ i ], areaLightDecayExponent[i] );\",\r\n\t\t\t\t\"lVector = normalize( lVector );\",\r\n\r\n\t\t\t\t\"float nDotLDiffuse = saturate( dot( normal, lVector ) );\",\r\n\r\n\t\t\t\t\"vec3 viewReflection = reflect( viewDirection.xyz, normal );\",\r\n\t\t\t\t\"vec3 reflectionLightPlaneIntersection = linePlaneIntersect( -vViewPosition.xyz, viewReflection, lPosition, pnormal );\",\r\n\r\n\t\t\t\t\"float specAngle = dot( viewReflection, pnormal );\",\r\n\r\n\t\t\t\t\"if ( specAngle < 0.0 ) {\",\r\n\r\n\t\t\t\t\t\"vec3 dirSpec = reflectionLightPlaneIntersection - lPosition;\",\r\n\t\t\t\t\t\"vec2 dirSpec2D = vec2( dot( dirSpec, right ), dot( dirSpec, up ) );\",\r\n\t\t\t\t\t\"vec2 nearestSpec2D = vec2( clamp( dirSpec2D.x, -widthScalar, widthScalar ), clamp( dirSpec2D.y, -heightScalar, heightScalar ) );\",\r\n\t\t\t\t\t\"lVector = normalize( lPosition + ( right *nearestSpec2D.x + up * nearestSpec2D.y ) + vViewPosition.xyz );\",\r\n\r\n\t\t\t\t\"} else { \",\r\n\r\n\t\t\t\t\t\"lVector = vec3( 0 );\",\r\n\r\n\t\t\t\t\"}\",\r\n\r\n\t\t\t\t// diffuse\r\n\r\n\t\t\t\t\"float dotProduct = nDotLDiffuse;\",\r\n\r\n\t\t\t\t\"float areaDiffuseWeight = max( dotProduct, 0.0 );\",\r\n\r\n\t\t\t\t\"areaDiffuse  += areaLightColor[ i ] * areaDiffuseWeight * distanceAttenuation * widthScalar * heightScalar * 0.01;\",  // the 0.01 is the area light intensity scaling.\r\n\r\n\t\t\t\t// specular\r\n\r\n\t\t\t\t\"vec3 areaHalfVector = normalize( lVector + viewDirection );\",\r\n\t\t\t\t\"float areaDotNormalHalf = max( dot( normal, areaHalfVector ), 0.0 );\",\r\n\t\t\t\t\"float areaSpecularWeight = specularStrength * pow( max( areaDotNormalHalf, 0.0 ), shininess );\",\r\n\r\n\t\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n\t\t\t\t\"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\r\n\r\n\t\t\t\t\"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, areaHalfVector ), 0.0 ), 5.0 );\",\r\n\t\t\t\t\"areaSpecular += schlick * areaLightColor[ i ] * areaSpecularWeight * areaDiffuseWeight * distanceAttenuation * specularNormalization * 0.01;\",  // the 0.01 is the area light intensity scaling.\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"vec3 totalDiffuse = vec3( 0.0 );\",\r\n\t\t\"vec3 totalSpecular = vec3( 0.0 );\",\r\n\r\n\t\t\"#if MAX_DIR_LIGHTS > 0\",\r\n\r\n\t\t\t\"totalDiffuse += dirDiffuse;\",\r\n\t\t\t\"totalSpecular += dirSpecular;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_HEMI_LIGHTS > 0\",\r\n\r\n\t\t\t\"totalDiffuse += hemiDiffuse;\",\r\n\t\t\t\"totalSpecular += hemiSpecular;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n\t\t\t\"totalDiffuse += pointDiffuse;\",\r\n\t\t\t\"totalSpecular += pointSpecular;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n\t\t\t\"totalDiffuse += spotDiffuse;\",\r\n\t\t\t\"totalSpecular += spotSpecular;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if MAX_AREA_LIGHTS > 0\",\r\n\r\n\t\t\t\"totalDiffuse += areaDiffuse;\",\r\n\t\t\t\"totalSpecular += areaSpecular;\",\r\n\r\n\t\t\"#endif\",\r\n\t\t\"vec3 ambientLocal = ambient;\",\r\n\r\n\t\t\"#ifdef USE_LIGHTMAP\",\r\n\r\n\t\t\t\"vec3 ambientColor = texture2D( lightMap, vUv2 ).xyz;\",\r\n\r\n\t\t\t\"#ifdef GAMMA_INPUT\",\r\n\r\n\t\t\t\t\"ambientColor *= ambientColor;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"ambientLocal *= ambientColor;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"gl_FragColor.xyz = diffuseColor * ( totalDiffuse + ambientLightColor + ambientLocal ) + totalSpecular;\",\r\n\r\n\t\t\"vec3 emissiveLocal = emissive;\",\r\n\r\n\t\t\"#ifdef USE_EMISSIVEMAP\",\r\n\r\n\t\t\t\"vec3 emissiveColor = texture2D( emissiveMap, vUv2 ).xyz;\",\r\n\r\n\t\t\t\"#ifdef GAMMA_INPUT\",\r\n\r\n\t\t\t\t\"emissiveColor *= emissiveColor;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"emissiveLocal *= emissiveColor;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"gl_FragColor.xyz += emissiveLocal.xyz;\",\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// VERTEX COLORS\r\n\r\n\tcolor_pars_fragment: [\r\n\r\n\t\t\"#ifdef USE_COLOR\",\r\n\r\n\t\t\t\"varying vec3 vColor;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\r\n\tcolor_fragment: [\r\n\r\n\t\t\"#ifdef USE_COLOR\",\r\n\r\n\t\t\t\"gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tcolor_pars_vertex: [\r\n\r\n\t\t\"#ifdef USE_COLOR\",\r\n\r\n\t\t\t\"varying vec3 vColor;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\r\n\tcolor_vertex: [\r\n\r\n\t\t\"#ifdef USE_COLOR\",\r\n\r\n\t\t\t\"#ifdef GAMMA_INPUT\",\r\n\r\n\t\t\t\t\"vColor = color * color;\",\r\n\r\n\t\t\t\"#else\",\r\n\r\n\t\t\t\t\"vColor = color;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// SKINNING\r\n\r\n\tskinning_pars_vertex: [\r\n\r\n\t\t\"#ifdef USE_SKINNING\",\r\n\r\n\t\t\t\"#ifdef BONE_TEXTURE\",\r\n\r\n\t\t\t\t\"uniform sampler2D boneTexture;\",\r\n\t\t\t\t\"uniform int boneTextureWidth;\",\r\n\t\t\t\t\"uniform int boneTextureHeight;\",\r\n\r\n\t\t\t\t\"mat4 getBoneMatrix( const float i ) {\",\r\n\r\n\t\t\t\t\t\"float j = i * 4.0;\",\r\n\t\t\t\t\t\"float x = mod( j, float( boneTextureWidth ) );\",\r\n\t\t\t\t\t\"float y = floor( j / float( boneTextureWidth ) );\",\r\n\r\n\t\t\t\t\t\"float dx = 1.0 / float( boneTextureWidth );\",\r\n\t\t\t\t\t\"float dy = 1.0 / float( boneTextureHeight );\",\r\n\r\n\t\t\t\t\t\"y = dy * ( y + 0.5 );\",\r\n\r\n\t\t\t\t\t\"vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\",\r\n\t\t\t\t\t\"vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\",\r\n\t\t\t\t\t\"vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\",\r\n\t\t\t\t\t\"vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\",\r\n\r\n\t\t\t\t\t\"mat4 bone = mat4( v1, v2, v3, v4 );\",\r\n\r\n\t\t\t\t\t\"return bone;\",\r\n\r\n\t\t\t\t\"}\",\r\n\r\n\t\t\t\"#else\",\r\n\r\n\t\t\t\t\"uniform mat4 boneGlobalMatrices[ MAX_BONES ];\",\r\n\r\n\t\t\t\t\"mat4 getBoneMatrix( const float i ) {\",\r\n\r\n\t\t\t\t\t\"mat4 bone = boneGlobalMatrices[ int(i) ];\",\r\n\t\t\t\t\t\"return bone;\",\r\n\r\n\t\t\t\t\"}\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tskinbase_vertex: [\r\n\r\n\t\t\"#ifdef USE_SKINNING\",\r\n\r\n\t\t\t\"mat4 boneMatX = getBoneMatrix( skinIndex.x );\",\r\n\t\t\t\"mat4 boneMatY = getBoneMatrix( skinIndex.y );\",\r\n\t\t\t\"mat4 boneMatZ = getBoneMatrix( skinIndex.z );\",\r\n\t\t\t\"mat4 boneMatW = getBoneMatrix( skinIndex.w );\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tskinning_vertex: [\r\n\r\n\t\t\"#ifdef USE_SKINNING\",\r\n\r\n\t\t\t\"#ifdef USE_MORPHTARGETS\",\r\n\r\n\t\t\t\"vec4 skinVertex = vec4( morphed, 1.0 );\",\r\n\r\n\t\t\t\"#else\",\r\n\r\n\t\t\t\"vec4 skinVertex = vec4( position, 1.0 );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"vec4 skinned  = boneMatX * skinVertex * skinWeight.x;\",\r\n\t\t\t\"skinned      += boneMatY * skinVertex * skinWeight.y;\",\r\n\t\t\t\"skinned      += boneMatZ * skinVertex * skinWeight.z;\",\r\n\t\t\t\"skinned      += boneMatW * skinVertex * skinWeight.w;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// MORPHING\r\n\r\n\tmorphtarget_pars_vertex: [\r\n\r\n\t\t\"#ifdef USE_MORPHTARGETS\",\r\n\r\n\t\t\t\"#ifndef USE_MORPHNORMALS\",\r\n\r\n\t\t\t\"uniform float morphTargetInfluences[ 8 ];\",\r\n\r\n\t\t\t\"#else\",\r\n\r\n\t\t\t\"uniform float morphTargetInfluences[ 4 ];\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tmorphtarget_vertex: [\r\n\r\n\t\t\"#ifdef USE_MORPHTARGETS\",\r\n\r\n\t\t\t\"vec3 morphed = vec3( 0.0 );\",\r\n\t\t\t\"morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\",\r\n\t\t\t\"morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\",\r\n\t\t\t\"morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\",\r\n\t\t\t\"morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\",\r\n\r\n\t\t\t\"#ifndef USE_MORPHNORMALS\",\r\n\r\n\t\t\t\"morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\",\r\n\t\t\t\"morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\",\r\n\t\t\t\"morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\",\r\n\t\t\t\"morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"morphed += position;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tdefault_vertex : [\r\n\r\n\t\t\"vec4 mvPosition;\",\r\n\r\n\t\t\"#ifdef USE_SKINNING\",\r\n\r\n\t\t\t\"mvPosition = modelViewMatrix * skinned;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\",\r\n\r\n\t\t\t\"mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\",\r\n\r\n\t\t\t\"mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"gl_Position = projectionMatrix * mvPosition;\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tmorphnormal_vertex: [\r\n\r\n\t\t\"#ifdef USE_MORPHNORMALS\",\r\n\r\n\t\t\t\"vec3 morphedNormal = vec3( 0.0 );\",\r\n\r\n\t\t\t\"morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\",\r\n\t\t\t\"morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\",\r\n\t\t\t\"morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\",\r\n\t\t\t\"morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\",\r\n\r\n\t\t\t\"morphedNormal += normal;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tskinnormal_vertex: [\r\n\r\n\t\t\"#ifdef USE_SKINNING\",\r\n\r\n\t\t\t\"mat4 skinMatrix = skinWeight.x * boneMatX;\",\r\n\t\t\t\"skinMatrix \t+= skinWeight.y * boneMatY;\",\r\n\r\n\t\t\t\"#ifdef USE_MORPHNORMALS\",\r\n\r\n\t\t\t\"vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\",\r\n\r\n\t\t\t\"#else\",\r\n\r\n\t\t\t\"vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tdefaultnormal_vertex: [\r\n\r\n\t\t\"vec3 objectNormal;\",\r\n\r\n\t\t\"#ifdef USE_SKINNING\",\r\n\r\n\t\t\t\"objectNormal = skinnedNormal.xyz;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\",\r\n\r\n\t\t\t\"objectNormal = morphedNormal;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\",\r\n\r\n\t\t\t\"objectNormal = normal;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"#ifdef FLIP_SIDED\",\r\n\r\n\t\t\t\"objectNormal = -objectNormal;\",\r\n\r\n\t\t\"#endif\",\r\n\r\n\t\t\"vec3 transformedNormal = normalMatrix * objectNormal;\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// SHADOW MAP\r\n\r\n\t// based on SpiderGL shadow map and Fabien Sanglard's GLSL shadow mapping examples\r\n\t//  http://spidergl.org/example.php?id=6\r\n\t// \thttp://fabiensanglard.net/shadowmapping\r\n\r\n\tshadowmap_pars_fragment: [\r\n\r\n\t\t\"#ifdef USE_SHADOWMAP\",\r\n\r\n\t\t\t\"uniform sampler2D shadowMap[ MAX_SHADOWS ];\",\r\n\t\t\t\"uniform vec2 shadowMapSize[ MAX_SHADOWS ];\",\r\n\r\n\t\t\t\"uniform float shadowDarkness[ MAX_SHADOWS ];\",\r\n\t\t\t\"uniform float shadowBias[ MAX_SHADOWS ];\",\r\n\r\n\t\t\t\"varying vec4 vShadowCoord[ MAX_SHADOWS ];\",\r\n\r\n\t\t\t\"float unpackDepth( const vec4 rgba_depth ) {\",\r\n\r\n\t\t\t\t\"const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\",\r\n\t\t\t\t\"float depth = dot( rgba_depth, bit_shift );\",\r\n\t\t\t\t\"return depth;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tshadowmap_fragment: [\r\n\r\n\t\t\"#ifdef USE_SHADOWMAP\",\r\n\r\n\t\t\t\"#ifdef SHADOWMAP_DEBUG\",\r\n\r\n\t\t\t\t\"vec3 frustumColors[3];\",\r\n\t\t\t\t\"frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\",\r\n\t\t\t\t\"frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\",\r\n\t\t\t\t\"frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"#ifdef SHADOWMAP_CASCADE\",\r\n\r\n\t\t\t\t\"int inFrustumCount = 0;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"float fDepth;\",\r\n\t\t\t\"vec3 shadowColor = vec3( 1.0 );\",\r\n\r\n\t\t\t\"for( int i = 0; i < MAX_SHADOWS; i ++ ) {\",\r\n\r\n\t\t\t\t\"vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\",\r\n\r\n\t\t\t\t// \"if ( something && something )\" \t\t breaks ATI OpenGL shader compiler\r\n\t\t\t\t// \"if ( all( something, something ) )\"  using this instead\r\n\r\n\t\t\t\t\"bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\",\r\n\t\t\t\t\"bool inFrustum = all( inFrustumVec );\",\r\n\r\n\t\t\t\t// don't shadow pixels outside of light frustum\r\n\t\t\t\t// use just first frustum (for cascades)\r\n\t\t\t\t// don't shadow pixels behind far plane of light frustum\r\n\r\n\t\t\t\t\"#ifdef SHADOWMAP_CASCADE\",\r\n\r\n\t\t\t\t\t\"inFrustumCount += int( inFrustum );\",\r\n\t\t\t\t\t\"bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\",\r\n\r\n\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\"bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"bool frustumTest = all( frustumTestVec );\",\r\n\r\n\t\t\t\t\"if ( frustumTest ) {\",\r\n\r\n\t\t\t\t\t\"shadowCoord.z += shadowBias[ i ];\",\r\n\r\n\t\t\t\t\t\"#if defined( SHADOWMAP_TYPE_PCF )\",\r\n\r\n\t\t\t\t\t\t// Percentage-close filtering\r\n\t\t\t\t\t\t// (9 pixel kernel)\r\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\r\n\r\n\t\t\t\t\t\t\"float shadow = 0.0;\",\r\n\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\r\n\t\t\t\t\t\t// must enroll loop manually\r\n\r\n\t\t\t\t\t\t\"for ( float y = -1.25; y <= 1.25; y += 1.25 )\",\r\n\t\t\t\t\t\t\t\"for ( float x = -1.25; x <= 1.25; x += 1.25 ) {\",\r\n\r\n\t\t\t\t\t\t\t\t\"vec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\",\r\n\r\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple \"texture2D\" lookup\r\n\t\t\t\t\t\t\t\t//\"vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\",\r\n\r\n\t\t\t\t\t\t\t\t\"float fDepth = unpackDepth( rgbaDepth );\",\r\n\r\n\t\t\t\t\t\t\t\t\"if ( fDepth < shadowCoord.z )\",\r\n\t\t\t\t\t\t\t\t\t\"shadow += 1.0;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"shadow /= 9.0;\",\r\n\r\n\t\t\t\t\t\t*/\r\n\r\n\t\t\t\t\t\t\"const float shadowDelta = 1.0 / 9.0;\",\r\n\r\n\t\t\t\t\t\t\"float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\",\r\n\t\t\t\t\t\t\"float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\",\r\n\r\n\t\t\t\t\t\t\"float dx0 = -1.25 * xPixelOffset;\",\r\n\t\t\t\t\t\t\"float dy0 = -1.25 * yPixelOffset;\",\r\n\t\t\t\t\t\t\"float dx1 = 1.25 * xPixelOffset;\",\r\n\t\t\t\t\t\t\"float dy1 = 1.25 * yPixelOffset;\",\r\n\r\n\t\t\t\t\t\t\"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\",\r\n\t\t\t\t\t\t\"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\r\n\r\n\t\t\t\t\t\t\"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\",\r\n\t\t\t\t\t\t\"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\r\n\r\n\t\t\t\t\t\t\"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\",\r\n\t\t\t\t\t\t\"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\r\n\r\n\t\t\t\t\t\t\"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\",\r\n\t\t\t\t\t\t\"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\r\n\r\n\t\t\t\t\t\t\"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\",\r\n\t\t\t\t\t\t\"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\r\n\r\n\t\t\t\t\t\t\"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\",\r\n\t\t\t\t\t\t\"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\r\n\r\n\t\t\t\t\t\t\"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\",\r\n\t\t\t\t\t\t\"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\r\n\r\n\t\t\t\t\t\t\"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\",\r\n\t\t\t\t\t\t\"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\r\n\r\n\t\t\t\t\t\t\"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\",\r\n\t\t\t\t\t\t\"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\",\r\n\r\n\t\t\t\t\t\t\"shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\",\r\n\r\n\t\t\t\t\t\"#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\",\r\n\r\n\t\t\t\t\t\t// Percentage-close filtering\r\n\t\t\t\t\t\t// (9 pixel kernel)\r\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\r\n\r\n\t\t\t\t\t\t\"float shadow = 0.0;\",\r\n\r\n\t\t\t\t\t\t\"float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\",\r\n\t\t\t\t\t\t\"float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\",\r\n\r\n\t\t\t\t\t\t\"float dx0 = -1.0 * xPixelOffset;\",\r\n\t\t\t\t\t\t\"float dy0 = -1.0 * yPixelOffset;\",\r\n\t\t\t\t\t\t\"float dx1 = 1.0 * xPixelOffset;\",\r\n\t\t\t\t\t\t\"float dy1 = 1.0 * yPixelOffset;\",\r\n\r\n\t\t\t\t\t\t\"mat3 shadowKernel;\",\r\n\t\t\t\t\t\t\"mat3 depthKernel;\",\r\n\r\n\t\t\t\t\t\t\"depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\",\r\n\t\t\t\t\t\t\"depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\",\r\n\t\t\t\t\t\t\"depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\",\r\n\t\t\t\t\t\t\"depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\",\r\n\t\t\t\t\t\t\"depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\",\r\n\t\t\t\t\t\t\"depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\",\r\n\t\t\t\t\t\t\"depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\",\r\n\t\t\t\t\t\t\"depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\",\r\n\t\t\t\t\t\t\"depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\",\r\n\r\n\t\t\t\t\t\t\"vec3 shadowZ = vec3( shadowCoord.z );\",\r\n\t\t\t\t\t\t\"shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\",\r\n\t\t\t\t\t\t\"shadowKernel[0] *= vec3(0.25);\",\r\n\r\n\t\t\t\t\t\t\"shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\",\r\n\t\t\t\t\t\t\"shadowKernel[1] *= vec3(0.25);\",\r\n\r\n\t\t\t\t\t\t\"shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\",\r\n\t\t\t\t\t\t\"shadowKernel[2] *= vec3(0.25);\",\r\n\r\n\t\t\t\t\t\t\"vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\",\r\n\r\n\t\t\t\t\t\t\"shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\",\r\n\t\t\t\t\t\t\"shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\",\r\n\r\n\t\t\t\t\t\t\"vec4 shadowValues;\",\r\n\t\t\t\t\t\t\"shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\",\r\n\t\t\t\t\t\t\"shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\",\r\n\t\t\t\t\t\t\"shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\",\r\n\t\t\t\t\t\t\"shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\",\r\n\r\n\t\t\t\t\t\t\"shadow = dot( shadowValues, vec4( 1.0 ) );\",\r\n\r\n\t\t\t\t\t\t\"shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\",\r\n\r\n\t\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\t\"vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\",\r\n\t\t\t\t\t\t\"float fDepth = unpackDepth( rgbaDepth );\",\r\n\r\n\t\t\t\t\t\t\"if ( fDepth < shadowCoord.z )\",\r\n\r\n\t\t\t\t\t\t\t// spot with multiple shadows is darker\r\n\r\n\t\t\t\t\t\t\t\"shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\",\r\n\r\n\t\t\t\t\t\t\t// spot with multiple shadows has the same color as single shadow spot\r\n\r\n\t\t\t\t\t\t\t//\"shadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"}\",\r\n\r\n\r\n\t\t\t\t\"#ifdef SHADOWMAP_DEBUG\",\r\n\r\n\t\t\t\t\t\"#ifdef SHADOWMAP_CASCADE\",\r\n\r\n\t\t\t\t\t\t\"if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\",\r\n\r\n\t\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\t\"if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"#ifdef GAMMA_OUTPUT\",\r\n\r\n\t\t\t\t\"shadowColor *= shadowColor;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tshadowmap_pars_vertex: [\r\n\r\n\t\t\"#ifdef USE_SHADOWMAP\",\r\n\r\n\t\t\t\"varying vec4 vShadowCoord[ MAX_SHADOWS ];\",\r\n\t\t\t\"uniform mat4 shadowMatrix[ MAX_SHADOWS ];\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tshadowmap_vertex: [\r\n\r\n\t\t\"#ifdef USE_SHADOWMAP\",\r\n\r\n\t\t\t\"for( int i = 0; i < MAX_SHADOWS; i ++ ) {\",\r\n\r\n\t\t\t\t\"vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// ALPHATEST\r\n\r\n\talphatest_fragment: [\r\n\r\n\t\t\"#ifdef ALPHATEST\",\r\n\r\n\t\t\t\"if ( gl_FragColor.a < ALPHATEST ) discard;\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\t// LINEAR SPACE\r\n\r\n\tlinear_to_gamma_fragment: [\r\n\r\n\t\t\"#ifdef GAMMA_OUTPUT\",\r\n\r\n\t\t\t\"gl_FragColor.xyz = sqrt( gl_FragColor.xyz );\",\r\n\r\n\t\t\"#endif\"\r\n\r\n\t].join(\"\\n\")\r\n\r\n\r\n};\r\n/**\r\n * Uniform Utilities\r\n */\r\n\r\nTHREE.UniformsUtils = {\r\n\r\n\tmerge: function ( uniforms ) {\r\n\r\n\t\tvar u, p, tmp, merged = {};\r\n\r\n\t\tfor ( u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\t\ttmp = this.clone( uniforms[ u ] );\r\n\r\n\t\t\tfor ( p in tmp ) {\r\n\r\n\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn merged;\r\n\r\n\t},\r\n\r\n\tclone: function ( uniforms_src ) {\r\n\r\n\t\tvar u, p, parameter, parameter_src, uniforms_dst = {};\r\n\r\n\t\tfor ( u in uniforms_src ) {\r\n\r\n\t\t\tuniforms_dst[ u ] = {};\r\n\r\n\t\t\tfor ( p in uniforms_src[ u ] ) {\r\n\r\n\t\t\t\tparameter_src = uniforms_src[ u ][ p ];\r\n\r\n\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n\t\t\t\t} else if ( parameter_src instanceof Array ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms_dst;\r\n\r\n\t}\r\n\r\n};\r\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\r\n\r\nTHREE.UniformsLib = {\r\n\r\n\tcommon: {\r\n\r\n\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\t\"gainBrightness\" : { type: \"v4\", value: new THREE.Vector4( 0, 1, 0, 1 ) },\r\n\r\n\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\"emissiveMap\" : { type: \"t\", value: null },\r\n\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\"envEncoding\" : { type: \"i\", value: 0 },\r\n\t\t\"diffuseEnvMap\" : { type: \"t\", value: null },\r\n\t\t\"diffuseEnvEncoding\" : { type: \"i\", value: 0 },\r\n\t\t\"flipEnvMap\" : { type: \"f\", value: -1 },\r\n\t\t\"useRefract\" : { type: \"i\", value: 0 },\r\n\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 },\r\n\t\t\"combine\" : { type: \"i\", value: 0 },\r\n\r\n\t\t\"morphTargetInfluences\" : { type: \"f\", value: 0 }\r\n\r\n\t},\r\n\r\n\tspecularmap: {\r\n\r\n\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\"specularOffsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\t\"specularGainBrightness\" : { type: \"v4\", value: new THREE.Vector4( 0, 1, 0, 1 ) },\r\n\r\n\t},\r\n\r\n\tbumpmap: {\r\n\r\n\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\"bumpScale\" : { type: \"f\", value: 1 }, // used instead of 'bumpGainBrightness'\r\n\t\t\"bumpOffsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) }\r\n\r\n\t},\r\n\r\n\topacitymap: {\r\n\r\n\t\t\"opacityMap\" : { type: \"t\", value: null },\r\n\t\t\"opacityOffsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\t\"opacityGainBrightness\" : { type: \"v4\", value: new THREE.Vector4( 0, 1, 0, 1 ) },\r\n\r\n\t},\r\n\r\n\tnormalmap: {\r\n\r\n\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }, // used instead of 'normalGainBrightness'\r\n\t\t\"normalOffsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) }\r\n\r\n\t},\r\n\r\n\tfog : {\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tlights: {\r\n\r\n\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"pointLightDecayExponent\" : { type: \"fv1\", value: [] },\r\n\r\n\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightDecayExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\r\n\t\t\"areaLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"areaLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"areaLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"areaLightDecayExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\"areaLightWidth\" : { type: \"fv\", value: [] },\r\n\t\t\"areaLightHeight\" : { type: \"fv\", value: [] }\r\n\r\n\t},\r\n\r\n\tparticle: {\r\n\r\n\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tshadowmap: {\r\n\r\n\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\r\n\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\r\n\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\r\n\t}\r\n\r\n};\r\n/**\r\n * Webgl Shader Library for three.js\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author bhouston / http://clara.io/\r\n */\r\n\r\n\r\nTHREE.ShaderLib = {\r\n\r\n\r\n\t'physical': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\t//THREE.UniformsLib[ \"roughnessmap\" ],  TODO: Implement me!\r\n\t\t\t//THREE.UniformsLib[ \"metallicmap\" ],  TODO: Implement me!\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"opacitymap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"specularmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"ambient\"  : { type: \"c\", value: new THREE.Color( 0xffffff ) },\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0xFFFFFF ) },\r\n\t\t\t\t\"falloffColor\" : { type: \"c\", value: new THREE.Color( 0xFFFFFF ) },\r\n\t\t\t\t\"falloffMap\" : { type: \"t\", value: null },\r\n\t\t\t\t\"falloffBlendParams\" : { type: \"v4\", value: new THREE.Vector4( 1, 0, 0, 1 ) },\r\n\r\n\t\t\t\t\"clearCoat\": { type: \"f\", value: 0.0 },\r\n\t\t\t\t\"clearCoatRoughness\": { type: \"f\", value: 0.25 },\r\n\r\n\t\t\t\t\"roughness\": { type: \"f\", value: 0.5 },\r\n\t\t\t\t\"roughnessMap\" : { type: \"t\", value: null },\r\n\t\t\t\t\"roughnessOffsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\t\t\t\"roughnessGainBrightness\" : { type: \"v4\", value: new THREE.Vector4( 0, 1, 0, 1 ) },\r\n\r\n\t\t\t\t\"metallic\": { type: \"f\", value: 0.5 },\r\n\t\t\t\t\"metallicMap\" : { type: \"t\", value: null },\r\n\t\t\t\t\"metallicOffsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\t\t\t\"metallicGainBrightness\" : { type: \"v4\", value: new THREE.Vector4( 0, 1, 0, 1 ) },\r\n\r\n\t\t\t\t\"anisotropy\": { type: \"f\", value: 0.0 },\r\n\t\t\t\t\"anisotropyMap\" : { type: \"t\", value: null },\r\n\t\t\t\t\"anisotropyOffsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\t\t\t\"anisotropyGainBrightness\" : { type: \"v4\", value: new THREE.Vector4( 0, 1, 0, 1 ) },\r\n\r\n\t\t\t\t\"anisotropyRotation\": { type: \"f\", value: 0.0 },\r\n\t\t\t\t\"anisotropyRotationMap\" : { type: \"t\", value: null },\r\n\t\t\t\t\"anisotropyRotationOffsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\t\t\t\"anisotropyRotationGainBrightness\" : { type: \"v4\", value: new THREE.Vector4( 0, 1, 0, 1 ) },\r\n\r\n\t\t\t\t\"translucency\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"translucencyMap\" : { type: \"t\", value: null },\r\n\t\t\t\t\"translucencyNormalAlpha\": { type: \"f\", value: 0.75 },\r\n\t\t\t\t\"translucencyNormalPower\": { type: \"f\", value: 2.0 },\r\n\t\t\t\t\"translucencyViewAlpha\": { type: \"f\", value: 0.75 },\r\n\t\t\t\t\"translucencyViewPower\": { type: \"f\", value: 2.0 },\r\n\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"attribute vec4 tangent;\",\r\n\r\n\t\t\t\"#define PHONG\",\r\n\t\t\t\"#define PHYSICAL\",\r\n\r\n\t\t\t\"varying vec3 vViewPosition;\",\r\n\t\t\t\"varying vec3 vTangent;\",\r\n\t\t\t\"varying vec3 vBinormal;\",\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"roughnessmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"opacitymap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"anisotropymap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"anisotropyrotationmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"metallicmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"translucencymap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_physical_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"normalmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"roughnessmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"opacitymap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"anisotropymap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"anisotropyrotationmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"metallicmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"translucencymap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"bumpmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\t\"vNormal = normalize( transformedNormal );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\r\n\t\t\t\t\"vViewPosition = -mvPosition.xyz;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_physical_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"#ifdef TEXTURE_CUBE_LOD_EXT\",\r\n\t\t\t\t\"#extension GL_EXT_shader_texture_lod : enable\",\r\n\t\t\t\"#endif\",\r\n\t\t\t\"#define PHYSICAL\",\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"uniform vec3 ambient;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform vec3 falloffColor;\",\r\n\t\t\t\"uniform vec4 falloffBlendParams;\",\r\n\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\"uniform float roughness;\",\r\n\t\t\t\"uniform float metallic;\",\r\n\t\t\t\"uniform float clearCoat;\",\r\n\t\t\t\"uniform float clearCoatRoughness;\",\r\n\r\n\t\t\t\"uniform vec3 translucency;\",\r\n\t\t\t\"uniform float translucencyNormalAlpha;\",\r\n\t\t\t\"uniform float translucencyNormalPower;\",\r\n\t\t\t\"uniform float translucencyViewPower;\",\r\n\t\t\t\"uniform float translucencyViewAlpha;\",\r\n\r\n\t\t\t\"uniform float anisotropy;\",\r\n\t\t\t\"uniform float anisotropyRotation;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"falloffmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"opacitymap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"translucencymap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"diffuseenvmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_physical_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"anisotropymap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"anisotropyrotationmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"metallicmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"roughnessmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"reflectivitymap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightattenuation_func_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\"gl_FragColor = vec4( vec3 ( 0.0 ), opacity );\",\r\n\t\t\t\t\"vec3 diffuseColor = diffuse;\",\r\n\t\t\t\t\"vec3 translucencyColor = translucency;\",\r\n\t\t\t\t\"vec3 normal = normalize( vNormal );\",\r\n\t\t\t\t\"vec3 viewDirection = normalize( vViewPosition );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"opacitymap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"anisotropymap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"anisotropyrotationmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"roughnessmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"metallicmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"translucencymap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"reflectivitymap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_physical_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\t\"gl_FragColor.xyz *= gl_FragColor.w;\",\t\t// premultipled, must be used with CustomBlender, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'basic': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\t\"#ifdef USE_ENVMAP\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\"gl_FragColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'lambert': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"ambient\"  : { type: \"c\", value: new THREE.Color( 0xffffff ) },\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"wrapRGB\"  : { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define LAMBERT\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\t\"varying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightattenuation_func_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\t\"varying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\"gl_FragColor = vec4( vec3 ( 1.0 ), opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\t\t//\"float isFront = float( gl_FrontFacing );\",\r\n\t\t\t\t\t//\"gl_FragColor.xyz *= isFront * vLightFront + ( 1.0 - isFront ) * vLightBack;\",\r\n\r\n\t\t\t\t\t\"if ( gl_FrontFacing )\",\r\n\t\t\t\t\t\t\"gl_FragColor.xyz *= vLightFront;\",\r\n\t\t\t\t\t\"else\",\r\n\t\t\t\t\t\t\"gl_FragColor.xyz *= vLightBack;\",\r\n\r\n\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\"gl_FragColor.xyz *= vLightFront;\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'phong': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"specularmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"opacitymap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"ambient\"  : { type: \"c\", value: new THREE.Color( 0xffffff ) },\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\"shininess\": { type: \"f\", value: 30 },\r\n\t\t\t\t\"wrapRGB\"  : { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"varying vec3 vViewPosition;\",\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"opacitymap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"normalmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"bumpmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"opacitymap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\t\"vNormal = normalize( transformedNormal );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\r\n\t\t\t\t\"vViewPosition = -mvPosition.xyz;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"uniform vec3 ambient;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\"uniform float shininess;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"opacitymap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightattenuation_func_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\"gl_FragColor = vec4( vec3 ( 1.0 ), opacity );\",\r\n\t\t\t\t\"vec3 diffuseColor = diffuse;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"opacitymap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'particle_basic': {\r\n\r\n\t\tuniforms:  THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"particle\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float size;\",\r\n\t\t\t\"uniform float scale;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\t\"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\t\"#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\t\t\"gl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\t\"#else\",\r\n\t\t\t\t\t\"gl_PointSize = size;\",\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"gl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\"gl_FragColor = vec4( psColor, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'dashed': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"scale\":     { type: \"f\", value: 1 },\r\n\t\t\t\t\"dashSize\":  { type: \"f\", value: 1 },\r\n\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float scale;\",\r\n\t\t\t\"attribute float lineDistance;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\t\"vLineDistance = scale * lineDistance;\",\r\n\r\n\t\t\t\t\"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\t\"gl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\"uniform float totalSize;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\"if ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\r\n\t\t\t\t\t\"discard;\",\r\n\r\n\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\"gl_FragColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'depth': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float mNear;\",\r\n\t\t\t\"uniform float mFar;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\"float depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\t\t\t\t\"float color = clamp( ( depth - mNear ) / ( mFar - mNear ), 0.0, 1.0 );\",\r\n\t\t\t\t\"gl_FragColor = vec4( vec3( color ), opacity );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'normal': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\"vNormal = normalize( normalMatrix * normal );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float opacity;\",\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\"gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tNormal map shader\r\n\t//\t\t- Blinn-Phong\r\n\t//\t\t- normal + diffuse + specular + AO + displacement + reflection + shadow maps\r\n\t//\t\t- point and directional lights (use with \"lights: true\" material option)\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'normalmap' : {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\r\n\t\t\t\"enableAO\"\t\t  : { type: \"i\", value: 0 },\r\n\t\t\t\"enableDiffuse\"\t  : { type: \"i\", value: 0 },\r\n\t\t\t\"enableSpecular\"  : { type: \"i\", value: 0 },\r\n\t\t\t\"enableReflection\": { type: \"i\", value: 0 },\r\n\t\t\t\"enableDisplacement\": { type: \"i\", value: 0 },\r\n\r\n\t\t\t\"tDisplacement\": { type: \"t\", value: null }, // must go first as this is vertex texture\r\n\t\t\t\"tDiffuse\"\t   : { type: \"t\", value: null },\r\n\t\t\t\"tCube\"\t\t   : { type: \"t\", value: null },\r\n\t\t\t\"tNormal\"\t   : { type: \"t\", value: null },\r\n\t\t\t\"tSpecular\"\t   : { type: \"t\", value: null },\r\n\t\t\t\"tAO\"\t\t   : { type: \"t\", value: null },\r\n\r\n\t\t\t\"uNormalScale\": { type: \"v2\", value: new THREE.Vector2( 1, 1 ) },\r\n\r\n\t\t\t\"uDisplacementBias\": { type: \"f\", value: 0.0 },\r\n\t\t\t\"uDisplacementScale\": { type: \"f\", value: 1.0 },\r\n\r\n\t\t\t\"diffuse\": { type: \"c\", value: new THREE.Color( 0xffffff ) },\r\n\t\t\t\"specular\": { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\"ambient\": { type: \"c\", value: new THREE.Color( 0xffffff ) },\r\n\t\t\t\"shininess\": { type: \"f\", value: 30 },\r\n\t\t\t\"opacity\": { type: \"f\", value: 1 },\r\n\r\n\t\t\t\"useRefract\": { type: \"i\", value: 0 },\r\n\t\t\t\"refractionRatio\": { type: \"f\", value: 0.98 },\r\n\t\t\t\"reflectivity\": { type: \"f\", value: 0.5 },\r\n\r\n\t\t\t\"uOffset\" : { type: \"v2\", value: new THREE.Vector2( 0, 0 ) },\r\n\t\t\t\"uRepeat\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) },\r\n\r\n\t\t\t\"wrapRGB\"  : { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) }\r\n\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 ambient;\",\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\"uniform float shininess;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"uniform bool enableDiffuse;\",\r\n\t\t\t\"uniform bool enableSpecular;\",\r\n\t\t\t\"uniform bool enableAO;\",\r\n\t\t\t\"uniform bool enableReflection;\",\r\n\r\n\t\t\t\"uniform sampler2D tDiffuse;\",\r\n\t\t\t\"uniform sampler2D tNormal;\",\r\n\t\t\t\"uniform sampler2D tSpecular;\",\r\n\t\t\t\"uniform sampler2D tAO;\",\r\n\r\n\t\t\t\"uniform samplerCube tCube;\",\r\n\r\n\t\t\t\"uniform vec2 uNormalScale;\",\r\n\r\n\t\t\t\"uniform bool useRefract;\",\r\n\t\t\t\"uniform float refractionRatio;\",\r\n\t\t\t\"uniform float reflectivity;\",\r\n\r\n\t\t\t\"varying vec3 vTangent;\",\r\n\t\t\t\"varying vec3 vBinormal;\",\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\t\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\t\"uniform vec3 ambientLightColor;\",\r\n\r\n\t\t\t\"#if MAX_DIR_LIGHTS > 0\",\r\n\r\n\t\t\t\t\"uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\",\r\n\t\t\t\t\"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"#if MAX_HEMI_LIGHTS > 0\",\r\n\r\n\t\t\t\t\"uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\",\r\n\t\t\t\t\"uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\",\r\n\t\t\t\t\"uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n\t\t\t\t\"uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\",\r\n\t\t\t\t\"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\",\r\n\t\t\t\t\"uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n\t\t\t\t\"uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\t\"uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\t\"uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\t\"uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\t\"uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\",\r\n\t\t\t\t\"uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"#ifdef WRAP_AROUND\",\r\n\r\n\t\t\t\t\"uniform vec3 wrapRGB;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\t\t\"varying vec3 vViewPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\"gl_FragColor = vec4( vec3( 1.0 ), opacity );\",\r\n\r\n\t\t\t\t\"vec3 specularTex = vec3( 1.0 );\",\r\n\r\n\t\t\t\t\"vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\",\r\n\t\t\t\t\"normalTex.xy *= uNormalScale;\",\r\n\t\t\t\t\"normalTex = normalize( normalTex );\",\r\n\r\n\t\t\t\t\"if( enableDiffuse ) {\",\r\n\r\n\t\t\t\t\t\"#ifdef GAMMA_INPUT\",\r\n\r\n\t\t\t\t\t\t\"vec4 texelColor = texture2D( tDiffuse, vUv );\",\r\n\t\t\t\t\t\t\"texelColor.xyz *= texelColor.xyz;\",\r\n\r\n\t\t\t\t\t\t\"gl_FragColor = gl_FragColor * texelColor;\",\r\n\r\n\t\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\t\"gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\"if( enableAO ) {\",\r\n\r\n\t\t\t\t\t\"#ifdef GAMMA_INPUT\",\r\n\r\n\t\t\t\t\t\t\"vec4 aoColor = texture2D( tAO, vUv );\",\r\n\t\t\t\t\t\t\"aoColor.xyz *= aoColor.xyz;\",\r\n\r\n\t\t\t\t\t\t\"gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\",\r\n\r\n\t\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\t\"gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\"if( enableSpecular )\",\r\n\t\t\t\t\t\"specularTex = texture2D( tSpecular, vUv ).xyz;\",\r\n\r\n\t\t\t\t\"mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\",\r\n\t\t\t\t\"vec3 finalNormal = tsb * normalTex;\",\r\n\r\n\t\t\t\t\"#ifdef FLIP_SIDED\",\r\n\r\n\t\t\t\t\t\"finalNormal = -finalNormal;\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"vec3 normal = normalize( finalNormal );\",\r\n\t\t\t\t\"vec3 viewDirection = normalize( vViewPosition );\",\r\n\r\n\t\t\t\t// point lights\r\n\r\n\t\t\t\t\"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n\t\t\t\t\t\"vec3 pointDiffuse = vec3( 0.0 );\",\r\n\t\t\t\t\t\"vec3 pointSpecular = vec3( 0.0 );\",\r\n\r\n\t\t\t\t\t\"for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\",\r\n\r\n\t\t\t\t\t\t\"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\",\r\n\t\t\t\t\t\t\"vec3 pointVector = lPosition.xyz + vViewPosition.xyz;\",\r\n\r\n\t\t\t\t\t\t\"float pointDistance = 1.0;\",\r\n\t\t\t\t\t\t\"if ( pointLightDistance[ i ] > 0.0 )\",\r\n\t\t\t\t\t\t\t\"pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\",\r\n\r\n\t\t\t\t\t\t\"pointVector = normalize( pointVector );\",\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\t\t\t\t\"#ifdef WRAP_AROUND\",\r\n\r\n\t\t\t\t\t\t\t\"float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\",\r\n\t\t\t\t\t\t\t\"float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\",\r\n\r\n\t\t\t\t\t\t\t\"vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\",\r\n\r\n\t\t\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\t\t\"float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\",\r\n\r\n\t\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\t\t\"pointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\",\r\n\r\n\t\t\t\t\t\t// specular\r\n\r\n\t\t\t\t\t\t\"vec3 pointHalfVector = normalize( pointVector + viewDirection );\",\r\n\t\t\t\t\t\t\"float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\",\r\n\t\t\t\t\t\t\"float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\",\r\n\r\n\t\t\t\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n\t\t\t\t\t\t\"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\r\n\r\n\t\t\t\t\t\t\"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\",\r\n\t\t\t\t\t\t\"pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\",\r\n\r\n\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t// spot lights\r\n\r\n\t\t\t\t\"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n\t\t\t\t\t\"vec3 spotDiffuse = vec3( 0.0 );\",\r\n\t\t\t\t\t\"vec3 spotSpecular = vec3( 0.0 );\",\r\n\r\n\t\t\t\t\t\"for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\",\r\n\r\n\t\t\t\t\t\t\"vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\",\r\n\t\t\t\t\t\t\"vec3 spotVector = lPosition.xyz + vViewPosition.xyz;\",\r\n\r\n\t\t\t\t\t\t\"float spotDistance = 1.0;\",\r\n\t\t\t\t\t\t\"if ( spotLightDistance[ i ] > 0.0 )\",\r\n\t\t\t\t\t\t\t\"spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\",\r\n\r\n\t\t\t\t\t\t\"spotVector = normalize( spotVector );\",\r\n\r\n\t\t\t\t\t\t\"float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\",\r\n\r\n\t\t\t\t\t\t\"if ( spotEffect > spotLightAngleCos[ i ] ) {\",\r\n\r\n\t\t\t\t\t\t\t\"spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\",\r\n\r\n\t\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\t\t\t\t\t\"#ifdef WRAP_AROUND\",\r\n\r\n\t\t\t\t\t\t\t\t\"float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\",\r\n\t\t\t\t\t\t\t\t\"float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\",\r\n\r\n\t\t\t\t\t\t\t\t\"vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\",\r\n\r\n\t\t\t\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\t\t\t\"float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\",\r\n\r\n\t\t\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\t\t\t\"spotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\",\r\n\r\n\t\t\t\t\t\t\t// specular\r\n\r\n\t\t\t\t\t\t\t\"vec3 spotHalfVector = normalize( spotVector + viewDirection );\",\r\n\t\t\t\t\t\t\t\"float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\",\r\n\t\t\t\t\t\t\t\"float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\",\r\n\r\n\t\t\t\t\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n\t\t\t\t\t\t\t\"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\r\n\r\n\t\t\t\t\t\t\t\"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\",\r\n\t\t\t\t\t\t\t\"spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t// directional lights\r\n\r\n\t\t\t\t\"#if MAX_DIR_LIGHTS > 0\",\r\n\r\n\t\t\t\t\t\"vec3 dirDiffuse = vec3( 0.0 );\",\r\n\t\t\t\t\t\"vec3 dirSpecular = vec3( 0.0 );\",\r\n\r\n\t\t\t\t\t\"for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\",\r\n\r\n\t\t\t\t\t\t\"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\",\r\n\t\t\t\t\t\t\"vec3 dirVector = normalize( lDirection.xyz );\",\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\t\t\t\t\"#ifdef WRAP_AROUND\",\r\n\r\n\t\t\t\t\t\t\t\"float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\",\r\n\t\t\t\t\t\t\t\"float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\",\r\n\r\n\t\t\t\t\t\t\t\"vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\",\r\n\r\n\t\t\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\t\t\"float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\",\r\n\r\n\t\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\t\t\"dirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\",\r\n\r\n\t\t\t\t\t\t// specular\r\n\r\n\t\t\t\t\t\t\"vec3 dirHalfVector = normalize( dirVector + viewDirection );\",\r\n\t\t\t\t\t\t\"float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\",\r\n\t\t\t\t\t\t\"float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\",\r\n\r\n\t\t\t\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n\t\t\t\t\t\t\"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\r\n\r\n\t\t\t\t\t\t\"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\",\r\n\t\t\t\t\t\t\"dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\",\r\n\r\n\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t// hemisphere lights\r\n\r\n\t\t\t\t\"#if MAX_HEMI_LIGHTS > 0\",\r\n\r\n\t\t\t\t\t\"vec3 hemiDiffuse  = vec3( 0.0 );\",\r\n\t\t\t\t\t\"vec3 hemiSpecular = vec3( 0.0 );\" ,\r\n\r\n\t\t\t\t\t\"for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\",\r\n\r\n\t\t\t\t\t\t\"vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\",\r\n\t\t\t\t\t\t\"vec3 lVector = normalize( lDirection.xyz );\",\r\n\r\n\t\t\t\t\t\t// diffuse\r\n\r\n\t\t\t\t\t\t\"float dotProduct = dot( normal, lVector );\",\r\n\t\t\t\t\t\t\"float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\",\r\n\r\n\t\t\t\t\t\t\"vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\",\r\n\r\n\t\t\t\t\t\t\"hemiDiffuse += diffuse * hemiColor;\",\r\n\r\n\t\t\t\t\t\t// specular (sky light)\r\n\r\n\r\n\t\t\t\t\t\t\"vec3 hemiHalfVectorSky = normalize( lVector + viewDirection );\",\r\n\t\t\t\t\t\t\"float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\",\r\n\t\t\t\t\t\t\"float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\",\r\n\r\n\t\t\t\t\t\t// specular (ground light)\r\n\r\n\t\t\t\t\t\t\"vec3 lVectorGround = -lVector;\",\r\n\r\n\t\t\t\t\t\t\"vec3 hemiHalfVectorGround = normalize( lVectorGround + viewDirection );\",\r\n\t\t\t\t\t\t\"float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\",\r\n\t\t\t\t\t\t\"float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\",\r\n\r\n\t\t\t\t\t\t\"float dotProductGround = dot( normal, lVectorGround );\",\r\n\r\n\t\t\t\t\t\t// 2.0 => 2.0001 is hack to work around ANGLE bug\r\n\r\n\t\t\t\t\t\t\"float specularNormalization = ( shininess + 2.0001 ) / 8.0;\",\r\n\r\n\t\t\t\t\t\t\"vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\",\r\n\t\t\t\t\t\t\"vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\",\r\n\t\t\t\t\t\t\"hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\",\r\n\r\n\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t// all lights contribution summation\r\n\r\n\t\t\t\t\"vec3 totalDiffuse = vec3( 0.0 );\",\r\n\t\t\t\t\"vec3 totalSpecular = vec3( 0.0 );\",\r\n\r\n\t\t\t\t\"#if MAX_DIR_LIGHTS > 0\",\r\n\r\n\t\t\t\t\t\"totalDiffuse += dirDiffuse;\",\r\n\t\t\t\t\t\"totalSpecular += dirSpecular;\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"#if MAX_HEMI_LIGHTS > 0\",\r\n\r\n\t\t\t\t\t\"totalDiffuse += hemiDiffuse;\",\r\n\t\t\t\t\t\"totalSpecular += hemiSpecular;\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"#if MAX_POINT_LIGHTS > 0\",\r\n\r\n\t\t\t\t\t\"totalDiffuse += pointDiffuse;\",\r\n\t\t\t\t\t\"totalSpecular += pointSpecular;\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"#if MAX_SPOT_LIGHTS > 0\",\r\n\r\n\t\t\t\t\t\"totalDiffuse += spotDiffuse;\",\r\n\t\t\t\t\t\"totalSpecular += spotSpecular;\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"#ifdef METAL\",\r\n\r\n\t\t\t\t\t\"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\",\r\n\r\n\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"if ( enableReflection ) {\",\r\n\r\n\t\t\t\t\t\"vec3 vReflect;\",\r\n\t\t\t\t\t\"vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\",\r\n\r\n\t\t\t\t\t\"if ( useRefract ) {\",\r\n\r\n\t\t\t\t\t\t\"vReflect = refract( cameraToVertex, normal, refractionRatio );\",\r\n\r\n\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\"vReflect = reflect( cameraToVertex, normal );\",\r\n\r\n\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\",\r\n\r\n\t\t\t\t\t\"#ifdef GAMMA_INPUT\",\r\n\r\n\t\t\t\t\t\t\"cubeColor.xyz *= cubeColor.xyz;\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\t\"gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\",\r\n\r\n\t\t\t\t\"}\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"attribute vec4 tangent;\",\r\n\r\n\t\t\t\"uniform vec2 uOffset;\",\r\n\t\t\t\"uniform vec2 uRepeat;\",\r\n\r\n\t\t\t\"uniform bool enableDisplacement;\",\r\n\r\n\t\t\t\"#ifdef VERTEX_TEXTURES\",\r\n\r\n\t\t\t\t\"uniform sampler2D tDisplacement;\",\r\n\t\t\t\t\"uniform float uDisplacementScale;\",\r\n\t\t\t\t\"uniform float uDisplacementBias;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"varying vec3 vTangent;\",\r\n\t\t\t\"varying vec3 vBinormal;\",\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\t\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\t\t\"varying vec3 vViewPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\r\n\t\t\t\t// normal, tangent and binormal vectors\r\n\r\n\t\t\t\t\"#ifdef USE_SKINNING\",\r\n\r\n\t\t\t\t\t\"vNormal = normalize( normalMatrix * skinnedNormal.xyz );\",\r\n\r\n\t\t\t\t\t\"vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\",\r\n\t\t\t\t\t\"vTangent = normalize( normalMatrix * skinnedTangent.xyz );\",\r\n\r\n\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\"vNormal = normalize( normalMatrix * normal );\",\r\n\t\t\t\t\t\"vTangent = normalize( normalMatrix * tangent.xyz );\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\",\r\n\r\n\t\t\t\t\"vUv = uv * uRepeat + uOffset;\",\r\n\r\n\t\t\t\t// displacement mapping\r\n\r\n\t\t\t\t\"vec3 displacedPosition;\",\r\n\r\n\t\t\t\t\"#ifdef VERTEX_TEXTURES\",\r\n\r\n\t\t\t\t\t\"if ( enableDisplacement ) {\",\r\n\r\n\t\t\t\t\t\t\"vec3 dv = texture2D( tDisplacement, uv ).xyz;\",\r\n\t\t\t\t\t\t\"float df = uDisplacementScale * dv.x + uDisplacementBias;\",\r\n\t\t\t\t\t\t\"displacedPosition = position + normalize( normal ) * df;\",\r\n\r\n\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\"#ifdef USE_SKINNING\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 skinVertex = vec4( position, 1.0 );\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 skinned  = boneMatX * skinVertex * skinWeight.x;\",\r\n\t\t\t\t\t\t\t\"skinned \t  += boneMatY * skinVertex * skinWeight.y;\",\r\n\r\n\t\t\t\t\t\t\t\"displacedPosition  = skinned.xyz;\",\r\n\r\n\t\t\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\t\t\"displacedPosition = position;\",\r\n\r\n\t\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\"#ifdef USE_SKINNING\",\r\n\r\n\t\t\t\t\t\t\"vec4 skinVertex = vec4( position, 1.0 );\",\r\n\r\n\t\t\t\t\t\t\"vec4 skinned  = boneMatX * skinVertex * skinWeight.x;\",\r\n\t\t\t\t\t\t\"skinned \t  += boneMatY * skinVertex * skinWeight.y;\",\r\n\r\n\t\t\t\t\t\t\"displacedPosition  = skinned.xyz;\",\r\n\r\n\t\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\t\"displacedPosition = position;\",\r\n\r\n\t\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\t\"vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\",\r\n\t\t\t\t\"vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\",\r\n\r\n\t\t\t\t\"gl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\t\"vWorldPosition = worldPosition.xyz;\",\r\n\t\t\t\t\"vViewPosition = -mvPosition.xyz;\",\r\n\r\n\t\t\t\t// shadows\r\n\r\n\t\t\t\t\"#ifdef USE_SHADOWMAP\",\r\n\r\n\t\t\t\t\t\"for( int i = 0; i < MAX_SHADOWS; i ++ ) {\",\r\n\r\n\t\t\t\t\t\t\"vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\",\r\n\r\n\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'cube': {\r\n\r\n\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: -1 },\r\n\t\t\t\t\t\"tEncoding\": { type: \"i\", value: 0 },\r\n\t\t\t\t\t\"blurring\": { type: \"f\", value: 0 }\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\"vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\t\"vWorldPosition = worldPosition.xyz;\",\r\n\r\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t  \"#ifdef TEXTURE_CUBE_LOD_EXT\",\r\n\t\t    \"#extension GL_EXT_shader_texture_lod : enable\",\r\n\t\t  \"#endif\",\r\n\r\n\t\t  THREE.ShaderChunk[ \"common\" ],\r\n\r\n\t\t  \"uniform samplerCube tCube;\",\r\n\t\t  \"uniform float tFlip;\",\r\n\t\t  \"uniform int tEncoding;\",\r\n\t\t  \"uniform float blurring;\",\r\n\r\n\t\t  \"varying vec3 vWorldPosition;\",\r\n\r\n\t\t  \"void main() {\",\r\n\r\n\t\t  \t\"vec3 queryVector = vec3( tFlip * vWorldPosition.x, vWorldPosition.yz );\",\r\n\r\n\t\t\t\"#if defined( TEXTURE_CUBE_LOD_EXT )\",\r\n\r\n\t\t\t\t\"vec4 color = textureCubeLodEXT( tCube, queryVector, blurring );\",\r\n\r\n\t\t\t\"#else\",\r\n\r\n\t\t\t    \"vec4 color = textureCube( tCube, queryVector );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t    \"color = texelDecode( color, tEncoding );\",\r\n\r\n\t\t    \"#ifdef GAMMA_OUTPUT\",\r\n\r\n\t\t      \"color.xyz = sqrt( color.xyz );\",\r\n\r\n\t\t    \"#endif\",\r\n\r\n\t\t    \"gl_FragColor = color;\",\r\n\r\n\t\t  \"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t// Depth encoding into RGBA texture\r\n\t// \tbased on SpiderGL shadow map example\r\n\t// \t\thttp://spidergl.org/example.php?id=6\r\n\t// \toriginally from\r\n\t//\t\thttp://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t// \tsee also here:\r\n\t//\t\thttp://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\r\n\t'depthRGBA': {\r\n\r\n\t\tuniforms: {},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"vec4 pack_depth( const float depth ) {\",\r\n\r\n\t\t\t\"\t\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\"\treturn res;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t// Depth encoding into RGBA texture\r\n\t// \tbased on SpiderGL shadow map example\r\n\t// \t\thttp://spidergl.org/example.php?id=6\r\n\t// \toriginally from\r\n\t//\t\thttp://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t// \tsee also here:\r\n\t//\t\thttp://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\r\n\t'linearDepthRGBA': {\r\n\r\n\t\tuniforms: {\r\n\t\t\t\"zNear\": { type: \"f\", value: 0.5 },\r\n\t\t\t\"zFar\": { type: \"f\", value: 1000 }\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\r\n\t\t\t\"varying vec3 vViewPosition;\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\r\n\t\t\t\t\"vViewPosition = -mvPosition.xyz;\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float zNear;\",\r\n\t\t\t\"uniform float zFar;\",\r\n\r\n\t\t\t\"varying vec3 vViewPosition;\",\r\n\r\n\t\t\t\"vec4 pack_depth( const float depth ) {\",\r\n\r\n\t\t\t\"\t\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\"\treturn res;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\"gl_FragColor = pack_depth( clamp( ( vViewPosition.z - zNear ) / ( zFar - zNear ), 0.0, 1.0 ) );\",\r\n\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n * @author bhouston / http://clara.io/\r\n */\r\n\r\nTHREE.WebGLRenderer = function ( parameters ) {\r\n\r\n\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n\t_precision = parameters.precision !== undefined ? parameters.precision : 'mediump',\r\n\r\n\t_buffers = {},\r\n\r\n\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\r\n\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t_clearAlpha = 0;\r\n\r\n\t// public properties\r\n\r\n\tthis.domElement = _canvas;\r\n\tthis.context = null;\r\n\tthis.devicePixelRatio = parameters.devicePixelRatio !== undefined\r\n\t\t\t\t? parameters.devicePixelRatio\r\n\t\t\t\t: self.devicePixelRatio !== undefined\r\n\t\t\t\t\t? self.devicePixelRatio\r\n\t\t\t\t\t: 1;\r\n\r\n\t// clearing\r\n\r\n\tthis.autoClear = true;\r\n\tthis.autoClearColor = true;\r\n\tthis.autoClearDepth = true;\r\n\tthis.autoClearStencil = true;\r\n\r\n\t// scene graph\r\n\r\n\tthis.sortObjects = true;\r\n\tthis.autoUpdateObjects = true;\r\n\r\n\t// physically based shading\r\n\r\n\tthis.gammaInput = true;\r\n\tthis.gammaOutput = true;\r\n\r\n\t// shadow map\r\n\r\n\tthis.shadowMapEnabled = false;\r\n\tthis.shadowMapAutoUpdate = true;\r\n\tthis.shadowMapType = THREE.PCFShadowMap;\r\n\tthis.shadowMapCullFace = THREE.CullFaceFront;\r\n\tthis.shadowMapDebug = false;\r\n\tthis.shadowMapCascade = false;\r\n\r\n\t// morphs\r\n\r\n\tthis.maxMorphTargets = 8;\r\n\tthis.maxMorphNormals = 4;\r\n\r\n\t// flags\r\n\r\n\tthis.autoScaleCubemaps = true;\r\n\r\n\t// custom render plugins\r\n\r\n\tthis.renderPluginsPre = [];\r\n\tthis.renderPluginsPost = [];\r\n\r\n\t// info\r\n\r\n\tthis.info = {\r\n\r\n\t\tmemory: {\r\n\r\n\t\t\tprograms: 0,\r\n\t\t\tgeometries: 0,\r\n\t\t\ttextures: 0\r\n\r\n\t\t},\r\n\r\n\t\trender: {\r\n\r\n\t\t\tcalls: 0,\r\n\t\t\tvertices: 0,\r\n\t\t\tfaces: 0,\r\n\t\t\tpoints: 0\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// internal properties\r\n\r\n\tvar _this = this,\r\n\r\n\t_programs = [],\r\n\t_programs_counter = 0,\r\n\r\n\t// internal state cache\r\n\r\n\t_currentProgram = null,\r\n\t_currentFramebuffer = null,\r\n\t_currentMaterialId = -1,\r\n\t_currentGeometryGroupHash = null,\r\n\t_currentCamera = null,\r\n\r\n\t_usedTextureUnits = 0,\r\n\r\n\t// GL state cache\r\n\r\n\t_oldDoubleSided = -1,\r\n\t_oldFlipSided = -1,\r\n\r\n\t_oldBlending = -1,\r\n\r\n\t_oldBlendEquation = -1,\r\n\t_oldBlendSrc = -1,\r\n\t_oldBlendDst = -1,\r\n\r\n\t_oldDepthTest = -1,\r\n\t_oldDepthWrite = -1,\r\n\r\n\t_oldPolygonOffset = null,\r\n\t_oldPolygonOffsetFactor = null,\r\n\t_oldPolygonOffsetUnits = null,\r\n\r\n\t_oldLineWidth = null,\r\n\r\n\t_viewportX = 0,\r\n\t_viewportY = 0,\r\n\t_viewportWidth = _canvas.width,\r\n\t_viewportHeight = _canvas.height,\r\n\t_currentWidth = 0,\r\n\t_currentHeight = 0,\r\n\r\n\t_enabledAttributes = new Uint8Array( 16 ),\r\n\r\n\t// frustum\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\r\n\t // camera matrices cache\r\n\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t_projScreenMatrixPS = new THREE.Matrix4(),\r\n\r\n\t_vector3 = new THREE.Vector3(),\r\n\t_width = new THREE.Vector3(),\r\n\t_height = new THREE.Vector3(),\r\n\r\n\t// light arrays cache\r\n\r\n\t_direction = new THREE.Vector3(),\r\n\r\n\t_lightsNeedUpdate = true,\r\n\r\n\t_lights = {\r\n\r\n\t\tambient: [ 0, 0, 0 ],\r\n\t\tdirectional: { length: 0, colors: new Array(), positions: new Array() },\r\n\t\tpoint: { length: 0, colors: new Array(), positions: new Array(), distances: new Array(), decayExponents: new Array() },\r\n\t\tspot: { length: 0, colors: new Array(), positions: new Array(), distances: new Array(), decayExponents: new Array(), directions: new Array(), anglesCos: new Array(), exponents: new Array() },\r\n\t\themi: { length: 0, skyColors: new Array(), groundColors: new Array(), positions: new Array() },\r\n\t\tarea: { length: 0, colors: new Array(), positions: new Array(), distances: new Array(), decayExponents: new Array(), widths: new Array(), heights: new Array() }\r\n\r\n\t};\r\n\r\n\t// initialize\r\n\r\n\tvar _gl;\r\n\r\n\tvar _glExtensionTextureFloat;\r\n\tvar _glExtensionTextureFloatLinear;\r\n\tvar _glExtensionStandardDerivatives;\r\n\tvar _glExtensionShaderTextureLOD;\r\n\tvar _glExtensionTextureFilterAnisotropic;\r\n\tvar _glExtensionCompressedTextureS3TC;\r\n\r\n\tinitGL();\r\n\r\n\tsetDefaultGLState();\r\n\r\n\tthis.context = _gl;\r\n\r\n\t// GPU capabilities\r\n\r\n\tvar _maxTextures = _gl.getParameter( _gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\tvar _maxVertexTextures = _gl.getParameter( _gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\tvar _maxTextureSize = _gl.getParameter( _gl.MAX_TEXTURE_SIZE );\r\n\tvar _maxCubemapSize = _gl.getParameter( _gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\tvar _maxAnisotropy = _glExtensionTextureFilterAnisotropic ? _gl.getParameter( _glExtensionTextureFilterAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT ) : 0;\r\n\r\n\tvar _supportsVertexTextures = ( _maxVertexTextures > 0 );\r\n\tvar _supportsBoneTextures = _supportsVertexTextures && _glExtensionTextureFloat;\r\n\r\n\tvar _compressedTextureFormats = _glExtensionCompressedTextureS3TC ? _gl.getParameter( _gl.COMPRESSED_TEXTURE_FORMATS ) : [];\r\n\r\n\t//\r\n\r\n\tvar _vertexShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.HIGH_FLOAT );\r\n\tvar _vertexShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.MEDIUM_FLOAT );\r\n\tvar _vertexShaderPrecisionLowpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.LOW_FLOAT );\r\n\r\n\tvar _fragmentShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.HIGH_FLOAT );\r\n\tvar _fragmentShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.MEDIUM_FLOAT );\r\n\tvar _fragmentShaderPrecisionLowpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.LOW_FLOAT );\r\n\r\n\tvar _vertexShaderPrecisionHighpInt = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.HIGH_INT );\r\n\tvar _vertexShaderPrecisionMediumpInt = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.MEDIUM_INT );\r\n\tvar _vertexShaderPrecisionLowpInt = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.LOW_INT );\r\n\r\n\tvar _fragmentShaderPrecisionHighpInt = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.HIGH_INT );\r\n\tvar _fragmentShaderPrecisionMediumpInt = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.MEDIUM_INT );\r\n\tvar _fragmentShaderPrecisionLowpInt = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.LOW_INT );\r\n\r\n\t// clamp precision to maximum available\r\n\r\n\tvar highpAvailable = _vertexShaderPrecisionHighpFloat.precision > 0 && _fragmentShaderPrecisionHighpFloat.precision > 0;\r\n\tvar mediumpAvailable = _vertexShaderPrecisionMediumpFloat.precision > 0 && _fragmentShaderPrecisionMediumpFloat.precision > 0;\r\n\r\n\tif ( _precision === \"highp\" && ! highpAvailable ) {\r\n\r\n\t\tif ( mediumpAvailable ) {\r\n\r\n\t\t\t_precision = \"mediump\";\r\n\t\t\tTHREE.onwarning( \"WebGLRenderer: highp not supported, using mediump\" );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_precision = \"lowp\";\r\n\t\t\tTHREE.onwarning( \"WebGLRenderer: highp and mediump not supported, using lowp\" );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tif ( _precision === \"mediump\" && ! mediumpAvailable ) {\r\n\r\n\t\t_precision = \"lowp\";\r\n\t\tTHREE.onwarning( \"WebGLRenderer: mediump not supported, using lowp\" );\r\n\r\n\t}\r\n\r\n\t// API\r\n\r\n\tthis.getContext = function () {\r\n\r\n\t\treturn _gl;\r\n\r\n\t};\r\n\r\n\tthis.supportsVertexTextures = function () {\r\n\r\n\t\treturn _supportsVertexTextures;\r\n\r\n\t};\r\n\r\n\tthis.supportsFloatTextures = function () {\r\n\r\n\t\treturn _glExtensionTextureFloat;\r\n\r\n\t};\r\n\r\n\tthis.supportsStandardDerivatives = function () {\r\n\r\n\t\treturn _glExtensionStandardDerivatives;\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTextureS3TC = function () {\r\n\r\n\t\treturn _glExtensionCompressedTextureS3TC;\r\n\r\n\t};\r\n\r\n\tthis.getMaxAnisotropy  = function () {\r\n\r\n\t\treturn _maxAnisotropy;\r\n\r\n\t};\r\n\r\n\tthis.getPrecision = function () {\r\n\r\n\t\treturn _precision;\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t_canvas.width = width * this.devicePixelRatio;\r\n\t\t_canvas.height = height * this.devicePixelRatio;\r\n\r\n\t\tif ( this.devicePixelRatio !== 1 && updateStyle !== false ) {\r\n\r\n\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t}\r\n\r\n\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t};\r\n\r\n\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\t_viewportX = x * this.devicePixelRatio;\r\n\t\t_viewportY = y * this.devicePixelRatio;\r\n\r\n\t\t_viewportWidth = width * this.devicePixelRatio;\r\n\t\t_viewportHeight = height * this.devicePixelRatio;\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t};\r\n\r\n\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\t_gl.scissor(\r\n\t\t\tx * this.devicePixelRatio,\r\n\t\t\ty * this.devicePixelRatio,\r\n\t\t\twidth * this.devicePixelRatio,\r\n\t\t\theight * this.devicePixelRatio\r\n\t\t);\r\n\r\n\t};\r\n\r\n\tthis.enableScissorTest = function ( enable ) {\r\n\r\n\t\tenable ? _gl.enable( _gl.SCISSOR_TEST ) : _gl.disable( _gl.SCISSOR_TEST );\r\n\r\n\t};\r\n\r\n\t// Clearing\r\n\r\n\tthis.setClearColor = function ( color, alpha ) {\r\n\r\n\t\t_clearColor.set( color );\r\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n\t\t_gl.clearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.setClearColorHex = function ( hex, alpha ) {\r\n\r\n\t\tTHREE.onwarning( 'DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.' );\r\n\t\tthis.setClearColor( hex, alpha );\r\n\r\n\t};\r\n\r\n\tthis.getClearColor = function () {\r\n\r\n\t\treturn _clearColor;\r\n\r\n\t};\r\n\r\n\tthis.getClearAlpha = function () {\r\n\r\n\t\treturn _clearAlpha;\r\n\r\n\t};\r\n\r\n\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\tvar bits = 0;\r\n\r\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t_gl.clear( bits );\r\n\r\n\t};\r\n\r\n\tthis.clearColor = function () {\r\n\r\n\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearDepth = function () {\r\n\r\n\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearStencil = function () {\r\n\r\n\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\t\tthis.clear( color, depth, stencil );\r\n\r\n\t};\r\n\r\n\t// Plugins\r\n\r\n\tthis.addPostPlugin = function ( plugin ) {\r\n\r\n\t\tplugin.init( this );\r\n\t\tthis.renderPluginsPost.push( plugin );\r\n\r\n\t};\r\n\r\n\tthis.addPrePlugin = function ( plugin ) {\r\n\r\n\t\tplugin.init( this );\r\n\t\tthis.renderPluginsPre.push( plugin );\r\n\r\n\t};\r\n\r\n\t// Rendering\r\n\r\n\tthis.updateShadowMap = function ( scene, camera ) {\r\n\r\n\t\t_currentProgram = null;\r\n\t\t_oldBlending = -1;\r\n\t\t_oldDepthTest = -1;\r\n\t\t_oldDepthWrite = -1;\r\n\t\t_currentGeometryGroupHash = -1;\r\n\t\t_currentMaterialId = -1;\r\n\t\t_lightsNeedUpdate = true;\r\n\t\t_oldDoubleSided = -1;\r\n\t\t_oldFlipSided = -1;\r\n\r\n\t\tthis.shadowMapPlugin.update( scene, camera );\r\n\r\n\t};\r\n\r\n\t// Internal functions\r\n\r\n\t// Buffer allocation\r\n\r\n\tfunction createParticleBuffers ( geometry ) {\r\n\r\n\t\tgeometry.__webglVertexBuffer = _gl.createBuffer();\r\n\t\tgeometry.__webglColorBuffer = _gl.createBuffer();\r\n\r\n\t\t_this.info.memory.geometries ++;\r\n\r\n\t};\r\n\r\n\tfunction createLineBuffers ( geometry ) {\r\n\r\n\t\tgeometry.__webglVertexBuffer = _gl.createBuffer();\r\n\t\tgeometry.__webglColorBuffer = _gl.createBuffer();\r\n\t\tgeometry.__webglLineDistanceBuffer = _gl.createBuffer();\r\n\r\n\t\t_this.info.memory.geometries ++;\r\n\r\n\t};\r\n\r\n\tfunction createMeshBuffers ( geometryGroup ) {\r\n\r\n\t\tgeometryGroup.__webglVertexBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglNormalBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglTangentBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglColorBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglUVBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglUV2Buffer = _gl.createBuffer();\r\n\r\n\t\tgeometryGroup.__webglSkinIndicesBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglSkinWeightsBuffer = _gl.createBuffer();\r\n\r\n\t\tgeometryGroup.__webglFaceBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglLineBuffer = _gl.createBuffer();\r\n\r\n\t\tvar m, ml;\r\n\r\n\t\tif ( geometryGroup.numMorphTargets ) {\r\n\r\n\t\t\tgeometryGroup.__webglMorphTargetsBuffers = [];\r\n\r\n\t\t\tfor ( m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {\r\n\r\n\t\t\t\tgeometryGroup.__webglMorphTargetsBuffers.push( _gl.createBuffer() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometryGroup.numMorphNormals ) {\r\n\r\n\t\t\tgeometryGroup.__webglMorphNormalsBuffers = [];\r\n\r\n\t\t\tfor ( m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {\r\n\r\n\t\t\t\tgeometryGroup.__webglMorphNormalsBuffers.push( _gl.createBuffer() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_this.info.memory.geometries ++;\r\n\r\n\t};\r\n\r\n\t// Events\r\n\r\n\tvar onGeometryDispose = function ( event ) {\r\n\r\n\t\tvar geometry = event.target;\r\n\r\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tdeallocateGeometry( geometry );\r\n\r\n\t};\r\n\r\n\tvar onTextureDispose = function ( event ) {\r\n\r\n\t\tvar texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tdeallocateTexture( texture );\r\n\r\n\t\t_this.info.memory.textures --;\r\n\r\n\r\n\t};\r\n\r\n\tvar onRenderTargetDispose = function ( event ) {\r\n\r\n\t\tvar renderTarget = event.target;\r\n\r\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t\t_this.info.memory.textures --;\r\n\r\n\t};\r\n\r\n\tvar onMaterialDispose = function ( event ) {\r\n\r\n\t\tvar material = event.target;\r\n\r\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tdeallocateMaterial( material );\r\n\r\n\t};\r\n\r\n\t// Buffer deallocation\r\n\r\n\tvar deleteBuffers = function ( geometry ) {\r\n\r\n\t\tif ( geometry.__webglVertexBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglVertexBuffer );\r\n\t\tif ( geometry.__webglNormalBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglNormalBuffer );\r\n\t\tif ( geometry.__webglTangentBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglTangentBuffer );\r\n\t\tif ( geometry.__webglColorBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglColorBuffer );\r\n\t\tif ( geometry.__webglUVBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglUVBuffer );\r\n\t\tif ( geometry.__webglUV2Buffer !== undefined ) _gl.deleteBuffer( geometry.__webglUV2Buffer );\r\n\r\n\t\tif ( geometry.__webglSkinIndicesBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglSkinIndicesBuffer );\r\n\t\tif ( geometry.__webglSkinWeightsBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglSkinWeightsBuffer );\r\n\r\n\t\tif ( geometry.__webglFaceBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglFaceBuffer );\r\n\t\tif ( geometry.__webglLineBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglLineBuffer );\r\n\r\n\t\tif ( geometry.__webglLineDistanceBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglLineDistanceBuffer );\r\n\t\t// custom attributes\r\n\r\n\t\tif ( geometry.__webglCustomAttributesList !== undefined ) {\r\n\r\n\t\t\tfor ( var id in geometry.__webglCustomAttributesList ) {\r\n\r\n\t\t\t\t_gl.deleteBuffer( geometry.__webglCustomAttributesList[ id ].buffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_this.info.memory.geometries --;\r\n\r\n\t};\r\n\r\n\tvar deallocateGeometry = function ( geometry ) {\r\n\r\n\t\tgeometry.__webglInit = undefined;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\t\tif ( attributes[ key ].buffer !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.deleteBuffer( attributes[ key ].buffer );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_this.info.memory.geometries --;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( geometry.geometryGroups !== undefined ) {\r\n\r\n\t\t\t\tfor ( var g in geometry.geometryGroups ) {\r\n\r\n\t\t\t\t\tvar geometryGroup = geometry.geometryGroups[ g ];\r\n\r\n\t\t\t\t\tif ( geometryGroup.numMorphTargets !== undefined ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\t\t\t_gl.deleteBuffer( geometryGroup.__webglMorphTargetsBuffers[ m ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( geometryGroup.numMorphNormals !== undefined ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\t\t\t_gl.deleteBuffer( geometryGroup.__webglMorphNormalsBuffers[ m ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdeleteBuffers( geometryGroup );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdeleteBuffers( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tvar deallocateTexture = function ( texture ) {\r\n\r\n\t\tif ( texture.image && texture.image.__webglTextureCube ) {\r\n\r\n\t\t\t// cube texture\r\n\r\n\t\t\t_gl.deleteTexture( texture.image.__webglTextureCube );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// 2D texture\r\n\r\n\t\t\tif ( ! texture.__webglInit ) return;\r\n\r\n\t\t\ttexture.__webglInit = false;\r\n\t\t\t_gl.deleteTexture( texture.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tvar deallocateRenderTarget = function ( renderTarget ) {\r\n\r\n\t\tif ( !renderTarget || ! renderTarget.__webglTexture ) return;\r\n\r\n\t\t_gl.deleteTexture( renderTarget.__webglTexture );\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTarget.__webglFramebuffer[ i ] );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTarget.__webglRenderbuffer[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.deleteFramebuffer( renderTarget.__webglFramebuffer );\r\n\t\t\t_gl.deleteRenderbuffer( renderTarget.__webglRenderbuffer );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tvar deallocateMaterial = function ( material, optionalDisconnectedProgram ) {\r\n\r\n\t\tvar program = optionalDisconnectedProgram || material.program;\r\n\r\n\t\tif ( program === undefined ) return;\r\n\r\n\t\tif( ! optionalDisconnectedProgram ) {\r\n\t\t\tmaterial.program = undefined;\r\n\t\t}\r\n\r\n\t\t// only deallocate GL program if this was the last use of shared program\r\n\t\t// assumed there is only single copy of any program in the _programs list\r\n\t\t// (that's how it's constructed)\r\n\r\n\t\tvar i, il, programInfo;\r\n\t\tvar deleteProgram = false;\r\n\r\n\t\tfor ( i = 0, il = _programs.length; i < il; i ++ ) {\r\n\r\n\t\t\tprogramInfo = _programs[ i ];\r\n\r\n\t\t\tif ( programInfo.program === program ) {\r\n\r\n\t\t\t\tprogramInfo.usedTimes --;\r\n\r\n\t\t\t\tif ( programInfo.usedTimes === 0 ) {\r\n\r\n\t\t\t\t\tdeleteProgram = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( deleteProgram === true ) {\r\n\r\n\t\t\t// avoid using array.splice, this is costlier than creating new array from scratch\r\n\r\n\t\t\tvar newPrograms = [];\r\n\r\n\t\t\tfor ( i = 0, il = _programs.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tprogramInfo = _programs[ i ];\r\n\r\n\t\t\t\tif ( programInfo.program !== program ) {\r\n\r\n\t\t\t\t\tnewPrograms.push( programInfo );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_programs = newPrograms;\r\n\r\n\t\t\t_gl.deleteProgram( program );\r\n\r\n\t\t\t_this.info.memory.programs --;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Buffer initialization\r\n\r\n\tfunction initCustomAttributes ( geometry, object ) {\r\n\r\n\t\tvar nvertices = geometry.vertices.length;\r\n\r\n\t\tvar material = object.material;\r\n\r\n\t\tif ( material.attributes ) {\r\n\r\n\t\t\tif ( geometry.__webglCustomAttributesList === undefined ) {\r\n\r\n\t\t\t\tgeometry.__webglCustomAttributesList = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var a in material.attributes ) {\r\n\r\n\t\t\t\tvar attribute = material.attributes[ a ];\r\n\r\n\t\t\t\tif ( !attribute.__webglInitialized || attribute.createUniqueBuffers ) {\r\n\r\n\t\t\t\t\tattribute.__webglInitialized = true;\r\n\r\n\t\t\t\t\tvar size = 1;\t\t// \"f\" and \"i\"\r\n\r\n\t\t\t\t\tif ( attribute.type === \"v2\" ) size = 2;\r\n\t\t\t\t\telse if ( attribute.type === \"v3\" ) size = 3;\r\n\t\t\t\t\telse if ( attribute.type === \"v4\" ) size = 4;\r\n\t\t\t\t\telse if ( attribute.type === \"c\"  ) size = 3;\r\n\r\n\t\t\t\t\tattribute.size = size;\r\n\r\n\t\t\t\t\tattribute.array = new Float32Array( nvertices * size );\r\n\r\n\t\t\t\t\tattribute.buffer = _gl.createBuffer();\r\n\t\t\t\t\tattribute.buffer.belongsToAttribute = a;\r\n\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.__webglCustomAttributesList.push( attribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction initParticleBuffers ( geometry, object ) {\r\n\r\n\t\tvar nvertices = geometry.vertices.length;\r\n\r\n\t\tgeometry.__vertexArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometry.__colorArray = new Float32Array( nvertices * 3 );\r\n\r\n\t\tgeometry.__sortArray = [];\r\n\r\n\t\tgeometry.__webglParticleCount = nvertices;\r\n\r\n\t\tinitCustomAttributes ( geometry, object );\r\n\r\n\t};\r\n\r\n\tfunction initLineBuffers ( geometry, object ) {\r\n\r\n\t\tvar nvertices = geometry.vertices.length;\r\n\r\n\t\tgeometry.__vertexArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometry.__colorArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometry.__lineDistanceArray = new Float32Array( nvertices * 1 );\r\n\r\n\t\tgeometry.__webglLineCount = nvertices;\r\n\r\n\t\tinitCustomAttributes ( geometry, object );\r\n\r\n\t};\r\n\r\n\tfunction initMeshBuffers ( geometryGroup, object ) {\r\n\r\n\t\tvar geometry = object.geometry,\r\n\t\t\tfaces3 = geometryGroup.faces3,\r\n\r\n\t\t\tnvertices = faces3.length * 3,\r\n\t\t\tntris     = faces3.length * 1,\r\n\t\t\tnlines    = faces3.length * 3,\r\n\r\n\t\t\tmaterial = getBufferMaterial( object, geometryGroup ),\r\n\r\n\t\t\tuvType = bufferGuessUVType( material ),\r\n\t\t\tnormalType = bufferGuessNormalType( material ),\r\n\t\t\tvertexColorType = bufferGuessVertexColorType( material );\r\n\r\n\t\tgeometryGroup.__vertexArray = new Float32Array( nvertices * 3 );\r\n\r\n\t\tif ( normalType ) {\r\n\r\n\t\t\tgeometryGroup.__normalArray = new Float32Array( nvertices * 3 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.hasTangents ) {\r\n\r\n\t\t\tgeometryGroup.__tangentArray = new Float32Array( nvertices * 4 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( vertexColorType ) {\r\n\r\n\t\t\tgeometryGroup.__colorArray = new Float32Array( nvertices * 3 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( uvType ) {\r\n\r\n\t\t\tif ( geometry.faceVertexUvs.length > 0 ) {\r\n\r\n\t\t\t\tgeometryGroup.__uvArray = new Float32Array( nvertices * 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.faceVertexUvs.length > 1 ) {\r\n\r\n\t\t\t\tgeometryGroup.__uv2Array = new Float32Array( nvertices * 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.geometry.skinWeights.length && object.geometry.skinIndices.length ) {\r\n\r\n\t\t\tgeometryGroup.__skinIndexArray = new Float32Array( nvertices * 4 );\r\n\t\t\tgeometryGroup.__skinWeightArray = new Float32Array( nvertices * 4 );\r\n\r\n\t\t}\r\n\r\n\t\tgeometryGroup.__faceArray = new Uint16Array( ntris * 3 );\r\n\t\tgeometryGroup.__lineArray = new Uint16Array( nlines * 2 );\r\n\r\n\t\tvar m, ml;\r\n\r\n\t\tif ( geometryGroup.numMorphTargets ) {\r\n\r\n\t\t\tgeometryGroup.__morphTargetsArrays = [];\r\n\r\n\t\t\tfor ( m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {\r\n\r\n\t\t\t\tgeometryGroup.__morphTargetsArrays.push( new Float32Array( nvertices * 3 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometryGroup.numMorphNormals ) {\r\n\r\n\t\t\tgeometryGroup.__morphNormalsArrays = [];\r\n\r\n\t\t\tfor ( m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {\r\n\r\n\t\t\t\tgeometryGroup.__morphNormalsArrays.push( new Float32Array( nvertices * 3 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometryGroup.__webglFaceCount = ntris * 3;\r\n\t\tgeometryGroup.__webglLineCount = nlines * 2;\r\n\r\n\r\n\t\t// custom attributes\r\n\r\n\t\tif ( material.attributes ) {\r\n\r\n\t\t\tif ( geometryGroup.__webglCustomAttributesList === undefined ) {\r\n\r\n\t\t\t\tgeometryGroup.__webglCustomAttributesList = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var a in material.attributes ) {\r\n\r\n\t\t\t\t// Do a shallow copy of the attribute object so different geometryGroup chunks use different\r\n\t\t\t\t// attribute buffers which are correctly indexed in the setMeshBuffers function\r\n\r\n\t\t\t\tvar originalAttribute = material.attributes[ a ];\r\n\r\n\t\t\t\tvar attribute = {};\r\n\r\n\t\t\t\tfor ( var property in originalAttribute ) {\r\n\r\n\t\t\t\t\tattribute[ property ] = originalAttribute[ property ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( !attribute.__webglInitialized || attribute.createUniqueBuffers ) {\r\n\r\n\t\t\t\t\tattribute.__webglInitialized = true;\r\n\r\n\t\t\t\t\tvar size = 1;\t\t// \"f\" and \"i\"\r\n\r\n\t\t\t\t\tif( attribute.type === \"v2\" ) size = 2;\r\n\t\t\t\t\telse if( attribute.type === \"v3\" ) size = 3;\r\n\t\t\t\t\telse if( attribute.type === \"v4\" ) size = 4;\r\n\t\t\t\t\telse if( attribute.type === \"c\"  ) size = 3;\r\n\r\n\t\t\t\t\tattribute.size = size;\r\n\r\n\t\t\t\t\tattribute.array = new Float32Array( nvertices * size );\r\n\r\n\t\t\t\t\tattribute.buffer = _gl.createBuffer();\r\n\t\t\t\t\tattribute.buffer.belongsToAttribute = a;\r\n\r\n\t\t\t\t\toriginalAttribute.needsUpdate = true;\r\n\t\t\t\t\tattribute.__original = originalAttribute;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometryGroup.__webglCustomAttributesList.push( attribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometryGroup.__inittedArrays = true;\r\n\r\n\t};\r\n\r\n\tfunction getBufferMaterial( object, geometryGroup ) {\r\n\r\n\t\treturn object.material instanceof THREE.MeshFaceMaterial\r\n\t\t\t? object.material.materials[ geometryGroup.materialIndex ]\r\n\t\t\t: object.material;\r\n\r\n\t};\r\n\r\n\tfunction materialNeedsSmoothNormals ( material ) {\r\n\r\n\t\treturn material && material.shading !== undefined && material.shading === THREE.SmoothShading;\r\n\r\n\t};\r\n\r\n\tfunction bufferGuessNormalType ( material ) {\r\n\r\n\t\t// only MeshBasicMaterial and MeshDepthMaterial don't need normals\r\n\r\n\t\tif ( ( material instanceof THREE.MeshBasicMaterial && !material.envMap ) || material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialNeedsSmoothNormals( material ) ) {\r\n\r\n\t\t\treturn THREE.SmoothShading;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn THREE.FlatShading;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction bufferGuessVertexColorType( material ) {\r\n\r\n\t\tif ( material.vertexColors ) {\r\n\r\n\t\t\treturn material.vertexColors;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t};\r\n\r\n\tfunction bufferGuessUVType( material ) {\r\n\r\n\t\t// material must use some texture to require uvs\r\n\r\n\t\tif ( material.map ||\r\n\t\t     material.opacityMap ||\r\n\t\t     material.lightMap ||\r\n\t\t     material.emissiveMap ||\r\n\t\t     material.bumpMap ||\r\n\t\t     material.normalMap ||\r\n\t\t     material.specularMap ||\r\n\t\t     material.reflectivityMap ||\r\n\t\t     material.roughnessMap ||\r\n\t\t     material.falloffMap ||\r\n\t\t     material.anisotropyMap ||\r\n\t\t     material.anisotropyRotationMap ||\r\n\t\t     material.metallicMap ||\r\n\t\t     material.translucencyMap ||\r\n\t\t     ( material.anisotropy && material.anisotropy !== 0.0 ) ||\r\n\t\t     material instanceof THREE.ShaderMaterial ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tfunction initDirectBuffers( geometry ) {\r\n\r\n\t\tvar a, attribute, type;\r\n\r\n\t\tfor ( a in geometry.attributes ) {\r\n\r\n\t\t\tif ( a === \"index\" ) {\r\n\r\n\t\t\t\ttype = _gl.ELEMENT_ARRAY_BUFFER;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttype = _gl.ARRAY_BUFFER;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tattribute = geometry.attributes[ a ];\r\n\r\n\t\t\tattribute.buffer = _gl.createBuffer();\r\n\r\n\t\t\t_gl.bindBuffer( type, attribute.buffer );\r\n\t\t\t_gl.bufferData( type, attribute.array, _gl.STATIC_DRAW );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Buffer setting\r\n\r\n\tfunction setParticleBuffers ( geometry, hint, object ) {\r\n\r\n\t\tvar v, c, vertex, offset, index, color,\r\n\r\n\t\tvertices = geometry.vertices,\r\n\t\tvl = vertices.length,\r\n\r\n\t\tcolors = geometry.colors,\r\n\t\tcl = colors.length,\r\n\r\n\t\tvertexArray = geometry.__vertexArray,\r\n\t\tcolorArray = geometry.__colorArray,\r\n\r\n\t\tsortArray = geometry.__sortArray,\r\n\r\n\t\tdirtyVertices = geometry.verticesNeedUpdate,\r\n\t\tdirtyElements = geometry.elementsNeedUpdate,\r\n\t\tdirtyColors = geometry.colorsNeedUpdate,\r\n\r\n\t\tcustomAttributes = geometry.__webglCustomAttributesList,\r\n\t\ti, il,\r\n\t\ta, ca, cal, value,\r\n\t\tcustomAttribute;\r\n\r\n\t\tif ( object.sortParticles ) {\r\n\r\n\t\t\t_projScreenMatrixPS.copy( _projScreenMatrix );\r\n\t\t\t_projScreenMatrixPS.multiply( object.matrixWorld );\r\n\r\n\t\t\tfor ( v = 0; v < vl; v ++ ) {\r\n\r\n\t\t\t\tvertex = vertices[ v ];\r\n\r\n\t\t\t\t_vector3.copy( vertex );\r\n\t\t\t\t_vector3.applyProjection( _projScreenMatrixPS );\r\n\r\n\t\t\t\tsortArray[ v ] = [ _vector3.z, v ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsortArray.sort( numericalSort );\r\n\r\n\t\t\tfor ( v = 0; v < vl; v ++ ) {\r\n\r\n\t\t\t\tvertex = vertices[ sortArray[v][1] ];\r\n\r\n\t\t\t\toffset = v * 3;\r\n\r\n\t\t\t\tvertexArray[ offset ]     = vertex.x;\r\n\t\t\t\tvertexArray[ offset + 1 ] = vertex.y;\r\n\t\t\t\tvertexArray[ offset + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( c = 0; c < cl; c ++ ) {\r\n\r\n\t\t\t\toffset = c * 3;\r\n\r\n\t\t\t\tcolor = colors[ sortArray[c][1] ];\r\n\r\n\t\t\t\tcolorArray[ offset ]     = color.r;\r\n\t\t\t\tcolorArray[ offset + 1 ] = color.g;\r\n\t\t\t\tcolorArray[ offset + 2 ] = color.b;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( customAttributes ) {\r\n\r\n\t\t\t\tfor ( i = 0, il = customAttributes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tcustomAttribute = customAttributes[ i ];\r\n\r\n\t\t\t\t\tif ( ! ( customAttribute.boundTo === undefined || customAttribute.boundTo === \"vertices\" ) ) continue;\r\n\r\n\t\t\t\t\toffset = 0;\r\n\r\n\t\t\t\t\tcal = customAttribute.value.length;\r\n\r\n\t\t\t\t\tif ( customAttribute.size === 1 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tindex = sortArray[ ca ][ 1 ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ ca ] = customAttribute.value[ index ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 2 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tindex = sortArray[ ca ][ 1 ];\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ index ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ] \t= value.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\r\n\r\n\t\t\t\t\t\t\toffset += 2;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 3 ) {\r\n\r\n\t\t\t\t\t\tif ( customAttribute.type === \"c\" ) {\r\n\r\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tindex = sortArray[ ca ][ 1 ];\r\n\r\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ index ];\r\n\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]     = value.r;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.g;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.b;\r\n\r\n\t\t\t\t\t\t\t\toffset += 3;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tindex = sortArray[ ca ][ 1 ];\r\n\r\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ index ];\r\n\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ] \t= value.x;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.z;\r\n\r\n\t\t\t\t\t\t\t\toffset += 3;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 4 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tindex = sortArray[ ca ][ 1 ];\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ index ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ]      = value.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1  ] = value.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2  ] = value.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 3  ] = value.w;\r\n\r\n\t\t\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( dirtyVertices ) {\r\n\r\n\t\t\t\tfor ( v = 0; v < vl; v ++ ) {\r\n\r\n\t\t\t\t\tvertex = vertices[ v ];\r\n\r\n\t\t\t\t\toffset = v * 3;\r\n\r\n\t\t\t\t\tvertexArray[ offset ]     = vertex.x;\r\n\t\t\t\t\tvertexArray[ offset + 1 ] = vertex.y;\r\n\t\t\t\t\tvertexArray[ offset + 2 ] = vertex.z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( dirtyColors ) {\r\n\r\n\t\t\t\tfor ( c = 0; c < cl; c ++ ) {\r\n\r\n\t\t\t\t\tcolor = colors[ c ];\r\n\r\n\t\t\t\t\toffset = c * 3;\r\n\r\n\t\t\t\t\tcolorArray[ offset ]     = color.r;\r\n\t\t\t\t\tcolorArray[ offset + 1 ] = color.g;\r\n\t\t\t\t\tcolorArray[ offset + 2 ] = color.b;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( customAttributes ) {\r\n\r\n\t\t\t\tfor ( i = 0, il = customAttributes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tcustomAttribute = customAttributes[ i ];\r\n\r\n\t\t\t\t\tif ( customAttribute.needsUpdate &&\r\n\t\t\t\t\t\t ( customAttribute.boundTo === undefined ||\r\n\t\t\t\t\t\t   customAttribute.boundTo === \"vertices\") ) {\r\n\r\n\t\t\t\t\t\tcal = customAttribute.value.length;\r\n\r\n\t\t\t\t\t\toffset = 0;\r\n\r\n\t\t\t\t\t\tif ( customAttribute.size === 1 ) {\r\n\r\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ ca ] = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else if ( customAttribute.size === 2 ) {\r\n\r\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ] \t= value.x;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\r\n\r\n\t\t\t\t\t\t\t\toffset += 2;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else if ( customAttribute.size === 3 ) {\r\n\r\n\t\t\t\t\t\t\tif ( customAttribute.type === \"c\" ) {\r\n\r\n\t\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ] \t= value.r;\r\n\t\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.g;\r\n\t\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.b;\r\n\r\n\t\t\t\t\t\t\t\t\toffset += 3;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ] \t= value.x;\r\n\t\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\r\n\t\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.z;\r\n\r\n\t\t\t\t\t\t\t\t\toffset += 3;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else if ( customAttribute.size === 4 ) {\r\n\r\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]      = value.x;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1  ] = value.y;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2  ] = value.z;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 3  ] = value.w;\r\n\r\n\t\t\t\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyVertices || object.sortParticles ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglVertexBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyColors || object.sortParticles ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglColorBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( customAttributes ) {\r\n\r\n\t\t\tfor ( i = 0, il = customAttributes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tcustomAttribute = customAttributes[ i ];\r\n\r\n\t\t\t\tif ( customAttribute.needsUpdate || object.sortParticles ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\r\n\t\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t};\r\n\r\n\tfunction setLineBuffers ( geometry, hint ) {\r\n\r\n\t\tvar v, c, d, vertex, offset, color,\r\n\r\n\t\tvertices = geometry.vertices,\r\n\t\tcolors = geometry.colors,\r\n\t\tlineDistances = geometry.lineDistances,\r\n\r\n\t\tvl = vertices.length,\r\n\t\tcl = colors.length,\r\n\t\tdl = lineDistances.length,\r\n\r\n\t\tvertexArray = geometry.__vertexArray,\r\n\t\tcolorArray = geometry.__colorArray,\r\n\t\tlineDistanceArray = geometry.__lineDistanceArray,\r\n\r\n\t\tdirtyVertices = geometry.verticesNeedUpdate,\r\n\t\tdirtyColors = geometry.colorsNeedUpdate,\r\n\t\tdirtyLineDistances = geometry.lineDistancesNeedUpdate,\r\n\r\n\t\tcustomAttributes = geometry.__webglCustomAttributesList,\r\n\r\n\t\ti, il,\r\n\t\ta, ca, cal, value,\r\n\t\tcustomAttribute;\r\n\r\n\t\tif ( dirtyVertices ) {\r\n\r\n\t\t\tfor ( v = 0; v < vl; v ++ ) {\r\n\r\n\t\t\t\tvertex = vertices[ v ];\r\n\r\n\t\t\t\toffset = v * 3;\r\n\r\n\t\t\t\tvertexArray[ offset ]     = vertex.x;\r\n\t\t\t\tvertexArray[ offset + 1 ] = vertex.y;\r\n\t\t\t\tvertexArray[ offset + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglVertexBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyColors ) {\r\n\r\n\t\t\tfor ( c = 0; c < cl; c ++ ) {\r\n\r\n\t\t\t\tcolor = colors[ c ];\r\n\r\n\t\t\t\toffset = c * 3;\r\n\r\n\t\t\t\tcolorArray[ offset ]     = color.r;\r\n\t\t\t\tcolorArray[ offset + 1 ] = color.g;\r\n\t\t\t\tcolorArray[ offset + 2 ] = color.b;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglColorBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyLineDistances ) {\r\n\r\n\t\t\tfor ( d = 0; d < dl; d ++ ) {\r\n\r\n\t\t\t\tlineDistanceArray[ d ] = lineDistances[ d ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglLineDistanceBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, lineDistanceArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( customAttributes ) {\r\n\r\n\t\t\tfor ( i = 0, il = customAttributes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tcustomAttribute = customAttributes[ i ];\r\n\r\n\t\t\t\tif ( customAttribute.needsUpdate &&\r\n\t\t\t\t\t ( customAttribute.boundTo === undefined ||\r\n\t\t\t\t\t   customAttribute.boundTo === \"vertices\" ) ) {\r\n\r\n\t\t\t\t\toffset = 0;\r\n\r\n\t\t\t\t\tcal = customAttribute.value.length;\r\n\r\n\t\t\t\t\tif ( customAttribute.size === 1 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ ca ] = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 2 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ] \t= value.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\r\n\r\n\t\t\t\t\t\t\toffset += 2;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 3 ) {\r\n\r\n\t\t\t\t\t\tif ( customAttribute.type === \"c\" ) {\r\n\r\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ] \t= value.r;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.g;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.b;\r\n\r\n\t\t\t\t\t\t\t\toffset += 3;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ] \t= value.x;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.z;\r\n\r\n\t\t\t\t\t\t\t\toffset += 3;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 4 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ] \t = value.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1  ] = value.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2  ] = value.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 3  ] = value.w;\r\n\r\n\t\t\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\r\n\t\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setMeshBuffers( geometryGroup, object, hint, dispose, material ) {\r\n\r\n\t\tif ( ! geometryGroup.__inittedArrays ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar normalType = bufferGuessNormalType( material ),\r\n\t\tvertexColorType = bufferGuessVertexColorType( material ),\r\n\t\tuvType = bufferGuessUVType( material ),\r\n\r\n\t\tneedsSmoothNormals = ( normalType === THREE.SmoothShading );\r\n\r\n\t\tvar f, fl, fi, face,\r\n\t\tvertexNormals, faceNormal, normal,\r\n\t\tvertexColors, faceColor,\r\n\t\tvertexTangents,\r\n\t\tuv, uv2, v1, v2, v3, v4, t1, t2, t3, t4, n1, n2, n3, n4,\r\n\t\tc1, c2, c3, c4,\r\n\t\tsw1, sw2, sw3, sw4,\r\n\t\tsi1, si2, si3, si4,\r\n\t\tsa1, sa2, sa3, sa4,\r\n\t\tsb1, sb2, sb3, sb4,\r\n\t\tm, ml, i, il,\r\n\t\tvn, uvi, uv2i,\r\n\t\tvk, vkl, vka,\r\n\t\tnka, chf, faceVertexNormals,\r\n\t\ta,\r\n\r\n\t\tvertexIndex = 0,\r\n\r\n\t\toffset = 0,\r\n\t\toffset_uv = 0,\r\n\t\toffset_uv2 = 0,\r\n\t\toffset_face = 0,\r\n\t\toffset_normal = 0,\r\n\t\toffset_tangent = 0,\r\n\t\toffset_line = 0,\r\n\t\toffset_color = 0,\r\n\t\toffset_skin = 0,\r\n\t\toffset_morphTarget = 0,\r\n\t\toffset_custom = 0,\r\n\t\toffset_customSrc = 0,\r\n\r\n\t\tvalue,\r\n\r\n\t\tvertexArray = geometryGroup.__vertexArray,\r\n\t\tuvArray = geometryGroup.__uvArray,\r\n\t\tuv2Array = geometryGroup.__uv2Array,\r\n\t\tnormalArray = geometryGroup.__normalArray,\r\n\t\ttangentArray = geometryGroup.__tangentArray,\r\n\t\tcolorArray = geometryGroup.__colorArray,\r\n\r\n\t\tskinIndexArray = geometryGroup.__skinIndexArray,\r\n\t\tskinWeightArray = geometryGroup.__skinWeightArray,\r\n\r\n\t\tmorphTargetsArrays = geometryGroup.__morphTargetsArrays,\r\n\t\tmorphNormalsArrays = geometryGroup.__morphNormalsArrays,\r\n\r\n\t\tcustomAttributes = geometryGroup.__webglCustomAttributesList,\r\n\t\tcustomAttribute,\r\n\r\n\t\tfaceArray = geometryGroup.__faceArray,\r\n\t\tlineArray = geometryGroup.__lineArray,\r\n\r\n\t\tgeometry = object.geometry, // this is shared for all chunks\r\n\r\n\t\tdirtyVertices = geometry.verticesNeedUpdate,\r\n\t\tdirtyElements = geometry.elementsNeedUpdate,\r\n\t\tdirtyUvs = geometry.uvsNeedUpdate,\r\n\t\tdirtyNormals = geometry.normalsNeedUpdate,\r\n\t\tdirtyTangents = geometry.tangentsNeedUpdate,\r\n\t\tdirtyColors = geometry.colorsNeedUpdate,\r\n\t\tdirtyMorphTargets = geometry.morphTargetsNeedUpdate,\r\n\r\n\t\tvertices = geometry.vertices,\r\n\t\tchunk_faces3 = geometryGroup.faces3,\r\n\t\tobj_faces = geometry.faces,\r\n\r\n\t\tobj_uvs  = geometry.faceVertexUvs[ 0 ],\r\n\t\tobj_uvs2 = geometry.faceVertexUvs[ 1 ],\r\n\r\n\t\tobj_colors = geometry.colors,\r\n\r\n\t\tobj_skinIndices = geometry.skinIndices,\r\n\t\tobj_skinWeights = geometry.skinWeights,\r\n\r\n\t\tmorphTargets = geometry.morphTargets,\r\n\t\tmorphNormals = geometry.morphNormals;\r\n\r\n\t\tif ( dirtyVertices ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\tv1 = vertices[ face.a ];\r\n\t\t\t\tv2 = vertices[ face.b ];\r\n\t\t\t\tv3 = vertices[ face.c ];\r\n\r\n\t\t\t\tvertexArray[ offset ]     = v1.x;\r\n\t\t\t\tvertexArray[ offset + 1 ] = v1.y;\r\n\t\t\t\tvertexArray[ offset + 2 ] = v1.z;\r\n\r\n\t\t\t\tvertexArray[ offset + 3 ] = v2.x;\r\n\t\t\t\tvertexArray[ offset + 4 ] = v2.y;\r\n\t\t\t\tvertexArray[ offset + 5 ] = v2.z;\r\n\r\n\t\t\t\tvertexArray[ offset + 6 ] = v3.x;\r\n\t\t\t\tvertexArray[ offset + 7 ] = v3.y;\r\n\t\t\t\tvertexArray[ offset + 8 ] = v3.z;\r\n\r\n\t\t\t\toffset += 9;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyMorphTargets ) {\r\n\r\n\t\t\tfor ( vk = 0, vkl = morphTargets.length; vk < vkl; vk ++ ) {\r\n\r\n\t\t\t\toffset_morphTarget = 0;\r\n\r\n\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tchf = chunk_faces3[ f ];\r\n\t\t\t\t\tface = obj_faces[ chf ];\r\n\r\n\t\t\t\t\t// morph positions\r\n\r\n\t\t\t\t\tv1 = morphTargets[ vk ].vertices[ face.a ];\r\n\t\t\t\t\tv2 = morphTargets[ vk ].vertices[ face.b ];\r\n\t\t\t\t\tv3 = morphTargets[ vk ].vertices[ face.c ];\r\n\r\n\t\t\t\t\tvka = morphTargetsArrays[ vk ];\r\n\r\n\t\t\t\t\tvka[ offset_morphTarget ] \t  = v1.x;\r\n\t\t\t\t\tvka[ offset_morphTarget + 1 ] = v1.y;\r\n\t\t\t\t\tvka[ offset_morphTarget + 2 ] = v1.z;\r\n\r\n\t\t\t\t\tvka[ offset_morphTarget + 3 ] = v2.x;\r\n\t\t\t\t\tvka[ offset_morphTarget + 4 ] = v2.y;\r\n\t\t\t\t\tvka[ offset_morphTarget + 5 ] = v2.z;\r\n\r\n\t\t\t\t\tvka[ offset_morphTarget + 6 ] = v3.x;\r\n\t\t\t\t\tvka[ offset_morphTarget + 7 ] = v3.y;\r\n\t\t\t\t\tvka[ offset_morphTarget + 8 ] = v3.z;\r\n\r\n\t\t\t\t\t// morph normals\r\n\r\n\t\t\t\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\t\t\t\tif ( needsSmoothNormals ) {\r\n\r\n\t\t\t\t\t\t\tfaceVertexNormals = morphNormals[ vk ].vertexNormals[ chf ];\r\n\r\n\t\t\t\t\t\t\tn1 = faceVertexNormals.a;\r\n\t\t\t\t\t\t\tn2 = faceVertexNormals.b;\r\n\t\t\t\t\t\t\tn3 = faceVertexNormals.c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tn1 = morphNormals[ vk ].faceNormals[ chf ];\r\n\t\t\t\t\t\t\tn2 = n1;\r\n\t\t\t\t\t\t\tn3 = n1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnka = morphNormalsArrays[ vk ];\r\n\r\n\t\t\t\t\t\tnka[ offset_morphTarget ] \t  = n1.x;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 1 ] = n1.y;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 2 ] = n1.z;\r\n\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 3 ] = n2.x;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 4 ] = n2.y;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 5 ] = n2.z;\r\n\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 6 ] = n3.x;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 7 ] = n3.y;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 8 ] = n3.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//\r\n\r\n\t\t\t\t\toffset_morphTarget += 9;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ vk ] );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, morphTargetsArrays[ vk ], hint );\r\n\r\n\t\t\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ vk ] );\r\n\t\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, morphNormalsArrays[ vk ], hint );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( obj_skinWeights.length ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ]\t];\r\n\r\n\t\t\t\t// weights\r\n\r\n\t\t\t\tsw1 = obj_skinWeights[ face.a ];\r\n\t\t\t\tsw2 = obj_skinWeights[ face.b ];\r\n\t\t\t\tsw3 = obj_skinWeights[ face.c ];\r\n\r\n\t\t\t\tskinWeightArray[ offset_skin ]     = sw1.x;\r\n\t\t\t\tskinWeightArray[ offset_skin + 1 ] = sw1.y;\r\n\t\t\t\tskinWeightArray[ offset_skin + 2 ] = sw1.z;\r\n\t\t\t\tskinWeightArray[ offset_skin + 3 ] = sw1.w;\r\n\r\n\t\t\t\tskinWeightArray[ offset_skin + 4 ] = sw2.x;\r\n\t\t\t\tskinWeightArray[ offset_skin + 5 ] = sw2.y;\r\n\t\t\t\tskinWeightArray[ offset_skin + 6 ] = sw2.z;\r\n\t\t\t\tskinWeightArray[ offset_skin + 7 ] = sw2.w;\r\n\r\n\t\t\t\tskinWeightArray[ offset_skin + 8 ]  = sw3.x;\r\n\t\t\t\tskinWeightArray[ offset_skin + 9 ]  = sw3.y;\r\n\t\t\t\tskinWeightArray[ offset_skin + 10 ] = sw3.z;\r\n\t\t\t\tskinWeightArray[ offset_skin + 11 ] = sw3.w;\r\n\r\n\t\t\t\t// indices\r\n\r\n\t\t\t\tsi1 = obj_skinIndices[ face.a ];\r\n\t\t\t\tsi2 = obj_skinIndices[ face.b ];\r\n\t\t\t\tsi3 = obj_skinIndices[ face.c ];\r\n\r\n\t\t\t\tskinIndexArray[ offset_skin ]     = si1.x;\r\n\t\t\t\tskinIndexArray[ offset_skin + 1 ] = si1.y;\r\n\t\t\t\tskinIndexArray[ offset_skin + 2 ] = si1.z;\r\n\t\t\t\tskinIndexArray[ offset_skin + 3 ] = si1.w;\r\n\r\n\t\t\t\tskinIndexArray[ offset_skin + 4 ] = si2.x;\r\n\t\t\t\tskinIndexArray[ offset_skin + 5 ] = si2.y;\r\n\t\t\t\tskinIndexArray[ offset_skin + 6 ] = si2.z;\r\n\t\t\t\tskinIndexArray[ offset_skin + 7 ] = si2.w;\r\n\r\n\t\t\t\tskinIndexArray[ offset_skin + 8 ]  = si3.x;\r\n\t\t\t\tskinIndexArray[ offset_skin + 9 ]  = si3.y;\r\n\t\t\t\tskinIndexArray[ offset_skin + 10 ] = si3.z;\r\n\t\t\t\tskinIndexArray[ offset_skin + 11 ] = si3.w;\r\n\r\n\t\t\t\toffset_skin += 12;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset_skin > 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinIndicesBuffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, skinIndexArray, hint );\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinWeightsBuffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, skinWeightArray, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyColors && vertexColorType ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ]\t];\r\n\r\n\t\t\t\tvertexColors = face.vertexColors;\r\n\t\t\t\tfaceColor = face.color;\r\n\r\n\t\t\t\tif ( vertexColors.length === 3 && vertexColorType === THREE.VertexColors ) {\r\n\r\n\t\t\t\t\tc1 = vertexColors[ 0 ];\r\n\t\t\t\t\tc2 = vertexColors[ 1 ];\r\n\t\t\t\t\tc3 = vertexColors[ 2 ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tc1 = faceColor;\r\n\t\t\t\t\tc2 = faceColor;\r\n\t\t\t\t\tc3 = faceColor;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolorArray[ offset_color ]     = c1.r;\r\n\t\t\t\tcolorArray[ offset_color + 1 ] = c1.g;\r\n\t\t\t\tcolorArray[ offset_color + 2 ] = c1.b;\r\n\r\n\t\t\t\tcolorArray[ offset_color + 3 ] = c2.r;\r\n\t\t\t\tcolorArray[ offset_color + 4 ] = c2.g;\r\n\t\t\t\tcolorArray[ offset_color + 5 ] = c2.b;\r\n\r\n\t\t\t\tcolorArray[ offset_color + 6 ] = c3.r;\r\n\t\t\t\tcolorArray[ offset_color + 7 ] = c3.g;\r\n\t\t\t\tcolorArray[ offset_color + 8 ] = c3.b;\r\n\r\n\t\t\t\toffset_color += 9;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset_color > 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyTangents && geometry.hasTangents ) {\r\n\r\n\t\t\tvar tmp = new THREE.Vector3( 0, 0, 0 );\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ]\t];\r\n\r\n\t\t\t\tvertexTangents = face.vertexTangents;\r\n\r\n\t\t\t\tt1 = vertexTangents[ 0 ] || tmp;\r\n\t\t\t\tt2 = vertexTangents[ 1 ] || tmp;\r\n\t\t\t\tt3 = vertexTangents[ 2 ] || tmp;\r\n\r\n\t\t\t\ttangentArray[ offset_tangent ]     = t1.x;\r\n\t\t\t\ttangentArray[ offset_tangent + 1 ] = t1.y;\r\n\t\t\t\ttangentArray[ offset_tangent + 2 ] = t1.z;\r\n\t\t\t\ttangentArray[ offset_tangent + 3 ] = t1.w;\r\n\r\n\t\t\t\ttangentArray[ offset_tangent + 4 ] = t2.x;\r\n\t\t\t\ttangentArray[ offset_tangent + 5 ] = t2.y;\r\n\t\t\t\ttangentArray[ offset_tangent + 6 ] = t2.z;\r\n\t\t\t\ttangentArray[ offset_tangent + 7 ] = t2.w;\r\n\r\n\t\t\t\ttangentArray[ offset_tangent + 8 ]  = t3.x;\r\n\t\t\t\ttangentArray[ offset_tangent + 9 ]  = t3.y;\r\n\t\t\t\ttangentArray[ offset_tangent + 10 ] = t3.z;\r\n\t\t\t\ttangentArray[ offset_tangent + 11 ] = t3.w;\r\n\r\n\t\t\t\toffset_tangent += 12;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglTangentBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, tangentArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyNormals && normalType ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ]\t];\r\n\r\n\t\t\t\tvertexNormals = face.vertexNormals;\r\n\t\t\t\tfaceNormal = face.normal;\r\n\r\n\t\t\t\tif ( vertexNormals.length === 3 && needsSmoothNormals ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\tvn = vertexNormals[ i ];\r\n\r\n\t\t\t\t\t\tnormalArray[ offset_normal ]     = vn.x;\r\n\t\t\t\t\t\tnormalArray[ offset_normal + 1 ] = vn.y;\r\n\t\t\t\t\t\tnormalArray[ offset_normal + 2 ] = vn.z;\r\n\r\n\t\t\t\t\t\toffset_normal += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\tnormalArray[ offset_normal ]     = faceNormal.x;\r\n\t\t\t\t\t\tnormalArray[ offset_normal + 1 ] = faceNormal.y;\r\n\t\t\t\t\t\tnormalArray[ offset_normal + 2 ] = faceNormal.z;\r\n\r\n\t\t\t\t\t\toffset_normal += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, normalArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyUvs && obj_uvs && uvType ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tfi = chunk_faces3[ f ];\r\n\r\n\t\t\t\tuv = obj_uvs[ fi ];\r\n\r\n\t\t\t\tif ( uv === undefined ) continue;\r\n\r\n\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\tuvi = uv[ i ];\r\n\r\n\t\t\t\t\tuvArray[ offset_uv ]     = uvi.x;\r\n\t\t\t\t\tuvArray[ offset_uv + 1 ] = uvi.y;\r\n\r\n\t\t\t\t\toffset_uv += 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset_uv > 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUVBuffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, uvArray, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyUvs && obj_uvs2 && uvType ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tfi = chunk_faces3[ f ];\r\n\r\n\t\t\t\tuv2 = obj_uvs2[ fi ];\r\n\r\n\t\t\t\tif ( uv2 === undefined ) continue;\r\n\r\n\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\tuv2i = uv2[ i ];\r\n\r\n\t\t\t\t\tuv2Array[ offset_uv2 ]     = uv2i.x;\r\n\t\t\t\t\tuv2Array[ offset_uv2 + 1 ] = uv2i.y;\r\n\r\n\t\t\t\t\toffset_uv2 += 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset_uv2 > 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUV2Buffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, uv2Array, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyElements ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tfaceArray[ offset_face ] \t = vertexIndex;\r\n\t\t\t\tfaceArray[ offset_face + 1 ] = vertexIndex + 1;\r\n\t\t\t\tfaceArray[ offset_face + 2 ] = vertexIndex + 2;\r\n\r\n\t\t\t\toffset_face += 3;\r\n\r\n\t\t\t\tlineArray[ offset_line ]     = vertexIndex;\r\n\t\t\t\tlineArray[ offset_line + 1 ] = vertexIndex + 1;\r\n\r\n\t\t\t\tlineArray[ offset_line + 2 ] = vertexIndex;\r\n\t\t\t\tlineArray[ offset_line + 3 ] = vertexIndex + 2;\r\n\r\n\t\t\t\tlineArray[ offset_line + 4 ] = vertexIndex + 1;\r\n\t\t\t\tlineArray[ offset_line + 5 ] = vertexIndex + 2;\r\n\r\n\t\t\t\toffset_line += 6;\r\n\r\n\t\t\t\tvertexIndex += 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglFaceBuffer );\r\n\t\t\t_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, faceArray, hint );\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglLineBuffer );\r\n\t\t\t_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, lineArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( customAttributes ) {\r\n\r\n\t\t\tfor ( i = 0, il = customAttributes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tcustomAttribute = customAttributes[ i ];\r\n\r\n\t\t\t\tif ( ! customAttribute.__original.needsUpdate ) continue;\r\n\r\n\t\t\t\toffset_custom = 0;\r\n\t\t\t\toffset_customSrc = 0;\r\n\r\n\t\t\t\tif ( customAttribute.size === 1 ) {\r\n\r\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === \"vertices\" ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ]\t];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ] \t   = customAttribute.value[ face.a ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = customAttribute.value[ face.b ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = customAttribute.value[ face.c ];\r\n\r\n\t\t\t\t\t\t\toffset_custom += 3;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === \"faces\" ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ] \t   = value;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = value;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = value;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 3;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( customAttribute.size === 2 ) {\r\n\r\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === \"vertices\" ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ]\t];\r\n\r\n\t\t\t\t\t\t\tv1 = customAttribute.value[ face.a ];\r\n\t\t\t\t\t\t\tv2 = customAttribute.value[ face.b ];\r\n\t\t\t\t\t\t\tv3 = customAttribute.value[ face.c ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ] \t   = v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1.y;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2.y;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v3.y;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 6;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === \"faces\" ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value;\r\n\t\t\t\t\t\t\tv2 = value;\r\n\t\t\t\t\t\t\tv3 = value;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ] \t   = v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1.y;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2.y;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v3.y;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 6;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( customAttribute.size === 3 ) {\r\n\r\n\t\t\t\t\tvar pp;\r\n\r\n\t\t\t\t\tif ( customAttribute.type === \"c\" ) {\r\n\r\n\t\t\t\t\t\tpp = [ \"r\", \"g\", \"b\" ];\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpp = [ \"x\", \"y\", \"z\" ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === \"vertices\" ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ]\t];\r\n\r\n\t\t\t\t\t\t\tv1 = customAttribute.value[ face.a ];\r\n\t\t\t\t\t\t\tv2 = customAttribute.value[ face.b ];\r\n\t\t\t\t\t\t\tv3 = customAttribute.value[ face.c ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ] \t   = v1[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\toffset_custom += 9;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === \"faces\" ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value;\r\n\t\t\t\t\t\t\tv2 = value;\r\n\t\t\t\t\t\t\tv3 = value;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ] \t   = v1[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\toffset_custom += 9;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === \"faceVertices\" ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value[ 0 ];\r\n\t\t\t\t\t\t\tv2 = value[ 1 ];\r\n\t\t\t\t\t\t\tv3 = value[ 2 ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ] \t   = v1[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\toffset_custom += 9;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( customAttribute.size === 4 ) {\r\n\r\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === \"vertices\" ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ]\t];\r\n\r\n\t\t\t\t\t\t\tv1 = customAttribute.value[ face.a ];\r\n\t\t\t\t\t\t\tv2 = customAttribute.value[ face.b ];\r\n\t\t\t\t\t\t\tv3 = customAttribute.value[ face.c ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom  ] \t= v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1  ] = v1.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2  ] = v1.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3  ] = v1.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4  ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5  ] = v2.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6  ] = v2.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7  ] = v2.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8  ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 9  ] = v3.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 10 ] = v3.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 11 ] = v3.w;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 12;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === \"faces\" ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value;\r\n\t\t\t\t\t\t\tv2 = value;\r\n\t\t\t\t\t\t\tv3 = value;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom  ] \t= v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1  ] = v1.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2  ] = v1.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3  ] = v1.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4  ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5  ] = v2.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6  ] = v2.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7  ] = v2.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8  ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 9  ] = v3.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 10 ] = v3.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 11 ] = v3.w;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 12;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === \"faceVertices\" ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value[ 0 ];\r\n\t\t\t\t\t\t\tv2 = value[ 1 ];\r\n\t\t\t\t\t\t\tv3 = value[ 2 ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom  ] \t= v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1  ] = v1.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2  ] = v1.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3  ] = v1.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4  ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5  ] = v2.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6  ] = v2.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7  ] = v2.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8  ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 9  ] = v3.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 10 ] = v3.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 11 ] = v3.w;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 12;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dispose ) {\r\n\r\n\t\t\tdelete geometryGroup.__inittedArrays;\r\n\t\t\tdelete geometryGroup.__colorArray;\r\n\t\t\tdelete geometryGroup.__normalArray;\r\n\t\t\tdelete geometryGroup.__tangentArray;\r\n\t\t\tdelete geometryGroup.__uvArray;\r\n\t\t\tdelete geometryGroup.__uv2Array;\r\n\t\t\tdelete geometryGroup.__faceArray;\r\n\t\t\tdelete geometryGroup.__vertexArray;\r\n\t\t\tdelete geometryGroup.__lineArray;\r\n\t\t\tdelete geometryGroup.__skinIndexArray;\r\n\t\t\tdelete geometryGroup.__skinWeightArray;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// used by renderBufferDirect for THREE.Line\r\n\tfunction setupLinesVertexAttributes( material, programAttributes, geometryAttributes, startIndex ) {\r\n\r\n\t\tvar attributeItem, attributeName, attributePointer, attributeSize;\r\n\r\n\t\tfor ( attributeName in programAttributes ) {\r\n\r\n\t\t\tattributePointer = programAttributes[ attributeName ];\r\n\t\t\tattributeItem = geometryAttributes[ attributeName ];\r\n\r\n\t\t\tif ( attributePointer >= 0 ) {\r\n\r\n\t\t\t\tif ( attributeItem ) {\r\n\r\n\t\t\t\t\tattributeSize = attributeItem.itemSize;\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, attributeItem.buffer );\r\n\t\t\t\t\tenableAttribute( attributePointer );\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributePointer, attributeSize, _gl.FLOAT, false, 0, startIndex * attributeSize * 4 ); // 4 bytes per Float32\r\n\r\n\t\t\t\t} else if ( material.defaultAttributeValues ) {\r\n\r\n\t\t\t\t\tif ( material.defaultAttributeValues[ attributeName ].length === 2 ) {\r\n\r\n\t\t\t\t\t\t_gl.vertexAttrib2fv( attributePointer, material.defaultAttributeValues[ attributeName ] );\r\n\r\n\t\t\t\t\t} else if ( material.defaultAttributeValues[ attributeName ].length === 3 ) {\r\n\r\n\t\t\t\t\t\t_gl.vertexAttrib3fv( attributePointer, material.defaultAttributeValues[ attributeName ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setDirectBuffers( geometry, hint ) {\r\n\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tvar attributeName, attributeItem;\r\n\r\n\t\tfor ( attributeName in attributes ) {\r\n\r\n\t\t\tattributeItem = attributes[ attributeName ];\r\n\r\n\t\t\tif ( attributeItem.needsUpdate ) {\r\n\r\n\t\t\t\tif ( attributeName === 'index' ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attributeItem.buffer );\r\n\t\t\t\t\t_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, attributeItem.array, hint );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, attributeItem.buffer );\r\n\t\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, attributeItem.array, hint );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattributeItem.needsUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Buffer rendering\r\n\r\n\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\r\n\t\tif ( object.hasPositions && ! object.__webglVertexBuffer ) object.__webglVertexBuffer = _gl.createBuffer();\r\n\t\tif ( object.hasNormals && ! object.__webglNormalBuffer ) object.__webglNormalBuffer = _gl.createBuffer();\r\n\t\tif ( object.hasUvs && ! object.__webglUvBuffer ) object.__webglUvBuffer = _gl.createBuffer();\r\n\t\tif ( object.hasColors && ! object.__webglColorBuffer ) object.__webglColorBuffer = _gl.createBuffer();\r\n\r\n\t\tif ( object.hasPositions ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglVertexBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\t\t\t_gl.enableVertexAttribArray( program.attributes.position );\r\n\t\t\t_gl.vertexAttribPointer( program.attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasNormals ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglNormalBuffer );\r\n\r\n\t\t\tif ( material.shading === THREE.FlatShading ) {\r\n\r\n\t\t\t\tvar nx, ny, nz,\r\n\t\t\t\t\tnax, nbx, ncx, nay, nby, ncy, naz, nbz, ncz,\r\n\t\t\t\t\tnormalArray,\r\n\t\t\t\t\ti, il = object.count * 3;\r\n\r\n\t\t\t\tfor( i = 0; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tnormalArray = object.normalArray;\r\n\r\n\t\t\t\t\tnax  = normalArray[ i ];\r\n\t\t\t\t\tnay  = normalArray[ i + 1 ];\r\n\t\t\t\t\tnaz  = normalArray[ i + 2 ];\r\n\r\n\t\t\t\t\tnbx  = normalArray[ i + 3 ];\r\n\t\t\t\t\tnby  = normalArray[ i + 4 ];\r\n\t\t\t\t\tnbz  = normalArray[ i + 5 ];\r\n\r\n\t\t\t\t\tncx  = normalArray[ i + 6 ];\r\n\t\t\t\t\tncy  = normalArray[ i + 7 ];\r\n\t\t\t\t\tncz  = normalArray[ i + 8 ];\r\n\r\n\t\t\t\t\tnx = ( nax + nbx + ncx ) / 3;\r\n\t\t\t\t\tny = ( nay + nby + ncy ) / 3;\r\n\t\t\t\t\tnz = ( naz + nbz + ncz ) / 3;\r\n\r\n\t\t\t\t\tnormalArray[ i ] \t = nx;\r\n\t\t\t\t\tnormalArray[ i + 1 ] = ny;\r\n\t\t\t\t\tnormalArray[ i + 2 ] = nz;\r\n\r\n\t\t\t\t\tnormalArray[ i + 3 ] = nx;\r\n\t\t\t\t\tnormalArray[ i + 4 ] = ny;\r\n\t\t\t\t\tnormalArray[ i + 5 ] = nz;\r\n\r\n\t\t\t\t\tnormalArray[ i + 6 ] = nx;\r\n\t\t\t\t\tnormalArray[ i + 7 ] = ny;\r\n\t\t\t\t\tnormalArray[ i + 8 ] = nz;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\t\t\t_gl.enableVertexAttribArray( program.attributes.normal );\r\n\t\t\t_gl.vertexAttribPointer( program.attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasUvs && material.map ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglUvBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\t\t\t_gl.enableVertexAttribArray( program.attributes.uv );\r\n\t\t\t_gl.vertexAttribPointer( program.attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglColorBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\t\t\t_gl.enableVertexAttribArray( program.attributes.color );\r\n\t\t\t_gl.vertexAttribPointer( program.attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n\t\tobject.count = 0;\r\n\r\n\t};\r\n\r\n\tthis.renderBufferDirect = function ( camera, lights, fog, material, geometry, object ) {\r\n\r\n\t\tif ( material.visible === false ) return;\r\n\r\n\t\tvar linewidth, a, attribute;\r\n\t\tvar attributeItem, attributeName, attributePointer, attributeSize;\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\tvar programAttributes = program.attributes;\r\n\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\tvar updateBuffers = false,\r\n\t\t\twireframeBit = material.wireframe ? 1 : 0,\r\n\t\t\tgeometryHash = ( geometry.id * 0xffffff ) + ( program.id * 2 ) + wireframeBit;\r\n\r\n\t\tif ( geometryHash !== _currentGeometryGroupHash ) {\r\n\r\n\t\t\t_currentGeometryGroupHash = geometryHash;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tdisableAttributes();\r\n\r\n\t\t}\r\n\r\n\t\t// render mesh\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar index = geometryAttributes[ \"index\" ];\r\n\r\n\t\t\t// indexed triangles\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\t// if there is more than 1 chunk\r\n\t\t\t\t// must set attribute pointers to use new offsets for each chunk\r\n\t\t\t\t// even if geometry and materials didn't change\r\n\r\n\t\t\t\tif ( offsets.length > 1 ) updateBuffers = true;\r\n\r\n\t\t\t\tfor ( var i = 0, il = offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar startIndex = offsets[ i ].index;\r\n\r\n\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\tfor ( attributeName in programAttributes ) {\r\n\r\n\t\t\t\t\t\t\tattributePointer = programAttributes[ attributeName ];\r\n\t\t\t\t\t\t\tattributeItem = geometryAttributes[ attributeName ];\r\n\r\n\t\t\t\t\t\t\tif ( attributePointer >= 0 ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( attributeItem ) {\r\n\r\n\t\t\t\t\t\t\t\t\tattributeSize = attributeItem.itemSize;\r\n\t\t\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, attributeItem.buffer );\r\n\t\t\t\t\t\t\t\t\tenableAttribute( attributePointer );\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttribPointer( attributePointer, attributeSize, _gl.FLOAT, false, 0, startIndex * attributeSize * 4 ); // 4 bytes per Float32\r\n\r\n\t\t\t\t\t\t\t\t} else if ( material.defaultAttributeValues ) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( material.defaultAttributeValues[ attributeName ].length === 2 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( attributePointer, material.defaultAttributeValues[ attributeName ] );\r\n\r\n\t\t\t\t\t\t\t\t\t} else if ( material.defaultAttributeValues[ attributeName ].length === 3 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( attributePointer, material.defaultAttributeValues[ attributeName ] );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// indices\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// render indexed triangles\r\n\r\n\t\t\t\t\t_gl.drawElements( _gl.TRIANGLES, offsets[ i ].count, _gl.UNSIGNED_SHORT, offsets[ i ].start * 2 ); // 2 bytes per Uint16\r\n\r\n\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t_this.info.render.vertices += offsets[ i ].count; // not really true, here vertices can be shared\r\n\t\t\t\t\t_this.info.render.faces += offsets[ i ].count / 3;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t// non-indexed triangles\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\tfor ( attributeName in programAttributes ) {\r\n\r\n\t\t\t\t\t\tif ( attributeName === 'index') continue;\r\n\r\n\t\t\t\t\t\tattributePointer = programAttributes[ attributeName ];\r\n\t\t\t\t\t\tattributeItem = geometryAttributes[ attributeName ];\r\n\r\n\t\t\t\t\t\tif ( attributePointer >= 0 ) {\r\n\r\n\t\t\t\t\t\t\tif ( attributeItem ) {\r\n\r\n\t\t\t\t\t\t\t\tattributeSize = attributeItem.itemSize;\r\n\t\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, attributeItem.buffer );\r\n\t\t\t\t\t\t\t\tenableAttribute( attributePointer );\r\n\t\t\t\t\t\t\t\t_gl.vertexAttribPointer( attributePointer, attributeSize, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\t\t\t} else if ( material.defaultAttributeValues && material.defaultAttributeValues[ attributeName ] ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( material.defaultAttributeValues[ attributeName ].length === 2 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( attributePointer, material.defaultAttributeValues[ attributeName ] );\r\n\r\n\t\t\t\t\t\t\t\t} else if ( material.defaultAttributeValues[ attributeName ].length === 3 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( attributePointer, material.defaultAttributeValues[ attributeName ] );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar position = geometry.attributes[ \"position\" ];\r\n\r\n\t\t\t\t// render non-indexed triangles\r\n\r\n\t\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, position.array.length / 3 );\r\n\r\n\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t_this.info.render.vertices += position.array.length / 3;\r\n\t\t\t\t_this.info.render.faces += position.array.length / 3 / 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t// render particles\r\n\r\n\t\t} else if ( object instanceof THREE.ParticleSystem ) {\r\n\r\n\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\tfor ( attributeName in programAttributes ) {\r\n\r\n\t\t\t\t\tattributePointer = programAttributes[ attributeName ];\r\n\t\t\t\t\tattributeItem = geometryAttributes[ attributeName ];\r\n\r\n\t\t\t\t\tif ( attributePointer >= 0 ) {\r\n\r\n\t\t\t\t\t\tif ( attributeItem ) {\r\n\r\n\t\t\t\t\t\t\tattributeSize = attributeItem.itemSize;\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, attributeItem.buffer );\r\n\t\t\t\t\t\t\tenableAttribute( attributePointer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( attributePointer, attributeSize, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\t\t} else if ( material.defaultAttributeValues && material.defaultAttributeValues[ attributeName ] ) {\r\n\r\n\t\t\t\t\t\t\tif ( material.defaultAttributeValues[ attributeName ].length === 2 ) {\r\n\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( attributePointer, material.defaultAttributeValues[ attributeName ] );\r\n\r\n\t\t\t\t\t\t\t} else if ( material.defaultAttributeValues[ attributeName ].length === 3 ) {\r\n\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( attributePointer, material.defaultAttributeValues[ attributeName ] );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar position = geometryAttributes[ \"position\" ];\r\n\r\n\t\t\t// render particles\r\n\r\n\t\t\t_gl.drawArrays( _gl.POINTS, 0, position.array.length / 3 );\r\n\r\n\t\t\t_this.info.render.calls ++;\r\n\t\t\t_this.info.render.points += position.array.length / 3;\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar primitives = ( object.type === THREE.LineStrip ) ? _gl.LINE_STRIP : _gl.LINES;\r\n\r\n\t\t\tsetLineWidth( material.linewidth );\r\n\r\n\t\t\tvar index = geometryAttributes[ \"index\" ];\r\n\r\n\t\t\t// indexed lines\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\t// if there is more than 1 chunk\r\n\t\t\t\t// must set attribute pointers to use new offsets for each chunk\r\n\t\t\t\t// even if geometry and materials didn't change\r\n\r\n\t\t\t\tif ( offsets.length > 1 ) updateBuffers = true;\r\n\r\n\t\t\t\tfor ( var i = 0, il = offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar startIndex = offsets[ i ].index;\r\n\r\n\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\tsetupLinesVertexAttributes(material, programAttributes, geometryAttributes, startIndex);\r\n\r\n\t\t\t\t\t\t// indices\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// render indexed lines\r\n\r\n\t\t\t\t\t_gl.drawElements( _gl.LINES, offsets[ i ].count, _gl.UNSIGNED_SHORT, offsets[ i ].start * 2 ); // 2 bytes per Uint16Array\r\n\r\n\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t_this.info.render.vertices += offsets[ i ].count; // not really true, here vertices can be shared\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// non-indexed lines\r\n\r\n\t\t\telse {\r\n\r\n\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\tsetupLinesVertexAttributes(material, programAttributes, geometryAttributes, 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar position = geometryAttributes[ \"position\" ];\r\n\r\n\t\t\t\t_gl.drawArrays( primitives, 0, position.array.length / 3 );\r\n\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t_this.info.render.points += position.array.length;\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.renderBuffer = function ( camera, lights, fog, material, geometryGroup, object ) {\r\n\r\n\t\tif ( material.visible === false ) return;\r\n\r\n\t\tvar linewidth, a, attribute, i, il;\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\tvar attributes = program.attributes;\r\n\r\n\t\tvar updateBuffers = false,\r\n\t\t\twireframeBit = material.wireframe ? 1 : 0,\r\n\t\t\tgeometryGroupHash = ( geometryGroup.id * 0xffffff ) + ( program.id * 2 ) + wireframeBit;\r\n\r\n\t\tif ( geometryGroupHash !== _currentGeometryGroupHash ) {\r\n\r\n\t\t\t_currentGeometryGroupHash = geometryGroupHash;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tdisableAttributes();\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tif ( !material.morphTargets && attributes.position >= 0 ) {\r\n\r\n\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\r\n\t\t\t\tenableAttribute( attributes.position );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( object.morphTargetBase ) {\r\n\r\n\t\t\t\tsetupMorphTargets( material, geometryGroup, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t// custom attributes\r\n\r\n\t\t\t// Use the per-geometryGroup custom attribute arrays which are setup in initMeshBuffers\r\n\r\n\t\t\tif ( geometryGroup.__webglCustomAttributesList ) {\r\n\r\n\t\t\t\tfor ( i = 0, il = geometryGroup.__webglCustomAttributesList.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tattribute = geometryGroup.__webglCustomAttributesList[ i ];\r\n\r\n\t\t\t\t\tif ( attributes[ attribute.buffer.belongsToAttribute ] >= 0 ) {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, attribute.buffer );\r\n\t\t\t\t\t\tenableAttribute( attributes[ attribute.buffer.belongsToAttribute ] );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( attributes[ attribute.buffer.belongsToAttribute ], attribute.size, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// colors\r\n\r\n\t\t\tif ( attributes.color >= 0 ) {\r\n\r\n\t\t\t\tif ( object.geometry.colors.length > 0 || object.geometry.faces.length > 0 ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer );\r\n\t\t\t\t\tenableAttribute( attributes.color );\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t} else if ( material.defaultAttributeValues ) {\r\n\r\n\r\n\t\t\t\t\t_gl.vertexAttrib3fv( attributes.color, material.defaultAttributeValues.color );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// normals\r\n\r\n\t\t\tif ( attributes.normal >= 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer );\r\n\t\t\t\tenableAttribute( attributes.normal );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// tangents\r\n\r\n\t\t\tif ( attributes.tangent >= 0 ) {\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglTangentBuffer );\r\n\t\t\t\tenableAttribute( attributes.tangent );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.tangent, 4, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// uvs\r\n\r\n\t\t\tif ( attributes.uv >= 0 ) {\r\n\r\n\t\t\t\tif ( object.geometry.faceVertexUvs[0] ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUVBuffer );\r\n\t\t\t\t\tenableAttribute( attributes.uv );\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t} else if ( material.defaultAttributeValues ) {\r\n\r\n\r\n\t\t\t\t\t_gl.vertexAttrib2fv( attributes.uv, material.defaultAttributeValues.uv );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( attributes.uv2 >= 0 ) {\r\n\r\n\t\t\t\tif ( object.geometry.faceVertexUvs[1] ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUV2Buffer );\r\n\t\t\t\t\tenableAttribute( attributes.uv2 );\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributes.uv2, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t} else if ( material.defaultAttributeValues ) {\r\n\r\n\r\n\t\t\t\t\t_gl.vertexAttrib2fv( attributes.uv2, material.defaultAttributeValues.uv2 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.skinning &&\r\n\t\t\t\t attributes.skinIndex >= 0 && attributes.skinWeight >= 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinIndicesBuffer );\r\n\t\t\t\tenableAttribute( attributes.skinIndex );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.skinIndex, 4, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinWeightsBuffer );\r\n\t\t\t\tenableAttribute( attributes.skinWeight );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.skinWeight, 4, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// line distances\r\n\r\n\t\t\tif ( attributes.lineDistance >= 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglLineDistanceBuffer );\r\n\t\t\t\tenableAttribute( attributes.lineDistance );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.lineDistance, 1, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// render mesh\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\t// wireframe\r\n\r\n\t\t\tif ( material.wireframe ) {\r\n\r\n\t\t\t\tsetLineWidth( material.wireframeLinewidth );\r\n\r\n\t\t\t\tif ( updateBuffers ) _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglLineBuffer );\r\n\t\t\t\t_gl.drawElements( _gl.LINES, geometryGroup.__webglLineCount, _gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t\t// triangles\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( updateBuffers ) _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglFaceBuffer );\r\n\t\t\t\t_gl.drawElements( _gl.TRIANGLES, geometryGroup.__webglFaceCount, _gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_this.info.render.calls ++;\r\n\t\t\t_this.info.render.vertices += geometryGroup.__webglFaceCount;\r\n\t\t\t_this.info.render.faces += geometryGroup.__webglFaceCount / 3;\r\n\r\n\t\t// render lines\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar primitives = ( object.type === THREE.LineStrip ) ? _gl.LINE_STRIP : _gl.LINES;\r\n\r\n\t\t\tsetLineWidth( material.linewidth );\r\n\r\n\t\t\t_gl.drawArrays( primitives, 0, geometryGroup.__webglLineCount );\r\n\r\n\t\t\t_this.info.render.calls ++;\r\n\r\n\t\t// render particles\r\n\r\n\t\t} else if ( object instanceof THREE.ParticleSystem ) {\r\n\r\n\t\t\t_gl.drawArrays( _gl.POINTS, 0, geometryGroup.__webglParticleCount );\r\n\r\n\t\t\t_this.info.render.calls ++;\r\n\t\t\t_this.info.render.points += geometryGroup.__webglParticleCount;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction enableAttribute( attribute ) {\r\n\r\n\t\tif ( _enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\t_gl.enableVertexAttribArray( attribute );\r\n\t\t\t_enabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction disableAttributes() {\r\n\r\n\t\tfor ( var attribute in _enabledAttributes ) {\r\n\r\n\t\t\tif ( _enabledAttributes[ attribute ] === 1 ) {\r\n\r\n\t\t\t\t_gl.disableVertexAttribArray( attribute );\r\n\t\t\t\t_enabledAttributes[ attribute ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setupMorphTargets ( material, geometryGroup, object ) {\r\n\r\n\t\t// set base\r\n\r\n\t\tvar attributes = material.program.attributes;\r\n\r\n\t\tif ( object.morphTargetBase !== -1 && attributes.position >= 0 ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ object.morphTargetBase ] );\r\n\t\t\tenableAttribute( attributes.position );\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t} else if ( attributes.position >= 0 ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\r\n\t\t\tenableAttribute( attributes.position );\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.morphTargetForcedOrder.length ) {\r\n\r\n\t\t\t// set forced order\r\n\r\n\t\t\tvar m = 0;\r\n\t\t\tvar order = object.morphTargetForcedOrder;\r\n\t\t\tvar influences = object.morphTargetInfluences;\r\n\r\n\t\t\twhile ( m < material.numSupportedMorphTargets && m < order.length ) {\r\n\r\n\t\t\t\tif ( attributes[ \"morphTarget\" + m ] >= 0 ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ order[ m ] ] );\r\n\t\t\t\t\tenableAttribute( attributes[ \"morphTarget\" + m ] );\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributes[ \"morphTarget\" + m ], 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( attributes[ \"morphNormal\" + m ] >= 0 && material.morphNormals ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ order[ m ] ] );\r\n\t\t\t\t\tenableAttribute( attributes[ \"morphNormal\" + m ] );\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributes[ \"morphNormal\" + m ], 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tobject.__webglMorphTargetInfluences[ m ] = influences[ order[ m ] ];\r\n\r\n\t\t\t\tm ++;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// find the most influencing\r\n\r\n\t\t\tvar influence, activeInfluenceIndices = [];\r\n\t\t\tvar influences = object.morphTargetInfluences;\r\n\t\t\tvar i, il = influences.length;\r\n\r\n\t\t\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\t\t\tinfluence = influences[ i ];\r\n\r\n\t\t\t\tif ( influence > 0 ) {\r\n\r\n\t\t\t\t\tactiveInfluenceIndices.push( [ influence, i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( activeInfluenceIndices.length > material.numSupportedMorphTargets ) {\r\n\r\n\t\t\t\tactiveInfluenceIndices.sort( numericalSort );\r\n\t\t\t\tactiveInfluenceIndices.length = material.numSupportedMorphTargets;\r\n\r\n\t\t\t} else if ( activeInfluenceIndices.length > material.numSupportedMorphNormals ) {\r\n\r\n\t\t\t\tactiveInfluenceIndices.sort( numericalSort );\r\n\r\n\t\t\t} else if ( activeInfluenceIndices.length === 0 ) {\r\n\r\n\t\t\t\tactiveInfluenceIndices.push( [ 0, 0 ] );\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar influenceIndex, m = 0;\r\n\r\n\t\t\twhile ( m < material.numSupportedMorphTargets ) {\r\n\r\n\t\t\t\tif ( activeInfluenceIndices[ m ] ) {\r\n\r\n\t\t\t\t\tinfluenceIndex = activeInfluenceIndices[ m ][ 1 ];\r\n\r\n\t\t\t\t\tif ( attributes[ \"morphTarget\" + m ] >= 0 ) {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ influenceIndex ] );\r\n\t\t\t\t\t\tenableAttribute( attributes[ \"morphTarget\" + m ] );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( attributes[ \"morphTarget\" + m ], 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( attributes[ \"morphNormal\" + m ] >= 0 && material.morphNormals ) {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ influenceIndex ] );\r\n\t\t\t\t\t\tenableAttribute( attributes[ \"morphNormal\" + m ] );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( attributes[ \"morphNormal\" + m ], 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobject.__webglMorphTargetInfluences[ m ] = influences[ influenceIndex ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributes[ \"morphTarget\" + m ], 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( attributes[ \"morphNormal\" + m ], 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t*/\r\n\r\n\t\t\t\t\tobject.__webglMorphTargetInfluences[ m ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tm ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// load updated influences uniform\r\n\r\n\t\tif ( material.program.uniforms.morphTargetInfluences !== null ) {\r\n\r\n\t\t\t_gl.uniform1fv( material.program.uniforms.morphTargetInfluences, object.__webglMorphTargetInfluences );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Sorting\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction numericalSort ( a, b ) {\r\n\r\n\t\treturn b[ 0 ] - a[ 0 ];\r\n\r\n\t};\r\n\r\n\r\n\t// Rendering\r\n\r\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\r\n\t\t\tTHREE.onerror( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar i, il,\r\n\r\n\t\twebglObject, object,\r\n\t\trenderList,\r\n\r\n\t\tlights = scene.__lights,\r\n\t\tfog = scene.fog;\r\n\r\n\t\t// reset caching for this frame\r\n\r\n\t\t_currentMaterialId = -1;\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t// update camera matrices and frustum\r\n\r\n\t\tif ( camera.parent === undefined ) camera.updateMatrixWorld();\r\n\r\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t// update WebGL objects\r\n\r\n\t\tif ( this.autoUpdateObjects ) this.initWebGLObjects( scene );\r\n\r\n\t\t// custom render plugins (pre pass)\r\n\r\n\t\trenderPlugins( this.renderPluginsPre, scene, camera );\r\n\r\n\t\t//\r\n\r\n\t\t_this.info.render.calls = 0;\r\n\t\t_this.info.render.vertices = 0;\r\n\t\t_this.info.render.faces = 0;\r\n\t\t_this.info.render.points = 0;\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\r\n\t\tif ( this.autoClear || forceClear ) {\r\n\r\n\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\r\n\t\t}\r\n\r\n\t\t// set matrices for regular objects (frustum culled)\r\n\r\n\t\trenderList = scene.__webglObjects;\r\n\r\n\t\tfor ( i = 0, il = renderList.length; i < il; i ++ ) {\r\n\r\n\t\t\twebglObject = renderList[ i ];\r\n\t\t\tobject = webglObject.object;\r\n\r\n\t\t\twebglObject.id = i;\r\n\t\t\twebglObject.render = false;\r\n\r\n\t\t\tif ( object.visible ) {\r\n\r\n\t\t\t\tif ( ! ( object instanceof THREE.Mesh || object instanceof THREE.ParticleSystem ) || ! ( object.frustumCulled ) || _frustum.intersectsObject( object ) ) {\r\n\r\n\t\t\t\t\tsetupMatrices( object, camera );\r\n\r\n\t\t\t\t\tunrollBufferMaterial( webglObject );\r\n\r\n\t\t\t\t\twebglObject.render = true;\r\n\r\n\t\t\t\t\tif ( this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t\tif ( object.renderDepth !== null ) {\r\n\r\n\t\t\t\t\t\t\twebglObject.z = object.renderDepth;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t\t\t\twebglObject.z = _vector3.z;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.sortObjects ) {\r\n\r\n\t\t\trenderList.sort( painterSortStable );\r\n\r\n\t\t}\r\n\r\n\t\t// set matrices for immediate objects\r\n\r\n\t\trenderList = scene.__webglObjectsImmediate;\r\n\r\n\t\tfor ( i = 0, il = renderList.length; i < il; i ++ ) {\r\n\r\n\t\t\twebglObject = renderList[ i ];\r\n\t\t\tobject = webglObject.object;\r\n\r\n\t\t\tif ( object.visible ) {\r\n\r\n\t\t\t\tsetupMatrices( object, camera );\r\n\r\n\t\t\t\tunrollImmediateBufferMaterial( webglObject );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( scene.overrideMaterial ) {\r\n\r\n\t\t\tvar material = scene.overrideMaterial;\r\n\r\n\t\t\tthis.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\tthis.setDepthTest( material.depthTest );\r\n\t\t\tthis.setDepthWrite( material.depthWrite );\r\n\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t\t\trenderObjects( scene.__webglObjects, false, \"\", camera, lights, fog, true, material );\r\n\t\t\trenderObjectsImmediate( scene.__webglObjectsImmediate, \"\", camera, lights, fog, false, material );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar material = null;\r\n\r\n\t\t\t// opaque pass (front-to-back order)\r\n\r\n\t\t\tthis.setBlending( THREE.NoBlending );\r\n\r\n\t\t\trenderObjects( scene.__webglObjects, true, \"opaque\", camera, lights, fog, false, material );\r\n\t\t\trenderObjectsImmediate( scene.__webglObjectsImmediate, \"opaque\", camera, lights, fog, false, material );\r\n\r\n\t\t\t// transparent pass (back-to-front order)\r\n\r\n\t\t\trenderObjects( scene.__webglObjects, false, \"transparent\", camera, lights, fog, true, material );\r\n\t\t\trenderObjectsImmediate( scene.__webglObjectsImmediate, \"transparent\", camera, lights, fog, true, material );\r\n\r\n\t\t}\r\n\r\n\t\t// custom render plugins (post pass)\r\n\r\n\t\trenderPlugins( this.renderPluginsPost, scene, camera );\r\n\r\n\r\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\tif ( renderTarget && renderTarget.generateMipmaps &&\r\n\t\t\trenderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter &&\r\n\t\t\tTHREE.isPowerOfTwo( renderTarget.width ) && THREE.isPowerOfTwo( renderTarget.height ) ) {\r\n\r\n\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\tthis.setDepthTest( true );\r\n\t\tthis.setDepthWrite( true );\r\n\r\n\t\t// _gl.finish();\r\n\r\n\t};\r\n\r\n\tfunction renderPlugins( plugins, scene, camera ) {\r\n\r\n\t\tif ( ! plugins.length ) return;\r\n\r\n\t\tfor ( var i = 0, il = plugins.length; i < il; i ++ ) {\r\n\r\n\t\t\t// reset state for plugin (to start from clean slate)\r\n\r\n\t\t\t_currentProgram = null;\r\n\t\t\t_currentCamera = null;\r\n\r\n\t\t\t_oldBlending = -1;\r\n\t\t\t_oldDepthTest = -1;\r\n\t\t\t_oldDepthWrite = -1;\r\n\t\t\t_oldDoubleSided = -1;\r\n\t\t\t_oldFlipSided = -1;\r\n\t\t\t_currentGeometryGroupHash = -1;\r\n\t\t\t_currentMaterialId = -1;\r\n\r\n\t\t\t_lightsNeedUpdate = true;\r\n\r\n\t\t\tplugins[ i ].render( scene, camera, _currentWidth, _currentHeight );\r\n\r\n\t\t\t// reset state after plugin (anything could have changed)\r\n\r\n\t\t\t_currentProgram = null;\r\n\t\t\t_currentCamera = null;\r\n\r\n\t\t\t_oldBlending = -1;\r\n\t\t\t_oldDepthTest = -1;\r\n\t\t\t_oldDepthWrite = -1;\r\n\t\t\t_oldDoubleSided = -1;\r\n\t\t\t_oldFlipSided = -1;\r\n\t\t\t_currentGeometryGroupHash = -1;\r\n\t\t\t_currentMaterialId = -1;\r\n\r\n\t\t\t_lightsNeedUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction renderObjects( renderList, reverse, materialType, camera, lights, fog, useBlending, overrideMaterial ) {\r\n\r\n\t\tvar webglObject, object, buffer, material, start, end, delta;\r\n\r\n\t\tif ( reverse ) {\r\n\r\n\t\t\tstart = renderList.length - 1;\r\n\t\t\tend = -1;\r\n\t\t\tdelta = -1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstart = 0;\r\n\t\t\tend = renderList.length;\r\n\t\t\tdelta = 1;\r\n\t\t}\r\n\r\n\t\tfor ( var i = start; i !== end; i += delta ) {\r\n\r\n\t\t\twebglObject = renderList[ i ];\r\n\r\n\t\t\tif ( webglObject.render ) {\r\n\r\n\t\t\t\tobject = webglObject.object;\r\n\t\t\t\tbuffer = webglObject.buffer;\r\n\r\n\t\t\t\tif ( overrideMaterial ) {\r\n\r\n\t\t\t\t\tmaterial = overrideMaterial;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmaterial = webglObject[ materialType ];\r\n\r\n\t\t\t\t\tif ( ! material ) continue;\r\n\r\n\t\t\t\t\tif ( useBlending ) _this.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\r\n\t\t\t\t\t_this.setDepthTest( material.depthTest );\r\n\t\t\t\t\t_this.setDepthWrite( material.depthWrite );\r\n\t\t\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_this.setMaterialFaces( material );\r\n\r\n\t\t\t\tif ( buffer instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\t\t_this.renderBufferDirect( camera, lights, fog, material, buffer, object );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_this.renderBuffer( camera, lights, fog, material, buffer, object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction renderObjectsImmediate ( renderList, materialType, camera, lights, fog, useBlending, overrideMaterial ) {\r\n\r\n\t\tvar webglObject, object, material, program;\r\n\r\n\t\tfor ( var i = 0, il = renderList.length; i < il; i ++ ) {\r\n\r\n\t\t\twebglObject = renderList[ i ];\r\n\t\t\tobject = webglObject.object;\r\n\r\n\t\t\tif ( object.visible ) {\r\n\r\n\t\t\t\tif ( overrideMaterial ) {\r\n\r\n\t\t\t\t\tmaterial = overrideMaterial;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmaterial = webglObject[ materialType ];\r\n\r\n\t\t\t\t\tif ( ! material ) continue;\r\n\r\n\t\t\t\t\tif ( useBlending ) _this.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\r\n\t\t\t\t\t_this.setDepthTest( material.depthTest );\r\n\t\t\t\t\t_this.setDepthWrite( material.depthWrite );\r\n\t\t\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_this.renderImmediateObject( camera, lights, fog, material, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.renderImmediateObject = function ( camera, lights, fog, material, object ) {\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\t_currentGeometryGroupHash = -1;\r\n\r\n\t\t_this.setMaterialFaces( material );\r\n\r\n\t\tif ( object.immediateRenderCallback ) {\r\n\r\n\t\t\tobject.immediateRenderCallback( program, _gl, _frustum );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tobject.render( function( object ) { _this.renderBufferImmediate( object, program, material ); } );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction unrollImmediateBufferMaterial ( globject ) {\r\n\r\n\t\tvar object = globject.object,\r\n\t\t\tmaterial = object.material;\r\n\r\n\t\tif ( material.transparent ) {\r\n\r\n\t\t\tglobject.transparent = material;\r\n\t\t\tglobject.opaque = null;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tglobject.opaque = material;\r\n\t\t\tglobject.transparent = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction unrollBufferMaterial ( globject ) {\r\n\r\n\t\tvar object = globject.object;\r\n\t\tvar buffer = globject.buffer;\r\n\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar material = object.material;\r\n\r\n\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\tvar materialIndex = geometry instanceof THREE.BufferGeometry ? 0 : buffer.materialIndex;\r\n\r\n\t\t\tmaterial = material.materials[ materialIndex ];\r\n\r\n\t\t\tif ( material.transparent ) {\r\n\r\n\t\t\t\tglobject.transparent = material;\r\n\t\t\t\tglobject.opaque = null;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tglobject.opaque = material;\r\n\t\t\t\tglobject.transparent = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( material ) {\r\n\r\n\t\t\t\tif ( material.transparent ) {\r\n\r\n\t\t\t\t\tglobject.transparent = material;\r\n\t\t\t\t\tglobject.opaque = null;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tglobject.opaque = material;\r\n\t\t\t\t\tglobject.transparent = null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Objects refresh\r\n\r\n\tthis.initWebGLObjects = function ( scene ) {\r\n\r\n\t\tif ( !scene.__webglObjects ) {\r\n\r\n\t\t\tscene.__webglObjects = [];\r\n\t\t\tscene.__webglObjectsImmediate = [];\r\n\t\t\tscene.__webglSprites = [];\r\n\t\t\tscene.__webglFlares = [];\r\n\r\n\t\t}\r\n\r\n\t\twhile ( scene.__objectsAdded.length ) {\r\n\r\n\t\t\taddObject( scene.__objectsAdded[ 0 ], scene );\r\n\t\t\tscene.__objectsAdded.splice( 0, 1 );\r\n\r\n\t\t}\r\n\r\n\t\twhile ( scene.__objectsRemoved.length ) {\r\n\r\n\t\t\tremoveObject( scene.__objectsRemoved[ 0 ], scene );\r\n\t\t\tscene.__objectsRemoved.splice( 0, 1 );\r\n\r\n\t\t}\r\n\r\n\t\t// update must be called after objects adding / removal\r\n\r\n\t\tfor ( var o = 0, ol = scene.__webglObjects.length; o < ol; o ++ ) {\r\n\r\n\t\t\tvar object = scene.__webglObjects[ o ].object;\r\n\r\n\t\t\t// TODO: Remove this hack (WebGLRenderer refactoring)\r\n\r\n\t\t\tif ( object.__webglInit === undefined ) {\r\n\r\n\t\t\t\tif ( object.__webglActive !== undefined ) {\r\n\r\n\t\t\t\t\tremoveObject( object, scene );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\taddObject( object, scene );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tupdateObject( object );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Objects adding\r\n\r\n\tfunction addObject( object, scene ) {\r\n\r\n\t\tvar g, geometry, material, geometryGroup;\r\n\r\n\t\tif ( object.__webglInit === undefined ) {\r\n\r\n\t\t\tobject.__webglInit = true;\r\n\r\n\t\t\tobject._modelViewMatrix = new THREE.Matrix4();\r\n\t\t\tobject._normalMatrix = new THREE.Matrix3();\r\n\r\n\t\t\tif ( object.geometry !== undefined && object.geometry.__webglInit === undefined ) {\r\n\r\n\t\t\t\tobject.geometry.__webglInit = true;\r\n\t\t\t\tobject.geometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry = object.geometry;\r\n\r\n\t\t\tif ( geometry === undefined ) {\r\n\r\n\t\t\t\t// fail silently for now\r\n\r\n\t\t\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\tinitDirectBuffers( geometry );\r\n\r\n\t\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\t\tmaterial = object.material;\r\n\r\n\t\t\t\tif ( geometry.geometryGroups === undefined ) {\r\n\r\n\t\t\t\t\tgeometry.makeGroups( material instanceof THREE.MeshFaceMaterial );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create separate VBOs per geometry chunk\r\n\r\n\t\t\t\tfor ( g in geometry.geometryGroups ) {\r\n\r\n\t\t\t\t\tgeometryGroup = geometry.geometryGroups[ g ];\r\n\r\n\t\t\t\t\t// initialise VBO on the first access\r\n\r\n\t\t\t\t\tif ( ! geometryGroup.__webglVertexBuffer ) {\r\n\r\n\t\t\t\t\t\tcreateMeshBuffers( geometryGroup );\r\n\t\t\t\t\t\tinitMeshBuffers( geometryGroup, object );\r\n\r\n\t\t\t\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\t\t\t\t\tgeometry.morphTargetsNeedUpdate = true;\r\n\t\t\t\t\t\tgeometry.elementsNeedUpdate = true;\r\n\t\t\t\t\t\tgeometry.uvsNeedUpdate = true;\r\n\t\t\t\t\t\tgeometry.normalsNeedUpdate = true;\r\n\t\t\t\t\t\tgeometry.tangentsNeedUpdate = true;\r\n\r\n\t\t\t\t\t\tgeometry.colorsNeedUpdate = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\t\tif ( ! geometry.__webglVertexBuffer ) {\r\n\r\n\t\t\t\t\tcreateLineBuffers( geometry );\r\n\t\t\t\t\tinitLineBuffers( geometry, object );\r\n\r\n\t\t\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\t\t\t\tgeometry.colorsNeedUpdate = true;\r\n\t\t\t\t\tgeometry.lineDistancesNeedUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object instanceof THREE.ParticleSystem ) {\r\n\r\n\t\t\t\tif ( ! geometry.__webglVertexBuffer ) {\r\n\r\n\t\t\t\t\tcreateParticleBuffers( geometry );\r\n\t\t\t\t\tinitParticleBuffers( geometry, object );\r\n\r\n\t\t\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\t\t\t\tgeometry.colorsNeedUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.__webglActive === undefined ) {\r\n\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\t\tgeometry = object.geometry;\r\n\r\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\t\taddBuffer( scene.__webglObjects, geometry, object );\r\n\r\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\tfor ( g in geometry.geometryGroups ) {\r\n\r\n\t\t\t\t\t\tgeometryGroup = geometry.geometryGroups[ g ];\r\n\r\n\t\t\t\t\t\taddBuffer( scene.__webglObjects, geometryGroup, object );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object instanceof THREE.Line ||\r\n\t\t\t\t\t\tobject instanceof THREE.ParticleSystem ) {\r\n\r\n\t\t\t\tgeometry = object.geometry;\r\n\t\t\t\taddBuffer( scene.__webglObjects, geometry, object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject || object.immediateRenderCallback ) {\r\n\r\n\t\t\t\taddBufferImmediate( scene.__webglObjectsImmediate, object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\t\tscene.__webglSprites.push( object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\r\n\t\t\t\tscene.__webglFlares.push( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.__webglActive = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction addBuffer( objlist, buffer, object ) {\r\n\r\n\t\tobjlist.push(\r\n\t\t\t{\r\n\t\t\t\tid: null,\r\n\t\t\t\tbuffer: buffer,\r\n\t\t\t\tobject: object,\r\n\t\t\t\topaque: null,\r\n\t\t\t\ttransparent: null,\r\n\t\t\t\tz: 0\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t};\r\n\r\n\tfunction addBufferImmediate( objlist, object ) {\r\n\r\n\t\tobjlist.push(\r\n\t\t\t{\r\n\t\t\t\tid: null,\r\n\t\t\t\tobject: object,\r\n\t\t\t\topaque: null,\r\n\t\t\t\ttransparent: null,\r\n\t\t\t\tz: 0\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t};\r\n\r\n\t// Objects updates\r\n\r\n\tfunction updateObject( object ) {\r\n\r\n\t\tvar geometry = object.geometry,\r\n\t\t\tgeometryGroup, customAttributesDirty, material;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tsetDirectBuffers( geometry, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\t// check all geometry groups\r\n\r\n\t\t\tfor( var i = 0, il = geometry.geometryGroupsList.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tgeometryGroup = geometry.geometryGroupsList[ i ];\r\n\r\n\t\t\t\tmaterial = getBufferMaterial( object, geometryGroup );\r\n\r\n\t\t\t\tif ( geometry.buffersNeedUpdate ) {\r\n\r\n\t\t\t\t\tinitMeshBuffers( geometryGroup, object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcustomAttributesDirty = material.attributes && areCustomAttributesDirty( material );\r\n\r\n\t\t\t\tif ( geometry.verticesNeedUpdate || geometry.morphTargetsNeedUpdate || geometry.elementsNeedUpdate ||\r\n\t\t\t\t\t geometry.uvsNeedUpdate || geometry.normalsNeedUpdate ||\r\n\t\t\t\t\t geometry.colorsNeedUpdate || geometry.tangentsNeedUpdate || customAttributesDirty ) {\r\n\r\n\t\t\t\t\tsetMeshBuffers( geometryGroup, object, _gl.DYNAMIC_DRAW, !geometry.dynamic, material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.morphTargetsNeedUpdate = false;\r\n\t\t\tgeometry.elementsNeedUpdate = false;\r\n\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.tangentsNeedUpdate = false;\r\n\r\n\t\t\tgeometry.buffersNeedUpdate = false;\r\n\r\n\t\t\tmaterial.attributes && clearCustomAttributes( material );\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tmaterial = getBufferMaterial( object, geometry );\r\n\r\n\t\t\tcustomAttributesDirty = material.attributes && areCustomAttributesDirty( material );\r\n\r\n\t\t\tif ( geometry.verticesNeedUpdate || geometry.colorsNeedUpdate || geometry.lineDistancesNeedUpdate || customAttributesDirty ) {\r\n\r\n\t\t\t\tsetLineBuffers( geometry, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n\t\t\tmaterial.attributes && clearCustomAttributes( material );\r\n\r\n\r\n\t\t} else if ( object instanceof THREE.ParticleSystem ) {\r\n\r\n\t\t\tmaterial = getBufferMaterial( object, geometry );\r\n\r\n\t\t\tcustomAttributesDirty = material.attributes && areCustomAttributesDirty( material );\r\n\r\n\t\t\tif ( geometry.verticesNeedUpdate || geometry.colorsNeedUpdate || object.sortParticles || customAttributesDirty ) {\r\n\r\n\t\t\t\tsetParticleBuffers( geometry, _gl.DYNAMIC_DRAW, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n\t\t\tmaterial.attributes && clearCustomAttributes( material );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Objects updates - custom attributes check\r\n\r\n\tfunction areCustomAttributesDirty( material ) {\r\n\r\n\t\tfor ( var a in material.attributes ) {\r\n\r\n\t\t\tif ( material.attributes[ a ].needsUpdate ) return true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t};\r\n\r\n\tfunction clearCustomAttributes( material ) {\r\n\r\n\t\tfor ( var a in material.attributes ) {\r\n\r\n\t\t\tmaterial.attributes[ a ].needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Objects removal\r\n\r\n\tfunction removeObject( object, scene ) {\r\n\r\n\t\tif ( object instanceof THREE.Mesh  ||\r\n\t\t\t object instanceof THREE.ParticleSystem ||\r\n\t\t\t object instanceof THREE.Line ) {\r\n\r\n\t\t\tremoveInstances( scene.__webglObjects, object );\r\n\r\n\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\tremoveInstancesDirect( scene.__webglSprites, object );\r\n\r\n\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\r\n\t\t\tremoveInstancesDirect( scene.__webglFlares, object );\r\n\r\n\t\t} else if ( object instanceof THREE.ImmediateRenderObject || object.immediateRenderCallback ) {\r\n\r\n\t\t\tremoveInstances( scene.__webglObjectsImmediate, object );\r\n\r\n\t\t}\r\n\r\n\t\tdelete object.__webglActive;\r\n\r\n\t};\r\n\r\n\tfunction removeInstances( objlist, object ) {\r\n\r\n\t\tfor ( var o = objlist.length - 1; o >= 0; o -- ) {\r\n\r\n\t\t\tif ( objlist[ o ].object === object ) {\r\n\r\n\t\t\t\tobjlist.splice( o, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction removeInstancesDirect( objlist, object ) {\r\n\r\n\t\tfor ( var o = objlist.length - 1; o >= 0; o -- ) {\r\n\r\n\t\t\tif ( objlist[ o ] === object ) {\r\n\r\n\t\t\t\tobjlist.splice( o, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Materials\r\n\r\n\tthis.initMaterial = function ( material, lights, fog, object ) {\r\n\r\n\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tvar u, a, identifiers, i, parameters, maxLightCount, maxBones, maxShadows, shaderID;\r\n\r\n\t\tif ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\tshaderID = 'depth';\r\n\r\n\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\tshaderID = 'normal';\r\n\r\n\t\t} else if ( material instanceof THREE.MeshBasicMaterial ) {\r\n\r\n\t\t\tshaderID = 'basic';\r\n\r\n\t\t} else if ( material instanceof THREE.MeshLambertMaterial ) {\r\n\r\n\t\t\tshaderID = 'lambert';\r\n\r\n\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\tshaderID = 'phong';\r\n\r\n\t\t} else if ( material instanceof THREE.MeshPhysicalMaterial ) {\r\n\r\n\t\t\tshaderID = 'physical';\r\n\r\n\t\t} else if ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n\t\t\tshaderID = 'basic';\r\n\r\n\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n\t\t\tshaderID = 'dashed';\r\n\r\n\t\t} else if ( material instanceof THREE.ParticleSystemMaterial ) {\r\n\r\n\t\t\tshaderID = 'particle_basic';\r\n\r\n\t\t}\r\n\r\n\t\tif ( shaderID && THREE.ShaderLib[ shaderID ] ) {\r\n\r\n\t\t\tsetMaterialShaders( material, THREE.ShaderLib[ shaderID ] );\r\n\r\n\t\t}\r\n\r\n\t\tif( ! shaderID ) {\r\n\t\t\tshaderID = material.shaderID;\r\n\t\t}\r\n\r\n\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t// (not to blow over maxLights budget)\r\n\r\n\t\tmaxLightCount = allocateLights( lights );\r\n\r\n\t\tmaxShadows = allocateShadows( lights );\r\n\r\n\t\tmaxBones = allocateBones( object );\r\n\r\n\t\tparameters = {\r\n\r\n\t\t\tmap: !!material.map,\r\n\t\t\topacityMap: !!material.opacityMap,\r\n\t\t\tenvMap: !!material.envMap,\r\n\t\t\tdiffuseEnvMap: !!material.diffuseEnvMap,\r\n\t\t\tlightMap: !!material.lightMap,\r\n\t\t\temissiveMap: !!material.emissiveMap,\r\n\t\t\tbumpMap: !!material.bumpMap,\r\n\t\t\tnormalMap: !!material.normalMap,\r\n\t\t\tspecularMap: !!material.specularMap,\r\n\t\t\treflectivityMap: !!material.reflectivityMap,\r\n\t\t\troughnessMap: !!material.roughnessMap,\r\n\t\t\ttranslucencyMap: !!material.translucencyMap,\r\n\t\t\tmetallicMap: !!material.metallicMap,\r\n\t\t\tfalloffMap: !!material.falloffMap,\r\n\r\n\t\t\tclearCoat: (( material.clearCoat !== undefined )&&( material.clearCoat !== 0 )),\r\n\r\n\t\t\tanisotropy: (( material.anisotropy !== undefined )&&( material.anisotropy !== 0 ))||( !! material.anisotropyMap ),\r\n\t\t\tanisotropyMap: !! material.anisotropyMap,\r\n\t\t\tanisotropyRotation: (( material.anisotropyRotation !== undefined )&&( material.anisotropyRotation !== 0 ))||( !! material.anisotropyRotationMap ),\r\n\t\t\tanisotropyRotationMap: !! material.anisotropyRotationMap,\r\n\r\n\t\t\tvertexColors: material.vertexColors,\r\n\r\n\t\t\tfog: fog,\r\n\t\t\tuseFog: material.fog,\r\n\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\r\n\t\t\tsizeAttenuation: !! material.sizeAttenuation,\r\n\r\n\t\t\tskinning: material.skinning,\r\n\t\t\tmaxBones: maxBones,\r\n\t\t\tuseVertexTexture: _supportsBoneTextures && object && object.useVertexTexture,\r\n\r\n\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\tmaxMorphTargets: this.maxMorphTargets,\r\n\t\t\tmaxMorphNormals: this.maxMorphNormals,\r\n\r\n\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\t\t\tmaxAreaLights: maxLightCount.area,\r\n\r\n\t\t\tmaxShadows: maxShadows,\r\n\t\t\tshadowMapEnabled: this.shadowMapEnabled && object.receiveShadow && maxShadows > 0,\r\n\t\t\tshadowMapType: this.shadowMapType,\r\n\t\t\tshadowMapDebug: this.shadowMapDebug,\r\n\t\t\tshadowMapCascade: this.shadowMapCascade,\r\n\r\n\t\t\ttranslucency: material.translucency && ( material.translucency.getHex() > 0 ),\r\n\r\n\t\t\talphaTest: material.alphaTest,\r\n\t\t\tfalloff: ( material.falloff || false ),\r\n\t\t\twrapAround: material.wrapAround,\r\n\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\tflipSided: material.side === THREE.BackSide\r\n\r\n\t\t};\r\n\r\n\t\tmaterial.program = buildProgram( shaderID, material.fragmentShader, material.vertexShader, material.uniforms, material.attributes, material.defines, parameters, material.index0AttributeName );\r\n\r\n\t\tvar attributes = material.program.attributes;\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n\t\t\tvar id, base = \"morphTarget\";\r\n\r\n\t\t\tfor ( i = 0; i < this.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\t\tid = base + i;\r\n\r\n\t\t\t\tif ( attributes[ id ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n\t\t\tvar id, base = \"morphNormal\";\r\n\r\n\t\t\tfor ( i = 0; i < this.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\t\tid = base + i;\r\n\r\n\t\t\t\tif ( attributes[ id ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.uniformsList = [];\r\n\r\n\t\tfor ( u in material.uniforms ) {\r\n\r\n\t\t\tmaterial.uniformsList.push( [ material.uniforms[ u ], u ] );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setMaterialShaders( material, shaders ) {\r\n\r\n\t\tmaterial.uniforms = THREE.UniformsUtils.clone( shaders.uniforms );\r\n\t\tmaterial.vertexShader = shaders.vertexShader;\r\n\t\tmaterial.fragmentShader = shaders.fragmentShader;\r\n\r\n\t};\r\n\r\n\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\r\n\t\t_usedTextureUnits = 0;\r\n\r\n\t\tif ( material.needsUpdate ) {\r\n\r\n\t\t\tvar oldProgram = material.program;\r\n\r\n\t\t\t_this.initMaterial( material, lights, fog, object );\r\n\t\t\tmaterial.needsUpdate = false;\r\n\r\n\t\t\tif ( oldProgram ) deallocateMaterial( material, oldProgram );\r\n\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tif ( ! object.__webglMorphTargetInfluences ) {\r\n\r\n\t\t\t\tobject.__webglMorphTargetInfluences = new Float32Array( _this.maxMorphTargets );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar refreshMaterial = false;\r\n\r\n\t\tvar program = material.program,\r\n\t\t\tp_uniforms = program.uniforms,\r\n\t\t\tm_uniforms = material.uniforms;\r\n\r\n\t\tif ( program !== _currentProgram ) {\r\n\r\n\t\t\t_gl.useProgram( program );\r\n\t\t\t_currentProgram = program;\r\n\r\n\t\t\trefreshMaterial = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\t_currentMaterialId = material.id;\r\n\t\t\trefreshMaterial = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshMaterial || camera !== _currentCamera ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\r\n\t\t}\r\n\r\n\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t// not sure why, but otherwise weird things happen\r\n\r\n\t\tif ( material.skinning ) {\r\n\r\n\t\t\tif ( _supportsBoneTextures && object.useVertexTexture ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneTexture !== null ) {\r\n\r\n\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t_this.setTexture( object.boneTexture, textureUnit );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureWidth !== null ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.boneTextureWidth );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureHeight !== null ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.boneTextureHeight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== null ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.boneMatrices );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\tif ( fog && material.fog ) {\r\n\r\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhysicalMaterial ||\r\n\t\t\t\t material.lights ) {\r\n\r\n\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\r\n\t\t\t\t\tsetupLights( program, lights );\r\n\t\t\t\t\t_lightsNeedUpdate = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhysicalMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// refresh single material specific uniforms\r\n\r\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.ParticleSystemMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n \t\t\t} else if ( material instanceof THREE.MeshPhysicalMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshLambertMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\r\n\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// load common uniforms\r\n\r\n\t\t\tloadUniformsGeneric( program, material.uniformsList );\r\n\r\n\t\t\t// load material specific uniforms\r\n\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhysicalMaterial ||\r\n\t\t\t\t material.envMap ||\r\n\t\t\t\t material.diffuseEnvMap ) {\r\n\r\n\t\t\t\tif ( p_uniforms.cameraPosition !== null ) {\r\n\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhysicalMaterial ||\r\n\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material.skinning ) {\r\n\r\n\t\t\t\tif ( p_uniforms.viewMatrix !== null ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tloadUniformsMatrices( p_uniforms, object );\r\n\r\n\t\tif ( p_uniforms.modelMatrix !== null ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t};\r\n\r\n\t// Uniforms (refresh uniforms objects)\r\n\r\n\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tvar map = material.map;\r\n\t\t\tuniforms.offsetRepeat.value.set( map.offset.x, map.offset.y, map.repeat.x, map.repeat.y );\r\n\t\t\tuniforms.gainBrightness.value.set( map.gainPivot, map.gain, map.brightness, map.invert ? -1.0 : 1.0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.specularMap ) {\r\n\r\n\t\t\tvar specularMap = material.specularMap;\r\n\t\t\tuniforms.specularMap.value = specularMap;\r\n\t\t\tuniforms.specularOffsetRepeat.value.set( specularMap.offset.x, specularMap.offset.y, specularMap.repeat.x, specularMap.repeat.y );\r\n\t\t\tuniforms.specularGainBrightness.value.set( specularMap.gainPivot, specularMap.gain, specularMap.brightness, specularMap.invert ? -1.0 : 1.0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.opacityMap ) {\r\n\r\n\t\t\tvar opacityMap = material.opacityMap;\r\n\t\t\tuniforms.opacityMap.value = opacityMap;\r\n\t\t\tuniforms.opacityOffsetRepeat.value.set( opacityMap.offset.x, opacityMap.offset.y, opacityMap.repeat.x, opacityMap.repeat.y );\r\n\t\t\tuniforms.opacityGainBrightness.value.set( opacityMap.gainPivot, opacityMap.gain, opacityMap.brightness, opacityMap.invert ? -1.0 : 1.0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tvar bumpMap = material.bumpMap;\r\n\t\t\tuniforms.bumpOffsetRepeat.value.set( bumpMap.offset.x, bumpMap.offset.y, bumpMap.repeat.x, bumpMap.repeat.y );\r\n\t\t\t//uniforms.bumpGainBrightness.value.set( bumpMap.gainPivot, bumpMap.gain, bumpMap.brightness, 1.0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tvar normalMap = material.normalMap;\r\n\t\t\tuniforms.normalOffsetRepeat.value.set( normalMap.offset.x, normalMap.offset.y, normalMap.repeat.x, normalMap.repeat.y );\r\n\t\t\t//uniforms.normalGainBrightness.value.set( normalMap.gainPivot, normalMap.gain, normalMap.brightness, 1.0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.anisotropyMap ) {\r\n\r\n\t\t\tvar anisotropyMap = material.anisotropyMap;\r\n\t\t\tuniforms.anisotropyOffsetRepeat.value.set( anisotropyMap.offset.x, anisotropyMap.offset.y, anisotropyMap.repeat.x, anisotropyMap.repeat.y );\r\n\t\t\tuniforms.anisotropyGainBrightness.value.set( anisotropyMap.gainPivot, anisotropyMap.gain, anisotropyMap.brightness, anisotropyMap.invert ? -1.0 : 1.0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.anisotropyRotationMap ) {\r\n\r\n\t\t\tvar anisotropyRotationMap = material.anisotropyRotationMap;\r\n\t\t\tuniforms.anisotropyRotationOffsetRepeat.value.set( anisotropyRotationMap.offset.x, anisotropyRotationMap.offset.y, anisotropyRotationMap.repeat.x, anisotropyRotationMap.repeat.y );\r\n\t\t\tuniforms.anisotropyRotationGainBrightness.value.set( anisotropyRotationMap.gainPivot, anisotropyRotationMap.gain, anisotropyRotationMap.brightness, anisotropyRotationMap.invert ? -1.0 : 1.0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.roughnessMap ) {\r\n\r\n\t\t\tvar roughnessMap = material.roughnessMap;\r\n\t\t\tuniforms.roughnessOffsetRepeat.value.set( roughnessMap.offset.x, roughnessMap.offset.y, roughnessMap.repeat.x, roughnessMap.repeat.y );\r\n\t\t\tuniforms.roughnessGainBrightness.value.set( roughnessMap.gainPivot, roughnessMap.gain, roughnessMap.brightness, roughnessMap.invert ? -1.0 : 1.0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.metallicMap ) {\r\n\r\n\t\t\tvar metallicMap = material.metallicMap;\r\n\t\t\tuniforms.metallicOffsetRepeat.value.set( metallicMap.offset.x, metallicMap.offset.y, metallicMap.repeat.x, metallicMap.repeat.y );\r\n\t\t\tuniforms.metallicGainBrightness.value.set( metallicMap.gainPivot, metallicMap.gain, metallicMap.brightness, metallicMap.invert ? -1.0 : 1.0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.translucencyMap ) {\r\n\r\n\t\t\tvar translucencyMap = material.translucencyMap;\r\n\t\t\tuniforms.translucencyMap.value = translucencyMap;\r\n\t\t\t//uniforms.translucencyOffsetRepeat.value.set( translucencyMap.offset.x, translucencyMap.offset.y, translucencyMap.repeat.x, translucencyMap.repeat.y );\r\n\t\t\t//uniforms.translucencyGainBrightness.value.set( translucencyMap.gainPivot, translucencyMap.gain, translucencyMap.brightness, 1.0 );\r\n\r\n\t\t}\r\n\t\tuniforms.envMap.value = material.envMap;\r\n\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : -1;\r\n\t\tuniforms.envEncoding.value = ( material.envMap ) ? material.envMap.encoding : 0;\r\n\t\tuniforms.diffuseEnvMap.value = material.diffuseEnvMap;\r\n\t\tuniforms.diffuseEnvEncoding.value =  ( material.diffuseEnvMap ) ? material.diffuseEnvMap.encoding : 0;\r\n\r\n\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\r\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\t\tuniforms.combine.value = material.combine;\r\n\t\tuniforms.useRefract.value = material.envMap && material.envMap.mapping instanceof THREE.CubeRefractionMapping;\r\n\r\n\t};\r\n\r\n\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t};\r\n\r\n\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\r\n\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\tuniforms.scale.value = material.scale;\r\n\r\n\t};\r\n\r\n\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\r\n\t\tuniforms.psColor.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.size.value = material.size;\r\n\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\r\n\t};\r\n\r\n\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\r\n\t\tuniforms.fogColor.value = fog.color;\r\n\r\n\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\r\n\t\tuniforms.opacityMap.value = material.opacityMap;\r\n\r\n\t\tuniforms.shininess.value = material.shininess;\r\n\r\n\t\tuniforms.ambient.value = material.ambient;\r\n\t\tuniforms.emissive.value = material.emissive;\r\n\t\tuniforms.specular.value = material.specular;\r\n\r\n\t\tif ( material.wrapAround ) {\r\n\r\n\t\t\tuniforms.wrapRGB.value.copy( material.wrapRGB );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction refreshUniformsPhysical ( uniforms, material ) {\r\n\r\n\t\tuniforms.opacityMap.value = material.opacityMap;\r\n\r\n\t\tuniforms.falloffBlendParams.value = material.falloffBlendParams;\r\n\t\tuniforms.falloffMap.value = material.falloffMap;\r\n\r\n\t\tuniforms.roughness.value = material.roughness;\r\n\t\tuniforms.metallic.value = material.metallic;\r\n\r\n\t\tuniforms.clearCoat.value = material.clearCoat;\r\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\r\n\r\n\t\tuniforms.roughnessMap.value = material.roughnessMap;\r\n\t\tuniforms.metallicMap.value = material.metallicMap;\r\n\r\n\t\tuniforms.translucencyMap.value = material.translucencyMap;\r\n\t\tuniforms.translucencyNormalAlpha.value = material.translucencyNormalAlpha;\r\n\t\tuniforms.translucencyNormalPower.value = material.translucencyNormalPower;\r\n\t\tuniforms.translucencyViewAlpha.value = material.translucencyViewAlpha;\r\n\t\tuniforms.translucencyViewPower.value = material.translucencyViewPower;\r\n\r\n\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\r\n\t\tuniforms.anisotropy.value = material.anisotropy;\r\n\t\tuniforms.anisotropyRotation.value = material.anisotropyRotation;\r\n\t\tuniforms.anisotropyRotationMap.value = material.anisotropyRotationMap;\r\n\r\n\t\tuniforms.ambient.value = material.ambient;\r\n\t\tuniforms.emissive.value = material.emissive;\r\n\t\tuniforms.falloffColor.value = material.falloffColor;\r\n\t\tuniforms.specular.value = material.specular;\r\n\t\tuniforms.translucency.value = material.translucency;\r\n\r\n\t};\r\n\r\n\tfunction refreshUniformsLambert ( uniforms, material ) {\r\n\r\n\t\tuniforms.ambient.value = material.ambient;\r\n\t\tuniforms.emissive.value = material.emissive;\r\n\r\n\t\tif ( material.wrapAround ) {\r\n\r\n\t\t\tuniforms.wrapRGB.value.copy( material.wrapRGB );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\r\n\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\r\n\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\r\n\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\tuniforms.pointLightDecayExponent.value = lights.point.decayExponents;\r\n\r\n\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\tuniforms.spotLightDecayExponent.value = lights.spot.decayExponents;\r\n\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\r\n\t\tuniforms.areaLightColor.value = lights.area.colors;\r\n\t\tuniforms.areaLightPosition.value = lights.area.positions;\r\n\t\tuniforms.areaLightDistance.value = lights.area.distances;\r\n\t\tuniforms.areaLightDecayExponent.value = lights.area.decayExponents;\r\n\t\tuniforms.areaLightWidth.value = lights.area.widths;\r\n\t\tuniforms.areaLightHeight.value = lights.area.heights;\r\n\r\n\t};\r\n\r\n\tfunction refreshUniformsShadow ( uniforms, lights ) {\r\n\r\n\t\tif ( uniforms.shadowMatrix ) {\r\n\r\n\t\t\tvar j = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar light = lights[ i ];\r\n\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight && ! light.shadowCascade ) ) {\r\n\r\n\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\r\n\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\r\n\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\r\n\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\r\n\t\t\t\t\tj ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Uniforms (load to GPU)\r\n\r\n\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\r\n\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object._modelViewMatrix.elements );\r\n\r\n\t\tif ( uniforms.normalMatrix ) {\r\n\r\n\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object._normalMatrix.elements );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction getTextureUnit() {\r\n\r\n\t\tvar textureUnit = _usedTextureUnits;\r\n\r\n\t\tif ( textureUnit >= _maxTextures ) {\r\n\r\n\t\t\tTHREE.onwarning( \"WebGLRenderer: trying to use \" + textureUnit + \" texture units while this GPU supports only \" + _maxTextures );\r\n\r\n\t\t}\r\n\r\n\t\t_usedTextureUnits += 1;\r\n\r\n\t\treturn textureUnit;\r\n\r\n\t};\r\n\r\n\tfunction loadUniformsGeneric ( program, uniforms ) {\r\n\r\n\t\tvar uniform, value, type, location, texture, textureUnit, i, il, j, jl, offset;\r\n\r\n\t\tfor ( j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\r\n\t\t\tlocation = program.uniforms[ uniforms[ j ][ 1 ] ];\r\n\t\t\tif ( !location ) continue;\r\n\r\n\t\t\tuniform = uniforms[ j ][ 0 ];\r\n\r\n\t\t\ttype = uniform.type;\r\n\t\t\tvalue = uniform.value;\r\n\r\n\t\t\tif ( type === \"i\" ) { // single integer\r\n\r\n\t\t\t\t_gl.uniform1i( location, value );\r\n\r\n\t\t\t} else if ( type === \"f\" ) { // single float\r\n\r\n\t\t\t\t_gl.uniform1f( location, value );\r\n\r\n\t\t\t} else if ( type === \"v2\" ) { // single THREE.Vector2\r\n\r\n\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\r\n\t\t\t} else if ( type === \"v3\" ) { // single THREE.Vector3\r\n\r\n\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\r\n\t\t\t} else if ( type === \"v4\" ) { // single THREE.Vector4\r\n\r\n\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\r\n\t\t\t} else if ( type === \"c\" ) { // single THREE.Color\r\n\r\n\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\r\n\t\t\t} else if ( type === \"iv1\" ) { // flat array of integers (JS or typed array)\r\n\r\n\t\t\t\t_gl.uniform1iv( location, value );\r\n\r\n\t\t\t} else if ( type === \"iv\" ) { // flat array of integers with 3 x N size (JS or typed array)\r\n\r\n\t\t\t\t_gl.uniform3iv( location, value );\r\n\r\n\t\t\t} else if ( type === \"fv1\" ) { // flat array of floats (JS or typed array)\r\n\r\n\t\t\t\t_gl.uniform1fv( location, value );\r\n\r\n\t\t\t} else if ( type === \"fv\" ) { // flat array of floats with 3 x N size (JS or typed array)\r\n\r\n\t\t\t\t_gl.uniform3fv( location, value );\r\n\r\n\t\t\t} else if ( type === \"v2v\" ) { // array of THREE.Vector2\r\n\r\n\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\toffset = i * 2;\r\n\r\n\t\t\t\t\tuniform._array[ offset ] \t = value[ i ].x;\r\n\t\t\t\t\tuniform._array[ offset + 1 ] = value[ i ].y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\r\n\t\t\t} else if ( type === \"v3v\" ) { // array of THREE.Vector3\r\n\r\n\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\toffset = i * 3;\r\n\r\n\t\t\t\t\tuniform._array[ offset ] \t = value[ i ].x;\r\n\t\t\t\t\tuniform._array[ offset + 1 ] = value[ i ].y;\r\n\t\t\t\t\tuniform._array[ offset + 2 ] = value[ i ].z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\r\n\t\t\t} else if ( type === \"v4v\" ) { // array of THREE.Vector4\r\n\r\n\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\toffset = i * 4;\r\n\r\n\t\t\t\t\tuniform._array[ offset ] \t = value[ i ].x;\r\n\t\t\t\t\tuniform._array[ offset + 1 ] = value[ i ].y;\r\n\t\t\t\t\tuniform._array[ offset + 2 ] = value[ i ].z;\r\n\t\t\t\t\tuniform._array[ offset + 3 ] = value[ i ].w;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\r\n\t\t\t} else if ( type === \"m4\") { // single THREE.Matrix4\r\n\r\n\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\tuniform._array = new Float32Array( 16 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvalue.flattenToArray( uniform._array );\r\n\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\r\n\t\t\t} else if ( type === \"m4v\" ) { // array of THREE.Matrix4\r\n\r\n\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\r\n\t\t\t} else if ( type === \"t\" ) { // single THREE.Texture (2d or cube)\r\n\r\n\t\t\t\ttexture = value;\r\n\t\t\t\ttextureUnit = getTextureUnit();\r\n\r\n\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\r\n\t\t\t\tif ( !texture ) continue;\r\n\r\n\t\t\t\tif ( texture.image instanceof Array && texture.image.length === 6 ) {\r\n\r\n\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\r\n\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( type === \"tv\" ) { // array of THREE.Texture (2d)\r\n\r\n\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\tuniform._array = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor( i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\r\n\t\t\t\tfor( i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\r\n\t\t\t\t\tif ( !texture ) continue;\r\n\r\n\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tTHREE.onwarning( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setupMatrices ( object, camera ) {\r\n\r\n\t\tobject._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\tobject._normalMatrix.getNormalMatrix( object._modelViewMatrix );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\r\n\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\r\n\t\tarray[ offset ]     = color.r * intensity;\r\n\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\r\n\t};\r\n\r\n\tfunction setupLights ( program, lights ) {\r\n\r\n\t\tvar l, ll, light, n,\r\n\t\tr = 0, g = 0, b = 0,\r\n\t\tcolor, skyColor, groundColor,\r\n\t\tintensity,  intensitySq,\r\n\t\tposition,\r\n\t\tdistance,\r\n\r\n\t\tzlights = _lights,\r\n\r\n\t\tdirColors = zlights.directional.colors,\r\n\t\tdirPositions = zlights.directional.positions,\r\n\r\n\t\tpointColors = zlights.point.colors,\r\n\t\tpointPositions = zlights.point.positions,\r\n\t\tpointDistances = zlights.point.distances,\r\n\t\tpointDecayExponents = zlights.point.decayExponents,\r\n\r\n\t\tspotColors = zlights.spot.colors,\r\n\t\tspotPositions = zlights.spot.positions,\r\n\t\tspotDistances = zlights.spot.distances,\r\n\t\tspotDecayExponents = zlights.spot.decayExponents,\r\n\t\tspotDirections = zlights.spot.directions,\r\n\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\tspotExponents = zlights.spot.exponents,\r\n\r\n\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\themiPositions = zlights.hemi.positions,\r\n\r\n\t\tareaColors = zlights.area.colors,\r\n\t\tareaPositions = zlights.area.positions,\r\n\t\tareaDistances = zlights.area.distances,\r\n\t\tareaDecayExponents = zlights.area.decayExponents,\r\n\t\tareaWidths = zlights.area.widths,\r\n\t\tareaHeights = zlights.area.heights,\r\n\r\n\t\tdirLength = 0,\r\n\t\tpointLength = 0,\r\n\t\tspotLength = 0,\r\n\t\themiLength = 0,\r\n\t\tareaLength = 0,\r\n\r\n\t\tdirCount = 0,\r\n\t\tpointCount = 0,\r\n\t\tspotCount = 0,\r\n\t\themiCount = 0,\r\n\t\tareaCount = 0,\r\n\r\n\t\tdirOffset = 0,\r\n\t\tpointOffset = 0,\r\n\t\tspotOffset = 0,\r\n\t\themiOffset = 0,\r\n\t\tareaOffset = 0;\r\n\r\n\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tlight = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow ) continue;\r\n\r\n\t\t\tcolor = light.color;\r\n\t\t\tintensity = light.intensity;\r\n\t\t\tdistance = light.distance;\r\n\r\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tr += color.r;\r\n\t\t\t\tg += color.g;\r\n\t\t\t\tb += color.b;\r\n\r\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tdirCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.normalize();\r\n\r\n\t\t\t\t// skip lights with undefined direction\r\n\t\t\t\t// these create troubles in OpenGL (making pixel black)\r\n\r\n\t\t\t\tif ( _direction.x === 0 && _direction.y === 0 && _direction.z === 0 ) continue;\r\n\r\n\t\t\t\tdirOffset = dirLength * 3;\r\n\r\n\t\t\t\tdirPositions[ dirOffset ]     = _direction.x;\r\n\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\r\n\r\n\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\r\n\t\t\t\tdirLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tpointCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tpointOffset = pointLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\r\n\t\t\t\tpointPositions[ pointOffset ]     = _vector3.x;\r\n\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\r\n\t\t\t\tif( light.physicalFalloff ) {\r\n\t\t\t\t\t// magic value of -1 switches the equation to UE4 physical quadratic falloff.\r\n\t\t\t\t\tpointDecayExponents[ pointLength ] = -1.0;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tpointDecayExponents[ pointLength ] = ( distance === 0 ) ? 0.0 : light.decayExponent;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpointLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\tspotCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tspotOffset = spotLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\r\n\t\t\t\tspotPositions[ spotOffset ]     = _vector3.x;\r\n\t\t\t\tspotPositions[ spotOffset + 1 ] = _vector3.y;\r\n\t\t\t\tspotPositions[ spotOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\r\n\t\t\t\tif( light.physicalFalloff ) {\r\n\t\t\t\t\t// magic value of -1 switches the equation to UE4 physical quadratic falloff.\r\n\t\t\t\t\tspotDecayExponents[ pointLength ] = -1.0;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tspotDecayExponents[ pointLength ] = ( distance === 0 ) ? 0.0 : light.decayExponent;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_direction.copy( _vector3 );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.normalize();\r\n\r\n\t\t\t\tspotDirections[ spotOffset ]     = _direction.x;\r\n\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\r\n\t\t\t\tspotLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\r\n\t\t\t\themiCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_direction.normalize();\r\n\r\n\t\t\t\t// skip lights with undefined direction\r\n\t\t\t\t// these create troubles in OpenGL (making pixel black)\r\n\r\n\t\t\t\tif ( _direction.x === 0 && _direction.y === 0 && _direction.z === 0 ) continue;\r\n\r\n\t\t\t\themiOffset = hemiLength * 3;\r\n\r\n\t\t\t\themiPositions[ hemiOffset ]     = _direction.x;\r\n\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tskyColor = light.color;\r\n\t\t\t\tgroundColor = light.groundColor;\r\n\r\n\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\r\n\t\t\t\themiLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.AreaLight ) {\r\n\r\n\t\t\t\tareaCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tareaOffset = areaLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( areaColors, areaOffset, color, intensity );\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\r\n\t\t\t\tareaPositions[ areaOffset ]     = _vector3.x;\r\n\t\t\t\tareaPositions[ areaOffset + 1 ] = _vector3.y;\r\n\t\t\t\tareaPositions[ areaOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\tareaDistances[ areaLength ] = distance;\r\n\t\t\t\tareaDecayExponents[ areaLength ] = light.decayExponent;\r\n\r\n\t\t\t\tlight.matrixWorld.extractBasis( _width, _height, _vector3 );\r\n\t\t\t\t_width.multiplyScalar( light.width );\r\n\t\t\t\t_height.multiplyScalar( light.height );\r\n\r\n\t\t\t\tareaWidths[ areaOffset ]     = _width.x;\r\n\t\t\t\tareaWidths[ areaOffset + 1 ] = _width.y;\r\n\t\t\t\tareaWidths[ areaOffset + 2 ] = _width.z;\r\n\r\n\t\t\t\tareaHeights[ areaOffset ]     = _height.x;\r\n\t\t\t\tareaHeights[ areaOffset + 1 ] = _height.y;\r\n\t\t\t\tareaHeights[ areaOffset + 2 ] = _height.z;\r\n\r\n\t\t\t\tareaLength += 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// null eventual remains from removed lights\r\n\t\t// (this is to avoid if in shader)\r\n\r\n\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\t\tfor ( l = areaLength * 3, ll = Math.max( areaColors.length, areaCount * 3 ); l < ll; l ++ ) areaColors[ l ] = 0.0;\r\n\r\n\t\tzlights.directional.length = dirLength;\r\n\t\tzlights.point.length = pointLength;\r\n\t\tzlights.spot.length = spotLength;\r\n\t\tzlights.hemi.length = hemiLength;\r\n\t\tzlights.area.length = areaLength;\r\n\r\n\t\tzlights.ambient[ 0 ] = r;\r\n\t\tzlights.ambient[ 1 ] = g;\r\n\t\tzlights.ambient[ 2 ] = b;\r\n\r\n\t};\r\n\r\n\t// GL state setting\r\n\r\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\r\n\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\r\n\t\t\t_gl.disable( _gl.CULL_FACE );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.enable( _gl.CULL_FACE );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setMaterialFaces = function ( material ) {\r\n\r\n\t\tvar doubleSided = material.side === THREE.DoubleSide;\r\n\t\tvar flipSided = material.side === THREE.BackSide;\r\n\r\n\t\tif ( _oldDoubleSided !== doubleSided ) {\r\n\r\n\t\t\tif ( doubleSided ) {\r\n\r\n\t\t\t\t_gl.disable( _gl.CULL_FACE );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.enable( _gl.CULL_FACE );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_oldDoubleSided = doubleSided;\r\n\r\n\t\t}\r\n\r\n\t\tif ( _oldFlipSided !== flipSided ) {\r\n\r\n\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_oldFlipSided = flipSided;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthTest = function ( depthTest ) {\r\n\r\n\t\tif ( _oldDepthTest !== depthTest ) {\r\n\r\n\t\t\tif ( depthTest ) {\r\n\r\n\t\t\t\t_gl.enable( _gl.DEPTH_TEST );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.disable( _gl.DEPTH_TEST );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_oldDepthTest = depthTest;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthWrite = function ( depthWrite ) {\r\n\r\n\t\tif ( _oldDepthWrite !== depthWrite ) {\r\n\r\n\t\t\t_gl.depthMask( depthWrite );\r\n\t\t\t_oldDepthWrite = depthWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setLineWidth ( width ) {\r\n\r\n\t\tif ( width !== _oldLineWidth ) {\r\n\r\n\t\t\t_gl.lineWidth( width );\r\n\r\n\t\t\t_oldLineWidth = width;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setPolygonOffset ( polygonoffset, factor, units ) {\r\n\r\n\t\tif ( _oldPolygonOffset !== polygonoffset ) {\r\n\r\n\t\t\tif ( polygonoffset ) {\r\n\r\n\t\t\t\t_gl.enable( _gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.disable( _gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_oldPolygonOffset = polygonoffset;\r\n\r\n\t\t}\r\n\r\n\t\tif ( polygonoffset && ( _oldPolygonOffsetFactor !== factor || _oldPolygonOffsetUnits !== units ) ) {\r\n\r\n\t\t\t_gl.polygonOffset( factor, units );\r\n\r\n\t\t\t_oldPolygonOffsetFactor = factor;\r\n\t\t\t_oldPolygonOffsetUnits = units;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst ) {\r\n\r\n\t\tif ( blending !== _oldBlending ) {\r\n\r\n\t\t\tif ( blending === THREE.NoBlending ) {\r\n\r\n\t\t\t\t_gl.disable( _gl.BLEND );\r\n\r\n\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\r\n\t\t\t\t_gl.enable( _gl.BLEND );\r\n\t\t\t\t_gl.blendEquation( _gl.FUNC_ADD );\r\n\t\t\t\t_gl.blendFunc( _gl.SRC_ALPHA, _gl.ONE );\r\n\r\n\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\t\t\t_gl.enable( _gl.BLEND );\r\n\t\t\t\t_gl.blendEquation( _gl.FUNC_ADD );\r\n\t\t\t\t_gl.blendFunc( _gl.ZERO, _gl.ONE_MINUS_SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\t\t\t_gl.enable( _gl.BLEND );\r\n\t\t\t\t_gl.blendEquation( _gl.FUNC_ADD );\r\n\t\t\t\t_gl.blendFunc( _gl.ZERO, _gl.SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\t\t_gl.enable( _gl.BLEND );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.enable( _gl.BLEND );\r\n\t\t\t\t_gl.blendEquationSeparate( _gl.FUNC_ADD, _gl.FUNC_ADD );\r\n\t\t\t\t_gl.blendFuncSeparate( _gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA, _gl.ONE, _gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_oldBlending = blending;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\tif ( blendEquation !== _oldBlendEquation ) {\r\n\r\n\t\t\t\t_gl.blendEquation( paramThreeToGL( blendEquation ) );\r\n\r\n\t\t\t\t_oldBlendEquation = blendEquation;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blendSrc !== _oldBlendSrc || blendDst !== _oldBlendDst ) {\r\n\r\n\t\t\t\t_gl.blendFunc( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ) );\r\n\r\n\t\t\t\t_oldBlendSrc = blendSrc;\r\n\t\t\t\t_oldBlendDst = blendDst;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_oldBlendEquation = null;\r\n\t\t\t_oldBlendSrc = null;\r\n\t\t\t_oldBlendDst = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Defines\r\n\r\n\tfunction generateDefines ( defines ) {\r\n\r\n\t\tvar value, chunk, chunks = [];\r\n\r\n\t\tfor ( var d in defines ) {\r\n\r\n\t\t\tvalue = defines[ d ];\r\n\t\t\tif ( value === false ) continue;\r\n\r\n\t\t\tchunk = \"#define \" + d + \" \" + value;\r\n\t\t\tchunks.push( chunk );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( \"\\n\" );\r\n\r\n\t};\r\n\r\n\t// Shaders\r\n\r\n\tfunction buildProgram( shaderID, fragmentShader, vertexShader, uniforms, attributes, defines, parameters, index0AttributeName ) {\r\n\r\n\t\tvar p, pl, d, program, code;\r\n\t\tvar simpleChunks = [];\r\n\t\tvar chunks = [];\r\n\r\n\t\t// Generate code\r\n\r\n\t\tif ( shaderID ) {\r\n\r\n\t\t\tchunks.push( shaderID );\r\n\t\t\tsimpleChunks.push( shaderID );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tchunks.push( fragmentShader );\r\n\t\t\tchunks.push( vertexShader );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( d in defines ) {\r\n\r\n\t\t\tchunks.push( d );\r\n\t\t\tchunks.push( defines[ d ] );\r\n\t\t\tsimpleChunks.push( d );\r\n\t\t\tsimpleChunks.push( defines[ d ] );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( p in parameters ) {\r\n\r\n\t\t\tchunks.push( p );\r\n\t\t\tchunks.push( parameters[ p ] );\r\n\r\n\t\t\tsimpleChunks.push( p );\r\n\t\t\tsimpleChunks.push( parameters[ p ] );\r\n\r\n\t\t}\r\n\r\n\t\tcode = chunks.join();\r\n\t\tvar simpleCode = simpleChunks.join();\r\n\r\n\t\t// Check if code has been already compiled\r\n\r\n\t\tfor ( p = 0, pl = _programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\tvar programInfo = _programs[ p ];\r\n\r\n\t\t\tif ( programInfo.code.length === code.length && programInfo.code === code ) {\r\n\r\n\t\t\t\tprogramInfo.usedTimes ++;\r\n\r\n\t\t\t\treturn programInfo.program;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar shadowMapTypeDefine = \"SHADOWMAP_TYPE_BASIC\";\r\n\r\n\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = \"SHADOWMAP_TYPE_PCF\";\r\n\r\n\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = \"SHADOWMAP_TYPE_PCF_SOFT\";\r\n\r\n\t\t}\r\n\r\n\t\tvar customDefines = generateDefines( defines );\r\n\r\n\t\tprogram = _gl.createProgram();\r\n\r\n\t\tvar supportsShaderTextureLOD = ( _glExtensionShaderTextureLOD !== null );\r\n\r\n\t\tvar prefix_vertex = [\r\n\r\n\t\t\t\"precision \" + _precision + \" float;\",\r\n\t\t\t\"precision \" + _precision + \" int;\",\r\n\r\n\t\t\tcustomDefines,\r\n\r\n\t\t\t_supportsVertexTextures ? \"#define VERTEX_TEXTURES\" : \"\",\r\n\r\n\t\t\t_this.gammaInput ? \"#define GAMMA_INPUT\" : \"\",\r\n\t\t\t_this.gammaOutput ? \"#define GAMMA_OUTPUT\" : \"\",\r\n\r\n\t\t\t\"#define MAX_DIR_LIGHTS \" + parameters.maxDirLights,\r\n\t\t\t\"#define MAX_POINT_LIGHTS \" + parameters.maxPointLights,\r\n\t\t\t\"#define MAX_SPOT_LIGHTS \" + parameters.maxSpotLights,\r\n\t\t\t\"#define MAX_HEMI_LIGHTS \" + parameters.maxHemiLights,\r\n\t\t\t\"#define MAX_AREA_LIGHTS \" + parameters.maxAreaLights,\r\n\r\n\t\t\t\"#define MAX_SHADOWS \" + parameters.maxShadows,\r\n\r\n\t\t\t\"#define MAX_BONES \" + parameters.maxBones,\r\n\r\n\t\t\tparameters.map ? \"#define USE_MAP\" : \"\",\r\n\t\t\tparameters.opacityMap ? \"#define USE_OPACITYMAP\" : \"\",\r\n\t\t\tparameters.falloffMap ? \"#define USE_FALLOFFMAP\" : \"\",\r\n\t\t\tparameters.translucencyMap ? \"#define USE_TRANSLUCENCYMAP\" : \"\",\r\n\t\t\tparameters.envMap ? \"#define USE_ENVMAP\" : \"\",\r\n\t\t\tparameters.diffuseEnvMap ? \"#define USE_DIFFUSEENVMAP\" : \"\",\r\n\t\t\tparameters.lightMap ? \"#define USE_LIGHTMAP\" : \"\",\r\n\t\t\tparameters.emissiveMap ? \"#define USE_EMISSIVEMAP\" : \"\",\r\n\t\t\tparameters.bumpMap ? \"#define USE_BUMPMAP\" : \"\",\r\n\t\t\tparameters.reflectivityMap ? \"#define USE_REFLECTIVITYMAP\" : \"\",\r\n\t\t\tparameters.roughnessMap ? \"#define USE_ROUGHNESSMAP\" : \"\",\r\n\t\t\tparameters.metallicMap ? \"#define USE_METALLICMAP\" : \"\",\r\n\t\t\tparameters.normalMap ? \"#define USE_NORMALMAP\" : \"\",\r\n\t\t\tparameters.specularMap ? \"#define USE_SPECULARMAP\" : \"\",\r\n\t\t\tparameters.vertexColors ? \"#define USE_COLOR\" : \"\",\r\n\t\t\tparameters.clearCoat ? \"#define CLEARCOAT\" : \"\",\r\n\r\n\t\t\tparameters.anisotropy ? \"#define ANISOTROPY\" : \"\",\r\n\t\t\tparameters.anisotropyMap ? \"#define USE_ANISOTROPYMAP\" : \"\",\r\n\t\t\t( parameters.anisotropy && parameters.anisotropyRotation ) ? \"#define ANISOTROPYROTATION\" : \"\",\r\n\t\t\t( parameters.anisotropy && parameters.anisotropyRotationMap ) ? \"#define USE_ANISOTROPYROTATIONMAP\" : \"\",\r\n\r\n\t\t\tparameters.skinning ? \"#define USE_SKINNING\" : \"\",\r\n\t\t\tparameters.useVertexTexture ? \"#define BONE_TEXTURE\" : \"\",\r\n\r\n\t\t\tparameters.morphTargets ? \"#define USE_MORPHTARGETS\" : \"\",\r\n\t\t\tparameters.morphNormals ? \"#define USE_MORPHNORMALS\" : \"\",\r\n\t\t\tparameters.wrapAround ? \"#define WRAP_AROUND\" : \"\",\r\n\t\t\tparameters.doubleSided ? \"#define DOUBLE_SIDED\" : \"\",\r\n\t\t\tparameters.flipSided ? \"#define FLIP_SIDED\" : \"\",\r\n\r\n\t\t\tparameters.shadowMapEnabled ? \"#define USE_SHADOWMAP\" : \"\",\r\n\t\t\tparameters.shadowMapEnabled ? \"#define \" + shadowMapTypeDefine : \"\",\r\n\t\t\tparameters.shadowMapDebug ? \"#define SHADOWMAP_DEBUG\" : \"\",\r\n\t\t\tparameters.shadowMapCascade ? \"#define SHADOWMAP_CASCADE\" : \"\",\r\n\r\n\t\t\tparameters.sizeAttenuation ? \"#define USE_SIZEATTENUATION\" : \"\",\r\n\r\n\t\t\t\"uniform mat4 modelMatrix;\",\r\n\t\t\t\"uniform mat4 modelViewMatrix;\",\r\n\t\t\t\"uniform mat4 projectionMatrix;\",\r\n\t\t\t\"uniform mat4 viewMatrix;\",\r\n\t\t\t\"uniform mat3 normalMatrix;\",\r\n\t\t\t\"uniform vec3 cameraPosition;\",\r\n\r\n\t\t\t\"attribute vec3 position;\",\r\n\t\t\t\"attribute vec3 normal;\",\r\n\t\t\t\"attribute vec2 uv;\",\r\n\t\t\t\"attribute vec2 uv2;\",\r\n\r\n\t\t\t\"#ifdef USE_COLOR\",\r\n\r\n\t\t\t\t\"attribute vec3 color;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"#ifdef USE_MORPHTARGETS\",\r\n\r\n\t\t\t\t\"attribute vec3 morphTarget0;\",\r\n\t\t\t\t\"attribute vec3 morphTarget1;\",\r\n\t\t\t\t\"attribute vec3 morphTarget2;\",\r\n\t\t\t\t\"attribute vec3 morphTarget3;\",\r\n\r\n\t\t\t\t\"#ifdef USE_MORPHNORMALS\",\r\n\r\n\t\t\t\t\t\"attribute vec3 morphNormal0;\",\r\n\t\t\t\t\t\"attribute vec3 morphNormal1;\",\r\n\t\t\t\t\t\"attribute vec3 morphNormal2;\",\r\n\t\t\t\t\t\"attribute vec3 morphNormal3;\",\r\n\r\n\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\t\"attribute vec3 morphTarget4;\",\r\n\t\t\t\t\t\"attribute vec3 morphTarget5;\",\r\n\t\t\t\t\t\"attribute vec3 morphTarget6;\",\r\n\t\t\t\t\t\"attribute vec3 morphTarget7;\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"#ifdef USE_SKINNING\",\r\n\r\n\t\t\t\t\"attribute vec4 skinIndex;\",\r\n\t\t\t\t\"attribute vec4 skinWeight;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\"\"\r\n\r\n\t\t].join(\"\\n\");\r\n\r\n\r\n\t\tvar prefix_fragment = [\r\n\r\n\t\t\t\"precision \" + _precision + \" float;\",\r\n\t\t\t\"precision \" + _precision + \" int;\",\r\n\r\n\t\t\t( parameters.bumpMap || parameters.normalMap ) ? \"#extension GL_OES_standard_derivatives : enable\" : \"\",\r\n\r\n\t\t\tcustomDefines,\r\n\r\n\t\t\t\"#define MAX_DIR_LIGHTS \" + parameters.maxDirLights,\r\n\t\t\t\"#define MAX_POINT_LIGHTS \" + parameters.maxPointLights,\r\n\t\t\t\"#define MAX_SPOT_LIGHTS \" + parameters.maxSpotLights,\r\n\t\t\t\"#define MAX_HEMI_LIGHTS \" + parameters.maxHemiLights,\r\n\t\t\t\"#define MAX_AREA_LIGHTS \" + parameters.maxAreaLights,\r\n\r\n\t\t\t\"#define MAX_SHADOWS \" + parameters.maxShadows,\r\n\r\n\t\t\tparameters.alphaTest ? \"#define ALPHATEST \" + parameters.alphaTest: \"\",\r\n\r\n\t\t\t_this.gammaInput ? \"#define GAMMA_INPUT\" : \"\",\r\n\t\t\t_this.gammaOutput ? \"#define GAMMA_OUTPUT\" : \"\",\r\n\r\n\t\t\t( parameters.useFog && parameters.fog ) ? \"#define USE_FOG\" : \"\",\r\n\t\t\t( parameters.useFog && parameters.fogExp ) ? \"#define FOG_EXP2\" : \"\",\r\n\r\n\t\t\tparameters.map ? \"#define USE_MAP\" : \"\",\r\n\t\t\tparameters.opacityMap ? \"#define USE_OPACITYMAP\" : \"\",\r\n\t\t\tparameters.falloffMap ? \"#define USE_FALLOFFMAP\" : \"\",\r\n\t\t\tparameters.translucencyMap ? \"#define USE_TRANSLUCENCYMAP\" : \"\",\r\n\t\t\tparameters.envMap ? \"#define USE_ENVMAP\" : \"\",\r\n\t\t\tparameters.diffuseEnvMap ? \"#define USE_DIFFUSEENVMAP\" : \"\",\r\n\t\t\tparameters.lightMap ? \"#define USE_LIGHTMAP\" : \"\",\r\n\t\t\tparameters.emissiveMap ? \"#define USE_EMISSIVEMAP\" : \"\",\r\n\t\t\tparameters.bumpMap ? \"#define USE_BUMPMAP\" : \"\",\r\n\t\t\tparameters.reflectivityMap ? \"#define USE_REFLECTIVITYMAP\" : \"\",\r\n\t\t\tparameters.roughnessMap ? \"#define USE_ROUGHNESSMAP\" : \"\",\r\n\t\t\tparameters.metallicMap ? \"#define USE_METALLICMAP\" : \"\",\r\n\t\t\tparameters.normalMap ? \"#define USE_NORMALMAP\" : \"\",\r\n\t\t\tparameters.specularMap ? \"#define USE_SPECULARMAP\" : \"\",\r\n\t\t\tparameters.vertexColors ? \"#define USE_COLOR\" : \"\",\r\n\t\t\tparameters.clearCoat ? \"#define CLEARCOAT\" : \"\",\r\n\r\n\t\t\tparameters.translucency ? \"#define TRANSLUCENCY\" : \"\",\r\n\r\n\t\t\tparameters.anisotropy ? \"#define ANISOTROPY\" : \"\",\r\n\t\t\tparameters.anisotropyMap ? \"#define USE_ANISOTROPYMAP\" : \"\",\r\n\t\t\t( parameters.anisotropy && parameters.anisotropyRotation ) ? \"#define ANISOTROPYROTATION\" : \"\",\r\n\t\t\t( parameters.anisotropy && parameters.anisotropyRotationMap ) ? \"#define USE_ANISOTROPYROTATIONMAP\" : \"\",\r\n\r\n\t\t\tparameters.falloff ? \"#define FALLOFF\" : \"\",\r\n\r\n\t\t\tparameters.wrapAround ? \"#define WRAP_AROUND\" : \"\",\r\n\t\t\tparameters.doubleSided ? \"#define DOUBLE_SIDED\" : \"\",\r\n\t\t\tparameters.flipSided ? \"#define FLIP_SIDED\" : \"\",\r\n\r\n\t\t\tparameters.shadowMapEnabled ? \"#define USE_SHADOWMAP\" : \"\",\r\n\t\t\tparameters.shadowMapEnabled ? \"#define \" + shadowMapTypeDefine : \"\",\r\n\t\t\tparameters.shadowMapDebug ? \"#define SHADOWMAP_DEBUG\" : \"\",\r\n\t\t\tparameters.shadowMapCascade ? \"#define SHADOWMAP_CASCADE\" : \"\",\r\n\r\n\t\t\tsupportsShaderTextureLOD ? \"#define TEXTURE_CUBE_LOD_EXT\" : \"\",\r\n\r\n\t\t\t\"uniform mat4 viewMatrix;\",\r\n\t\t\t\"uniform vec3 cameraPosition;\",\r\n\t\t\t\"\"\r\n\r\n\t\t].join(\"\\n\");\r\n\r\n\t\tvar glVertexShader = getShader( \"vertex\", prefix_vertex + vertexShader, shaderID, simpleCode );\r\n\t\tvar glFragmentShader = getShader( \"fragment\", prefix_fragment + fragmentShader, shaderID, simpleCode );\r\n\r\n\t\t_gl.attachShader( program, glVertexShader, code );\r\n\t\t_gl.attachShader( program, glFragmentShader, code );\r\n\r\n\t\t// Force a particular attribute to index 0.\r\n\t\t// because potentially expensive emulation is done by browser if attribute 0 is disabled.\r\n\t\t// And, color, for example is often automatically bound to index 0 so disabling it\r\n\t\tif ( index0AttributeName !== undefined ) {\r\n\r\n\t\t\t_gl.bindAttribLocation( program, 0, index0AttributeName );\r\n\r\n\t\t}\r\n\r\n\t\t_gl.linkProgram( program );\r\n\r\n\t\tvar programLogInfo = _gl.getProgramInfoLog( program );\r\n\r\n\t\tif ( _gl.getProgramParameter( program, _gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\tvar gl_error_message = _gl.getError();\r\n\t\t\tTHREE.onerror( shaderID + ' shader program error: ' + gl_error_message + '\\n ' + programLogInfo, {\r\n\t\t\t\tshaderID: shaderID,\r\n\t\t\t\tprogramInfo: programLogInfo,\r\n\t\t\t\tglError: gl_error_message,\r\n\t\t\t\tvertexShader: prefix_vertex + vertexShader,\r\n\t\t\t\tfragmentShader: prefix_fragment + fragmentShader, \r\n\t\t\t\tgetProgramParameter_LINK_STATUS: _gl.getProgramParameter( program, _gl.LINK_STATUS ),\r\n\t\t\t\tgetProgramParameter_VALIDATE_STATUS: _gl.getProgramParameter( program, _gl.VALIDATE_STATUS ),\r\n\t\t\t\tgetProgramParameter_ATTACHED_SHADERS: _gl.getProgramParameter( program, _gl.ATTACHED_SHADERS ),\r\n\t\t\t\tgetProgramParameter_ACTIVE_ATTRIBUTES: _gl.getProgramParameter( program, _gl.ACTIVE_ATTRIBUTES ),\r\n\t\t\t\tgetProgramParameter_ACTIVE_UNIFORMS: _gl.getProgramParameter( program, _gl.ACTIVE_UNIFORMS ),\r\n\t\t\t\tgl_MAX_VARYING_VECTORS: _gl.getParameter(_gl.MAX_VARYING_VECTORS),\r\n\t\t\t\tgl_MAX_VERTEX_ATTRIBS: _gl.getParameter(_gl.MAX_VERTEX_ATTRIBS),\r\n\t\t\t\tgl_MAX_VERTEX_UNIFORM_VECTORS: _gl.getParameter(_gl.MAX_VERTEX_UNIFORM_VECTORS),\r\n\t\t\t\tgl_MAX_VERTEX_TEXTURE_IMAGE_UNITS: _gl.getParameter(_gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS),\r\n\t\t\t\tgl_MAX_FRAGMENT_UNIFORM_VECTORS: _gl.getParameter(_gl.MAX_FRAGMENT_UNIFORM_VECTORS),\r\n\t\t\t\tgl_MAX_TEXTURE_IMAGE_UNITS: _gl.getParameter(_gl.MAX_TEXTURE_IMAGE_UNITS)\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// clean up\r\n\r\n\t\t_gl.deleteShader( glFragmentShader );\r\n\t\t_gl.deleteShader( glVertexShader );\r\n\r\n\t\tprogram.uniforms = {};\r\n\t\tprogram.attributes = {};\r\n\r\n\t\tvar identifiers, u, a, i;\r\n\r\n\t\t// cache uniform locations\r\n\r\n\t\tidentifiers = [\r\n\r\n\t\t\t'viewMatrix', 'modelViewMatrix', 'projectionMatrix', 'normalMatrix', 'modelMatrix', 'cameraPosition',\r\n\t\t\t'morphTargetInfluences'\r\n\r\n\t\t];\r\n\r\n\t\tif ( parameters.useVertexTexture ) {\r\n\r\n\t\t\tidentifiers.push( 'boneTexture' );\r\n\t\t\tidentifiers.push( 'boneTextureWidth' );\r\n\t\t\tidentifiers.push( 'boneTextureHeight' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tidentifiers.push( 'boneGlobalMatrices' );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( u in uniforms ) {\r\n\r\n\t\t\tidentifiers.push( u );\r\n\r\n\t\t}\r\n\r\n\t\tcacheUniformLocations( program, identifiers );\r\n\r\n\t\t// cache attributes locations\r\n\r\n\t\tidentifiers = [\r\n\r\n\t\t\t\"position\", \"normal\", \"uv\", \"uv2\", \"tangent\", \"color\",\r\n\t\t\t\"skinIndex\", \"skinWeight\", \"lineDistance\"\r\n\r\n\t\t];\r\n\r\n\t\tfor ( i = 0; i < parameters.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\tidentifiers.push( \"morphTarget\" + i );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = 0; i < parameters.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\tidentifiers.push( \"morphNormal\" + i );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( a in attributes ) {\r\n\r\n\t\t\tidentifiers.push( a );\r\n\r\n\t\t}\r\n\r\n\t\tcacheAttributeLocations( program, identifiers );\r\n\r\n\t\tprogram.id = _programs_counter ++;\r\n\r\n\t\t_programs.push( { program: program, code: code, usedTimes: 1 } );\r\n\r\n\t\t_this.info.memory.programs = _programs.length;\r\n\r\n\t\treturn program;\r\n\r\n\t};\r\n\r\n\t// Shader parameters cache\r\n\r\n\tfunction cacheUniformLocations ( program, identifiers ) {\r\n\r\n\t\tvar i, l, id;\r\n\r\n\t\tfor( i = 0, l = identifiers.length; i < l; i ++ ) {\r\n\r\n\t\t\tid = identifiers[ i ];\r\n\t\t\tprogram.uniforms[ id ] = _gl.getUniformLocation( program, id );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction cacheAttributeLocations ( program, identifiers ) {\r\n\r\n\t\tvar i, l, id;\r\n\r\n\t\tfor( i = 0, l = identifiers.length; i < l; i ++ ) {\r\n\r\n\t\t\tid = identifiers[ i ];\r\n\t\t\tprogram.attributes[ id ] = _gl.getAttribLocation( program, id );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction addLineNumbers ( string ) {\r\n\r\n\t\tvar chunks = string.split( \"\\n\" );\r\n\r\n\t\tfor ( var i = 0, il = chunks.length; i < il; i ++ ) {\r\n\r\n\t\t\t// Chrome reports shader errors on lines\r\n\t\t\t// starting counting from 1\r\n\r\n\t\t\tchunks[ i ] = ( i + 1 ) + \": \" + chunks[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( \"\\n\" );\r\n\r\n\t};\r\n\r\n\tfunction getShader ( type, string, shaderID, simpleCode ) {\r\n\r\n\t\tvar shader;\r\n\r\n\t\tif ( type === \"fragment\" ) {\r\n\r\n\t\t\tshader = _gl.createShader( _gl.FRAGMENT_SHADER );\r\n\r\n\t\t} else if ( type === \"vertex\" ) {\r\n\r\n\t\t\tshader = _gl.createShader( _gl.VERTEX_SHADER );\r\n\r\n\t\t}\r\n\r\n\t\t_gl.shaderSource( shader, string );\r\n\t\t_gl.compileShader( shader );\r\n\r\n\t\tif ( !_gl.getShaderParameter( shader, _gl.COMPILE_STATUS ) ) {\r\n\r\n\t\t\tTHREE.onerror( \"shader error: \" + shaderID + \".\" + type, {\r\n\t\t\t\tgetShaderParameter: _gl.getShaderParameter( shader, _gl.COMPILE_STATUS ),\r\n\t\t\t\tshaderInfoLog: _gl.getShaderInfoLog( shader ),\r\n\t\t\t\tshaderCode: addLineNumbers( string ),\r\n\t\t\t\tgetError: _gl.getError(),\r\n\t\t\t\tsimpleCode: simpleCode,\r\n\t\t\t\tgl_MAX_VARYING_VECTORS: _gl.getParameter(_gl.MAX_VARYING_VECTORS),\r\n\t\t\t\tgl_MAX_VERTEX_ATTRIBS: _gl.getParameter(_gl.MAX_VERTEX_ATTRIBS),\r\n\t\t\t\tgl_MAX_VERTEX_UNIFORM_VECTORS: _gl.getParameter(_gl.MAX_VERTEX_UNIFORM_VECTORS),\r\n\t\t\t\tgl_MAX_VERTEX_TEXTURE_IMAGE_UNITS: _gl.getParameter(_gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS),\r\n\t\t\t\tgl_MAX_FRAGMENT_UNIFORM_VECTORS: _gl.getParameter(_gl.MAX_FRAGMENT_UNIFORM_VECTORS),\r\n\t\t\t\tgl_MAX_TEXTURE_IMAGE_UNITS: _gl.getParameter(_gl.MAX_TEXTURE_IMAGE_UNITS)\r\n\t\t\t} );\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn shader;\r\n\r\n\t};\r\n\r\n\t// Textures\r\n\r\n\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\r\n\t\tif ( isImagePowerOfTwo ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( _glExtensionTextureFilterAnisotropic && texture.type !== THREE.FloatType ) {\r\n\r\n\t\t\tif ( texture.anisotropy > 1 || texture.__oldAnisotropy ) {\r\n\r\n\t\t\t\t_gl.texParameterf( textureType, _glExtensionTextureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _maxAnisotropy ) );\r\n\t\t\t\ttexture.__oldAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setTexture = function ( texture, slot ) {\r\n\r\n\t\tif ( texture.needsUpdate ) {\r\n\r\n\t\t\tif ( ! texture.__webglInit ) {\r\n\r\n\t\t\t\ttexture.__webglInit = true;\r\n\r\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\ttexture.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t\t_this.info.memory.textures ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, texture.__webglTexture );\r\n\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n\t\t\tvar image = texture.image,\r\n\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\r\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n\t\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\r\n\t\t\t\tfor( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tif ( texture.format!==THREE.RGBAFormat ) {\r\n\t\t\t\t\t\t_gl.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else { // regular Texture (image, video, canvas)\r\n\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\t\ttexture.needsUpdate = false;\r\n\r\n\t\t\tif ( texture.onUpdate ) texture.onUpdate();\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, texture.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction clampToMaxSize ( image, maxSize ) {\r\n\r\n\t\tif ( image.width <= maxSize && image.height <= maxSize ) {\r\n\r\n\t\t\treturn image;\r\n\r\n\t\t}\r\n\r\n\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t// premultiplied alpha.\r\n\r\n\t\tvar maxDimension = Math.max( image.width, image.height );\r\n\t\tvar newWidth = Math.floor( image.width * maxSize / maxDimension );\r\n\t\tvar newHeight = Math.floor( image.height * maxSize / maxDimension );\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = newWidth;\r\n\t\tcanvas.height = newHeight;\r\n\r\n\t\tvar ctx = canvas.getContext( \"2d\" );\r\n\t\tctx.drawImage( image, 0, 0, image.width, image.height, 0, 0, newWidth, newHeight );\r\n\r\n\t\treturn canvas;\r\n\r\n\t}\r\n\r\n\tfunction setCubeTexture ( texture, slot ) {\r\n\r\n\t\tif ( texture.image.length === 6 ) {\r\n\r\n\t\t\tif ( texture.needsUpdate ) {\r\n\r\n\t\t\t\tif ( ! texture.image.__webglTextureCube ) {\r\n\r\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\ttexture.image.__webglTextureCube = _gl.createTexture();\r\n\r\n\t\t\t\t\t_this.info.memory.textures ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.image.__webglTextureCube );\r\n\r\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\r\n\t\t\t\tvar cubeImage = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed ) {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], _maxCubemapSize );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = texture.image[ i ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif( !isCompressed ) {\r\n\r\n\t\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\t\tfor( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\t\t\t\t\t\t\tif ( texture.format!==THREE.RGBAFormat ) {\r\n\r\n\t\t\t\t\t\t\t\t_gl.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.needsUpdate = false;\r\n\r\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.image.__webglTextureCube );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\r\n\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.__webglTexture );\r\n\r\n\t};\r\n\r\n\t// Render targets\r\n\r\n\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, renderTarget.__webglTexture, 0 );\r\n\r\n\t};\r\n\r\n\tfunction setupRenderBuffer ( renderbuffer, renderTarget  ) {\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\tvar optionsString = \"\";\r\n\r\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t\toptionsString = \"renderTarget: \" + renderTarget.width + \"+\" + renderTarget.height + \" DEPTH_ATTACHMENT\";\r\n\r\n\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t} else if( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t*/\r\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t\toptionsString = \"renderTarget: \" + renderTarget.width + \"+\" + renderTarget.height + \" DEPTH_STENCIL_ATTACHMENT\";\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\toptionsString = \"renderTarget: \" + renderTarget.width + \"+\" + renderTarget.height + \" RGBA4\";\r\n\r\n\t\t}\r\n\r\n\t\tif (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) != _gl.FRAMEBUFFER_COMPLETE) {\r\n\t\t\tconsole.log( renderTarget );\r\n\t      throw new Error('(A) Rendering to this texture is not supported (incomplete framebuffer) ' + optionsString );\r\n\t    }\r\n\r\n\t};\r\n\r\n\tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\r\n\t\tif ( renderTarget && ! renderTarget.__webglFramebuffer ) {\r\n\r\n\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\r\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\t\trenderTarget.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_this.info.memory.textures ++;\r\n\r\n\t\t\t// Setup texture, create render and frame buffers\r\n\r\n\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\r\n\t\t\t\tglType = paramThreeToGL( renderTarget.type );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTarget.__webglFramebuffer = [];\r\n\t\t\t\trenderTarget.__webglRenderbuffer = [];\r\n\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTarget.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\trenderTarget.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\trenderTarget.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\t\tsetupFrameBuffer( renderTarget.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\tsetupRenderBuffer( renderTarget.__webglRenderbuffer[ i ], renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderTarget.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\trenderTarget.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderTarget.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, renderTarget.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\tsetupFrameBuffer( renderTarget.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\tvar optionsString = \"glFormat: \" + glFormat + \" glType: \" + glType;\r\n\r\n\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTarget.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t\toptionsString = \" renderTarget: \" + renderTarget.width + \"+\" + renderTarget.height + \" DEPTH_ATTACHMENT\";\r\n\r\n\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTarget.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t\toptionsString = \" renderTarget: \" + renderTarget.width + \"+\" + renderTarget.height + \" DEPTH_STENCIL_ATTACHMENT\";\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) != _gl.FRAMEBUFFER_COMPLETE) {\r\n\t\t\t\t\t\tthrow new Error('(B) Rendering to this texture is not supported (incomplete framebuffer) ' + optionsString );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetupRenderBuffer( renderTarget.__webglRenderbuffer, renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Release everything\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t\tvar framebuffer, width, height, vx, vy;\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tframebuffer = renderTarget.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tframebuffer = renderTarget.__webglFramebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twidth = renderTarget.width;\r\n\t\t\theight = renderTarget.height;\r\n\r\n\t\t\tvx = 0;\r\n\t\t\tvy = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tframebuffer = null;\r\n\r\n\t\t\twidth = _viewportWidth;\r\n\t\t\theight = _viewportHeight;\r\n\r\n\t\t\tvx = _viewportX;\r\n\t\t\tvy = _viewportY;\r\n\r\n\t\t}\r\n\r\n\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.viewport( vx, vy, width, height );\r\n\r\n\t\t\t_currentFramebuffer = framebuffer;\r\n\r\n\t\t}\r\n\r\n\t\t_currentWidth = width;\r\n\t\t_currentHeight = height;\r\n\r\n\t};\r\n\r\n\tfunction updateRenderTargetMipmap ( renderTarget ) {\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTarget.__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, renderTarget.__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Fallback filters for non-power-of-2 textures\r\n\r\n\tfunction filterFallback ( f ) {\r\n\r\n\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\r\n\t\t\treturn _gl.NEAREST;\r\n\r\n\t\t}\r\n\r\n\t\treturn _gl.LINEAR;\r\n\r\n\t};\r\n\r\n\t// Map three.js constants to WebGL constants\r\n\r\n\tfunction paramThreeToGL ( p ) {\r\n\r\n\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\r\n\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\t\tif ( p === THREE.HalfType ) return 0x8D61;\r\n\r\n\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\r\n\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\r\n\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\r\n\t\tif ( _glExtensionCompressedTextureS3TC !== undefined ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return _glExtensionCompressedTextureS3TC.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t};\r\n\r\n\t// Allocations\r\n\r\n\tfunction allocateBones ( object ) {\r\n\r\n\t\tif ( _supportsBoneTextures && object && object.useVertexTexture ) {\r\n\r\n\t\t\treturn 1024;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// default for when object is not specified\r\n\t\t\t// ( for example when prebuilding shader\r\n\t\t\t//   to be used with multiple objects )\r\n\t\t\t//\r\n\t\t\t// \t- leave some extra space for other uniforms\r\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t//    (up to 54 should be safe)\r\n\r\n\t\t\tvar nVertexUniforms = _gl.getParameter( _gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n\t\t\tvar maxBones = nVertexMatrices;\r\n\r\n\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tmaxBones = Math.min( object.bones.length, maxBones );\r\n\r\n\t\t\t\tif ( maxBones < object.bones.length ) {\r\n\r\n\t\t\t\t\tTHREE.onwarning( \"WebGLRenderer: too many bones - \" + object.bones.length + \", this GPU supports just \" + maxBones + \" (try OpenGL instead of ANGLE)\" );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn maxBones;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction allocateLights( lights ) {\r\n\r\n\t\tvar dirLights = 0;\r\n\t\tvar pointLights = 0;\r\n\t\tvar spotLights = 0;\r\n\t\tvar hemiLights = 0;\r\n\t\tvar areaLights = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\t\t\tif ( light instanceof THREE.AreaLight ) areaLights ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn { 'directional' : dirLights, 'point' : pointLights, 'spot': spotLights, 'hemi': hemiLights, 'area': areaLights };\r\n\r\n\t};\r\n\r\n\tfunction allocateShadows( lights ) {\r\n\r\n\t\tvar maxShadows = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n\t\t\tif ( light instanceof THREE.DirectionalLight && ! light.shadowCascade ) maxShadows ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn maxShadows;\r\n\r\n\t};\r\n\r\n\t// Initialization\r\n\r\n\tfunction initGL() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tvar attributes = {\r\n\t\t\t\talpha: _alpha,\r\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\t\tantialias: _antialias,\r\n\t\t\t\tstencil: _stencil,\r\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t\t};\r\n\r\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\r\n\t\t\tif ( _gl === null ) {\r\n\r\n\t\t\t\tTHREE.onerror( 'Error creating WebGL context.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tTHREE.onerror( error );\r\n\r\n\t\t}\r\n\r\n\t\t_glExtensionTextureFloat = _gl.getExtension( 'OES_texture_float' );\r\n\t\t_glExtensionTextureFloatLinear = _gl.getExtension( 'OES_texture_float_linear' );\r\n\t\t_glExtensionStandardDerivatives = _gl.getExtension( 'OES_standard_derivatives' );\r\n\t\t_glExtensionShaderTextureLOD = _gl.getExtension( 'EXT_shader_texture_lod' );\r\n\r\n\t\t_glExtensionTextureFilterAnisotropic = _gl.getExtension( 'EXT_texture_filter_anisotropic' ) || _gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || _gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\r\n\t\t_glExtensionCompressedTextureS3TC = _gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || _gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || _gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\tif ( ! _glExtensionTextureFloat ) {\r\n\r\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Float textures not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! _glExtensionStandardDerivatives ) {\r\n\r\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Standard derivatives not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! _glExtensionShaderTextureLOD ) {\r\n\r\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Shader texture LOD not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! _glExtensionTextureFilterAnisotropic ) {\r\n\r\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Anisotropic texture filtering not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! _glExtensionCompressedTextureS3TC ) {\r\n\r\n\t\t\tconsole.log( 'THREE.WebGLRenderer: S3TC compressed textures not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\r\n\r\n\t\t\t_gl.getShaderPrecisionFormat = function() {\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t\"rangeMin\"  : 1,\r\n\t\t\t\t\t\"rangeMax\"  : 1,\r\n\t\t\t\t\t\"precision\" : 1\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setDefaultGLState () {\r\n\r\n\t\t_gl.clearColor( 0, 0, 0, 1 );\r\n\t\t_gl.clearDepth( 1 );\r\n\t\t_gl.clearStencil( 0 );\r\n\r\n\t\t_gl.enable( _gl.DEPTH_TEST );\r\n\t\t_gl.depthFunc( _gl.LEQUAL );\r\n\r\n\t\t_gl.frontFace( _gl.CCW );\r\n\t\t_gl.cullFace( _gl.BACK );\r\n\t\t_gl.enable( _gl.CULL_FACE );\r\n\r\n\t\t_gl.enable( _gl.BLEND );\r\n\t\t_gl.blendEquation( _gl.FUNC_ADD );\r\n\t\t_gl.blendFunc( _gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t\t_gl.clearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\t// default plugins (order is important)\r\n\r\n\tthis.shadowMapPlugin = new THREE.ShadowMapPlugin();\r\n\tthis.addPrePlugin( this.shadowMapPlugin );\r\n\r\n\tthis.addPostPlugin( new THREE.SpritePlugin() );\r\n\tthis.addPostPlugin( new THREE.LensFlarePlugin() );\r\n\r\n};\r\n\r\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\toptions = options || {};\r\n\r\n\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\r\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\r\n\tthis.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\r\n\r\n\tthis.shareDepthFrom = null;\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTarget.prototype = {\r\n\r\n\tconstructor: THREE.WebGLRenderTarget,\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar tmp = new THREE.WebGLRenderTarget( this.width, this.height );\r\n\r\n\t\ttmp.wrapS = this.wrapS;\r\n\t\ttmp.wrapT = this.wrapT;\r\n\r\n\t\ttmp.magFilter = this.magFilter;\r\n\t\ttmp.minFilter = this.minFilter;\r\n\r\n\t\ttmp.anisotropy = this.anisotropy;\r\n\r\n\t\ttmp.offset.copy( this.offset );\r\n\t\ttmp.repeat.copy( this.repeat );\r\n\r\n\t\ttmp.format = this.format;\r\n\t\ttmp.type = this.type;\r\n\r\n\t\ttmp.depthBuffer = this.depthBuffer;\r\n\t\ttmp.stencilBuffer = this.stencilBuffer;\r\n\r\n\t\ttmp.generateMipmaps = this.generateMipmaps;\r\n\r\n\t\ttmp.shareDepthFrom = this.shareDepthFrom;\r\n\r\n\t\treturn tmp;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\r\n\r\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\r\n\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\r\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RenderableVertex = function () {\r\n\r\n\tthis.position = new THREE.Vector3();\r\n\tthis.positionWorld = new THREE.Vector3();\r\n\tthis.positionScreen = new THREE.Vector4();\r\n\r\n\tthis.visible = true;\r\n\r\n};\r\n\r\nTHREE.RenderableVertex.prototype.copy = function ( vertex ) {\r\n\r\n\tthis.positionWorld.copy( vertex.positionWorld );\r\n\tthis.positionScreen.copy( vertex.positionScreen );\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RenderableFace = function () {\r\n\r\n\tthis.id = 0;\r\n\r\n\tthis.v1 = new THREE.RenderableVertex();\r\n\tthis.v2 = new THREE.RenderableVertex();\r\n\tthis.v3 = new THREE.RenderableVertex();\r\n\r\n\tthis.centroidModel = new THREE.Vector3();\r\n\r\n\tthis.normalModel = new THREE.Vector3();\r\n\r\n\tthis.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\r\n\tthis.vertexNormalsLength = 0;\r\n\r\n\tthis.color = null;\r\n\tthis.material = null;\r\n\tthis.uvs = [[]];\r\n\r\n\tthis.z = 0;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RenderableObject = function () {\r\n\r\n\tthis.id = 0;\r\n\r\n\tthis.object = null;\r\n\tthis.z = 0;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RenderableSprite = function () {\r\n\r\n\tthis.id = 0;\r\n\r\n\tthis.object = null;\r\n\r\n\tthis.x = 0;\r\n\tthis.y = 0;\r\n\tthis.z = 0;\r\n\r\n\tthis.rotation = 0;\r\n\tthis.scale = new THREE.Vector2();\r\n\r\n\tthis.material = null;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RenderableLine = function () {\r\n\r\n\tthis.id = 0;\r\n\r\n\tthis.v1 = new THREE.RenderableVertex();\r\n\tthis.v2 = new THREE.RenderableVertex();\r\n\r\n\tthis.vertexColors = [ new THREE.Color(), new THREE.Color() ];\r\n\tthis.material = null;\r\n\r\n\tthis.z = 0;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.GeometryUtils = {\r\n\r\n\t// Merge two geometries or geometry and geometry from object (using object's transform)\r\n\r\n\tmerge: function ( geometry1, object2 /* mesh | geometry */, materialIndexOffset ) {\r\n\r\n\t\tvar matrix, normalMatrix,\r\n\t\tvertexOffset = geometry1.vertices.length,\r\n\t\tuvPosition = geometry1.faceVertexUvs[ 0 ].length,\r\n\t\tgeometry2 = object2 instanceof THREE.Mesh ? object2.geometry : object2,\r\n\t\tvertices1 = geometry1.vertices,\r\n\t\tvertices2 = geometry2.vertices,\r\n\t\tfaces1 = geometry1.faces,\r\n\t\tfaces2 = geometry2.faces,\r\n\t\tuvs1 = geometry1.faceVertexUvs[ 0 ],\r\n\t\tuvs2 = geometry2.faceVertexUvs[ 0 ];\r\n\r\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n\t\tif ( object2 instanceof THREE.Mesh ) {\r\n\r\n\t\t\tobject2.matrixAutoUpdate && object2.updateMatrix();\r\n\r\n\t\t\tmatrix = object2.matrix;\r\n\r\n\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = vertices2[ i ];\r\n\r\n\t\t\tvar vertexCopy = vertex.clone();\r\n\r\n\t\t\tif ( matrix ) vertexCopy.applyMatrix4( matrix );\r\n\r\n\t\t\tvertices1.push( vertexCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// faces\r\n\r\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n\t\t\tif ( normalMatrix ) {\r\n\r\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n\t\t\t\tif ( normalMatrix ) {\r\n\r\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.color.copy( face.color );\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n\t\t\tfaceCopy.centroid.copy( face.centroid );\r\n\r\n\t\t\tif ( matrix ) {\r\n\r\n\t\t\t\tfaceCopy.centroid.applyMatrix4( matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaces1.push( faceCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// uvs\r\n\r\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tuvCopy.push( new THREE.Vector2( uv[ j ].x, uv[ j ].y ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvs1.push( uvCopy );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// Get random point in triangle (via barycentric coordinates)\r\n\t// \t(uniform distribution)\r\n\t// \thttp://www.cgafaq.info/wiki/Random_Point_In_Triangle\r\n\r\n\trandomPointInTriangle: function () {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function ( vectorA, vectorB, vectorC ) {\r\n\r\n\t\t\tvar point = new THREE.Vector3();\r\n\r\n\t\t\tvar a = THREE.Math.random16();\r\n\t\t\tvar b = THREE.Math.random16();\r\n\r\n\t\t\tif ( ( a + b ) > 1 ) {\r\n\r\n\t\t\t\ta = 1 - a;\r\n\t\t\t\tb = 1 - b;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar c = 1 - a - b;\r\n\r\n\t\t\tpoint.copy( vectorA );\r\n\t\t\tpoint.multiplyScalar( a );\r\n\r\n\t\t\tvector.copy( vectorB );\r\n\t\t\tvector.multiplyScalar( b );\r\n\r\n\t\t\tpoint.add( vector );\r\n\r\n\t\t\tvector.copy( vectorC );\r\n\t\t\tvector.multiplyScalar( c );\r\n\r\n\t\t\tpoint.add( vector );\r\n\r\n\t\t\treturn point;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\t// Get random point in face (triangle / quad)\r\n\t// (uniform distribution)\r\n\r\n\trandomPointInFace: function ( face, geometry, useCachedAreas ) {\r\n\r\n\t\tvar vA, vB, vC, vD;\r\n\r\n\t\tvA = geometry.vertices[ face.a ];\r\n\t\tvB = geometry.vertices[ face.b ];\r\n\t\tvC = geometry.vertices[ face.c ];\r\n\r\n\t\treturn THREE.GeometryUtils.randomPointInTriangle( vA, vB, vC );\r\n\r\n\t},\r\n\r\n\t// Get uniformly distributed random points in mesh\r\n\t// \t- create array with cumulative sums of face areas\r\n\t//  - pick random number from 0 to total area\r\n\t//  - find corresponding place in area array by binary search\r\n\t//\t- get random point in face\r\n\r\n\trandomPointsInGeometry: function ( geometry, n ) {\r\n\r\n\t\tvar face, i,\r\n\t\t\tfaces = geometry.faces,\r\n\t\t\tvertices = geometry.vertices,\r\n\t\t\til = faces.length,\r\n\t\t\ttotalArea = 0,\r\n\t\t\tcumulativeAreas = [],\r\n\t\t\tvA, vB, vC, vD;\r\n\r\n\t\t// precompute face areas\r\n\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\t\tface = faces[ i ];\r\n\r\n\t\t\tvA = vertices[ face.a ];\r\n\t\t\tvB = vertices[ face.b ];\r\n\t\t\tvC = vertices[ face.c ];\r\n\r\n\t\t\tface._area = THREE.GeometryUtils.triangleArea( vA, vB, vC );\r\n\r\n\t\t\ttotalArea += face._area;\r\n\r\n\t\t\tcumulativeAreas[ i ] = totalArea;\r\n\r\n\t\t}\r\n\r\n\t\t// binary search cumulative areas array\r\n\r\n\t\tfunction binarySearchIndices( value ) {\r\n\r\n\t\t\tfunction binarySearch( start, end ) {\r\n\r\n\t\t\t\t// return closest larger index\r\n\t\t\t\t// if exact number is not found\r\n\r\n\t\t\t\tif ( end < start )\r\n\t\t\t\t\treturn start;\r\n\r\n\t\t\t\tvar mid = start + Math.floor( ( end - start ) / 2 );\r\n\r\n\t\t\t\tif ( cumulativeAreas[ mid ] > value ) {\r\n\r\n\t\t\t\t\treturn binarySearch( start, mid - 1 );\r\n\r\n\t\t\t\t} else if ( cumulativeAreas[ mid ] < value ) {\r\n\r\n\t\t\t\t\treturn binarySearch( mid + 1, end );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn mid;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar result = binarySearch( 0, cumulativeAreas.length - 1 )\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t\t// pick random face weighted by face area\r\n\r\n\t\tvar r, index,\r\n\t\t\tresult = [];\r\n\r\n\t\tvar stats = {};\r\n\r\n\t\tfor ( i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tr = THREE.Math.random16() * totalArea;\r\n\r\n\t\t\tindex = binarySearchIndices( r );\r\n\r\n\t\t\tresult[ i ] = THREE.GeometryUtils.randomPointInFace( faces[ index ], geometry, true );\r\n\r\n\t\t\tif ( ! stats[ index ] ) {\r\n\r\n\t\t\t\tstats[ index ] = 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstats[ index ] += 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\t// Get triangle area (half of parallelogram)\r\n\t//\thttp://mathworld.wolfram.com/TriangleArea.html\r\n\r\n\ttriangleArea: function () {\r\n\r\n\t\tvar vector1 = new THREE.Vector3();\r\n\t\tvar vector2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( vectorA, vectorB, vectorC ) {\r\n\r\n\t\t\tvector1.subVectors( vectorB, vectorA );\r\n\t\t\tvector2.subVectors( vectorC, vectorA );\r\n\t\t\tvector1.cross( vector2 );\r\n\r\n\t\t\treturn 0.5 * vector1.length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\t// Center geometry so that 0,0,0 is in center of bounding box\r\n\r\n\tcenter: function ( geometry ) {\r\n\r\n\t\tgeometry.computeBoundingBox();\r\n\r\n\t\tvar bb = geometry.boundingBox;\r\n\r\n\t\tvar offset = new THREE.Vector3();\r\n\r\n\t\toffset.addVectors( bb.min, bb.max );\r\n\t\toffset.multiplyScalar( -0.5 );\r\n\r\n\t\tgeometry.applyMatrix( new THREE.Matrix4().makeTranslation( offset.x, offset.y, offset.z ) );\r\n\t\tgeometry.computeBoundingBox();\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\ttriangulateQuads: function ( geometry ) {\r\n\r\n\t\tvar i, il, j, jl;\r\n\r\n\t\tvar faces = [];\r\n\t\tvar faceVertexUvs = [];\r\n\r\n\t\tfor ( i = 0, il = geometry.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n\t\t\tfaceVertexUvs[ i ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = 0, il = geometry.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = geometry.faces[ i ];\r\n\r\n\t\t\tfaces.push( face );\r\n\r\n\t\t\tfor ( j = 0, jl = geometry.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tfaceVertexUvs[ j ].push( geometry.faceVertexUvs[ j ][ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.faces = faces;\r\n\t\tgeometry.faceVertexUvs = faceVertexUvs;\r\n\r\n\t\tgeometry.computeCentroids();\r\n\t\tgeometry.computeFaceNormals();\r\n\t\tgeometry.computeVertexNormals();\r\n\r\n\t\tif ( geometry.hasTangents ) geometry.computeTangents();\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ImageUtils = {\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.Texture( undefined, mapping );\r\n\r\n\t\tvar image = loader.load( url, function () {\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t} );\r\n\r\n\t\ttexture.image = image;\r\n\t\ttexture.sourceFile = url;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadCompressedTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tvar texture = new THREE.CompressedTexture();\r\n\t\ttexture.mapping = mapping;\r\n\r\n\t\tvar request = new XMLHttpRequest();\r\n\r\n\t\trequest.onload = function () {\r\n\r\n\t\t\tvar buffer = request.response;\r\n\t\t\tvar dds = THREE.ImageUtils.parseDDS( buffer, true );\r\n\r\n\t\t\ttexture.format = dds.format;\r\n\r\n\t\t\ttexture.mipmaps = dds.mipmaps;\r\n\t\t\ttexture.image.width = dds.width;\r\n\t\t\ttexture.image.height = dds.height;\r\n\r\n\t\t\t// gl.generateMipmap fails for compressed textures\r\n\t\t\t// mipmaps must be embedded in the DDS file\r\n\t\t\t// or texture filters must not use mipmapping\r\n\r\n\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t}\r\n\r\n\t\trequest.onerror = onError;\r\n\r\n\t\trequest.open( 'GET', url, true );\r\n\t\trequest.responseType = \"arraybuffer\";\r\n\t\trequest.send( null );\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\r\n\t\tvar images = [];\r\n\t\timages.loadCount = 0;\r\n\r\n\t\tvar texture = new THREE.Texture();\r\n\t\ttexture.image = images;\r\n\t\tif ( mapping !== undefined ) texture.mapping = mapping;\r\n\r\n\t\t// no flipping needed for cube textures\r\n\r\n\t\ttexture.flipY = false;\r\n\r\n\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\r\n\t\t\tvar cubeImage = new Image();\r\n\t\t\timages[ i ] = cubeImage;\r\n\r\n\t\t\tcubeImage.onload = function () {\r\n\r\n\t\t\t\timages.loadCount += 1;\r\n\r\n\t\t\t\tif ( images.loadCount === 6 ) {\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t\tcubeImage.onerror = onError;\r\n\r\n\t\t\tcubeImage.crossOrigin = this.crossOrigin;\r\n\t\t\tcubeImage.src = array[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadCompressedTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\r\n\t\tvar images = [];\r\n\t\timages.loadCount = 0;\r\n\r\n\t\tvar texture = new THREE.CompressedTexture();\r\n\t\ttexture.image = images;\r\n\t\tif ( mapping !== undefined ) texture.mapping = mapping;\r\n\r\n\t\t// no flipping for cube textures\r\n\t\t// (also flipping doesn't work for compressed textures )\r\n\r\n\t\ttexture.flipY = false;\r\n\r\n\t\t// can't generate mipmaps for compressed textures\r\n\t\t// mips must be embedded in DDS files\r\n\r\n\t\ttexture.generateMipmaps = false;\r\n\r\n\t\tvar generateCubeFaceCallback = function ( rq, img ) {\r\n\r\n\t\t\treturn function () {\r\n\r\n\t\t\t\tvar buffer = rq.response;\r\n\t\t\t\tvar dds = THREE.ImageUtils.parseDDS( buffer, true );\r\n\r\n\t\t\t\timg.format = dds.format;\r\n\r\n\t\t\t\timg.mipmaps = dds.mipmaps;\r\n\t\t\t\timg.width = dds.width;\r\n\t\t\t\timg.height = dds.height;\r\n\r\n\t\t\t\timages.loadCount += 1;\r\n\r\n\t\t\t\tif ( images.loadCount === 6 ) {\r\n\r\n\t\t\t\t\ttexture.format = dds.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// compressed cubemap textures as 6 separate DDS files\r\n\r\n\t\tif ( array instanceof Array ) {\r\n\r\n\t\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\r\n\t\t\t\tvar cubeImage = {};\r\n\t\t\t\timages[ i ] = cubeImage;\r\n\r\n\t\t\t\tvar request = new XMLHttpRequest();\r\n\r\n\t\t\t\trequest.onload = generateCubeFaceCallback( request, cubeImage );\r\n\t\t\t\trequest.onerror = onError;\r\n\r\n\t\t\t\tvar url = array[ i ];\r\n\r\n\t\t\t\trequest.open( 'GET', url, true );\r\n\t\t\t\trequest.responseType = \"arraybuffer\";\r\n\t\t\t\trequest.send( null );\r\n\r\n\t\t\t}\r\n\r\n\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar url = array;\r\n\t\t\tvar request = new XMLHttpRequest();\r\n\r\n\t\t\trequest.onload = function( ) {\r\n\r\n\t\t\t\tvar buffer = request.response;\r\n\t\t\t\tvar dds = THREE.ImageUtils.parseDDS( buffer, true );\r\n\r\n\t\t\t\tif ( dds.isCubemap ) {\r\n\r\n\t\t\t\t\tvar faces = dds.mipmaps.length / dds.mipmapCount;\r\n\r\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < dds.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( dds.mipmaps[ f * dds.mipmapCount + i ] );\r\n\t\t\t\t\t\t\timages[ f ].format = dds.format;\r\n\t\t\t\t\t\t\timages[ f ].width = dds.width;\r\n\t\t\t\t\t\t\timages[ f ].height = dds.height;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.format = dds.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\trequest.onerror = onError;\r\n\r\n\t\t\trequest.open( 'GET', url, true );\r\n\t\t\trequest.responseType = \"arraybuffer\";\r\n\t\t\trequest.send( null );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadDDSTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tvar images = [];\r\n\t\timages.loadCount = 0;\r\n\r\n\t\tvar texture = new THREE.CompressedTexture();\r\n\t\ttexture.image = images;\r\n\t\tif ( mapping !== undefined ) texture.mapping = mapping;\r\n\r\n\t\t// no flipping for cube textures\r\n\t\t// (also flipping doesn't work for compressed textures )\r\n\r\n\t\ttexture.flipY = false;\r\n\r\n\t\t// can't generate mipmaps for compressed textures\r\n\t\t// mips must be embedded in DDS files\r\n\r\n\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t{\r\n\t\t\tvar request = new XMLHttpRequest();\r\n\r\n\t\t\trequest.onload = function( ) {\r\n\r\n\t\t\t\tvar buffer = request.response;\r\n\t\t\t\tvar dds = THREE.ImageUtils.parseDDS( buffer, true );\r\n\r\n\t\t\t\tif ( dds.isCubemap ) {\r\n\r\n\t\t\t\t\tvar faces = dds.mipmaps.length / dds.mipmapCount;\r\n\r\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < dds.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( dds.mipmaps[ f * dds.mipmapCount + i ] );\r\n\t\t\t\t\t\t\timages[ f ].format = dds.format;\r\n\t\t\t\t\t\t\timages[ f ].width = dds.width;\r\n\t\t\t\t\t\t\timages[ f ].height = dds.height;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttexture.image.width = dds.width;\r\n\t\t\t\t\ttexture.image.height = dds.height;\r\n\t\t\t\t\ttexture.mipmaps = dds.mipmaps;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.format = dds.format;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t\trequest.onerror = onError;\r\n\r\n\t\t\trequest.open( 'GET', url, true );\r\n\t\t\trequest.responseType = \"arraybuffer\";\r\n\t\t\trequest.send( null );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tparseDDS: function ( buffer, loadMipmaps ) {\r\n\r\n\t\tvar dds = { mipmaps: [], width: 0, height: 0, format: null, mipmapCount: 1 };\r\n\r\n\t\t// Adapted from @toji's DDS utils\r\n\t\t//\thttps://github.com/toji/webgl-texture-utils/blob/master/texture-util/dds.js\r\n\r\n\t\t// All values and structures referenced from:\r\n\t\t// http://msdn.microsoft.com/en-us/library/bb943991.aspx/\r\n\r\n\t\tvar DDS_MAGIC = 0x20534444;\r\n\r\n\t\tvar DDSD_CAPS = 0x1,\r\n\t\t\tDDSD_HEIGHT = 0x2,\r\n\t\t\tDDSD_WIDTH = 0x4,\r\n\t\t\tDDSD_PITCH = 0x8,\r\n\t\t\tDDSD_PIXELFORMAT = 0x1000,\r\n\t\t\tDDSD_MIPMAPCOUNT = 0x20000,\r\n\t\t\tDDSD_LINEARSIZE = 0x80000,\r\n\t\t\tDDSD_DEPTH = 0x800000;\r\n\r\n\t\tvar DDSCAPS_COMPLEX = 0x8,\r\n\t\t\tDDSCAPS_MIPMAP = 0x400000,\r\n\t\t\tDDSCAPS_TEXTURE = 0x1000;\r\n\r\n\t\tvar DDSCAPS2_CUBEMAP = 0x200,\r\n\t\t\tDDSCAPS2_CUBEMAP_POSITIVEX = 0x400,\r\n\t\t\tDDSCAPS2_CUBEMAP_NEGATIVEX = 0x800,\r\n\t\t\tDDSCAPS2_CUBEMAP_POSITIVEY = 0x1000,\r\n\t\t\tDDSCAPS2_CUBEMAP_NEGATIVEY = 0x2000,\r\n\t\t\tDDSCAPS2_CUBEMAP_POSITIVEZ = 0x4000,\r\n\t\t\tDDSCAPS2_CUBEMAP_NEGATIVEZ = 0x8000,\r\n\t\t\tDDSCAPS2_VOLUME = 0x200000;\r\n\r\n\t\tvar DDPF_ALPHAPIXELS = 0x1,\r\n\t\t\tDDPF_ALPHA = 0x2,\r\n\t\t\tDDPF_FOURCC = 0x4,\r\n\t\t\tDDPF_RGB = 0x40,\r\n\t\t\tDDPF_YUV = 0x200,\r\n\t\t\tDDPF_LUMINANCE = 0x20000;\r\n\r\n\t\tfunction fourCCToInt32( value ) {\r\n\r\n\t\t\treturn value.charCodeAt(0) +\r\n\t\t\t\t(value.charCodeAt(1) << 8) +\r\n\t\t\t\t(value.charCodeAt(2) << 16) +\r\n\t\t\t\t(value.charCodeAt(3) << 24);\r\n\r\n\t\t}\r\n\r\n\t\tfunction int32ToFourCC( value ) {\r\n\r\n\t\t\treturn String.fromCharCode(\r\n\t\t\t\tvalue & 0xff,\r\n\t\t\t\t(value >> 8) & 0xff,\r\n\t\t\t\t(value >> 16) & 0xff,\r\n\t\t\t\t(value >> 24) & 0xff\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tfunction loadARGBMip( buffer, dataOffset, width, height ) {\r\n\t\t\tvar dataLength = width*height*4;\r\n\t\t\tvar srcBuffer = new Uint8Array( buffer, dataOffset, dataLength );\r\n\t\t\tvar byteArray = new Uint8Array( dataLength );\r\n\t\t\tvar dst = 0;\r\n\t\t\tvar src = 0;\r\n\t\t\tfor ( var y = 0; y < height; y++ ) {\r\n\t\t\t\tfor ( var x = 0; x < width; x++ ) {\r\n\t\t\t\t\tvar b = srcBuffer[src]; src++;\r\n\t\t\t\t\tvar g = srcBuffer[src]; src++;\r\n\t\t\t\t\tvar r = srcBuffer[src]; src++;\r\n\t\t\t\t\tvar a = srcBuffer[src]; src++;\r\n\t\t\t\t\tbyteArray[dst] = r; dst++;\t//r\r\n\t\t\t\t\tbyteArray[dst] = g; dst++;\t//g\r\n\t\t\t\t\tbyteArray[dst] = b; dst++;\t//b\r\n\t\t\t\t\tbyteArray[dst] = a; dst++;\t//a\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn byteArray;\r\n\t\t}\r\n\r\n\t\tvar FOURCC_DXT1 = fourCCToInt32(\"DXT1\");\r\n\t\tvar FOURCC_DXT3 = fourCCToInt32(\"DXT3\");\r\n\t\tvar FOURCC_DXT5 = fourCCToInt32(\"DXT5\");\r\n\r\n\t\tvar headerLengthInt = 31; // The header length in 32 bit ints\r\n\r\n\t\t// Offsets into the header array\r\n\r\n\t\tvar off_magic = 0;\r\n\r\n\t\tvar off_size = 1;\r\n\t\tvar off_flags = 2;\r\n\t\tvar off_height = 3;\r\n\t\tvar off_width = 4;\r\n\r\n\t\tvar off_mipmapCount = 7;\r\n\r\n\t\tvar off_pfFlags = 20;\r\n\t\tvar off_pfFourCC = 21;\r\n\t\tvar off_RGBBitCount = 22;\r\n\t\tvar off_RBitMask = 23;\r\n\t\tvar off_GBitMask = 24;\r\n\t\tvar off_BBitMask = 25;\r\n\t\tvar off_ABitMask = 26;\r\n\r\n\t\tvar off_caps = 27;\r\n\t\tvar off_caps2 = 28;\r\n\t\tvar off_caps3 = 29;\r\n\t\tvar off_caps4 = 30;\r\n\r\n\t\t// Parse header\r\n\r\n\t\tvar header = new Int32Array( buffer, 0, headerLengthInt );\r\n\r\n\t\tif ( header[ off_magic ] !== DDS_MAGIC ) {\r\n\r\n\t\t\tTHREE.onerror( \"ImageUtils.parseDDS(): Invalid magic number in DDS header\" );\r\n\t\t\treturn dds;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! header[ off_pfFlags ] & DDPF_FOURCC ) {\r\n\r\n\t\t\tTHREE.onerror( \"ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code\" );\r\n\t\t\treturn dds;\r\n\r\n\t\t}\r\n\r\n\t\tvar blockBytes;\r\n\r\n\t\tvar fourCC = header[ off_pfFourCC ];\r\n\r\n\t\tvar isRGBAUncompressed = false;\r\n\r\n\t\tswitch ( fourCC ) {\r\n\r\n\t\t\tcase FOURCC_DXT1:\r\n\r\n\t\t\t\tblockBytes = 8;\r\n\t\t\t\tdds.format = THREE.RGB_S3TC_DXT1_Format;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase FOURCC_DXT3:\r\n\r\n\t\t\t\tblockBytes = 16;\r\n\t\t\t\tdds.format = THREE.RGBA_S3TC_DXT3_Format;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase FOURCC_DXT5:\r\n\r\n\t\t\t\tblockBytes = 16;\r\n\t\t\t\tdds.format = THREE.RGBA_S3TC_DXT5_Format;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\tif( header[off_RGBBitCount] ==32 \r\n\t\t\t\t\t&& header[off_RBitMask]&0xff0000\r\n\t\t\t\t\t&& header[off_GBitMask]&0xff00 \r\n\t\t\t\t\t&& header[off_BBitMask]&0xff\r\n\t\t\t\t\t&& header[off_ABitMask]&0xff000000  ) {\r\n\t\t\t\t\tisRGBAUncompressed = true;\r\n\t\t\t\t\tblockBytes = 64;\r\n\t\t\t\t\tdds.format = THREE.RGBAFormat;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tTHREE.onerror( \"ImageUtils.parseDDS(): Unsupported FourCC code: \", int32ToFourCC( fourCC ) );\r\n\t\t\t\t\treturn dds;\r\n\t\t\t\t}\r\n\t\t}\r\n\r\n\t\tdds.mipmapCount = 1;\r\n\r\n\t\tif ( header[ off_flags ] & DDSD_MIPMAPCOUNT && loadMipmaps !== false ) {\r\n\r\n\t\t\tdds.mipmapCount = Math.max( 1, header[ off_mipmapCount ] );\r\n\r\n\t\t}\r\n\r\n\t\t//TODO: Verify that all faces of the cubemap are present with DDSCAPS2_CUBEMAP_POSITIVEX, etc.\r\n\r\n\t\tdds.isCubemap = header[ off_caps2 ] & DDSCAPS2_CUBEMAP ? true : false;\r\n\r\n\t\tdds.width = header[ off_width ];\r\n\t\tdds.height = header[ off_height ];\r\n\r\n\t\tvar dataOffset = header[ off_size ] + 4;\r\n\r\n\t\t// Extract mipmaps buffers\r\n\r\n\t\tvar width = dds.width;\r\n\t\tvar height = dds.height;\r\n\r\n\t\tvar faces = dds.isCubemap ? 6 : 1;\r\n\r\n\t\tfor ( var face = 0; face < faces; face ++ ) {\r\n\r\n\t\t\tfor ( var i = 0; i < dds.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\tif( isRGBAUncompressed ) {\r\n\t\t\t\t\tvar byteArray = loadARGBMip( buffer, dataOffset, width, height );\r\n\t\t\t\t\tvar dataLength = byteArray.length;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar dataLength = Math.max( 4, width ) / 4 * Math.max( 4, height ) / 4 * blockBytes;\r\n\t\t\t\t\tvar byteArray = new Uint8Array( buffer, dataOffset, dataLength );\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar mipmap = { \"data\": byteArray, \"width\": width, \"height\": height };\r\n\t\t\t\tdds.mipmaps.push( mipmap );\r\n\r\n\t\t\t\tdataOffset += dataLength;\r\n\r\n\t\t\t\twidth = Math.max( width * 0.5, 1 );\r\n\t\t\t\theight = Math.max( height * 0.5, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\twidth = dds.width;\r\n\t\t\theight = dds.height;\r\n\r\n\t\t}\r\n\r\n\t\treturn dds;\r\n\r\n\t},\r\n\r\n\tgetNormalMap: function ( image, depth ) {\r\n\r\n\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\r\n\t\tvar cross = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\r\n\t\t}\r\n\r\n\t\tvar subtract = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\r\n\t\t}\r\n\r\n\t\tvar normalize = function ( a ) {\r\n\r\n\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\r\n\t\t}\r\n\r\n\t\tdepth = depth | 1;\r\n\r\n\t\tvar width = image.width;\r\n\t\tvar height = image.height;\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.drawImage( image, 0, 0 );\r\n\r\n\t\tvar data = context.getImageData( 0, 0, width, height ).data;\r\n\t\tvar imageData = context.createImageData( width, height );\r\n\t\tvar output = imageData.data;\r\n\r\n\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\r\n\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\r\n\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\r\n\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\r\n\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\r\n\t\t\t\tvar points = [];\r\n\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [  1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\r\n\t\t\t\tvar normals = [];\r\n\t\t\t\tvar num_points = points.length;\r\n\r\n\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\r\n\r\n\t\t\t\t\tvar v1 = points[ i ];\r\n\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\r\n\t\t\t\t\tv1 = subtract( v1, origin );\r\n\t\t\t\t\tv2 = subtract( v2, origin );\r\n\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normal = [ 0, 0, 0 ];\r\n\r\n\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\r\n\r\n\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\r\n\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\r\n\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnormal[ 0 ] /= normals.length;\r\n\t\t\t\tnormal[ 1 ] /= normals.length;\r\n\t\t\t\tnormal[ 2 ] /= normals.length;\r\n\r\n\t\t\t\tvar idx = ( y * width + x ) * 4;\r\n\r\n\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 3 ] = 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcontext.putImageData( imageData, 0, 0 );\r\n\r\n\t\treturn canvas;\r\n\r\n\t},\r\n\r\n\tgenerateDataTexture: function ( width, height, color ) {\r\n\r\n\t\tvar size = width * height;\r\n\t\tvar data = new Uint8Array( 3 * size );\r\n\r\n\t\tvar r = Math.floor( color.r * 255 );\r\n\t\tvar g = Math.floor( color.g * 255 );\r\n\t\tvar b = Math.floor( color.b * 255 );\r\n\r\n\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\r\n\t\t\tdata[ i * 3 ] \t  = r;\r\n\t\t\tdata[ i * 3 + 1 ] = g;\r\n\t\t\tdata[ i * 3 + 2 ] = b;\r\n\r\n\t\t}\r\n\r\n\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SceneUtils = {\r\n\r\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\r\n\t\tvar group = new THREE.Object3D();\r\n\r\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn group;\r\n\r\n\t},\r\n\r\n\tdetach : function ( child, parent, scene ) {\r\n\r\n\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\tparent.remove( child );\r\n\t\tscene.add( child );\r\n\r\n\t},\r\n\r\n\tattach: function ( child, scene, parent ) {\r\n\r\n\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\tchild.applyMatrix( matrixWorldInverse );\r\n\r\n\t\tscene.remove( child );\r\n\t\tparent.add( child );\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For Text operations in three.js (See TextGeometry)\r\n *\r\n * It uses techniques used in:\r\n *\r\n * \ttypeface.js and canvastext\r\n * \t\tFor converting fonts and rendering with javascript\r\n *\t\thttp://typeface.neocracy.org\r\n *\r\n *\tTriangulation ported from AS3\r\n *\t\tSimple Polygon Triangulation\r\n *\t\thttp://actionsnippet.com/?p=1462\r\n *\r\n * \tA Method to triangulate shapes with holes\r\n *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n *\r\n */\r\n\r\nTHREE.FontUtils = {\r\n\r\n\tfaces : {},\r\n\r\n\t// Just for now. face[weight][style]\r\n\r\n\tface : \"helvetiker\",\r\n\tweight: \"normal\",\r\n\tstyle : \"normal\",\r\n\tsize : 150,\r\n\tdivisions : 10,\r\n\r\n\tgetFace : function() {\r\n\r\n\t\treturn this.faces[ this.face ][ this.weight ][ this.style ];\r\n\r\n\t},\r\n\r\n\tloadFace : function( data ) {\r\n\r\n\t\tvar family = data.familyName.toLowerCase();\r\n\r\n\t\tvar ThreeFont = this;\r\n\r\n\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\tvar face = ThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tdrawText : function( text ) {\r\n\r\n\t\tvar characterPts = [], allPts = [];\r\n\r\n\t\t// RenderText\r\n\r\n\t\tvar i, p,\r\n\t\t\tface = this.getFace(),\r\n\t\t\tscale = this.size / face.resolution,\r\n\t\t\toffset = 0,\r\n\t\t\tchars = String( text ).split( '' ),\r\n\t\t\tlength = chars.length;\r\n\r\n\t\tvar fontPaths = [];\r\n\r\n\t\tfor ( i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tvar path = new THREE.Path();\r\n\r\n\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n\t\t\toffset += ret.offset;\r\n\r\n\t\t\tfontPaths.push( ret.path );\r\n\r\n\t\t}\r\n\r\n\t\t// get the width\r\n\r\n\t\tvar width = offset / 2;\r\n\t\t//\r\n\t\t// for ( p = 0; p < allPts.length; p++ ) {\r\n\t\t//\r\n\t\t// \tallPts[ p ].x -= width;\r\n\t\t//\r\n\t\t// }\r\n\r\n\t\t//var extract = this.extractPoints( allPts, characterPts );\r\n\t\t//extract.contour = allPts;\r\n\r\n\t\t//extract.paths = fontPaths;\r\n\t\t//extract.offset = width;\r\n\r\n\t\treturn { paths : fontPaths, offset : width };\r\n\r\n\t},\r\n\r\n\r\n\r\n\r\n\textractGlyphPoints : function( c, face, scale, offset, path ) {\r\n\r\n\t\tvar pts = [];\r\n\r\n\t\tvar i, i2, divisions,\r\n\t\t\toutline, action, length,\r\n\t\t\tscaleX, scaleY,\r\n\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n\t\t\tlaste,\r\n\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\r\n\t\tif ( !glyph ) return;\r\n\r\n\t\tif ( glyph.o ) {\r\n\r\n\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\t\tlength = outline.length;\r\n\r\n\t\t\tscaleX = scale;\r\n\t\t\tscaleY = scale;\r\n\r\n\t\t\tfor ( i = 0; i < length; ) {\r\n\r\n\t\t\t\taction = outline[ i ++ ];\r\n\r\n\t\t\t\t//console.log( action );\r\n\r\n\t\t\t\tswitch( action ) {\r\n\r\n\t\t\t\tcase 'm':\r\n\r\n\t\t\t\t\t// Move To\r\n\r\n\t\t\t\t\tx = outline[ i++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.moveTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'l':\r\n\r\n\t\t\t\t\t// Line To\r\n\r\n\t\t\t\t\tx = outline[ i++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i++ ] * scaleY;\r\n\t\t\t\t\tpath.lineTo(x,y);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'q':\r\n\r\n\t\t\t\t\t// QuadraticCurveTo\r\n\r\n\t\t\t\t\tcpx  = outline[ i++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i++ ] * scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tvar tx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\tvar ty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\t\t\t\t\t  }\r\n\r\n\t\t\t\t  }\r\n\r\n\t\t\t\t  break;\r\n\r\n\t\t\t\tcase 'b':\r\n\r\n\t\t\t\t\t// Cubic Bezier Curve\r\n\r\n\t\t\t\t\tcpx  = outline[ i++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i++ ] *  scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i++ ] * -scaleY;\r\n\t\t\t\t\tcpx2 = outline[ i++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy2 = outline[ i++ ] * -scaleY;\r\n\r\n\t\t\t\t\tpath.bezierCurveTo( cpx, cpy, cpx1, cpy1, cpx2, cpy2 );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tvar tx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\tvar ty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\t\treturn { offset: glyph.ha*scale, path:path};\r\n\t}\r\n\r\n};\r\n\r\n\r\nTHREE.FontUtils.generateShapes = function( text, parameters ) {\r\n\r\n\t// Parameters \r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar size = parameters.size !== undefined ? parameters.size : 100;\r\n\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments: 4;\r\n\r\n\tvar font = parameters.font !== undefined ? parameters.font : \"helvetiker\";\r\n\tvar weight = parameters.weight !== undefined ? parameters.weight : \"normal\";\r\n\tvar style = parameters.style !== undefined ? parameters.style : \"normal\";\r\n\r\n\tTHREE.FontUtils.size = size;\r\n\tTHREE.FontUtils.divisions = curveSegments;\r\n\r\n\tTHREE.FontUtils.face = font;\r\n\tTHREE.FontUtils.weight = weight;\r\n\tTHREE.FontUtils.style = style;\r\n\r\n\t// Get a Font data json object\r\n\r\n\tvar data = THREE.FontUtils.drawText( text );\r\n\r\n\tvar paths = data.paths;\r\n\tvar shapes = [];\r\n\r\n\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n\t}\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n\r\n/**\r\n * This code is a quick port of code written in C++ which was submitted to\r\n * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n * See original code and more information here:\r\n * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n *\r\n * ported to actionscript by Zevan Rosser\r\n * www.actionsnippet.com\r\n *\r\n * ported to javascript by Joshua Koo\r\n * http://www.lab4games.net/zz85/blog\r\n *\r\n */\r\n\r\n\r\n( function( namespace ) {\r\n\r\n\tvar EPSILON = 0.0000000001;\r\n\r\n\t// takes in an contour array and returns\r\n\r\n\tvar process = function( contour, indices ) {\r\n\r\n\t\tvar n = contour.length;\r\n\r\n\t\tif ( n < 3 ) return null;\r\n\r\n\t\tvar result = [],\r\n\t\t\tverts = [],\r\n\t\t\tvertIndices = [];\r\n\r\n\t\t/* we want a counter-clockwise polygon in verts */\r\n\r\n\t\tvar u, v, w;\r\n\r\n\t\tif ( area( contour ) > 0.0 ) {\r\n\r\n\t\t\tfor ( v = 0; v < n; v++ ) verts[ v ] = v;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( v = 0; v < n; v++ ) verts[ v ] = ( n - 1 ) - v;\r\n\r\n\t\t}\r\n\r\n\t\tvar nv = n;\r\n\r\n\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\r\n\t\tvar count = 2 * nv;   /* error detection */\r\n\r\n\t\tfor( v = nv - 1; nv > 2; ) {\r\n\r\n\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\r\n\t\t\tif ( ( count-- ) <= 0 ) {\r\n\r\n\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\r\n\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\tTHREE.onwarning( \"Warning, unable to triangulate polygon!\" );\r\n\r\n\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\treturn result;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\r\n\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\r\n\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\r\n\t\t\t\tvar a, b, c, s, t;\r\n\r\n\t\t\t\t/* true names of the vertices */\r\n\r\n\t\t\t\ta = verts[ u ];\r\n\t\t\t\tb = verts[ v ];\r\n\t\t\t\tc = verts[ w ];\r\n\r\n\t\t\t\t/* output Triangle */\r\n\r\n\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\tcontour[ c ] ] );\r\n\r\n\r\n\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\r\n\t\t\t\t/* remove v from the remaining polygon */\r\n\r\n\t\t\t\tfor( s = v, t = v + 1; t < nv; s++, t++ ) {\r\n\r\n\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnv--;\r\n\r\n\t\t\t\t/* reset error detection counter */\r\n\r\n\t\t\t\tcount = 2 * nv;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( indices ) return vertIndices;\r\n\t\treturn result;\r\n\r\n\t};\r\n\r\n\t// calculate area of the contour polygon\r\n\r\n\tvar area = function ( contour ) {\r\n\r\n\t\tvar n = contour.length;\r\n\t\tvar a = 0.0;\r\n\r\n\t\tfor( var p = n - 1, q = 0; q < n; p = q++ ) {\r\n\r\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t}\r\n\r\n\t\treturn a * 0.5;\r\n\r\n\t};\r\n\r\n\tvar snip = function ( contour, u, v, w, n, verts ) {\r\n\r\n\t\tvar p;\r\n\t\tvar ax, ay, bx, by;\r\n\t\tvar cx, cy, px, py;\r\n\r\n\t\tax = contour[ verts[ u ] ].x;\r\n\t\tay = contour[ verts[ u ] ].y;\r\n\r\n\t\tbx = contour[ verts[ v ] ].x;\r\n\t\tby = contour[ verts[ v ] ].y;\r\n\r\n\t\tcx = contour[ verts[ w ] ].x;\r\n\t\tcy = contour[ verts[ w ] ].y;\r\n\r\n\t\tif ( EPSILON > (((bx-ax)*(cy-ay)) - ((by-ay)*(cx-ax))) ) return false;\r\n\r\n\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\r\n\t\taX = cx - bx;  aY = cy - by;\r\n\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\tcX = bx - ax;  cY = by - ay;\r\n\r\n\t\tfor ( p = 0; p < n; p++ ) {\r\n\r\n\t\t\tpx = contour[ verts[ p ] ].x\r\n\t\t\tpy = contour[ verts[ p ] ].y\r\n\r\n\t\t\tif ( ( (px === ax) && (py === ay) ) ||\r\n\t\t\t\t ( (px === bx) && (py === by) ) ||\r\n\t\t\t\t ( (px === cx) && (py === cy) ) )\tcontinue;\r\n\r\n\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\r\n\t\t\t// see if p is inside triangle abc\r\n\r\n\t\t\taCROSSbp = aX*bpy - aY*bpx;\r\n\t\t\tcCROSSap = cX*apy - cY*apx;\r\n\t\t\tbCROSScp = bX*cpy - bY*cpx;\r\n\r\n\t\t\tif ( (aCROSSbp >= -EPSILON) && (bCROSScp >= -EPSILON) && (cCROSSap >= -EPSILON) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t};\r\n\r\n\r\n\tnamespace.Triangulate = process;\r\n\tnamespace.Triangulate.area = area;\r\n\r\n\treturn namespace;\r\n\r\n})(THREE.FontUtils);\r\n\r\n// To use the typeface.js face files, hook up the API\r\nself._typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\nTHREE.typeface_js = self._typeface_js;\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n * THREE.ClosedSplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\r\n\r\nTHREE.Curve = function () {\r\n\r\n};\r\n\r\n// Virtual base class method to overwrite and implement in subclasses\r\n//\t- t [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\r\n\tTHREE.onwarning( \"Warning, getPoint() not implemented!\" );\r\n\treturn null;\r\n\r\n};\r\n\r\n// Get point at relative position in curve according to arc length\r\n// - u [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getPoint( t );\r\n\r\n};\r\n\r\n// Get sequence of points using getPoint( t )\r\n\r\nTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\r\n\tif ( !divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPoint( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get sequence of points using getPointAt( u )\r\n\r\nTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\r\n\tif ( !divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get total curve arc length\r\n\r\nTHREE.Curve.prototype.getLength = function () {\r\n\r\n\tvar lengths = this.getLengths();\r\n\treturn lengths[ lengths.length - 1 ];\r\n\r\n};\r\n\r\n// Get list of cumulative segment lengths\r\n\r\nTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\r\n\tif ( !divisions ) divisions = (this.__arcLengthDivisions) ? (this.__arcLengthDivisions): 200;\r\n\r\n\tif ( this.cacheArcLengths\r\n\t\t&& ( this.cacheArcLengths.length == divisions + 1 )\r\n\t\t&& !this.needsUpdate) {\r\n\r\n\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\treturn this.cacheArcLengths;\r\n\r\n\t}\r\n\r\n\tthis.needsUpdate = false;\r\n\r\n\tvar cache = [];\r\n\tvar current, last = this.getPoint( 0 );\r\n\tvar p, sum = 0;\r\n\r\n\tcache.push( 0 );\r\n\r\n\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\tsum += current.distanceTo( last );\r\n\t\tcache.push( sum );\r\n\t\tlast = current;\r\n\r\n\t}\r\n\r\n\tthis.cacheArcLengths = cache;\r\n\r\n\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.updateArcLengths = function() {\r\n\tthis.needsUpdate = true;\r\n\tthis.getLengths();\r\n};\r\n\r\n// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equi distance\r\n\r\nTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\r\n\tvar arcLengths = this.getLengths();\r\n\r\n\tvar i = 0, il = arcLengths.length;\r\n\r\n\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n\tif ( distance ) {\r\n\r\n\t\ttargetArcLength = distance;\r\n\r\n\t} else {\r\n\r\n\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t}\r\n\r\n\t//var time = Date.now();\r\n\r\n\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\tvar low = 0, high = il - 1, comparison;\r\n\r\n\twhile ( low <= high ) {\r\n\r\n\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\tlow = i + 1;\r\n\t\t\tcontinue;\r\n\r\n\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\thigh = i - 1;\r\n\t\t\tcontinue;\r\n\r\n\t\t} else {\r\n\r\n\t\t\thigh = i;\r\n\t\t\tbreak;\r\n\r\n\t\t\t// DONE\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ti = high;\r\n\r\n\t//console.log('b' , i, low, high, Date.now()- time);\r\n\r\n\tif ( arcLengths[ i ] == targetArcLength ) {\r\n\r\n\t\tvar t = i / ( il - 1 );\r\n\t\treturn t;\r\n\r\n\t}\r\n\r\n\t// we could get finer grain at lengths, or use simple interpolatation between two points\r\n\r\n\tvar lengthBefore = arcLengths[ i ];\r\n    var lengthAfter = arcLengths[ i + 1 ];\r\n\r\n    var segmentLength = lengthAfter - lengthBefore;\r\n\r\n    // determine where we are between the 'before' and 'after' points\r\n\r\n    var segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n    // add that fractional amount to t\r\n\r\n    var t = ( i + segmentFraction ) / ( il -1 );\r\n\r\n\treturn t;\r\n\r\n};\r\n\r\n// Returns a unit vector tangent at t\r\n// In case any sub curve does not implement its tangent derivation,\r\n// 2 points a small delta apart will be used to find its gradient\r\n// which seems to give a reasonable approximation\r\n\r\nTHREE.Curve.prototype.getTangent = function( t ) {\r\n\r\n\tvar delta = 0.0001;\r\n\tvar t1 = t - delta;\r\n\tvar t2 = t + delta;\r\n\r\n\t// Capping in case of danger\r\n\r\n\tif ( t1 < 0 ) t1 = 0;\r\n\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\tvar pt1 = this.getPoint( t1 );\r\n\tvar pt2 = this.getPoint( t2 );\r\n\r\n\tvar vec = pt2.clone().sub(pt1);\r\n\treturn vec.normalize();\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getTangent( t );\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Curve.Utils = {\r\n\r\n\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\r\n\t},\r\n\r\n\t// Puay Bing, thanks for helping with this derivative!\r\n\r\n\ttangentCubicBezier: function (t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn -3 * p0 * (1 - t) * (1 - t)  +\r\n\t\t\t3 * p1 * (1 - t) * (1-t) - 6 *t *p1 * (1-t) +\r\n\t\t\t6 * t *  p2 * (1-t) - 3 * t * t * p2 +\r\n\t\t\t3 * t * t * p3;\r\n\t},\r\n\r\n\r\n\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t// To check if my formulas are correct\r\n\r\n\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\tvar h01 = -6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\r\n\t\treturn h00 + h10 + h01 + h11;\r\n\r\n\t},\r\n\r\n\t// Catmull-Rom\r\n\r\n\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t * t2;\r\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// TODO: Transformation for Curves?\r\n\r\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\r\n\r\n// A Factory method for creating new curve subclasses\r\n\r\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\r\n\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\tconstructor.prototype.getPoint = getPointFunc;\r\n\r\n\treturn constructor;\r\n\r\n};\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\r\n\r\nTHREE.CurvePath = function () {\r\n\r\n\tthis.curves = [];\r\n\tthis.bends = [];\r\n\t\r\n\tthis.autoClose = false; // Automatically closes the path\r\n};\r\n\r\nTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\n\r\nTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\r\n\tthis.curves.push( curve );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t// TODO\r\n\t// If the ending of curve is not connected to the starting\r\n\t// or the next curve, then, this is not a real path\r\n};\r\n\r\nTHREE.CurvePath.prototype.closePath = function() {\r\n\t// TODO Test\r\n\t// and verify for vector3 (needs to implement equals)\r\n\t// Add a line curve if start and end of lines are not connected\r\n\tvar startPoint = this.curves[0].getPoint(0);\r\n\tvar endPoint = this.curves[this.curves.length-1].getPoint(1);\r\n\t\r\n\tif (!startPoint.equals(endPoint)) {\r\n\t\tthis.curves.push( new THREE.LineCurve(endPoint, startPoint) );\r\n\t}\r\n\t\r\n};\r\n\r\n// To get accurate point with reference to\r\n// entire path distance at time t,\r\n// following has to be done:\r\n\r\n// 1. Length of each sub path have to be known\r\n// 2. Locate and identify type of curve\r\n// 3. Get t for the curve\r\n// 4. Return curve.getPointAt(t')\r\n\r\nTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\r\n\tvar d = t * this.getLength();\r\n\tvar curveLengths = this.getCurveLengths();\r\n\tvar i = 0, diff, curve;\r\n\r\n\t// To think about boundaries points.\r\n\r\n\twhile ( i < curveLengths.length ) {\r\n\r\n\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\tdiff = curveLengths[ i ] - d;\r\n\t\t\tcurve = this.curves[ i ];\r\n\r\n\t\t\tvar u = 1 - diff / curve.getLength();\r\n\r\n\t\t\treturn curve.getPointAt( u );\r\n\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\ti ++;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n};\r\n\r\n/*\r\nTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n};*/\r\n\r\n\r\n// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n// getPoint() depends on getLength\r\n\r\nTHREE.CurvePath.prototype.getLength = function() {\r\n\r\n\tvar lens = this.getCurveLengths();\r\n\treturn lens[ lens.length - 1 ];\r\n\r\n};\r\n\r\n// Compute lengths and cache them\r\n// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\nTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\r\n\t// We use cache values if curves and cache array are same length\r\n\r\n\tif ( this.cacheLengths && this.cacheLengths.length == this.curves.length ) {\r\n\r\n\t\treturn this.cacheLengths;\r\n\r\n\t};\r\n\r\n\t// Get length of subsurve\r\n\t// Push sums into cached array\r\n\r\n\tvar lengths = [], sums = 0;\r\n\tvar i, il = this.curves.length;\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tsums += this.curves[ i ].getLength();\r\n\t\tlengths.push( sums );\r\n\r\n\t}\r\n\r\n\tthis.cacheLengths = lengths;\r\n\r\n\treturn lengths;\r\n\r\n};\r\n\r\n\r\n\r\n// Returns min and max coordinates, as well as centroid\r\n\r\nTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\r\n\tvar points = this.getPoints();\r\n\r\n\tvar maxX, maxY, maxZ;\r\n\tvar minX, minY, minZ;\r\n\r\n\tmaxX = maxY = Number.NEGATIVE_INFINITY;\r\n\tminX = minY = Number.POSITIVE_INFINITY;\r\n\r\n\tvar p, i, il, sum;\r\n\r\n\tvar v3 = points[0] instanceof THREE.Vector3;\r\n\r\n\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\r\n\tfor ( i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\tp = points[ i ];\r\n\r\n\t\tif ( p.x > maxX ) maxX = p.x;\r\n\t\telse if ( p.x < minX ) minX = p.x;\r\n\r\n\t\tif ( p.y > maxY ) maxY = p.y;\r\n\t\telse if ( p.y < minY ) minY = p.y;\r\n\r\n\t\tif ( v3 ) {\r\n\r\n\t\t\tif ( p.z > maxZ ) maxZ = p.z;\r\n\t\t\telse if ( p.z < minZ ) minZ = p.z;\r\n\r\n\t\t}\r\n\r\n\t\tsum.add( p );\r\n\r\n\t}\r\n\r\n\tvar ret = {\r\n\r\n\t\tminX: minX,\r\n\t\tminY: minY,\r\n\t\tmaxX: maxX,\r\n\t\tmaxY: maxY,\r\n\t\tcentroid: sum.divideScalar( il )\r\n\r\n\t};\r\n\r\n\tif ( v3 ) {\r\n\r\n\t\tret.maxZ = maxZ;\r\n\t\tret.minZ = minZ;\r\n\r\n\t}\r\n\r\n\treturn ret;\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tCreate Geometries Helpers\r\n **************************************************************/\r\n\r\n/// Generate geometry from path points (for Line or ParticleSystem objects)\r\n\r\nTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\n// Generate geometry from equidistance sampling along the path\r\n\r\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getSpacedPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < points.length; i ++ ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0) );\r\n\r\n\t}\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n\r\n/**************************************************************\r\n *\tBend / Wrap Helper Methods\r\n **************************************************************/\r\n\r\n// Wrap path / Bend modifiers?\r\n\r\nTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\r\n\tthis.bends.push( bendpath );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n\tvar i, il;\r\n\r\n\tif ( !bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getSpacedPoints( segments );\r\n\r\n\tvar i, il;\r\n\r\n\tif ( !bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// This returns getPoints() bend/wrapped around the contour of a path.\r\n// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\r\nTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\r\n\tvar bounds = this.getBoundingBox();\r\n\r\n\tvar i, il, p, oldX, oldY, xNorm;\r\n\r\n\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\r\n\t\tp = oldPts[ i ];\r\n\r\n\t\toldX = p.x;\r\n\t\toldY = p.y;\r\n\r\n\t\txNorm = oldX / bounds.maxX;\r\n\r\n\t\t// If using actual distance, for length > path, requires line extrusions\r\n\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\r\n\t\txNorm = path.getUtoTmapping( xNorm, oldX );\r\n\r\n\t\t// check for out of bounds?\r\n\r\n\t\tvar pathPt = path.getPoint( xNorm );\r\n\t\tvar normal = path.getTangent( xNorm );\r\n\t\tnormal.set( -normal.y, normal.x ).multiplyScalar( oldY );\r\n\r\n\t\tp.x = pathPt.x + normal.x;\r\n\t\tp.y = pathPt.y + normal.y;\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Gyroscope = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n};\r\n\r\nTHREE.Gyroscope.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.Gyroscope.prototype.updateMatrixWorld = function ( force ) {\r\n\r\n\tthis.matrixAutoUpdate && this.updateMatrix();\r\n\r\n\t// update matrixWorld\r\n\r\n\tif ( this.matrixWorldNeedsUpdate || force ) {\r\n\r\n\t\tif ( this.parent ) {\r\n\r\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\tthis.matrixWorld.decompose( this.translationWorld, this.quaternionWorld, this.scaleWorld );\r\n\t\t\tthis.matrix.decompose( this.translationObject, this.quaternionObject, this.scaleObject );\r\n\r\n\t\t\tthis.matrixWorld.compose( this.translationWorld, this.quaternionObject, this.scaleWorld );\r\n\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t}\r\n\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\tforce = true;\r\n\r\n\t}\r\n\r\n\t// update children\r\n\r\n\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Gyroscope.prototype.translationWorld = new THREE.Vector3();\r\nTHREE.Gyroscope.prototype.translationObject = new THREE.Vector3();\r\nTHREE.Gyroscope.prototype.quaternionWorld = new THREE.Quaternion();\r\nTHREE.Gyroscope.prototype.quaternionObject = new THREE.Quaternion();\r\nTHREE.Gyroscope.prototype.scaleWorld = new THREE.Vector3();\r\nTHREE.Gyroscope.prototype.scaleObject = new THREE.Vector3();\r\n\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\r\n\r\nTHREE.Path = function ( points ) {\r\n\r\n\tTHREE.CurvePath.call(this);\r\n\r\n\tthis.actions = [];\r\n\r\n\tif ( points ) {\r\n\r\n\t\tthis.fromPoints( points );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\n\r\nTHREE.PathActions = {\r\n\r\n\tMOVE_TO: 'moveTo',\r\n\tLINE_TO: 'lineTo',\r\n\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-rom spline\r\n\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n\tELLIPSE: 'ellipse'\r\n};\r\n\r\n// TODO Clean up PATH API\r\n\r\n// Create path using straight lines to connect all points\r\n// - vectors: array of Vector2\r\n\r\nTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\r\n\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\r\n\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\r\n\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\r\n\t};\r\n\r\n};\r\n\r\n// startPath() endPath()?\r\n\r\nTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n//---\r\n\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\tArray.prototype.push.apply( npts, pts );\r\n\r\n\tvar curve = new THREE.SplineCurve( npts );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\r\n};\r\n\r\n// FUTURE: Change the API or follow canvas API?\r\n\r\nTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absarc(aX + x0, aY + y0, aRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\n THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\tthis.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\r\n };\r\n\r\nTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absellipse(aX + x0, aY + y0, xRadius, yRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\n\r\nTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\tthis.curves.push( curve );\r\n\r\n\tvar lastPoint = curve.getPoint(1);\r\n\targs.push(lastPoint.x);\r\n\targs.push(lastPoint.y);\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\r\n\tif ( ! divisions ) divisions = 40;\r\n\r\n\tvar points = [];\r\n\r\n\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\r\n\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\r\n\t}\r\n\r\n\t// if ( closedPath ) {\r\n\t//\r\n\t// \tpoints.push( points[ 0 ] );\r\n\t//\r\n\t// }\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n/* Return an array of vectors based on contour of the path */\r\n\r\nTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\r\n\tif (this.useSpacedPoints) {\r\n\t\tconsole.log('tata');\r\n\t\treturn this.getSpacedPoints( divisions, closedPath );\r\n\t}\r\n\r\n\tdivisions = divisions || 12;\r\n\r\n\tvar points = [];\r\n\r\n\tvar i, il, item, action, args;\r\n\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\tlaste, j,\r\n\t\tt, tx, ty;\r\n\r\n\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\r\n\t\titem = this.actions[ i ];\r\n\r\n\t\taction = item.action;\r\n\t\targs = item.args;\r\n\r\n\t\tswitch( action ) {\r\n\r\n\t\tcase THREE.PathActions.MOVE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.LINE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 2 ];\r\n\t\t\tcpy  = args[ 3 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 4 ];\r\n\t\t\tcpy  = args[ 5 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tcpx2 = args[ 2 ];\r\n\t\t\tcpy2 = args[ 3 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.CSPLINE_THRU:\r\n\r\n\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\tvar spts = [ last ];\r\n\r\n\t\t\tvar n = divisions * args[ 0 ].length;\r\n\r\n\t\t\tspts = spts.concat( args[ 0 ] );\r\n\r\n\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\r\n\t\t\tfor ( j = 1; j <= n; j ++ ) {\r\n\r\n\t\t\t\tpoints.push( spline.getPointAt( j / n ) ) ;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ARC:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\taClockwise = !!args[ 5 ];\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t  break;\r\n\t\t  \r\n\t\tcase THREE.PathActions.ELLIPSE:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\taClockwise = !!args[ 6 ];\r\n\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t  break;\r\n\r\n\t\t} // end switch\r\n\r\n\t}\r\n\r\n\r\n\r\n\t// Normalize to remove the closing point by default.\r\n\tvar lastPoint = points[ points.length - 1];\r\n\tvar EPSILON = 0.0000000001;\r\n\tif ( Math.abs(lastPoint.x - points[ 0 ].x) < EPSILON &&\r\n\t\t\t Math.abs(lastPoint.y - points[ 0 ].y) < EPSILON)\r\n\t\tpoints.splice( points.length - 1, 1);\r\n\tif ( closedPath ) {\r\n\r\n\t\tpoints.push( points[ 0 ] );\r\n\r\n\t}\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n// Breaks path into shapes\r\n\r\nTHREE.Path.prototype.toShapes = function( isCCW ) {\r\n\r\n\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\tvar polyLen = inPolygon.length;\r\n\r\n\t\t// inPt on polygon contour => immediate success    or\r\n\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\tvar inside = false;\r\n\t\tfor( var p = polyLen - 1, q = 0; q < polyLen; p = q++ ) {\r\n\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\tif ( Math.abs(edgeDy) > EPSILON ) {\t\t\t// not parallel\r\n\t\t\t\tif ( edgeDy < 0 ) {\r\n\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = -edgeDx;\r\n\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = -edgeDy;\r\n\t\t\t\t}\r\n\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\tif ( inPt.y == edgeLowPt.y ) {\r\n\t\t\t\t\tif ( inPt.x == edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\r\n\t\t\t\t\tif ( perpEdge == 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\tinside = !inside;\t\t// true intersection left of inPt\r\n\t\t\t\t}\r\n\t\t\t} else {\t\t// parallel or colinear\r\n\t\t\t\tif ( inPt.y != edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t// egde lies on the same horizontal line as inPt\r\n\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t// continue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn\tinside;\r\n\t}\r\n\r\n\tvar i, il, item, action, args;\r\n\r\n\tvar subPaths = [], lastPath = new THREE.Path();\r\n\r\n\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\r\n\t\titem = this.actions[ i ];\r\n\r\n\t\targs = item.args;\r\n\t\taction = item.action;\r\n\r\n\t\tif ( action == THREE.PathActions.MOVE_TO ) {\r\n\r\n\t\t\tif ( lastPath.actions.length != 0 ) {\r\n\r\n\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\tlastPath = new THREE.Path();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlastPath[ action ].apply( lastPath, args );\r\n\r\n\t}\r\n\r\n\tif ( lastPath.actions.length != 0 ) {\r\n\r\n\t\tsubPaths.push( lastPath );\r\n\r\n\t}\r\n\r\n\t// console.log(subPaths);\r\n\r\n\tif ( subPaths.length == 0 ) return [];\r\n\r\n\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n\tif ( subPaths.length == 1) {\r\n\r\n\t\ttmpPath = subPaths[0];\r\n\t\ttmpShape = new THREE.Shape();\r\n\t\ttmpShape.actions = tmpPath.actions;\r\n\t\ttmpShape.curves = tmpPath.curves;\r\n\t\tshapes.push( tmpShape );\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tvar holesFirst = !THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n\tholesFirst = isCCW ? !holesFirst : holesFirst;\r\n\r\n\t// console.log(\"Holes first\", holesFirst);\r\n\t\r\n\tvar betterShapeHoles = [];\r\n\tvar newShapes = [];\r\n\tvar newShapeHoles = [];\r\n\tvar mainIdx = 0;\r\n\tvar tmpPoints;\r\n\r\n\tnewShapes[mainIdx] = undefined;\r\n\tnewShapeHoles[mainIdx] = [];\r\n\r\n\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\r\n\t\ttmpPath = subPaths[ i ];\r\n\t\ttmpPoints = tmpPath.getPoints();\r\n\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\r\n\t\tsolid = isCCW ? !solid : solid;\r\n\r\n\t\tif ( solid ) {\r\n\r\n\t\t\tif ( (! holesFirst ) && ( newShapes[mainIdx] ) )\tmainIdx++;\r\n\r\n\t\t\tnewShapes[mainIdx] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\tnewShapes[mainIdx].s.actions = tmpPath.actions;\r\n\t\t\tnewShapes[mainIdx].s.curves = tmpPath.curves;\r\n\t\t\t\r\n\t\t\tif ( holesFirst )\tmainIdx++;\r\n\t\t\tnewShapeHoles[mainIdx] = [];\r\n\r\n\t\t\t//console.log('cw', i);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnewShapeHoles[mainIdx].push( { h: tmpPath, p: tmpPoints[0] } );\r\n\r\n\t\t\t//console.log('ccw', i);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tif ( newShapes.length > 1 ) {\r\n\t\tvar ambigious = false;\r\n\t\tvar toChange = [];\r\n\r\n\t\tfor (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++ ) {\r\n\t\t\tbetterShapeHoles[sIdx] = [];\r\n\t\t}\r\n\t\tfor (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++ ) {\r\n\t\t\tvar sh = newShapes[sIdx];\r\n\t\t\tvar sho = newShapeHoles[sIdx];\r\n\t\t\tfor (var hIdx = 0; hIdx < sho.length; hIdx++ ) {\r\n\t\t\t\tvar ho = sho[hIdx];\r\n\t\t\t\tvar hole_unassigned = true;\r\n\t\t\t\tfor (var s2Idx = 0; s2Idx < newShapes.length; s2Idx++ ) {\r\n\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[s2Idx].p ) ) {\r\n\t\t\t\t\t\tif ( sIdx != s2Idx )\t\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\tbetterShapeHoles[s2Idx].push( ho );\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tambigious = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif ( hole_unassigned ) { betterShapeHoles[sIdx].push( ho ); }\r\n\t\t\t}\r\n\t\t}\r\n\t\t// console.log(\"ambigious: \", ambigious);\r\n\t\tif ( toChange.length > 0 ) {\r\n\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\tif (! ambigious)\tnewShapeHoles = betterShapeHoles;\r\n\t\t}\r\n\t}\r\n\r\n\tvar tmpHoles, j, jl;\r\n\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\t\ttmpShape = newShapes[i].s;\r\n\t\tshapes.push( tmpShape );\r\n\t\ttmpHoles = newShapeHoles[i];\r\n\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\t\t\ttmpShape.holes.push( tmpHoles[j].h );\r\n\t\t}\r\n\t}\r\n\r\n\t//console.log(\"shape\", shapes);\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\r\n\r\n// STEP 1 Create a path.\r\n// STEP 2 Turn path into shape.\r\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n// STEP 3a - Extract points from each shape, turn to vertices\r\n// STEP 3b - Triangulate each shape, add faces.\r\n\r\nTHREE.Shape = function () {\r\n\r\n\tTHREE.Path.apply( this, arguments );\r\n\tthis.holes = [];\r\n\r\n};\r\n\r\nTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\n\r\n// Convenience method to return ExtrudeGeometry\r\n\r\nTHREE.Shape.prototype.extrude = function ( options ) {\r\n\r\n\tvar extruded = new THREE.ExtrudeGeometry( this, options );\r\n\treturn extruded;\r\n\r\n};\r\n\r\n// Convenience method to return ShapeGeometry\r\n\r\nTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\r\n\tvar geometry = new THREE.ShapeGeometry( this, options );\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// Get points of holes\r\n\r\nTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n// Get points of holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n\r\n// Get points of shape and holes (keypoints based on segments parameter)\r\n\r\nTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedPoints( divisions ),\r\n\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\r\n\tif (this.useSpacedPoints) {\r\n\t\treturn this.extractAllSpacedPoints(divisions);\r\n\t}\r\n\r\n\treturn this.extractAllPoints(divisions);\r\n\r\n};\r\n\r\n//\r\n// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n//\r\n// \treturn {\r\n//\r\n// \t\tshape: this.transform( bend, divisions ),\r\n// \t\tholes: this.getPointsHoles( divisions, bend )\r\n//\r\n// \t};\r\n//\r\n// };\r\n\r\n// Get points of shape and holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedSpacedPoints( divisions ),\r\n\t\tholes: this.getSpacedPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Shape.Utils = {\r\n\r\n\ttriangulateShape: function ( contour, holes ) {\r\n\r\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\t\t\t// inOtherPt needs to be colinear to the inSegment\r\n\t\t\tif ( inSegPt1.x != inSegPt2.x ) {\r\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\r\n\t\t\tif ( Math.abs(limit) > EPSILON ) {\t\t\t// not parallel\r\n\r\n\t\t\t\tvar perpSeg2;\r\n\t\t\t\tif ( limit > 0 ) {\r\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\tif ( perpSeg2 == 0 ) {\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 == 0 ) || ( perpSeg1 == limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn  [ inSeg1Pt1 ];\r\n\t\t\t\t}\r\n\t\t\t\tif ( perpSeg2 == limit ) {\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 == 0 ) || ( perpSeg1 == limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn  [ inSeg1Pt2 ];\r\n\t\t\t\t}\r\n\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\tif ( perpSeg1 == 0 )\t\treturn  [ inSeg2Pt1 ];\r\n\t\t\t\tif ( perpSeg1 == limit )\treturn  [ inSeg2Pt2 ];\r\n\r\n\t\t\t\t// return real intersection point\r\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\r\n\t\t\t} else {\t\t// parallel or colinear\r\n\t\t\t\tif ( ( perpSeg1 != 0 ) ||\r\n\t\t\t\t\t ( seg2dy * seg1seg2dx != seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\r\n\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\tvar seg1Pt = ( (seg1dx == 0) && (seg1dy == 0) );\t// segment1 ist just a point?\r\n\t\t\t\tvar seg2Pt = ( (seg2dx == 0) && (seg2dy == 0) );\t// segment2 ist just a point?\r\n\t\t\t\t// both segments are points\r\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\t\t\t\t\tif ( (inSeg1Pt1.x != inSeg2Pt1.x) ||\r\n\t\t\t\t\t\t (inSeg1Pt1.y != inSeg2Pt1.y) )\t\treturn [];   \t// they are distinct  points\r\n\t\t\t\t\treturn  [ inSeg1Pt1 ];                 \t\t\t\t\t// they are the same point\r\n\t\t\t\t}\r\n\t\t\t\t// segment#1  is a single point\r\n\t\t\t\tif ( seg1Pt ) {\r\n\t\t\t\t\tif (! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\treturn  [ inSeg1Pt1 ];\r\n\t\t\t\t}\r\n\t\t\t\t// segment#2  is a single point\r\n\t\t\t\tif ( seg2Pt ) {\r\n\t\t\t\t\tif (! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\treturn  [ inSeg2Pt1 ];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\tif (seg1dx != 0) {\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\tif ( seg1maxVal == seg2minVal )\t{\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg2min ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\tif ( seg1minVal == seg2maxVal )\t{\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg1min ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\t\t\t// The order of legs is important\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\r\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\r\n\t\t\tif ( Math.abs(from2toAngle) > EPSILON ) {\t\t\t// angle != 180 deg.\r\n\r\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\r\n\t\t\t\tif ( from2toAngle > 0 ) {\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\t\t\t\t} else {\t\t\t\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\t\t\t\t}\r\n\t\t\t} else {\t\t\t\t\t\t\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction removeHoles( contour, holes ) {\r\n\r\n\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\tvar hole;\r\n\r\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\r\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\r\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\r\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[inShapeIdx], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[inHoleIdx] );\r\n\t\t\t\tif (! insideAngle ) {\r\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\r\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\r\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\r\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[inHoleIdx], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[inShapeIdx] );\r\n\t\t\t\tif (! insideAngle ) {\r\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\ttrue;\r\n\t\t\t}\r\n\r\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx++ ) {\r\n\t\t\t\t\tnextIdx = sIdx+1; nextIdx %= shape.length;\r\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[sIdx], shape[nextIdx], true );\r\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\tfalse;\r\n\t\t\t}\r\n\r\n\t\t\tvar indepHoles = [];\r\n\r\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx++ ) {\r\n\t\t\t\t\tchkHole = holes[indepHoles[ihIdx]];\r\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx++ ) {\r\n\t\t\t\t\t\tnextIdx = hIdx+1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[hIdx], chkHole[nextIdx], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn\tfalse;\r\n\t\t\t}\r\n\r\n\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\tshapePt, holePt,\r\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\ttmpHole1, tmpHole2;\r\n\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tindepHoles.push( h );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\twhile ( indepHoles.length > 0 ) {\r\n\t\t\t\tcounter --;\r\n\t\t\t\tif ( counter < 0 ) {\r\n\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t// which can be connected without intersections\r\n\t\t\t\tfor ( shapeIndex = 0; shapeIndex < shape.length; shapeIndex++ ) {\r\n\r\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\tholeIndex\t= -1;\r\n\r\n\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\t\t\t\t\t\tholeIdx = indepHoles[h];\r\n\r\n\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\tif ( failedCuts[cutKey] !== undefined )\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\thole = holes[holeIdx];\r\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\tif (! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\r\n\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\tindepHoles.splice(h,1);\r\n\r\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex+1 );\r\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex+1 );\r\n\r\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\r\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t\t\tfailedCuts[cutKey] = true;\t\t\t// remember failure\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\t\t}\r\n\r\n\r\n\t\tvar i, il, f, face,\r\n\t\t\tkey, index,\r\n\t\t\tallPointsMap = {};\r\n\r\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\r\n\t\tvar allpoints = contour.concat();\r\n\r\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tArray.prototype.push.apply( allpoints, holes[h] );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\r\n\t\t// prepare all points map\r\n\r\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\r\n\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\r\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\r\n\t\t\t\tconsole.log( \"Duplicate point\", key );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tallPointsMap[ key ] = i;\r\n\r\n\t\t}\r\n\r\n\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\r\n\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\r\n\t\t// check all face vertices against all points map\r\n\r\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = triangles[ i ];\r\n\r\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\r\n\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\r\n\t\t\t\tindex = allPointsMap[ key ];\r\n\r\n\t\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\t\tface[ f ] = index;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn triangles.concat();\r\n\r\n\t},\r\n\r\n\tisClockWise: function ( pts ) {\r\n\r\n\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\r\n\t},\r\n\r\n\t// Bezier Curves formulas obtained from\r\n\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\r\n\t// Quad Bezier Functions\r\n\r\n\tb2p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * p;\r\n\r\n\t},\r\n\r\n\tb2p1: function ( t, p ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n\t},\r\n\r\n\tb2p2: function ( t, p ) {\r\n\r\n\t\treturn t * t * p;\r\n\r\n\t},\r\n\r\n\tb2: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\r\n\t},\r\n\r\n\t// Cubic Bezier Functions\r\n\r\n\tb3p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * k * p;\r\n\r\n\t},\r\n\r\n\tb3p1: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * k * t * p;\r\n\r\n\t},\r\n\r\n\tb3p2: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3p3: function ( t, p ) {\r\n\r\n\t\treturn t * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\r\n\r\nTHREE.LineCurve = function ( v1, v2 ) {\r\n\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\r\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar point = this.v2.clone().sub(this.v1);\r\n\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\treturn point;\r\n\r\n};\r\n\r\n// Line curve is linear, so we can overwrite default getPointAt\r\n\r\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\r\n\treturn this.getPoint( u );\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangent = this.v2.clone().sub(this.v1);\r\n\r\n\treturn tangent.normalize();\r\n\r\n};\r\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tty = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\treturn new THREE.Vector2( tx, ty );\r\n\r\n};\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tty = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\t// returns unit vector\r\n\r\n\tvar tangent = new THREE.Vector2( tx, ty );\r\n\ttangent.normalize();\r\n\r\n\treturn tangent;\r\n\r\n};\r\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\tthis.v3 = v3;\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\r\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\treturn new THREE.Vector2( tx, ty );\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\tvar tangent = new THREE.Vector2( tx, ty );\r\n\ttangent.normalize();\r\n\r\n\treturn tangent;\r\n\r\n};\r\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\r\n\r\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\r\n\tthis.points = (points == undefined) ? [] : points;\r\n\r\n};\r\n\r\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\r\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar v = new THREE.Vector2();\r\n\tvar c = [];\r\n\tvar points = this.points, point, intPoint, weight;\r\n\tpoint = ( points.length - 1 ) * t;\r\n\r\n\tintPoint = Math.floor( point );\r\n\tweight = point - intPoint;\r\n\r\n\tc[ 0 ] = intPoint == 0 ? intPoint : intPoint - 1;\r\n\tc[ 1 ] = intPoint;\r\n\tc[ 2 ] = intPoint  > points.length - 2 ? points.length -1 : intPoint + 1;\r\n\tc[ 3 ] = intPoint  > points.length - 3 ? points.length -1 : intPoint + 2;\r\n\r\n\tv.x = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].x, points[ c[ 1 ] ].x, points[ c[ 2 ] ].x, points[ c[ 3 ] ].x, weight );\r\n\tv.y = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].y, points[ c[ 1 ] ].y, points[ c[ 2 ] ].y, points[ c[ 3 ] ].y, weight );\r\n\r\n\treturn v;\r\n\r\n};\r\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\r\n\r\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tthis.aX = aX;\r\n\tthis.aY = aY;\r\n\r\n\tthis.xRadius = xRadius;\r\n\tthis.yRadius = yRadius;\r\n\r\n\tthis.aStartAngle = aStartAngle;\r\n\tthis.aEndAngle = aEndAngle;\r\n\r\n\tthis.aClockwise = aClockwise;\r\n\r\n};\r\n\r\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\r\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar angle;\r\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\r\n\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\r\n\tif ( this.aClockwise === true ) {\r\n\r\n\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\r\n\t} else {\r\n\r\n\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\r\n\t}\r\n\r\n\tvar tx = this.aX + this.xRadius * Math.cos( angle );\r\n\tvar ty = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\treturn new THREE.Vector2( tx, ty );\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\r\n\r\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n};\r\n\r\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\r\n\r\nTHREE.LineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v1, v2 ) {\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar r = new THREE.Vector3();\r\n\r\n\r\n\t\tr.subVectors( this.v2, this.v1 ); // diff\r\n\t\tr.multiplyScalar( t );\r\n\t\tr.add( this.v1 );\r\n\r\n\t\treturn r;\r\n\r\n\t}\r\n\r\n);\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar tx, ty, tz;\r\n\r\n\t\ttx = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tty = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\ttz = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\r\n\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\r\n\t}\r\n\r\n);\r\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2, v3 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar tx, ty, tz;\r\n\r\n\t\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\ttz = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\r\n\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\r\n\t}\r\n\r\n);\r\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.SplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */) {\r\n\r\n\t\tthis.points = (points == undefined) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar v = new THREE.Vector3();\r\n\t\tvar c = [];\r\n\t\tvar points = this.points, point, intPoint, weight;\r\n\t\tpoint = ( points.length - 1 ) * t;\r\n\r\n\t\tintPoint = Math.floor( point );\r\n\t\tweight = point - intPoint;\r\n\r\n\t\tc[ 0 ] = intPoint == 0 ? intPoint : intPoint - 1;\r\n\t\tc[ 1 ] = intPoint;\r\n\t\tc[ 2 ] = intPoint  > points.length - 2 ? points.length - 1 : intPoint + 1;\r\n\t\tc[ 3 ] = intPoint  > points.length - 3 ? points.length - 1 : intPoint + 2;\r\n\r\n\t\tvar pt0 = points[ c[0] ],\r\n\t\t\tpt1 = points[ c[1] ],\r\n\t\t\tpt2 = points[ c[2] ],\r\n\t\t\tpt3 = points[ c[3] ];\r\n\r\n\t\tv.x = THREE.Curve.Utils.interpolate(pt0.x, pt1.x, pt2.x, pt3.x, weight);\r\n\t\tv.y = THREE.Curve.Utils.interpolate(pt0.y, pt1.y, pt2.y, pt3.y, weight);\r\n\t\tv.z = THREE.Curve.Utils.interpolate(pt0.z, pt1.z, pt2.z, pt3.z, weight);\r\n\r\n\t\treturn v;\r\n\r\n\t}\r\n\r\n);\r\n\r\n\r\n// THREE.SplineCurve3.prototype.getTangent = function(t) {\r\n// \t\tvar v = new THREE.Vector3();\r\n// \t\tvar c = [];\r\n// \t\tvar points = this.points, point, intPoint, weight;\r\n// \t\tpoint = ( points.length - 1 ) * t;\r\n\r\n// \t\tintPoint = Math.floor( point );\r\n// \t\tweight = point - intPoint;\r\n\r\n// \t\tc[ 0 ] = intPoint == 0 ? intPoint : intPoint - 1;\r\n// \t\tc[ 1 ] = intPoint;\r\n// \t\tc[ 2 ] = intPoint  > points.length - 2 ? points.length - 1 : intPoint + 1;\r\n// \t\tc[ 3 ] = intPoint  > points.length - 3 ? points.length - 1 : intPoint + 2;\r\n\r\n// \t\tvar pt0 = points[ c[0] ],\r\n// \t\t\tpt1 = points[ c[1] ],\r\n// \t\t\tpt2 = points[ c[2] ],\r\n// \t\t\tpt3 = points[ c[3] ];\r\n\r\n// \t// t = weight;\r\n// \tv.x = THREE.Curve.Utils.tangentSpline( t, pt0.x, pt1.x, pt2.x, pt3.x );\r\n// \tv.y = THREE.Curve.Utils.tangentSpline( t, pt0.y, pt1.y, pt2.y, pt3.y );\r\n// \tv.z = THREE.Curve.Utils.tangentSpline( t, pt0.z, pt1.z, pt2.z, pt3.z );\r\n\r\n// \treturn v;\r\n\r\n// }\r\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */) {\r\n\r\n\t\tthis.points = (points == undefined) ? [] : points;\r\n\r\n\t},\r\n\r\n    function ( t ) {\r\n\r\n        var v = new THREE.Vector3();\r\n        var c = [];\r\n        var points = this.points, point, intPoint, weight;\r\n        point = ( points.length - 0 ) * t;\r\n            // This needs to be from 0-length +1\r\n\r\n        intPoint = Math.floor( point );\r\n        weight = point - intPoint;\r\n\r\n        intPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n        c[ 0 ] = ( intPoint - 1 ) % points.length;\r\n        c[ 1 ] = ( intPoint ) % points.length;\r\n        c[ 2 ] = ( intPoint + 1 ) % points.length;\r\n        c[ 3 ] = ( intPoint + 2 ) % points.length;\r\n\r\n        v.x = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].x, points[ c[ 1 ] ].x, points[ c[ 2 ] ].x, points[ c[ 3 ] ].x, weight );\r\n        v.y = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].y, points[ c[ 1 ] ].y, points[ c[ 2 ] ].y, points[ c[ 3 ] ].y, weight );\r\n        v.z = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].z, points[ c[ 1 ] ].z, points[ c[ 2 ] ].z, points[ c[ 3 ] ].z, weight );\r\n\r\n        return v;\r\n\r\n    }\r\n\r\n);\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\nTHREE.AnimationHandler = (function() {\r\n\r\n\tvar playing = [];\r\n\tvar library = {};\r\n\tvar that    = {};\r\n\r\n\r\n\t//--- update ---\r\n\r\n\tthat.update = function( deltaTimeMS ) {\r\n\r\n\t\tfor( var i = 0; i < playing.length; i ++ )\r\n\t\t\tplaying[ i ].update( deltaTimeMS );\r\n\r\n\t};\r\n\r\n\r\n\t//--- add ---\r\n\r\n\tthat.addToUpdate = function( animation ) {\r\n\r\n\t\tif ( playing.indexOf( animation ) === -1 )\r\n\t\t\tplaying.push( animation );\r\n\r\n\t};\r\n\r\n\r\n\t//--- remove ---\r\n\r\n\tthat.removeFromUpdate = function( animation ) {\r\n\r\n\t\tvar index = playing.indexOf( animation );\r\n\r\n\t\tif( index !== -1 )\r\n\t\t\tplaying.splice( index, 1 );\r\n\r\n\t};\r\n\r\n\r\n\t//--- add ---\r\n\r\n\tthat.add = function( data ) {\r\n\r\n\t\tif ( library[ data.name ] !== undefined )\r\n\t\t\tTHREE.onwarning( \"THREE.AnimationHandler.add: Warning! \" + data.name + \" already exists in library. Overwriting.\" );\r\n\r\n\t\tlibrary[ data.name ] = data;\r\n\t\tinitData( data );\r\n\r\n\t};\r\n\r\n\r\n\t//--- get ---\r\n\r\n\tthat.get = function( name ) {\r\n\r\n\t\tif ( typeof name === \"string\" ) {\r\n\r\n\t\t\tif ( library[ name ] ) {\r\n\r\n\t\t\t\treturn library[ name ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tTHREE.onwarning( \"THREE.AnimationHandler.get: Couldn't find animation \" + name );\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// todo: add simple tween library\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//--- parse ---\r\n\r\n\tthat.parse = function( root ) {\r\n\r\n\t\t// setup hierarchy\r\n\r\n\t\tvar hierarchy = [];\r\n\r\n\t\tif ( root instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\tfor( var b = 0; b < root.bones.length; b++ ) {\r\n\r\n\t\t\t\thierarchy.push( root.bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tparseRecurseHierarchy( root, hierarchy );\r\n\r\n\t\t}\r\n\r\n\t\treturn hierarchy;\r\n\r\n\t};\r\n\r\n\tvar parseRecurseHierarchy = function( root, hierarchy ) {\r\n\r\n\t\thierarchy.push( root );\r\n\r\n\t\tfor( var c = 0; c < root.children.length; c++ )\r\n\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\r\n\t}\r\n\r\n\r\n\t//--- init data ---\r\n\r\n\tvar initData = function( data ) {\r\n\r\n\t\tif( data.initialized === true )\r\n\t\t\treturn;\r\n\r\n\r\n\t\t// loop through all keys\r\n\r\n\t\tfor( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tfor( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t// remove minus times\r\n\r\n\t\t\t\tif( data.hierarchy[ h ].keys[ k ].time < 0 )\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].time = 0;\r\n\r\n\r\n\t\t\t\t// create quaternions\r\n\r\n\t\t\t\tif( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n\t\t\t\t !( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\r\n\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion( quat[0], quat[1], quat[2], quat[3] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// prepare morph target keys\r\n\r\n\t\t\tif( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\r\n\t\t\t\t// get all used\r\n\r\n\t\t\t\tvar usedMorphTargets = {};\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = -1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\r\n\r\n\t\t\t\t// set all used on all frames\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tvar influences = {};\r\n\r\n\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\r\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\r\n\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// remove all keys that are on the same time\r\n\r\n\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\r\n\t\t\t\t\tk --;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// set index\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// done\r\n\r\n\t\tdata.initialized = true;\r\n\r\n\t};\r\n\r\n\r\n\t// interpolation types\r\n\r\n\tthat.LINEAR = 0;\r\n\tthat.CATMULLROM = 1;\r\n\tthat.CATMULLROM_FORWARD = 2;\r\n\r\n\treturn that;\r\n\r\n}());\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Animation = function ( root, name ) {\r\n\r\n\tthis.root = root;\r\n\tthis.data = THREE.AnimationHandler.get( name );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 1;\r\n\r\n\tthis.isPlaying = false;\r\n\tthis.isPaused = true;\r\n\tthis.loop = true;\r\n\r\n\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\r\n\r\n};\r\n\r\nTHREE.Animation.prototype.play = function ( startTime ) {\r\n\r\n\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\r\n\tif ( this.isPlaying === false ) {\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t\tthis.reset();\r\n\t\tthis.update( 0 );\r\n\r\n\t}\r\n\r\n\tthis.isPaused = false;\r\n\r\n\tTHREE.AnimationHandler.addToUpdate( this );\r\n\r\n};\r\n\r\n\r\nTHREE.Animation.prototype.pause = function() {\r\n\r\n\tif ( this.isPaused === true ) {\r\n\r\n\t\tTHREE.AnimationHandler.addToUpdate( this );\r\n\r\n\t} else {\r\n\r\n\t\tTHREE.AnimationHandler.removeFromUpdate( this );\r\n\r\n\t}\r\n\r\n\tthis.isPaused = !this.isPaused;\r\n\r\n};\r\n\r\n\r\nTHREE.Animation.prototype.stop = function() {\r\n\r\n\tthis.isPlaying = false;\r\n\tthis.isPaused  = false;\r\n\tTHREE.AnimationHandler.removeFromUpdate( this );\r\n\r\n};\r\n\r\nTHREE.Animation.prototype.reset = function () {\r\n\r\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\tvar object = this.hierarchy[ h ];\r\n\r\n\t\tobject.matrixAutoUpdate = true;\r\n\r\n\t\tif ( object.animationCache === undefined ) {\r\n\r\n\t\t\tobject.animationCache = {};\r\n\t\t\tobject.animationCache.prevKey = { pos: 0, rot: 0, scl: 0 };\r\n\t\t\tobject.animationCache.nextKey = { pos: 0, rot: 0, scl: 0 };\r\n\t\t\tobject.animationCache.originalMatrix = object instanceof THREE.Bone ? object.skinMatrix : object.matrix;\r\n\r\n\t\t}\r\n\r\n\t\tvar prevKey = object.animationCache.prevKey;\r\n\t\tvar nextKey = object.animationCache.nextKey;\r\n\r\n\t\tprevKey.pos = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\tprevKey.rot = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\tprevKey.scl = this.data.hierarchy[ h ].keys[ 0 ];\r\n\r\n\t\tnextKey.pos = this.getNextKeyWith( \"pos\", h, 1 );\r\n\t\tnextKey.rot = this.getNextKeyWith( \"rot\", h, 1 );\r\n\t\tnextKey.scl = this.getNextKeyWith( \"scl\", h, 1 );\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\nTHREE.Animation.prototype.update = (function(){\r\n\r\n\tvar points = [];\r\n\tvar target = new THREE.Vector3();\r\n\t\r\n\t// Catmull-Rom spline\r\n\r\n\tvar interpolateCatmullRom = function ( points, scale ) {\r\n\r\n\t\tvar c = [], v3 = [],\r\n\t\tpoint, intPoint, weight, w2, w3,\r\n\t\tpa, pb, pc, pd;\r\n\t\r\n\t\tpoint = ( points.length - 1 ) * scale;\r\n\t\tintPoint = Math.floor( point );\r\n\t\tweight = point - intPoint;\r\n\t\r\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\tc[ 1 ] = intPoint;\r\n\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\t\r\n\t\tpa = points[ c[ 0 ] ];\r\n\t\tpb = points[ c[ 1 ] ];\r\n\t\tpc = points[ c[ 2 ] ];\r\n\t\tpd = points[ c[ 3 ] ];\r\n\t\r\n\t\tw2 = weight * weight;\r\n\t\tw3 = weight * w2;\r\n\t\r\n\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\t\r\n\t\treturn v3;\r\n\r\n\t};\r\n\r\n\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\t\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\t\r\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t};\r\n\t\r\n\treturn function ( delta ) {\r\n\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\tthis.currentTime += delta * this.timeScale;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar vector;\r\n\t\tvar types = [ \"pos\", \"rot\", \"scl\" ];\r\n\t\r\n\t\tvar duration = this.data.length;\r\n\t\r\n\t\tif ( this.loop === true && this.currentTime > duration ) {\r\n\t\r\n\t\t\tthis.currentTime %= duration;\r\n\t\t\tthis.reset();\r\n\t\r\n\t\t} else if ( this.loop === false && this.currentTime > duration ) {\r\n\t\r\n\t\t\tthis.stop();\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\t\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar animationCache = object.animationCache;\r\n\t\r\n\t\t\t// loop through pos/rot/scl\r\n\t\r\n\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\t\r\n\t\t\t\t// get keys\r\n\t\r\n\t\t\t\tvar type    = types[ t ];\r\n\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\r\n\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\r\n\t\r\n\t\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\t\r\n\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\r\n\t\r\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.matrixAutoUpdate = true;\r\n\t\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n\t\r\n\t\t\t\tvar prevXYZ = prevKey[ type ];\r\n\t\t\t\tvar nextXYZ = nextKey[ type ];\r\n\t\r\n\t\t\t\tif ( scale < 0 ) scale = 0;\r\n\t\t\t\tif ( scale > 1 ) scale = 1;\r\n\t\r\n\t\t\t\t// interpolate\r\n\t\r\n\t\t\t\tif ( type === \"pos\" ) {\r\n\t\r\n\t\t\t\t\tvector = object.position;\r\n\t\r\n\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\t\r\n\t\t\t\t\t\tvector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\tvector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\tvector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\t\r\n\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\r\n\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\r\n\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\t\r\n\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\r\n\t\r\n\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\r\n\t\r\n\t\t\t\t\t\tvector.x = currentPoint[ 0 ];\r\n\t\t\t\t\t\tvector.y = currentPoint[ 1 ];\r\n\t\t\t\t\t\tvector.z = currentPoint[ 2 ];\r\n\t\r\n\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\r\n\t\r\n\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n\t\t\t\t\t\t\ttarget.sub( vector );\r\n\t\t\t\t\t\t\ttarget.y = 0;\r\n\t\t\t\t\t\t\ttarget.normalize();\r\n\t\r\n\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\r\n\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( type === \"rot\" ) {\r\n\t\r\n\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, object.quaternion, scale );\r\n\t\r\n\t\t\t\t} else if ( type === \"scl\" ) {\r\n\t\r\n\t\t\t\t\tvector = object.scale;\r\n\t\r\n\t\t\t\t\tvector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\tvector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\tvector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\r\n\t};\r\n\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n// Get next key with\r\n\r\nTHREE.Animation.prototype.getNextKeyWith = function ( type, h, key ) {\r\n\r\n\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\r\n\r\n\t} else {\r\n\r\n\t\tkey = key % keys.length;\r\n\r\n\t}\r\n\r\n\tfor ( ; key < keys.length; key++ ) {\r\n\r\n\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\treturn keys[ key ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn this.data.hierarchy[ h ].keys[ 0 ];\r\n\r\n};\r\n\r\n// Get previous key with\r\n\r\nTHREE.Animation.prototype.getPrevKeyWith = function ( type, h, key ) {\r\n\r\n\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\tkey = key > 0 ? key : 0;\r\n\r\n\t} else {\r\n\r\n\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t}\r\n\r\n\r\n\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\treturn keys[ key ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\r\n};\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author khang duong\r\n * @author erik kitson\r\n */\r\n\r\nTHREE.KeyFrameAnimation = function ( root, data ) {\r\n\r\n\tthis.root = root;\r\n\tthis.data = THREE.AnimationHandler.get( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 0.001;\r\n\tthis.isPlaying = false;\r\n\tthis.isPaused = true;\r\n\tthis.loop = true;\r\n\r\n\t// initialize to first keyframes\r\n\r\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[h].keys,\r\n\t\t\tsids = this.data.hierarchy[h].sids,\r\n\t\t\tobj = this.hierarchy[h];\r\n\r\n\t\tif ( keys.length && sids ) {\r\n\r\n\t\t\tfor ( var s = 0; s < sids.length; s++ ) {\r\n\r\n\t\t\t\tvar sid = sids[ s ],\r\n\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\r\n\r\n\t\t\t\tif ( next ) {\r\n\r\n\t\t\t\t\tnext.apply( sid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobj.matrixAutoUpdate = false;\r\n\t\t\tthis.data.hierarchy[h].node.updateMatrix();\r\n\t\t\tobj.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// Play\r\n\r\nTHREE.KeyFrameAnimation.prototype.play = function ( startTime ) {\r\n\r\n\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\r\n\tif ( this.isPlaying === false ) {\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t\t// reset key cache\r\n\r\n\t\tvar h, hl = this.hierarchy.length,\r\n\t\t\tobject,\r\n\t\t\tnode;\r\n\r\n\t\tfor ( h = 0; h < hl; h++ ) {\r\n\r\n\t\t\tobject = this.hierarchy[ h ];\r\n\t\t\tnode = this.data.hierarchy[ h ];\r\n\r\n\t\t\tif ( node.animationCache === undefined ) {\r\n\r\n\t\t\t\tnode.animationCache = {};\r\n\t\t\t\tnode.animationCache.prevKey = null;\r\n\t\t\t\tnode.animationCache.nextKey = null;\r\n\t\t\t\tnode.animationCache.originalMatrix = object instanceof THREE.Bone ? object.skinMatrix : object.matrix;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar keys = this.data.hierarchy[h].keys;\r\n\r\n\t\t\tif (keys.length) {\r\n\r\n\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\r\n\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\r\n\r\n\t\t\t\tthis.startTime = Math.min( keys[0].time, this.startTime );\r\n\t\t\t\tthis.endTime = Math.max( keys[keys.length - 1].time, this.endTime );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.update( 0 );\r\n\r\n\t}\r\n\r\n\tthis.isPaused = false;\r\n\r\n\tTHREE.AnimationHandler.addToUpdate( this );\r\n\r\n};\r\n\r\n\r\n\r\n// Pause\r\n\r\nTHREE.KeyFrameAnimation.prototype.pause = function() {\r\n\r\n\tif( this.isPaused ) {\r\n\r\n\t\tTHREE.AnimationHandler.addToUpdate( this );\r\n\r\n\t} else {\r\n\r\n\t\tTHREE.AnimationHandler.removeFromUpdate( this );\r\n\r\n\t}\r\n\r\n\tthis.isPaused = !this.isPaused;\r\n\r\n};\r\n\r\n\r\n// Stop\r\n\r\nTHREE.KeyFrameAnimation.prototype.stop = function() {\r\n\r\n\tthis.isPlaying = false;\r\n\tthis.isPaused  = false;\r\n\r\n\tTHREE.AnimationHandler.removeFromUpdate( this );\r\n\r\n\t// reset JIT matrix and remove cache\r\n\r\n\tfor ( var h = 0; h < this.data.hierarchy.length; h++ ) {\r\n        \r\n\t\tvar obj = this.hierarchy[ h ];\r\n\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\tif ( node.animationCache !== undefined ) {\r\n\r\n\t\t\tvar original = node.animationCache.originalMatrix;\r\n\r\n\t\t\tif( obj instanceof THREE.Bone ) {\r\n\r\n\t\t\t\toriginal.copy( obj.skinMatrix );\r\n\t\t\t\tobj.skinMatrix = original;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\toriginal.copy( obj.matrix );\r\n\t\t\t\tobj.matrix = original;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdelete node.animationCache;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Update\r\n\r\nTHREE.KeyFrameAnimation.prototype.update = function ( delta ) {\r\n\r\n\tif ( this.isPlaying === false ) return;\r\n\r\n\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t//\r\n\r\n\tvar duration = this.data.length;\r\n\r\n\tif ( this.loop === true && this.currentTime > duration ) {\r\n\r\n\t\tthis.currentTime %= duration;\r\n\r\n\t}\r\n\r\n\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\r\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h++ ) {\r\n\r\n\t\tvar object = this.hierarchy[ h ];\r\n\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\tvar keys = node.keys,\r\n\t\t\tanimationCache = node.animationCache;\r\n\r\n\r\n\t\tif ( keys.length ) {\r\n\r\n\t\t\tvar prevKey = animationCache.prevKey;\r\n\t\t\tvar nextKey = animationCache.nextKey;\r\n\r\n\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\r\n\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tanimationCache.prevKey = prevKey;\r\n\t\t\t\tanimationCache.nextKey = nextKey;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( nextKey.time >= this.currentTime ) {\r\n\r\n\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// Get next key with\r\n\r\nTHREE.KeyFrameAnimation.prototype.getNextKeyWith = function( sid, h, key ) {\r\n\r\n\tvar keys = this.data.hierarchy[ h ].keys;\r\n\tkey = key % keys.length;\r\n\r\n\tfor ( ; key < keys.length; key++ ) {\r\n\r\n\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\treturn keys[ key ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn keys[ 0 ];\r\n\r\n};\r\n\r\n// Get previous key with\r\n\r\nTHREE.KeyFrameAnimation.prototype.getPrevKeyWith = function( sid, h, key ) {\r\n\r\n\tvar keys = this.data.hierarchy[ h ].keys;\r\n\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\tfor ( ; key >= 0; key-- ) {\r\n\r\n\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\treturn keys[ key ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn keys[ keys.length - 1 ];\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com\r\n */\r\n\r\nTHREE.MorphAnimation = function ( mesh ) {\r\n\r\n\tthis.mesh = mesh;\r\n\tthis.frames = mesh.morphTargetInfluences.length;\r\n\tthis.currentTime = 0;\r\n\tthis.duration = 1000;\r\n\tthis.loop = true;\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimation.prototype = {\r\n\r\n\tplay: function () {\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t},\r\n\r\n\tpause: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\t},\r\n\r\n\tupdate: ( function () {\r\n\r\n\t\tvar lastFrame = 0;\r\n\t\tvar currentFrame = 0;\r\n\r\n\t\treturn function ( delta ) {\r\n\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\t\tthis.currentTime += delta;\r\n\r\n\t\t\tif ( this.loop === true && this.currentTime > this.duration ) {\r\n\r\n\t\t\t\tthis.currentTime %= this.duration;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\r\n\r\n\t\t\tvar interpolation = this.duration / this.frames;\r\n\t\t\tvar frame = Math.floor( this.currentTime / interpolation );\r\n\r\n\t\t\tif ( frame != currentFrame ) {\r\n\r\n\t\t\t\tthis.mesh.morphTargetInfluences[ lastFrame ] = 0;\r\n\t\t\t\tthis.mesh.morphTargetInfluences[ currentFrame ] = 1;\r\n\t\t\t\tthis.mesh.morphTargetInfluences[ frame ] = 0;\r\n\r\n\t\t\t\tlastFrame = currentFrame;\r\n\t\t\t\tcurrentFrame = frame;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.mesh.morphTargetInfluences[ frame ] = ( this.currentTime % interpolation ) / interpolation;\r\n\t\t\tthis.mesh.morphTargetInfluences[ lastFrame ] = 1 - this.mesh.morphTargetInfluences[ frame ];\r\n\r\n\t\t}\r\n\r\n\t} )()\r\n\r\n};\r\n\r\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\tthis.className = \"CubeCamera\";\r\n\r\n\tvar fov = 90, aspect = 1;\r\n\r\n\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPX.up.set( 0, -1, 0 );\r\n\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\tthis.add( cameraPX );\r\n\r\n\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNX.up.set( 0, -1, 0 );\r\n\tcameraNX.lookAt( new THREE.Vector3( -1, 0, 0 ) );\r\n\tthis.add( cameraNX );\r\n\r\n\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPY.up.set( 0, 0, 1 );\r\n\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\tthis.add( cameraPY );\r\n\r\n\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNY.up.set( 0, 0, -1 );\r\n\tcameraNY.lookAt( new THREE.Vector3( 0, -1, 0 ) );\r\n\tthis.add( cameraNY );\r\n\r\n\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPZ.up.set( 0, -1, 0 );\r\n\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\tthis.add( cameraPZ );\r\n\r\n\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNZ.up.set( 0, -1, 0 );\r\n\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, -1 ) );\r\n\tthis.add( cameraNZ );\r\n\r\n\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\r\n\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\r\n\t\tvar renderTarget = this.renderTarget;\r\n\t\tvar generateMipmaps = renderTarget.generateMipmaps;\r\n\r\n\t\trenderTarget.generateMipmaps = false;\r\n\r\n\t\trenderTarget.activeCubeFace = 0;\r\n\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 1;\r\n\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 2;\r\n\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 3;\r\n\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 4;\r\n\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\r\n\t\trenderTarget.generateMipmaps = generateMipmaps;\r\n\r\n\t\trenderTarget.activeCubeFace = 5;\r\n\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\n/**\r\n *\t@author zz85 / http://twitter.com/blurspline / http://www.lab4games.net/zz85/blog\r\n *\r\n *\tA general perpose camera, for setting FOV, Lens Focal Length,\r\n *\t\tand switching between perspective and orthographic views easily.\r\n *\t\tUse this only if you do not wish to manage\r\n *\t\tboth a Orthographic and Perspective Camera\r\n *\r\n */\r\n\r\n\r\nTHREE.CombinedCamera = function ( width, height, fov, near, far, orthoNear, orthoFar ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\tthis.className = \"CombinedCamera\";\r\n\r\n\tthis.fov = fov;\r\n\r\n\tthis.left = -width / 2;\r\n\tthis.right = width / 2\r\n\tthis.top = height / 2;\r\n\tthis.bottom = -height / 2;\r\n\r\n\t// We could also handle the projectionMatrix internally, but just wanted to test nested camera objects\r\n\r\n\tthis.cameraO = new THREE.OrthographicCamera( width / - 2, width / 2, height / 2, height / - 2, \torthoNear, orthoFar );\r\n\tthis.cameraP = new THREE.PerspectiveCamera( fov, width / height, near, far );\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.toPerspective();\r\n\r\n\tvar aspect = width/height;\r\n\r\n};\r\n\r\nTHREE.CombinedCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\r\nTHREE.CombinedCamera.prototype.toPerspective = function () {\r\n\r\n\t// Switches to the Perspective Camera\r\n\r\n\tthis.near = this.cameraP.near;\r\n\tthis.far = this.cameraP.far;\r\n\r\n\tthis.cameraP.fov =  this.fov / this.zoom ;\r\n\r\n\tthis.cameraP.updateProjectionMatrix();\r\n\r\n\tthis.projectionMatrix = this.cameraP.projectionMatrix;\r\n\r\n\tthis.inPerspectiveMode = true;\r\n\tthis.inOrthographicMode = false;\r\n\r\n};\r\n\r\nTHREE.CombinedCamera.prototype.toOrthographic = function () {\r\n\r\n\t// Switches to the Orthographic camera estimating viewport from Perspective\r\n\r\n\tvar fov = this.fov;\r\n\tvar aspect = this.cameraP.aspect;\r\n\tvar near = this.cameraP.near;\r\n\tvar far = this.cameraP.far;\r\n\r\n\t// The size that we set is the mid plane of the viewing frustum\r\n\r\n\tvar hyperfocus = ( near + far ) / 2;\r\n\r\n\tvar halfHeight = Math.tan( fov / 2 ) * hyperfocus;\r\n\tvar planeHeight = 2 * halfHeight;\r\n\tvar planeWidth = planeHeight * aspect;\r\n\tvar halfWidth = planeWidth / 2;\r\n\r\n\thalfHeight /= this.zoom;\r\n\thalfWidth /= this.zoom;\r\n\r\n\tthis.cameraO.left = -halfWidth;\r\n\tthis.cameraO.right = halfWidth;\r\n\tthis.cameraO.top = halfHeight;\r\n\tthis.cameraO.bottom = -halfHeight;\r\n\r\n\t// this.cameraO.left = -farHalfWidth;\r\n\t// this.cameraO.right = farHalfWidth;\r\n\t// this.cameraO.top = farHalfHeight;\r\n\t// this.cameraO.bottom = -farHalfHeight;\r\n\r\n\t// this.cameraO.left = this.left / this.zoom;\r\n\t// this.cameraO.right = this.right / this.zoom;\r\n\t// this.cameraO.top = this.top / this.zoom;\r\n\t// this.cameraO.bottom = this.bottom / this.zoom;\r\n\r\n\tthis.cameraO.updateProjectionMatrix();\r\n\r\n\tthis.near = this.cameraO.near;\r\n\tthis.far = this.cameraO.far;\r\n\tthis.projectionMatrix = this.cameraO.projectionMatrix;\r\n\r\n\tthis.inPerspectiveMode = false;\r\n\tthis.inOrthographicMode = true;\r\n\r\n};\r\n\r\n\r\nTHREE.CombinedCamera.prototype.setSize = function( width, height ) {\r\n\r\n\tthis.cameraP.aspect = width / height;\r\n\tthis.left = -width / 2;\r\n\tthis.right = width / 2\r\n\tthis.top = height / 2;\r\n\tthis.bottom = -height / 2;\r\n\r\n};\r\n\r\n\r\nTHREE.CombinedCamera.prototype.setFov = function( fov ) {\r\n\r\n\tthis.fov = fov;\r\n\r\n\tif ( this.inPerspectiveMode ) {\r\n\r\n\t\tthis.toPerspective();\r\n\r\n\t} else {\r\n\r\n\t\tthis.toOrthographic();\r\n\r\n\t}\r\n\r\n};\r\n\r\n// For mantaining similar API with PerspectiveCamera\r\n\r\nTHREE.CombinedCamera.prototype.updateProjectionMatrix = function() {\r\n\r\n\tif ( this.inPerspectiveMode ) {\r\n\r\n\t\tthis.toPerspective();\r\n\r\n\t} else {\r\n\r\n\t\tthis.toPerspective();\r\n\t\tthis.toOrthographic();\r\n\r\n\t}\r\n\r\n};\r\n\r\n/*\r\n* Uses Focal Length (in mm) to estimate and set FOV\r\n* 35mm (fullframe) camera is used if frame size is not specified;\r\n* Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n*/\r\nTHREE.CombinedCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\r\n\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\r\n\tvar fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\r\n\tthis.setFov( fov );\r\n\r\n\treturn fov;\r\n};\r\n\r\n\r\nTHREE.CombinedCamera.prototype.setZoom = function( zoom ) {\r\n\r\n\tthis.zoom = zoom;\r\n\r\n\tif ( this.inPerspectiveMode ) {\r\n\r\n\t\tthis.toPerspective();\r\n\r\n\t} else {\r\n\r\n\t\tthis.toOrthographic();\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.CombinedCamera.prototype.toFrontView = function() {\r\n\r\n\tthis.rotation.x = 0;\r\n\tthis.rotation.y = 0;\r\n\tthis.rotation.z = 0;\r\n\r\n\t// should we be modifing the matrix instead?\r\n\r\n\tthis.rotationAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.CombinedCamera.prototype.toBackView = function() {\r\n\r\n\tthis.rotation.x = 0;\r\n\tthis.rotation.y = Math.PI;\r\n\tthis.rotation.z = 0;\r\n\tthis.rotationAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.CombinedCamera.prototype.toLeftView = function() {\r\n\r\n\tthis.rotation.x = 0;\r\n\tthis.rotation.y = - Math.PI / 2;\r\n\tthis.rotation.z = 0;\r\n\tthis.rotationAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.CombinedCamera.prototype.toRightView = function() {\r\n\r\n\tthis.rotation.x = 0;\r\n\tthis.rotation.y = Math.PI / 2;\r\n\tthis.rotation.z = 0;\r\n\tthis.rotationAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.CombinedCamera.prototype.toTopView = function() {\r\n\r\n\tthis.rotation.x = - Math.PI / 2;\r\n\tthis.rotation.y = 0;\r\n\tthis.rotation.z = 0;\r\n\tthis.rotationAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.CombinedCamera.prototype.toBottomView = function() {\r\n\r\n\tthis.rotation.x = Math.PI / 2;\r\n\tthis.rotation.y = 0;\r\n\tthis.rotation.z = 0;\r\n\tthis.rotationAutoUpdate = false;\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\r\n\r\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\tthis.className = \"BoxGeometry\";\r\n\r\n\tvar scope = this;\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\tthis.depth = depth;\r\n\r\n\tthis.widthSegments = widthSegments || 1;\r\n\tthis.heightSegments = heightSegments || 1;\r\n\tthis.depthSegments = depthSegments || 1;\r\n\r\n\tvar width_half = this.width / 2;\r\n\tvar height_half = this.height / 2;\r\n\tvar depth_half = this.depth / 2;\r\n\r\n\tbuildPlane( 'z', 'y', - 1, - 1, this.depth, this.height, width_half, 0 ); // px\r\n\tbuildPlane( 'z', 'y',   1, - 1, this.depth, this.height, - width_half, 1 ); // nx\r\n\tbuildPlane( 'x', 'z',   1,   1, this.width, this.depth, height_half, 2 ); // py\r\n\tbuildPlane( 'x', 'z',   1, - 1, this.width, this.depth, - height_half, 3 ); // ny\r\n\tbuildPlane( 'x', 'y',   1, - 1, this.width, this.height, depth_half, 4 ); // pz\r\n\tbuildPlane( 'x', 'y', - 1, - 1, this.width, this.height, - depth_half, 5 ); // nz\r\n\r\n\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\r\n\t\tvar w, ix, iy,\r\n\t\tgridX = scope.widthSegments,\r\n\t\tgridY = scope.heightSegments,\r\n\t\twidth_half = width / 2,\r\n\t\theight_half = height / 2,\r\n\t\toffset = scope.vertices.length;\r\n\r\n\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'z';\r\n\r\n\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'y';\r\n\t\t\tgridY = scope.depthSegments;\r\n\r\n\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\r\n\t\t\tw = 'x';\r\n\t\t\tgridX = scope.depthSegments;\r\n\r\n\t\t}\r\n\r\n\t\tvar gridX1 = gridX + 1,\r\n\t\tgridY1 = gridY + 1,\r\n\t\tsegment_width = width / gridX,\r\n\t\tsegment_height = height / gridY,\r\n\t\tnormal = new THREE.Vector3();\r\n\r\n\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\tvector[ w ] = depth;\r\n\r\n\t\t\t\tscope.vertices.push( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( iy = 0; iy < gridY; iy++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX; ix++ ) {\r\n\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\r\n\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeCentroids();\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author hughes\r\n */\r\n\r\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\tthis.className = \"CircleGeometry\";\r\n\r\n\tthis.radius = radius = radius || 50;\r\n\tthis.segments = segments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthis.thetaStart = thetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthis.thetaLength = thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar i, uvs = [],\r\n\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\r\n\tthis.vertices.push(center);\r\n\tuvs.push( centerUV );\r\n\r\n\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\tvar vertex = new THREE.Vector3();\r\n\t\tvar segment = thetaStart + i / segments * thetaLength;\r\n\r\n\t\tvertex.x = radius * Math.cos( segment );\r\n\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\tthis.vertices.push( vertex );\r\n\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tvar v1 = i;\r\n\t\tvar v2 = i + 1 ;\r\n\t\tvar v3 = 0;\r\n\r\n\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\r\n\r\n\t}\r\n\r\n\tthis.computeCentroids();\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n// DEPRECATED\r\n\r\nTHREE.CubeGeometry = THREE.BoxGeometry;\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\tthis.className = \"CylinderGeometry\";\r\n\r\n\tthis.radiusTop = radiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\tthis.radiusBottom = radiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\tthis.height = height = height !== undefined ? height : 100;\r\n\r\n\tthis.radialSegments = radialSegments = radialSegments || 8;\r\n\tthis.heightSegments = heightSegments = heightSegments || 1;\r\n\r\n\tthis.openEnded = openEnded = openEnded !== undefined ? openEnded : false;\r\n\r\n\tvar heightHalf = height / 2;\r\n\r\n\tvar x, y, vertices = [], uvs = [];\r\n\r\n\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\t\tvar uvsRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = radius * Math.sin( u * Math.PI * 2 );\r\n\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\tvertex.z = radius * Math.cos( u * Math.PI * 2 );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\t\tuvs.push( uvsRow );\r\n\r\n\t}\r\n\r\n\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\tvar na, nb;\r\n\r\n\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\tif ( radiusTop !== 0 ) {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\r\n\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\r\n\t\t\tvar n1 = na.clone();\r\n\t\t\tvar n2 = na.clone();\r\n\t\t\tvar n3 = nb.clone();\r\n\t\t\tvar n4 = nb.clone();\r\n\r\n\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// top cap\r\n\r\n\tif ( openEnded === false && radiusTop > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// bottom cap\r\n\r\n\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ y ][ x + 1 ].clone();\r\n\t\t\tvar uv2 = uvs[ y ][ x ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeCentroids();\r\n\tthis.computeFaceNormals();\r\n\r\n}\r\n\r\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segements of extrude spline too\r\n *  amount: <int>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  material: <int> // material index for front and back faces\r\n *  extrudeMaterial: <int> // material index for extrusion and beveled faces\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\r\n\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\t\tshapes = [];\r\n\t\treturn;\r\n\t}\r\n\r\n\tTHREE.Geometry.call( this );\r\n\tthis.className = \"ExtrudeGeometry\";\r\n\r\n\tshapes = shapes instanceof Array ? shapes : [ shapes ];\r\n\r\n\tthis.shapebb = shapes[ shapes.length - 1 ].getBoundingBox();\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeCentroids();\r\n\tthis.computeFaceNormals();\r\n\r\n\t// can't really use automatic vertex normals\r\n\t// as then front and back sides get smoothed too\r\n\t// should do separate smoothing just for sides\r\n\r\n\t//this.computeVertexNormals();\r\n\r\n\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\tvar sl = shapes.length;\r\n\r\n\tfor ( var s = 0; s < sl; s ++ ) {\r\n\t\tvar shape = shapes[ s ];\r\n\t\tthis.addShape( shape, options );\r\n\t}\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\r\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\r\n\tvar extrudePath = options.extrudePath;\r\n\tvar extrudePts, extrudeByPath = false;\r\n\r\n\tvar material = options.material;\r\n\tvar extrudeMaterial = options.extrudeMaterial;\r\n\r\n\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\r\n\tvar shapebb = this.shapebb;\r\n\t//shapebb = shape.getBoundingBox();\r\n\r\n\r\n\r\n\tvar splineTube, binormal, normal, position2;\r\n\tif ( extrudePath ) {\r\n\r\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\textrudeByPath = true;\r\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t// SETUP TNB variables\r\n\r\n\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames(extrudePath, steps, false);\r\n\r\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\tbinormal = new THREE.Vector3();\r\n\t\tnormal = new THREE.Vector3();\r\n\t\tposition2 = new THREE.Vector3();\r\n\r\n\t}\r\n\r\n\t// Safeguards if bevels are not enabled\r\n\r\n\tif ( ! bevelEnabled ) {\r\n\r\n\t\tbevelSegments = 0;\r\n\t\tbevelThickness = 0;\r\n\t\tbevelSize = 0;\r\n\r\n\t}\r\n\r\n\t// Variables initalization\r\n\r\n\tvar ahole, h, hl; // looping of holes\r\n\tvar scope = this;\r\n\tvar bevelPoints = [];\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = !THREE.Shape.Utils.isClockWise( vertices ) ;\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\r\n\t}\r\n\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\r\n\t/* Vertices */\r\n\r\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\tfor ( h = 0, hl = holes.length;  h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\tvertices = vertices.concat( ahole );\r\n\r\n\t}\r\n\r\n\r\n\tfunction scalePt2 ( pt, vec, size ) {\r\n\r\n\t\tif ( !vec ) return THREE.onerror( \"die, vec not specified\" );\r\n\r\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n\t}\r\n\r\n\tvar b, bs, t, z,\r\n\t\tvert, vlen = vertices.length,\r\n\t\tface, flen = faces.length,\r\n\t\tcont, clen = contour.length;\r\n\r\n\r\n\t// Find directions for point movement\r\n\r\n\tvar RAD_TO_DEGREES = 180 / Math.PI;\r\n\r\n\r\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\t\tvar sign = THREE.Math.sign;\r\n\t\t\r\n\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t//   shiftet by 1 unit (length of normalized vector) to the left\r\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t//\r\n\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\t\t\r\n\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\r\n\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\t\t\r\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\t\t\r\n\t\t// check for colinear edges\r\n\t\tvar colinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\t\r\n\t\tif ( Math.abs( colinear0 ) > EPSILON ) {\t\t// not colinear\r\n\t\t\t\r\n\t\t\t// length of vectors for normalizing\r\n\t\r\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\t\t\t\r\n\t\t\t// shift adjacent points by unit vectors to the left\r\n\t\r\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\t\t\t\r\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\t\r\n\t\t\t// scaling factor for v_prev to intersection point\r\n\t\r\n\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\t// vector from inPt to intersection point\r\n\t\r\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\t\r\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t//  but prevent crazy spikes\r\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y )\r\n\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\t\t\t} else {\r\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\t\t// handle special case of colinear edges\r\n\r\n\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\tif ( v_prev_x > EPSILON ) {\r\n\t\t\t\tif ( v_next_x > EPSILON ) { direction_eq = true; }\r\n\t\t\t} else {\r\n\t\t\t\tif ( v_prev_x < -EPSILON ) {\r\n\t\t\t\t\tif ( v_next_x < -EPSILON ) { direction_eq = true; }\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( sign(v_prev_y) == sign(v_next_y) ) { direction_eq = true; }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( direction_eq ) {\r\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\tv_trans_x = -v_prev_y;\r\n\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\t\t\t} else {\r\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t}\r\n\r\n\r\n\tvar contourMovements = [];\r\n\r\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\tif ( j === il ) j = 0;\r\n\t\tif ( k === il ) k = 0;\r\n\r\n\t\t//  (j)---(i)---(k)\r\n\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\tvar pt_i = contour[ i ];\r\n\t\tvar pt_j = contour[ j ];\r\n\t\tvar pt_k = contour[ k ];\r\n\r\n\t\tcontourMovements[ i ]= getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t}\r\n\r\n\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\toneHoleMovements = [];\r\n\r\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\toneHoleMovements[ i ]= getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t}\r\n\r\n\t\tholesMovements.push( oneHoleMovements );\r\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t}\r\n\r\n\r\n\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\r\n\t\t//z = bevelThickness * t;\r\n\t\tbs = bevelSize * ( Math.sin ( t * Math.PI/2 ) ) ; // curved\r\n\t\t//bs = bevelSize * t ; // linear\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\t//vert = scalePt( contour[ i ], contourCentroid, bs, false );\r\n\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\t\t\t\t//vert = scalePt( ahole[ i ], holesCentroids[ h ], bs, true );\r\n\r\n\t\t\t\tv( vert.x, vert.y,  -z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbs = bevelSize;\r\n\r\n\t// Back facing vertices\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\tif ( !extrudeByPath ) {\r\n\r\n\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\tnormal.copy( splineTube.normals[0] ).multiplyScalar(vert.x);\r\n\t\t\tbinormal.copy( splineTube.binormals[0] ).multiplyScalar(vert.y);\r\n\r\n\t\t\tposition2.copy( extrudePts[0] ).add(normal).add(binormal);\r\n\r\n\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Add stepped vertices...\r\n\t// Including front facing vertices\r\n\r\n\tvar s;\r\n\r\n\tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\tif ( !extrudeByPath ) {\r\n\r\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\tnormal.copy( splineTube.normals[s] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[s] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\tposition2.copy( extrudePts[s] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Add bevel segments planes\r\n\r\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\tbs = bevelSize * Math.sin ( t * Math.PI/2 ) ;\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tif ( !extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/* Faces */\r\n\r\n\t// Top and bottom faces\r\n\r\n\tbuildLidFaces();\r\n\r\n\t// Sides faces\r\n\r\n\tbuildSideFaces();\r\n\r\n\r\n\t/////  Internal functions\r\n\r\n\tfunction buildLidFaces() {\r\n\r\n\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\tvar layer = 0 ; // steps + 1\r\n\t\t\tvar offset = vlen * layer;\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ]+ offset, face[ 1 ]+ offset, face[ 0 ] + offset, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset, false );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ], true );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps, false );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Create faces for the z-sides of the shape\r\n\r\n\tfunction buildSideFaces() {\r\n\r\n\t\tvar layeroffset = 0;\r\n\t\tsidewalls( contour, layeroffset );\r\n\t\tlayeroffset += contour.length;\r\n\r\n\t\tfor ( h = 0, hl = holes.length;  h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t//, true\r\n\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\tvar j, k;\r\n\t\ti = contour.length;\r\n\r\n\t\twhile ( --i >= 0 ) {\r\n\r\n\t\t\tj = i;\r\n\t\t\tk = i - 1;\r\n\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\r\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction v( x, y, z ) {\r\n\r\n\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\r\n\t}\r\n\r\n\tfunction f3( a, b, c, isBottom ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\r\n\t\t// normal, color, material\r\n\t\tscope.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\r\n\t\tvar uvs = isBottom ? uvgen.generateBottomUV( scope, shape, options, a, b, c ) : uvgen.generateTopUV( scope, shape, options, a, b, c );\r\n\r\n \t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\r\n\t}\r\n\r\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\t\td += shapesOffset;\r\n\r\n \t\tscope.faces.push( new THREE.Face3( a, b, d, null, null, extrudeMaterial ) );\r\n \t\tscope.faces.push( new THREE.Face3( b, c, d, null, null, extrudeMaterial ) );\r\n\r\n \t\tvar uvs = uvgen.generateSideWallUV( scope, shape, wallContour, options, a, b, c, d,\r\n \t\t                                    stepIndex, stepsLength, contourIndex1, contourIndex2 );\r\n\r\n \t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n \t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\r\n\tgenerateTopUV: function( geometry, extrudedShape, extrudeOptions, indexA, indexB, indexC ) {\r\n\t\tvar ax = geometry.vertices[ indexA ].x,\r\n\t\t\tay = geometry.vertices[ indexA ].y,\r\n\r\n\t\t\tbx = geometry.vertices[ indexB ].x,\r\n\t\t\tby = geometry.vertices[ indexB ].y,\r\n\r\n\t\t\tcx = geometry.vertices[ indexC ].x,\r\n\t\t\tcy = geometry.vertices[ indexC ].y;\r\n\r\n\t\treturn [\r\n\t\t\tnew THREE.Vector2( ax, ay ),\r\n\t\t\tnew THREE.Vector2( bx, by ),\r\n\t\t\tnew THREE.Vector2( cx, cy )\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tgenerateBottomUV: function( geometry, extrudedShape, extrudeOptions, indexA, indexB, indexC ) {\r\n\r\n\t\treturn this.generateTopUV( geometry, extrudedShape, extrudeOptions, indexA, indexB, indexC );\r\n\r\n\t},\r\n\r\n\tgenerateSideWallUV: function( geometry, extrudedShape, wallContour, extrudeOptions,\r\n\t                              indexA, indexB, indexC, indexD, stepIndex, stepsLength,\r\n\t                              contourIndex1, contourIndex2 ) {\r\n\r\n\t\tvar ax = geometry.vertices[ indexA ].x,\r\n\t\t\tay = geometry.vertices[ indexA ].y,\r\n\t\t\taz = geometry.vertices[ indexA ].z,\r\n\r\n\t\t\tbx = geometry.vertices[ indexB ].x,\r\n\t\t\tby = geometry.vertices[ indexB ].y,\r\n\t\t\tbz = geometry.vertices[ indexB ].z,\r\n\r\n\t\t\tcx = geometry.vertices[ indexC ].x,\r\n\t\t\tcy = geometry.vertices[ indexC ].y,\r\n\t\t\tcz = geometry.vertices[ indexC ].z,\r\n\r\n\t\t\tdx = geometry.vertices[ indexD ].x,\r\n\t\t\tdy = geometry.vertices[ indexD ].y,\r\n\t\t\tdz = geometry.vertices[ indexD ].z;\r\n\r\n\t\tif ( Math.abs( ay - by ) < 0.01 ) {\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( ax, 1 - az ),\r\n\t\t\t\tnew THREE.Vector2( bx, 1 - bz ),\r\n\t\t\t\tnew THREE.Vector2( cx, 1 - cz ),\r\n\t\t\t\tnew THREE.Vector2( dx, 1 - dz )\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( ay, 1 - az ),\r\n\t\t\t\tnew THREE.Vector2( by, 1 - bz ),\r\n\t\t\t\tnew THREE.Vector2( cy, 1 - cz ),\r\n\t\t\t\tnew THREE.Vector2( dy, 1 - dz )\r\n\t\t\t];\r\n\t\t}\r\n\t}\r\n};\r\n\r\nTHREE.ExtrudeGeometry.__v1 = new THREE.Vector2();\r\nTHREE.ExtrudeGeometry.__v2 = new THREE.Vector2();\r\nTHREE.ExtrudeGeometry.__v3 = new THREE.Vector2();\r\nTHREE.ExtrudeGeometry.__v4 = new THREE.Vector2();\r\nTHREE.ExtrudeGeometry.__v5 = new THREE.Vector2();\r\nTHREE.ExtrudeGeometry.__v6 = new THREE.Vector2();\r\n\r\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\tthis.className = \"ShapeGeometry\";\r\n\r\n\tif ( shapes instanceof Array === false ) shapes = [ shapes ];\r\n\r\n\tthis.shapebb = shapes[ shapes.length - 1 ].getBoundingBox();\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeCentroids();\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tfor ( var i = 0, l = shapes.length; i < l; i++ ) {\r\n\r\n\t\tthis.addShape( shapes[ i ], options );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tif ( options === undefined ) options = {};\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar material = options.material;\r\n\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\r\n\tvar shapebb = this.shapebb;\r\n\r\n\t//\r\n\r\n\tvar i, l, hole, s;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = !THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\r\n\t\tfor ( i = 0, l = holes.length; i < l; i++ ) {\r\n\r\n\t\t\thole = holes[ i ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\r\n\t\t\t\tholes[ i ] = hole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false;\r\n\r\n\t}\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\r\n\t// Vertices\r\n\r\n\tvar contour = vertices;\r\n\r\n\tfor ( i = 0, l = holes.length; i < l; i++ ) {\r\n\r\n\t\thole = holes[ i ];\r\n\t\tvertices = vertices.concat( hole );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar vert, vlen = vertices.length;\r\n\tvar face, flen = faces.length;\r\n\tvar cont, clen = contour.length;\r\n\r\n\tfor ( i = 0; i < vlen; i++ ) {\r\n\r\n\t\tvert = vertices[ i ];\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\r\n\t}\r\n\r\n\tfor ( i = 0; i < flen; i++ ) {\r\n\r\n\t\tface = faces[ i ];\r\n\r\n\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\tvar c = face[ 2 ] + shapesOffset;\r\n\r\n\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateBottomUV( this, shape, options, a, b, c ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\n// points - to create a closed torus, one must use a set of points \r\n//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n// segments - the number of circumference segments to create\r\n// phiStart - the starting radian\r\n// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n//    2*pi is a closed lathe, less than 2PI is a portion.\r\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\tthis.className = \"LatheGeometry\";\r\n\r\n\tsegments = segments || 12;\r\n\tphiStart = phiStart || 0;\r\n\tphiLength = phiLength || 2 * Math.PI;\r\n\r\n\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\tvar inverseSegments = 1.0 / segments;\r\n\r\n\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\r\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\tvar c = Math.cos( phi ),\r\n\t\t\ts = Math.sin( phi );\r\n\r\n\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar pt = points[ j ];\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\r\n\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\tvertex.z = pt.z;\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar np = points.length;\r\n\r\n\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\r\n\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\r\n\t\t\tvar base = j + np * i;\r\n\t\t\tvar a = base;\r\n\t\t\tvar b = base + np;\r\n\t\t\tvar c = base + 1 + np;\r\n\t\t\tvar d = base + 1;\r\n\r\n\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\tvar v1 = v0 + inversePointLength;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\tthis.computeCentroids();\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\tthis.className = \"PlaneGeometry\";\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\tthis.widthSegments = widthSegments || 1;\r\n\tthis.heightSegments = heightSegments || 1;\r\n\r\n\tvar ix, iz;\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\r\n\tvar gridX = this.widthSegments;\r\n\tvar gridZ = this.heightSegments;\r\n\r\n\tvar gridX1 = gridX + 1;\r\n\tvar gridZ1 = gridZ + 1;\r\n\r\n\tvar segment_width = this.width / gridX;\r\n\tvar segment_height = this.height / gridZ;\r\n\r\n\tvar normal = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( iz = 0; iz < gridZ1; iz ++ ) {\r\n\r\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\tvar x = ix * segment_width - width_half;\r\n\t\t\tvar y = iz * segment_height - height_half;\r\n\r\n\t\t\tthis.vertices.push( new THREE.Vector3( x, - y, 0 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( iz = 0; iz < gridZ; iz ++ ) {\r\n\r\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\tvar a = ix + gridX1 * iz;\r\n\t\t\tvar b = ix + gridX1 * ( iz + 1 );\r\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iz + 1 );\r\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iz;\r\n\r\n\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iz / gridZ );\r\n\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iz + 1 ) / gridZ );\r\n\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iz + 1 ) / gridZ );\r\n\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iz / gridZ );\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, d );\r\n\t\t\tface.normal.copy( normal );\r\n\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tface = new THREE.Face3( b, c, d );\r\n\t\t\tface.normal.copy( normal );\r\n\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeCentroids();\r\n\r\n};\r\n\r\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author Kaleb Murphy\r\n */\r\n\r\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\tthis.className = \"RingGeometry\";\r\n\r\n\tinnerRadius = innerRadius || 0;\r\n\touterRadius = outerRadius || 50;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\tphiSegments = phiSegments !== undefined ? Math.max( 3, phiSegments ) : 8;\r\n\r\n\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\r\n\tfor ( i = 0; i <= phiSegments; i ++ ) { // concentric circles inside ring\r\n\r\n\t\tfor ( o = 0; o <= thetaSegments; o ++ ) { // number of segments per circle\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\t\t}\r\n\r\n\t\tradius += radiusStep;\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 0; i < phiSegments; i ++ ) { // concentric circles inside ring\r\n\r\n\t\tvar thetaSegment = i * thetaSegments;\r\n\r\n\t\tfor ( o = 0; o <= thetaSegments; o ++ ) { // number of segments per circle\r\n\r\n\t\t\tvar segment = o + thetaSegment;\r\n\r\n\t\t\tvar v1 = segment + i;\r\n\t\t\tvar v2 = segment + thetaSegments + i;\r\n\t\t\tvar v3 = segment + thetaSegments + 1 + i;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\r\n\r\n\t\t\tv1 = segment + i;\r\n\t\t\tv2 = segment + thetaSegments + 1 + i;\r\n\t\t\tv3 = segment + 1 + i;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tthis.computeCentroids();\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\tthis.className = \"SphereGeometry\";\r\n\r\n\tthis.radius = radius = radius || 50;\r\n\r\n\tthis.widthSegments = widthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\tthis.heightSegments = heightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n\tthis.phiStart = phiStart = phiStart !== undefined ? phiStart : 0;\r\n\tthis.phiLength = phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n\tthis.thetaStart = thetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthis.thetaLength = thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n\tvar x, y, vertices = [], uvs = [];\r\n\r\n\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\t\tvar uvsRow = [];\r\n\r\n\t\tfor ( x = 0; x <= widthSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / widthSegments;\r\n\t\t\tvar v = y / heightSegments;\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\t\tuvs.push( uvsRow );\r\n\r\n\t}\r\n\r\n\tfor ( y = 0; y < this.heightSegments; y ++ ) {\r\n\r\n\t\tfor ( x = 0; x < this.widthSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\r\n\t\t\tvar n1 = this.vertices[ v1 ].clone().normalize();\r\n\t\t\tvar n2 = this.vertices[ v2 ].clone().normalize();\r\n\t\t\tvar n3 = this.vertices[ v3 ].clone().normalize();\r\n\t\t\tvar n4 = this.vertices[ v4 ].clone().normalize();\r\n\r\n\t\t\tvar uv1 = uvs[ y ][ x + 1 ].clone();\r\n\t\t\tvar uv2 = uvs[ y ][ x ].clone();\r\n\t\t\tvar uv3 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\tvar uv4 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\r\n\t\t\tif ( Math.abs( this.vertices[ v1 ].y ) === this.radius ) {\r\n\r\n\t\t\t\tuv1.x = ( uv1.x + uv2.x ) / 2;\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v3, v4, [ n1, n3, n4 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv3, uv4 ] );\r\n\r\n\t\t\t} else if ( Math.abs( this.vertices[ v3 ].y ) === this.radius ) {\r\n\r\n\t\t\t\tuv3.x = ( uv3.x + uv4.x ) / 2;\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeCentroids();\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For creating 3D text geometry in three.js\r\n *\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  size: \t\t\t<float>, \t// size of the text\r\n *  height: \t\t<float>, \t// thickness to extrude text\r\n *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n *\r\n *  font: \t\t\t<string>,\t\t// font name\r\n *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n *\r\n *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n *  }\r\n *\r\n */\r\n\r\n/*\tUsage Examples\r\n\r\n\t// TextGeometry wrapper\r\n\r\n\tvar text3d = new TextGeometry( text, options );\r\n\r\n\t// Complete manner\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\r\n*/\r\n\r\n\r\nTHREE.TextGeometry = function ( text, parameters ) {\r\n\tthis.className = \"TextGeometry\";\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\r\n\t// translate parameters to ExtrudeGeometry API\r\n\r\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n\t// defaults\r\n\r\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\r\n};\r\n\r\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\r\n\r\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\tthis.className = \"TorusGeometry\";\r\n\t\r\n\tvar scope = this;\r\n\r\n\tthis.radius = radius || 100;\r\n\tthis.tube = tube || 40;\r\n\tthis.radialSegments = radialSegments || 8;\r\n\tthis.tubularSegments = tubularSegments || 6;\r\n\tthis.arc = arc || Math.PI * 2;\r\n\r\n\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\r\n\tfor ( var j = 0; j <= this.radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 0; i <= this.tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar u = i / this.tubularSegments * this.arc;\r\n\t\t\tvar v = j / this.radialSegments * Math.PI * 2;\r\n\r\n\t\t\tcenter.x = this.radius * Math.cos( u );\r\n\t\t\tcenter.y = this.radius * Math.sin( u );\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = ( this.radius + this.tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\tvertex.y = ( this.radius + this.tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\tvertex.z = this.tube * Math.sin( v );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tuvs.push( new THREE.Vector2( i / this.tubularSegments, j / this.radialSegments ) );\r\n\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfor ( var j = 1; j <= this.radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 1; i <= this.tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar a = ( this.tubularSegments + 1 ) * j + i - 1;\r\n\t\t\tvar b = ( this.tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\tvar c = ( this.tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\tvar d = ( this.tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeCentroids();\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n */\r\n\r\nTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\tthis.className = \"TorusKnotGeometry\";\r\n\r\n\tvar scope = this;\r\n\r\n\tthis.radius = radius || 100;\r\n\tthis.tube = tube || 40;\r\n\tthis.radialSegments = radialSegments || 64;\r\n\tthis.tubularSegments = tubularSegments || 8;\r\n\tthis.p = p || 2;\r\n\tthis.q = q || 3;\r\n\tthis.heightScale = heightScale || 1;\r\n\tthis.grid = new Array( this.radialSegments );\r\n\r\n\tvar tang = new THREE.Vector3();\r\n\tvar n = new THREE.Vector3();\r\n\tvar bitan = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0; i < this.radialSegments; ++ i ) {\r\n\r\n\t\tthis.grid[ i ] = new Array( this.tubularSegments );\r\n\t\tvar u = i / this.radialSegments * 2 * this.p * Math.PI;\r\n\t\tvar p1 = getPos( u, this.q, this.p, this.radius, this.heightScale );\r\n\t\tvar p2 = getPos( u + 0.01, this.q, this.p, this.radius, this.heightScale );\r\n\t\ttang.subVectors( p2, p1 );\r\n\t\tn.addVectors( p2, p1 );\r\n\r\n\t\tbitan.crossVectors( tang, n );\r\n\t\tn.crossVectors( bitan, tang );\r\n\t\tbitan.normalize();\r\n\t\tn.normalize();\r\n\r\n\t\tfor ( var j = 0; j < this.tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar v = j / this.tubularSegments * 2 * Math.PI;\r\n\t\t\tvar cx = - this.tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tvar cy = this.tube * Math.sin( v );\r\n\r\n\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\r\n\t\t\tthis.grid[ i ][ j ] = scope.vertices.push( pos ) - 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < this.radialSegments; ++ i ) {\r\n\r\n\t\tfor ( var j = 0; j < this.tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar ip = ( i + 1 ) % this.radialSegments;\r\n\t\t\tvar jp = ( j + 1 ) % this.tubularSegments;\r\n\r\n\t\t\tvar a = this.grid[ i ][ j ];\r\n\t\t\tvar b = this.grid[ ip ][ j ];\r\n\t\t\tvar c = this.grid[ ip ][ jp ];\r\n\t\t\tvar d = this.grid[ i ][ jp ];\r\n\r\n\t\t\tvar uva = new THREE.Vector2( i / this.radialSegments, j / this.tubularSegments );\r\n\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / this.radialSegments, j / this.tubularSegments );\r\n\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / this.radialSegments, ( j + 1 ) / this.tubularSegments );\r\n\t\t\tvar uvd = new THREE.Vector2( i / this.radialSegments, ( j + 1 ) / this.tubularSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tthis.computeCentroids();\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\r\n\t\tvar cu = Math.cos( u );\r\n\t\tvar su = Math.sin( u );\r\n\t\tvar quOverP = in_q / in_p * u;\r\n\t\tvar cs = Math.cos( quOverP );\r\n\r\n\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\r\n\r\nTHREE.TubeGeometry = function( path, segments, radius, radialSegments, closed ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\tthis.className = \"TubeGeometry\";\r\n\r\n\tthis.path = path;\r\n\tthis.segments = segments || 64;\r\n\tthis.radius = radius || 1;\r\n\tthis.radialSegments = radialSegments || 8;\r\n\tthis.closed = closed || false;\r\n\r\n\tthis.grid = [];\r\n\r\n\tvar scope = this,\r\n\r\n\t\ttangent,\r\n\t\tnormal,\r\n\t\tbinormal,\r\n\r\n\t\tnumpoints = this.segments + 1,\r\n\r\n\t\tx, y, z,\r\n\t\ttx, ty, tz,\r\n\t\tu, v,\r\n\r\n\t\tcx, cy,\r\n\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\ti, j,\r\n\t\tip, jp,\r\n\t\ta, b, c, d,\r\n\t\tuva, uvb, uvc, uvd;\r\n\r\n\tvar frames = new THREE.TubeGeometry.FrenetFrames( this.path, this.segments, this.closed ),\r\n\t\ttangents = frames.tangents,\r\n\t\tnormals = frames.normals,\r\n\t\tbinormals = frames.binormals;\r\n\r\n\t// proxy internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\tfunction vert( x, y, z ) {\r\n\r\n\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\r\n\t}\r\n\r\n\r\n\t// consruct the grid\r\n\r\n\tfor ( i = 0; i < numpoints; i++ ) {\r\n\r\n\t\tthis.grid[ i ] = [];\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\tpos = path.getPointAt( u );\r\n\r\n\t\ttangent = tangents[ i ];\r\n\t\tnormal = normals[ i ];\r\n\t\tbinormal = binormals[ i ];\r\n\r\n\t\tfor ( j = 0; j < this.radialSegments; j++ ) {\r\n\r\n\t\t\tv = j / this.radialSegments * 2 * Math.PI;\r\n\r\n\t\t\tcx = -this.radius * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tcy = this.radius * Math.sin( v );\r\n\r\n\t\t\tpos2.copy( pos );\r\n\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\r\n\t\t\tthis.grid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// construct the mesh\r\n\r\n\tfor ( i = 0; i < this.segments; i++ ) {\r\n\r\n\t\tfor ( j = 0; j < this.radialSegments; j++ ) {\r\n\r\n\t\t\tip = ( this.closed ) ? (i + 1) % this.segments : i + 1;\r\n\t\t\tjp = (j + 1) % this.radialSegments;\r\n\r\n\t\t\ta = this.grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\tb = this.grid[ ip ][ j ];\r\n\t\t\tc = this.grid[ ip ][ jp ];\r\n\t\t\td = this.grid[ i ][ jp ];\r\n\r\n\t\t\tuva = new THREE.Vector2( i / this.segments, j / this.radialSegments );\r\n\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / this.segments, j / this.radialSegments );\r\n\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / this.segments, ( j + 1 ) / this.radialSegments );\r\n\t\t\tuvd = new THREE.Vector2( i / this.segments, ( j + 1 ) / this.radialSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tthis.computeCentroids();\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n\r\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\nTHREE.TubeGeometry.FrenetFrames = function(path, segments, closed) {\r\n\r\n\tvar\ttangent = new THREE.Vector3(),\r\n\t\tnormal = new THREE.Vector3(),\r\n\t\tbinormal = new THREE.Vector3(),\r\n\r\n\t\ttangents = [],\r\n\t\tnormals = [],\r\n\t\tbinormals = [],\r\n\r\n\t\tvec = new THREE.Vector3(),\r\n\t\tmat = new THREE.Matrix4(),\r\n\r\n\t\tnumpoints = segments + 1,\r\n\t\ttheta,\r\n\t\tepsilon = 0.0001,\r\n\t\tsmallest,\r\n\r\n\t\ttx, ty, tz,\r\n\t\ti, u, v;\r\n\r\n\r\n\t// expose internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\t// compute the tangent vectors for each segment on the path\r\n\r\n\tfor ( i = 0; i < numpoints; i++ ) {\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\ttangents[ i ].normalize();\r\n\r\n\t}\r\n\r\n\tinitialNormal3();\r\n\r\n\tfunction initialNormal1(lastBinormal) {\r\n\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t}\r\n\r\n\tfunction initialNormal2() {\r\n\r\n\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\tvar t2 = path.getTangentAt( epsilon );\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\r\n\t}\r\n\r\n\tfunction initialNormal3() {\r\n\t\t// select an initial normal vector perpenicular to the first tangent vector,\r\n\t\t// and in the direction of the smallest tangent xyz component\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tsmallest = Number.MAX_VALUE;\r\n\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\tif ( tx <= smallest ) {\r\n\t\t\tsmallest = tx;\r\n\t\t\tnormal.set( 1, 0, 0 );\r\n\t\t}\r\n\r\n\t\tif ( ty <= smallest ) {\r\n\t\t\tsmallest = ty;\r\n\t\t\tnormal.set( 0, 1, 0 );\r\n\t\t}\r\n\r\n\t\tif ( tz <= smallest ) {\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\t\t}\r\n\r\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t}\r\n\r\n\r\n\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\r\n\tfor ( i = 1; i < numpoints; i++ ) {\r\n\r\n\t\tnormals[ i ] = normals[ i-1 ].clone();\r\n\r\n\t\tbinormals[ i ] = binormals[ i-1 ].clone();\r\n\r\n\t\tvec.crossVectors( tangents[ i-1 ], tangents[ i ] );\r\n\r\n\t\tif ( vec.length() > epsilon ) {\r\n\r\n\t\t\tvec.normalize();\r\n\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i-1 ].dot( tangents[ i ] ), -1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t}\r\n\r\n\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t}\r\n\r\n\r\n\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\tif ( closed ) {\r\n\r\n\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints-1 ] ), -1, 1 ) );\r\n\t\ttheta /= ( numpoints - 1 );\r\n\r\n\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints-1 ] ) ) > 0 ) {\r\n\r\n\t\t\ttheta = -theta;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = 1; i < numpoints; i++ ) {\r\n\r\n\t\t\t// twist a little...\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.PolyhedronGeometry = function ( vertices, faces, radius, detail ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\tthis.className = \"PolyhedronGeometry\";\r\n\r\n\tradius = radius || 1;\r\n\tdetail = detail || 0;\r\n\r\n\tvar that = this;\r\n\r\n\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\tprepare( new THREE.Vector3( vertices[ i ][ 0 ], vertices[ i ][ 1 ], vertices[ i ][ 2 ] ) );\r\n\r\n\t}\r\n\r\n\tvar midpoints = [], p = this.vertices;\r\n\r\n\tvar f = [];\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar v1 = p[ faces[ i ][ 0 ] ];\r\n\t\tvar v2 = p[ faces[ i ][ 1 ] ];\r\n\t\tvar v3 = p[ faces[ i ][ 2 ] ];\r\n\r\n\t\tf[ i ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0, l = f.length; i < l; i ++ ) {\r\n\r\n\t\tsubdivide(f[ i ], detail);\r\n\r\n\t}\r\n\r\n\r\n\t// Handle case when face straddles the seam\r\n\r\n\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\tvar x0 = uvs[ 0 ].x;\r\n\t\tvar x1 = uvs[ 1 ].x;\r\n\t\tvar x2 = uvs[ 2 ].x;\r\n\r\n\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\r\n\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\r\n\r\n\t\tif ( max > 0.9 && min < 0.1 ) { // 0.9 is somewhat arbitrary\r\n\r\n\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Apply radius\r\n\r\n\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\r\n\t}\r\n\r\n\r\n\t// Merge vertices\r\n\r\n\tthis.mergeVertices();\r\n\r\n\tthis.computeCentroids();\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n\r\n\t// Project vector onto sphere's surface\r\n\r\n\tfunction prepare( vector ) {\r\n\r\n\t\tvar vertex = vector.normalize().clone();\r\n\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\r\n\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\r\n\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\r\n\t\treturn vertex;\r\n\r\n\t}\r\n\r\n\r\n\t// Approximate a curved face with recursively sub-divided triangles.\r\n\r\n\tfunction make( v1, v2, v3 ) {\r\n\r\n\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\r\n\t\tface.centroid.add( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\t\tthat.faces.push( face );\r\n\r\n\t\tvar azi = azimuth( face.centroid );\r\n\r\n\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t] );\r\n\r\n\t}\r\n\r\n\r\n\t// Analytically subdivide a face to the required detail level.\r\n\r\n\tfunction subdivide(face, detail ) {\r\n\r\n\t\tvar cols = Math.pow(2, detail);\r\n\t\tvar cells = Math.pow(4, detail);\r\n\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\tvar v = [];\r\n\r\n\t\t// Construct all of the vertices for this subdivision.\r\n\r\n\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\r\n\t\t\tv[ i ] = [];\r\n\r\n\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\tvar rows = cols - i;\r\n\r\n\t\t\tfor ( var j = 0; j <= rows; j ++) {\r\n\r\n\t\t\t\tif ( j == 0 && i == cols ) {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Construct all of the faces.\r\n\r\n\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2 * (cols - i) - 1; j ++ ) {\r\n\r\n\t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n\t\t\t\tif ( j % 2 == 0 ) {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tv[ i ][ k ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1][ k + 1],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\tfunction azimuth( vector ) {\r\n\r\n\t\treturn Math.atan2( vector.z, -vector.x );\r\n\r\n\t}\r\n\r\n\r\n\t// Angle above the XZ plane.\r\n\r\n\tfunction inclination( vector ) {\r\n\r\n\t\treturn Math.atan2( -vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t}\r\n\r\n\r\n\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\r\n\tfunction correctUV( uv, vector, azimuth ) {\r\n\r\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\treturn uv.clone();\r\n\r\n\t}\r\n\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\r\n\tthis.radius = radius;\r\n\tthis.detail = detail;\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\tvar vertices = [\r\n\t\t[ -1,  t,  0 ], [  1, t, 0 ], [ -1, -t,  0 ], [  1, -t,  0 ],\r\n\t\t[  0, -1,  t ], [  0, 1, t ], [  0, -1, -t ], [  0,  1, -t ],\r\n\t\t[  t,  0, -1 ], [  t, 0, 1 ], [ -t,  0, -1 ], [ -t,  0,  1 ]\r\n\t];\r\n\r\n\tvar faces = [\r\n\t\t[ 0, 11,  5 ], [ 0,  5,  1 ], [  0,  1,  7 ], [  0,  7, 10 ], [  0, 10, 11 ],\r\n\t\t[ 1,  5,  9 ], [ 5, 11,  4 ], [ 11, 10,  2 ], [ 10,  7,  6 ], [  7,  1,  8 ],\r\n\t\t[ 3,  9,  4 ], [ 3,  4,  2 ], [  3,  2,  6 ], [  3,  6,  8 ], [  3,  8,  9 ],\r\n\t\t[ 4,  9,  5 ], [ 2,  4, 11 ], [  6,  2, 10 ], [  8,  6,  7 ], [  9,  8,  1 ]\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, faces, radius, detail );\r\n\tthis.className = \"IcosahedronGeometry\";\r\n\r\n};\r\n\r\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t[ 1, 0, 0 ], [ -1, 0, 0 ], [ 0, 1, 0 ], [ 0, -1, 0 ], [ 0, 0, 1 ], [ 0, 0, -1 ]\r\n\t];\r\n\r\n\tvar faces = [\r\n\t\t[ 0, 2, 4 ], [ 0, 4, 3 ], [ 0, 3, 5 ], [ 0, 5, 2 ], [ 1, 2, 5 ], [ 1, 5, 3 ], [ 1, 3, 4 ], [ 1, 4, 2 ]\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, faces, radius, detail );\r\n\tthis.className = \"OctahedronGeometry\";\r\n\r\n};\r\n\r\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\tthis.className = \"TetrahedronGeometry\";\r\n\r\n\tvar vertices = [\r\n\t\t[ 1,  1,  1 ], [ -1, -1, 1 ], [ -1, 1, -1 ], [ 1, -1, -1 ]\r\n\t];\r\n\r\n\tvar faces = [\r\n\t\t[ 2, 1, 0 ], [ 0, 3, 2 ], [ 1, 3, 0 ], [ 2, 3, 1 ]\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, faces, radius, detail );\r\n\r\n};\r\n\r\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\r\n\r\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\tthis.className = \"ParametricGeometry\";\r\n\r\n\tvar verts = this.vertices;\r\n\tvar faces = this.faces;\r\n\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\r\n\tvar i, il, j, p;\r\n\tvar u, v;\r\n\r\n\tvar stackCount = stacks + 1;\r\n\tvar sliceCount = slices + 1;\r\n\r\n\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n\t\tv = i / stacks;\r\n\r\n\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n\t\t\tu = j / slices;\r\n\r\n\t\t\tp = func( u, v );\r\n\t\t\tverts.push( p );\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tvar a, b, c, d;\r\n\tvar uva, uvb, uvc, uvd;\r\n\r\n\tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n\t\t\ta = i * sliceCount + j;\r\n\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\tc = (i + 1) * sliceCount + j + 1;\r\n\t\t\td = (i + 1) * sliceCount + j;\r\n\r\n\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// console.log(this);\r\n\r\n\t// magic bullet\r\n\t// var diff = this.mergeVertices();\r\n\t// console.log('removed ', diff, ' vertices by merging');\r\n\r\n\tthis.computeCentroids();\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\r\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AxisHelper = function ( size ) {\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3(), new THREE.Vector3( size, 0, 0 ),\r\n\t\tnew THREE.Vector3(), new THREE.Vector3( 0, size, 0 ),\r\n\t\tnew THREE.Vector3(), new THREE.Vector3( 0, 0, size )\r\n\t);\r\n\r\n\tgeometry.colors.push(\r\n\t\tnew THREE.Color( 0xff0000 ), new THREE.Color( 0xffaa00 ),\r\n\t\tnew THREE.Color( 0x00ff00 ), new THREE.Color( 0xaaff00 ),\r\n\t\tnew THREE.Color( 0x0000ff ), new THREE.Color( 0x00aaff )\r\n\t);\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tTHREE.Line.call( this, geometry, material, THREE.LinePieces );\r\n\tthis.className = \"AxisHelper\";\r\n\r\n};\r\n\r\nTHREE.AxisHelper.prototype = Object.create( THREE.Line.prototype );\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  hex - color in hex value\r\n *  headLength - Number\r\n *  headWidth - Number\r\n */\r\n\r\nTHREE.ArrowHelper = function ( dir, origin, length, hex, headLength, headWidth ) {\r\n\r\n\t// dir is assumed to be normalized\r\n\r\n\tTHREE.Object3D.call( this );\r\n\tthis.className = \"ArrowHelper\";\r\n\r\n\tif ( hex === undefined ) hex = 0xffff00;\r\n\tif ( length === undefined ) length = 1;\r\n\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\tthis.position = origin;\r\n\r\n\tvar lineGeometry = new THREE.Geometry();\r\n\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ) );\r\n\tlineGeometry.vertices.push( new THREE.Vector3( 0, 1, 0 ) );\r\n\r\n\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: hex } ) );\r\n\tthis.line.matrixAutoUpdate = false;\r\n\tthis.add( this.line );\r\n\r\n\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\tconeGeometry.applyMatrix( new THREE.Matrix4().makeTranslation( 0, - 0.5, 0 ) );\r\n\r\n\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: hex } ) );\r\n\tthis.cone.matrixAutoUpdate = false;\r\n\tthis.add( this.cone );\r\n\r\n\tthis.setDirection( dir );\r\n\tthis.setLength( length, headLength, headWidth );\r\n\r\n};\r\n\r\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.ArrowHelper.prototype.setDirection = function () {\r\n\r\n\tvar axis = new THREE.Vector3();\r\n\tvar radians;\r\n\r\n\treturn function ( dir ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\tradians = Math.acos( dir.y );\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\tthis.line.scale.set( 1, length, 1 );\r\n\tthis.line.updateMatrix();\r\n\r\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\tthis.cone.position.y = length;\r\n\tthis.cone.updateMatrix();\r\n\r\n};\r\n\r\nTHREE.ArrowHelper.prototype.setColor = function ( hex ) {\r\n\r\n\tthis.line.material.color.setHex( hex );\r\n\tthis.cone.material.color.setHex( hex );\r\n\r\n};\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BoxHelper = function ( object ) {\r\n\r\n\t//   5____4\r\n\t// 1/___0/|\r\n\t// | 6__|_7\r\n\t// 2/___3/\r\n\r\n\tvar vertices = [\r\n\t\tnew THREE.Vector3(   1,   1,   1 ),\r\n\t\tnew THREE.Vector3( - 1,   1,   1 ),\r\n\t\tnew THREE.Vector3( - 1, - 1,   1 ),\r\n\t\tnew THREE.Vector3(   1, - 1,   1 ),\r\n\r\n\t\tnew THREE.Vector3(   1,   1, - 1 ),\r\n\t\tnew THREE.Vector3( - 1,   1, - 1 ),\r\n\t\tnew THREE.Vector3( - 1, - 1, - 1 ),\r\n\t\tnew THREE.Vector3(   1, - 1, - 1 )\r\n\t];\r\n\r\n\tthis.vertices = vertices;\r\n\r\n\t// TODO: Wouldn't be nice if Line had .segments?\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tvertices[ 0 ], vertices[ 1 ],\r\n\t\tvertices[ 1 ], vertices[ 2 ],\r\n\t\tvertices[ 2 ], vertices[ 3 ],\r\n\t\tvertices[ 3 ], vertices[ 0 ],\r\n\r\n\t\tvertices[ 4 ], vertices[ 5 ],\r\n\t\tvertices[ 5 ], vertices[ 6 ],\r\n\t\tvertices[ 6 ], vertices[ 7 ],\r\n\t\tvertices[ 7 ], vertices[ 4 ],\r\n\r\n\t\tvertices[ 0 ], vertices[ 4 ],\r\n\t\tvertices[ 1 ], vertices[ 5 ],\r\n\t\tvertices[ 2 ], vertices[ 6 ],\r\n\t\tvertices[ 3 ], vertices[ 7 ]\r\n\t);\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ), THREE.LinePieces );\r\n\r\n\tif ( object !== undefined ) {\r\n\r\n\t\tthis.update( object );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.BoxHelper.prototype = Object.create( THREE.Line.prototype );\r\n\r\nTHREE.BoxHelper.prototype.update = function ( object ) {\r\n\r\n\tvar geometry = object.geometry;\r\n\r\n\tif ( geometry.boundingBox === null ) {\r\n\r\n\t\tgeometry.computeBoundingBox();\r\n\r\n\t}\r\n\r\n\tvar min = geometry.boundingBox.min;\r\n\tvar max = geometry.boundingBox.max;\r\n\tvar vertices = this.vertices;\r\n\r\n\tvertices[ 0 ].set( max.x, max.y, max.z );\r\n\tvertices[ 1 ].set( min.x, max.y, max.z );\r\n\tvertices[ 2 ].set( min.x, min.y, max.z );\r\n\tvertices[ 3 ].set( max.x, min.y, max.z );\r\n\tvertices[ 4 ].set( max.x, max.y, min.z );\r\n\tvertices[ 5 ].set( min.x, max.y, min.z );\r\n\tvertices[ 6 ].set( min.x, min.y, min.z );\r\n\tvertices[ 7 ].set( max.x, min.y, min.z );\r\n\r\n\tthis.geometry.computeBoundingSphere();\r\n\tthis.geometry.verticesNeedUpdate = true;\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\tthis.matrixWorld = object.matrixWorld;\r\n\r\n};\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\n// a helper to show the world-axis-aligned bounding box for an object\r\n\r\nTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.box = new THREE.Box3();\r\n\r\n\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\r\n};\r\n\r\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\r\nTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\r\n\tthis.box.setFromObject( this.object );\r\n\r\n\tthis.box.size( this.scale );\r\n\r\n\tthis.box.center( this.position );\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\r\n\r\nTHREE.CameraHelper = function ( camera ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\r\n\tvar pointMap = {};\r\n\r\n\t// colors\r\n\r\n\tvar hexFrustum = 0xffaa00;\r\n\tvar hexCone = 0xff0000;\r\n\tvar hexUp = 0x00aaff;\r\n\tvar hexTarget = 0xffffff;\r\n\tvar hexCross = 0x333333;\r\n\r\n\t// near\r\n\r\n\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\r\n\t// far\r\n\r\n\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\r\n\t// sides\r\n\r\n\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\r\n\t// cone\r\n\r\n\taddLine( \"p\", \"n1\", hexCone );\r\n\taddLine( \"p\", \"n2\", hexCone );\r\n\taddLine( \"p\", \"n3\", hexCone );\r\n\taddLine( \"p\", \"n4\", hexCone );\r\n\r\n\t// up\r\n\r\n\taddLine( \"u1\", \"u2\", hexUp );\r\n\taddLine( \"u2\", \"u3\", hexUp );\r\n\taddLine( \"u3\", \"u1\", hexUp );\r\n\r\n\t// target\r\n\r\n\taddLine( \"c\", \"t\", hexTarget );\r\n\taddLine( \"p\", \"c\", hexCross );\r\n\r\n\t// cross\r\n\r\n\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\r\n\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\r\n\tfunction addLine( a, b, hex ) {\r\n\r\n\t\taddPoint( a, hex );\r\n\t\taddPoint( b, hex );\r\n\r\n\t}\r\n\r\n\tfunction addPoint( id, hex ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\r\n\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, material, THREE.LinePieces );\r\n\r\n\tthis.camera = camera;\r\n\tthis.matrixWorld = camera.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.pointMap = pointMap;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.CameraHelper.prototype = Object.create( THREE.Line.prototype );\r\n\r\nTHREE.CameraHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar camera = new THREE.Camera();\r\n\tvar projector = new THREE.Projector();\r\n\r\n\treturn function () {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar w = 1, h = 1;\r\n\r\n\t\t// we need just camera projection matrix\r\n\t\t// world matrix must be identity\r\n\r\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n\t\t// center / target\r\n\r\n\t\tsetPoint( \"c\", 0, 0, -1 );\r\n\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\r\n\t\t// near\r\n\r\n\t\tsetPoint( \"n1\", -w, -h, -1 );\r\n\t\tsetPoint( \"n2\",  w, -h, -1 );\r\n\t\tsetPoint( \"n3\", -w,  h, -1 );\r\n\t\tsetPoint( \"n4\",  w,  h, -1 );\r\n\r\n\t\t// far\r\n\r\n\t\tsetPoint( \"f1\", -w, -h, 1 );\r\n\t\tsetPoint( \"f2\",  w, -h, 1 );\r\n\t\tsetPoint( \"f3\", -w,  h, 1 );\r\n\t\tsetPoint( \"f4\",  w,  h, 1 );\r\n\r\n\t\t// up\r\n\r\n\t\tsetPoint( \"u1\",  w * 0.7, h * 1.1, -1 );\r\n\t\tsetPoint( \"u2\", -w * 0.7, h * 1.1, -1 );\r\n\t\tsetPoint( \"u3\",        0, h * 2,   -1 );\r\n\r\n\t\t// cross\r\n\r\n\t\tsetPoint( \"cf1\", -w,  0, 1 );\r\n\t\tsetPoint( \"cf2\",  w,  0, 1 );\r\n\t\tsetPoint( \"cf3\",  0, -h, 1 );\r\n\t\tsetPoint( \"cf4\",  0,  h, 1 );\r\n\r\n\t\tsetPoint( \"cn1\", -w,  0, -1 );\r\n\t\tsetPoint( \"cn2\",  w,  0, -1 );\r\n\t\tsetPoint( \"cn3\",  0, -h, -1 );\r\n\t\tsetPoint( \"cn4\",  0,  h, -1 );\r\n\r\n\t\tfunction setPoint( point, x, y, z ) {\r\n\r\n\t\t\tvector.set( x, y, z );\r\n\t\t\tprojector.unprojectVector( vector, camera );\r\n\r\n\t\t\tvar points = scope.pointMap[ point ];\r\n\r\n\t\t\tif ( points !== undefined ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tscope.geometry.vertices[ points[ i ] ].copy( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.geometry.verticesNeedUpdate = true;\r\n\r\n\t};\r\n\r\n}();\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrixWorld = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tsize = size || 1;\r\n\tvar geometry = new THREE.PlaneGeometry( size, size );\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.lightPlane = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.lightPlane );\r\n\r\n\tgeometry = new THREE.Geometry();\r\n\tgeometry.vertices.push( new THREE.Vector3() );\r\n\tgeometry.vertices.push( new THREE.Vector3() );\r\n\r\n\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.targetLine = new THREE.Line( geometry, material );\r\n\tthis.add( this.targetLine );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\t\r\n\tthis.lightPlane.geometry.dispose();\r\n\tthis.lightPlane.material.dispose();\r\n\tthis.targetLine.geometry.dispose();\r\n\tthis.targetLine.material.dispose();\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar v3 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\tv3.subVectors( v2, v1 );\r\n\r\n\t\tthis.lightPlane.lookAt( v3 );\r\n\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\r\n\t}\r\n\r\n}();\r\n\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.EdgesHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) { return a - b };\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar geometry2 = object.geometry.clone();\r\n\r\n\tgeometry2.mergeVertices();\r\n\tgeometry2.computeFaceNormals();\r\n\r\n\tvar vertices = geometry2.vertices;\r\n\tvar faces = geometry2.faces;\r\n\tvar numEdges = 0;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\tvar key = edge.toString();\r\n\r\n\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thash[ key ].face2 = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.addAttribute( 'position', Float32Array, 2 * numEdges, 3 );\r\n\r\n\tvar coords = geometry.attributes.position.array;\r\n\r\n\tvar index = 0;\r\n\r\n\tfor ( var key in hash ) {\r\n\r\n\t\tvar h = hash[ key ];\r\n\r\n\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) < 0.9999 ) { // hardwired const OK\r\n\r\n\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\tcoords[ index ++ ] = vertex.x;\r\n\t\t\tcoords[ index ++ ] = vertex.y;\r\n\t\t\tcoords[ index ++ ] = vertex.z;\r\n\r\n\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\tcoords[ index ++ ] = vertex.x;\r\n\t\t\tcoords[ index ++ ] = vertex.y;\r\n\t\t\tcoords[ index ++ ] = vertex.z;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color } ), THREE.LinePieces );\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\tthis.matrixWorld = object.matrixWorld;\r\n\r\n};\r\n\r\nTHREE.EdgesHelper.prototype = Object.create( THREE.Line.prototype );\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tvar faces = this.object.geometry.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.normalMatrix = new THREE.Matrix3();\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.Line.prototype );\r\n\r\nTHREE.FaceNormalsHelper.prototype.update = ( function ( object ) {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function ( object ) {\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tthis.normalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar vertices = this.geometry.vertices;\r\n\r\n\t\tvar faces = this.object.geometry.faces;\r\n\r\n\t\tvar worldMatrix = this.object.matrixWorld;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tv1.copy( face.normal ).applyMatrix3( this.normalMatrix ).normalize().multiplyScalar( this.size );\r\n\r\n\t\t\tvar idx = 2 * i;\r\n\r\n\t\t\tvertices[ idx ].copy( face.centroid ).applyMatrix4( worldMatrix );\r\n\r\n\t\t\tvertices[ idx + 1 ].addVectors( vertices[ idx ], v1 );\r\n\r\n\t\t}\r\n\r\n\t\tthis.geometry.verticesNeedUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}());\r\n\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GridHelper = function ( size, step ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tthis.color1 = new THREE.Color( 0x444444 );\r\n\tthis.color2 = new THREE.Color( 0x888888 );\r\n\r\n\tfor ( var i = - size; i <= size; i += step ) {\r\n\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t);\r\n\r\n\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\r\n\t\tgeometry.colors.push( color, color, color, color );\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, material, THREE.LinePieces );\r\n\r\n};\r\n\r\nTHREE.GridHelper.prototype = Object.create( THREE.Line.prototype );\r\n\r\nTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\r\n\tthis.color1.set( colorCenterLine );\r\n\tthis.color2.set( colorGrid );\r\n\r\n\tthis.geometry.colorsNeedUpdate = true;\r\n\r\n}\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.HemisphereLightHelper = function ( light, sphereSize, arrowLength, domeSize ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrixWorld = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tgeometry.applyMatrix( new THREE.Matrix4().makeRotationX( - Math.PI / 2 ) );\r\n\r\n\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\r\n\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\r\n\t}\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.lightSphere );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\tthis.lightSphere.geometry.dispose();\r\n\tthis.lightSphere.material.dispose();\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\r\n\t}\r\n\r\n}();\r\n\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.matrixWorld = this.light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\t/*\r\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tvar d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\r\nTHREE.PointLightHelper.prototype.dispose = function () {\r\n\t\r\n\tthis.geometry.dispose();\r\n\tthis.material.dispose();\r\n};\r\n\r\nTHREE.PointLightHelper.prototype.update = function () {\r\n\r\n\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t/*\r\n\tvar d = this.light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.visible = true;\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\t*/\r\n\r\n};\r\n\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.SpotLightHelper = function ( light ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrixWorld = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\r\n\tgeometry.applyMatrix( new THREE.Matrix4().makeTranslation( 0, -0.5, 0 ) );\r\n\tgeometry.applyMatrix( new THREE.Matrix4().makeRotationX( - Math.PI / 2 ) );\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\r\n\tthis.cone = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.cone );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\nTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\tthis.cone.geometry.dispose();\r\n\tthis.cone.material.dispose();\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar vector2 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\r\n\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tvar vertices = object.geometry.vertices;\r\n\r\n\tvar faces = object.geometry.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.normalMatrix = new THREE.Matrix3();\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.Line.prototype );\r\n\r\nTHREE.VertexNormalsHelper.prototype.update = ( function ( object ) {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function( object ) {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c', 'd' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tthis.normalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar vertices = this.geometry.vertices;\r\n\r\n\t\tvar verts = this.object.geometry.vertices;\r\n\r\n\t\tvar faces = this.object.geometry.faces;\r\n\r\n\t\tvar worldMatrix = this.object.matrixWorld;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar vertexId = face[ keys[ j ] ];\r\n\t\t\t\tvar vertex = verts[ vertexId ];\r\n\r\n\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n\t\t\t\tvertices[ idx ].copy( vertex ).applyMatrix4( worldMatrix );\r\n\r\n\t\t\t\tv1.copy( normal ).applyMatrix3( this.normalMatrix ).normalize().multiplyScalar( this.size );\r\n\r\n\t\t\t\tv1.add( vertices[ idx ] );\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tvertices[ idx ].copy( v1 );\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.geometry.verticesNeedUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}());\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexTangentsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x0000ff;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tvar vertices = object.geometry.vertices;\r\n\r\n\tvar faces = object.geometry.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0, jl = face.vertexTangents.length; j < jl; j ++ ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexTangentsHelper.prototype = Object.create( THREE.Line.prototype );\r\n\r\nTHREE.VertexTangentsHelper.prototype.update = ( function ( object ) {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function( object ) {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c', 'd' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tvar vertices = this.geometry.vertices;\r\n\r\n\t\tvar verts = this.object.geometry.vertices;\r\n\r\n\t\tvar faces = this.object.geometry.faces;\r\n\r\n\t\tvar worldMatrix = this.object.matrixWorld;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexTangents.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar vertexId = face[ keys[ j ] ];\r\n\t\t\t\tvar vertex = verts[ vertexId ];\r\n\r\n\t\t\t\tvar tangent = face.vertexTangents[ j ];\r\n\r\n\t\t\t\tvertices[ idx ].copy( vertex ).applyMatrix4( worldMatrix );\r\n\r\n\t\t\t\tv1.copy( tangent ).transformDirection( worldMatrix ).multiplyScalar( this.size );\r\n\r\n\t\t\t\tv1.add( vertices[ idx ] );\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tvertices[ idx ].copy( v1 );\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.geometry.verticesNeedUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}());\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) { return a - b };\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tvar vertices = object.geometry.vertices;\r\n\t\tvar faces = object.geometry.faces;\r\n\t\tvar numEdges = 0;\r\n\r\n\t\t// allocate maximal size\r\n\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addAttribute( 'position', Float32Array, 2 * numEdges, 3 );\r\n\r\n\t\tvar coords = geometry.attributes.position.array;\r\n\r\n\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j] ];\r\n\r\n\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else if ( object.geometry instanceof THREE.BufferGeometry && object.geometry.attributes.index !== undefined ) { // indexed BufferGeometry\r\n\r\n\t\tvar vertices = object.geometry.attributes.position.array;\r\n\t\tvar indices = object.geometry.attributes.index.array;\r\n\t\tvar offsets = object.geometry.offsets;\r\n\t\tvar numEdges = 0;\r\n\r\n\t\t// allocate maximal size\r\n\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\r\n\t\tfor ( var o = 0, ol = offsets.length; o < ol; ++ o ) {\r\n\r\n\t\t\tvar start = offsets[ o ].start;\r\n\t\t\tvar count = offsets[ o ].count;\r\n\t\t\tvar index = offsets[ o ].index;\r\n\r\n\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\tedge[ 0 ] = index + indices[ i + j ];\r\n\t\t\t\t\tedge[ 1 ] = index + indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addAttribute( 'position', Float32Array, 2 * numEdges, 3 );\r\n\r\n\t\tvar coords = geometry.attributes.position.array;\r\n\r\n\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\tvar index2 = 3 * edges[ 2 * i + j];\r\n\t\t\t\tcoords[ index + 0 ] = vertices[ index2 ];\r\n\t\t\t\tcoords[ index + 1 ] = vertices[ index2 + 1 ];\r\n\t\t\t\tcoords[ index + 2 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else if ( object.geometry instanceof THREE.BufferGeometry\t) { // non-indexed BufferGeometry\r\n\r\n\t\tvar vertices = object.geometry.attributes.position.array;\r\n\t\tvar numEdges = vertices.length / 3;\r\n\t\tvar numTris = numEdges / 3;\r\n\r\n\t\tgeometry.addAttribute( 'position', Float32Array, 2 * numEdges, 3 );\r\n\r\n\t\tvar coords = geometry.attributes.position.array;\r\n\r\n\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tvar index = 18 * i + 6 * j;\r\n\r\n\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\r\n\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color } ), THREE.LinePieces );\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\tthis.matrixWorld = object.matrixWorld;\r\n\r\n};\r\n\r\nTHREE.WireframeHelper.prototype = Object.create( THREE.Line.prototype );\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ImmediateRenderObject = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.render = function ( renderCallback ) { };\r\n\r\n};\r\n\r\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.lensFlares = [];\r\n\r\n\tthis.positionScreen = new THREE.Vector3();\r\n\tthis.customUpdateCallback = undefined;\r\n\r\n\tif( texture !== undefined ) {\r\n\r\n\t\tthis.add( texture, size, distance, blending, color );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\n\r\n\r\n/*\r\n * Add: adds another flare\r\n */\r\n\r\nTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\r\n\tif( size === undefined ) size = -1;\r\n\tif( distance === undefined ) distance = 0;\r\n\tif( opacity === undefined ) opacity = 1;\r\n\tif( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\tif( blending === undefined ) blending = THREE.NormalBlending;\r\n\r\n\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\r\n\tthis.lensFlares.push( { texture: texture, \t\t\t// THREE.Texture\r\n\t\t                    size: size, \t\t\t\t// size in pixels (-1 = use texture.width)\r\n\t\t                    distance: distance, \t\t// distance (0-1) from light source (0=at light source)\r\n\t\t                    x: 0, y: 0, z: 0,\t\t\t// screen position (-1 => 1) z = 0 is ontop z = 1 is back\r\n\t\t                    scale: 1, \t\t\t\t\t// scale\r\n\t\t                    rotation: 1, \t\t\t\t// rotation\r\n\t\t                    opacity: opacity,\t\t\t// opacity\r\n\t\t\t\t\t\t\tcolor: color,\t\t\t\t// color\r\n\t\t                    blending: blending } );\t\t// blending\r\n\r\n};\r\n\r\n\r\n/*\r\n * Update lens flares update positions on all flares based on the screen position\r\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n */\r\n\r\nTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\r\n\tvar f, fl = this.lensFlares.length;\r\n\tvar flare;\r\n\tvar vecX = -this.positionScreen.x * 2;\r\n\tvar vecY = -this.positionScreen.y * 2;\r\n\r\n\tfor( f = 0; f < fl; f ++ ) {\r\n\r\n\t\tflare = this.lensFlares[ f ];\r\n\r\n\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\r\n\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.animationsMap = {};\r\n\tthis.animationsList = [];\r\n\r\n\t// prepare default animation\r\n\t// (all frames played together in 1 second)\r\n\r\n\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\tvar name = \"__default\";\r\n\r\n\tvar startFrame = 0;\r\n\tvar endFrame = numFrames - 1;\r\n\r\n\tvar fps = numFrames / 1;\r\n\r\n\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\tthis.setAnimationWeight( name, 1 );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\r\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\tvar animation = {\r\n\r\n\t\tstartFrame: start,\r\n\t\tendFrame: end,\r\n\r\n\t\tlength: end - start + 1,\r\n\r\n\t\tfps: fps,\r\n\t\tduration: ( end - start ) / fps,\r\n\r\n\t\tlastFrame: 0,\r\n\t\tcurrentFrame: 0,\r\n\r\n\t\tactive: false,\r\n\r\n\t\ttime: 0,\r\n\t\tdirection: 1,\r\n\t\tweight: 1,\r\n\r\n\t\tdirectionBackwards: false,\r\n\t\tmirroredLoop: false\r\n\r\n\t};\r\n\r\n\tthis.animationsMap[ name ] = animation;\r\n\tthis.animationsList.push( animation );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\tvar pattern = /([a-z]+)(\\d+)/;\r\n\r\n\tvar firstAnimation, frameRanges = {};\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\tvar name = chunks[ 1 ];\r\n\t\t\tvar num = chunks[ 2 ];\r\n\r\n\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: -Infinity };\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var name in frameRanges ) {\r\n\r\n\t\tvar range = frameRanges[ name ];\r\n\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t}\r\n\r\n\tthis.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = 1;\r\n\t\tanimation.directionBackwards = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = -1;\r\n\t\tanimation.directionBackwards = true;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.fps = fps;\r\n\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.duration = duration;\r\n\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.weight = weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = time;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\tvar time = 0;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\ttime = animation.time;\r\n\r\n\t}\r\n\r\n\treturn time;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\tvar duration = -1;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tduration = animation.duration;\r\n\r\n\t}\r\n\r\n\treturn duration;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = 0;\r\n\t\tanimation.active = true;\r\n\r\n\t} else {\r\n\r\n\t\tTHREE.onwarning( \"animation[\" + name + \"] undefined\" );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.active = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\tif ( ! animation.active ) continue;\r\n\r\n\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\tanimation.direction *= -1;\r\n\r\n\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\tvar keyframe = animation.startFrame + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\tvar weight = animation.weight;\r\n\r\n\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlarePlugin = function () {\r\n\r\n\tvar _gl, _renderer, _precision, _lensFlare = {};\r\n\r\n\tthis.init = function ( renderer ) {\r\n\r\n\t\t_gl = renderer.context;\r\n\t\t_renderer = renderer;\r\n\r\n\t\t_precision = renderer.getPrecision();\r\n\r\n\t\t_lensFlare.vertices = new Float32Array( 8 + 8 );\r\n\t\t_lensFlare.faces = new Uint16Array( 6 );\r\n\r\n\t\tvar i = 0;\r\n\t\t_lensFlare.vertices[ i++ ] = -1; _lensFlare.vertices[ i++ ] = -1;\t// vertex\r\n\t\t_lensFlare.vertices[ i++ ] = 0;  _lensFlare.vertices[ i++ ] = 0;\t// uv... etc.\r\n\r\n\t\t_lensFlare.vertices[ i++ ] = 1;  _lensFlare.vertices[ i++ ] = -1;\r\n\t\t_lensFlare.vertices[ i++ ] = 1;  _lensFlare.vertices[ i++ ] = 0;\r\n\r\n\t\t_lensFlare.vertices[ i++ ] = 1;  _lensFlare.vertices[ i++ ] = 1;\r\n\t\t_lensFlare.vertices[ i++ ] = 1;  _lensFlare.vertices[ i++ ] = 1;\r\n\r\n\t\t_lensFlare.vertices[ i++ ] = -1; _lensFlare.vertices[ i++ ] = 1;\r\n\t\t_lensFlare.vertices[ i++ ] = 0;  _lensFlare.vertices[ i++ ] = 1;\r\n\r\n\t\ti = 0;\r\n\t\t_lensFlare.faces[ i++ ] = 0; _lensFlare.faces[ i++ ] = 1; _lensFlare.faces[ i++ ] = 2;\r\n\t\t_lensFlare.faces[ i++ ] = 0; _lensFlare.faces[ i++ ] = 2; _lensFlare.faces[ i++ ] = 3;\r\n\r\n\t\t// buffers\r\n\r\n\t\t_lensFlare.vertexBuffer     = _gl.createBuffer();\r\n\t\t_lensFlare.elementBuffer    = _gl.createBuffer();\r\n\r\n\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, _lensFlare.vertexBuffer );\r\n\t\t_gl.bufferData( _gl.ARRAY_BUFFER, _lensFlare.vertices, _gl.STATIC_DRAW );\r\n\r\n\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, _lensFlare.elementBuffer );\r\n\t\t_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, _lensFlare.faces, _gl.STATIC_DRAW );\r\n\r\n\t\t// textures\r\n\r\n\t\t_lensFlare.tempTexture      = _gl.createTexture();\r\n\t\t_lensFlare.occlusionTexture = _gl.createTexture();\r\n\r\n\t\t_gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.tempTexture );\r\n\t\t_gl.texImage2D( _gl.TEXTURE_2D, 0, _gl.RGB, 16, 16, 0, _gl.RGB, _gl.UNSIGNED_BYTE, null );\r\n\t\t_gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t_gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\t\t_gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_MAG_FILTER, _gl.NEAREST );\r\n\t\t_gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_MIN_FILTER, _gl.NEAREST );\r\n\r\n\t\t_gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.occlusionTexture );\r\n\t\t_gl.texImage2D( _gl.TEXTURE_2D, 0, _gl.RGBA, 16, 16, 0, _gl.RGBA, _gl.UNSIGNED_BYTE, null );\r\n\t\t_gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t_gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\t\t_gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_MAG_FILTER, _gl.NEAREST );\r\n\t\t_gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_MIN_FILTER, _gl.NEAREST );\r\n\r\n\t\tif ( _gl.getParameter( _gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) <= 0 ) {\r\n\r\n\t\t\t_lensFlare.hasVertexTexture = false;\r\n\t\t\t_lensFlare.program = createProgram( THREE.ShaderFlares[ \"lensFlare\" ], _precision );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_lensFlare.hasVertexTexture = true;\r\n\t\t\t_lensFlare.program = createProgram( THREE.ShaderFlares[ \"lensFlareVertexTexture\" ], _precision );\r\n\r\n\t\t}\r\n\r\n\t\t_lensFlare.attributes = {};\r\n\t\t_lensFlare.uniforms = {};\r\n\r\n\t\t_lensFlare.attributes.vertex       = _gl.getAttribLocation ( _lensFlare.program, \"position\" );\r\n\t\t_lensFlare.attributes.uv           = _gl.getAttribLocation ( _lensFlare.program, \"uv\" );\r\n\r\n\t\t_lensFlare.uniforms.renderType     = _gl.getUniformLocation( _lensFlare.program, \"renderType\" );\r\n\t\t_lensFlare.uniforms.map            = _gl.getUniformLocation( _lensFlare.program, \"map\" );\r\n\t\t_lensFlare.uniforms.occlusionMap   = _gl.getUniformLocation( _lensFlare.program, \"occlusionMap\" );\r\n\t\t_lensFlare.uniforms.opacity        = _gl.getUniformLocation( _lensFlare.program, \"opacity\" );\r\n\t\t_lensFlare.uniforms.color          = _gl.getUniformLocation( _lensFlare.program, \"color\" );\r\n\t\t_lensFlare.uniforms.scale          = _gl.getUniformLocation( _lensFlare.program, \"scale\" );\r\n\t\t_lensFlare.uniforms.rotation       = _gl.getUniformLocation( _lensFlare.program, \"rotation\" );\r\n\t\t_lensFlare.uniforms.screenPosition = _gl.getUniformLocation( _lensFlare.program, \"screenPosition\" );\r\n\r\n\t};\r\n\r\n\r\n\t/*\r\n\t * Render lens flares\r\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t *         reads these back and calculates occlusion.\r\n\t *         Then _lensFlare.update_lensFlares() is called to re-position and\r\n\t *         update transparency of flares. Then they are rendered.\r\n\t *\r\n\t */\r\n\r\n\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\r\n\t\tvar flares = scene.__webglFlares,\r\n\t\t\tnFlares = flares.length;\r\n\r\n\t\tif ( ! nFlares ) return;\r\n\r\n\t\tvar tempPosition = new THREE.Vector3();\r\n\r\n\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\r\n\t\tvar size = 16 / viewportHeight,\r\n\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\r\n\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\r\n\t\tvar uniforms = _lensFlare.uniforms,\r\n\t\t\tattributes = _lensFlare.attributes;\r\n\r\n\t\t// set _lensFlare program and reset blending\r\n\r\n\t\t_gl.useProgram( _lensFlare.program );\r\n\r\n\t\t_gl.enableVertexAttribArray( _lensFlare.attributes.vertex );\r\n\t\t_gl.enableVertexAttribArray( _lensFlare.attributes.uv );\r\n\r\n\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t// setup gl and common used attribs/unforms\r\n\r\n\t\t_gl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\t_gl.uniform1i( uniforms.map, 1 );\r\n\r\n\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, _lensFlare.vertexBuffer );\r\n\t\t_gl.vertexAttribPointer( attributes.vertex, 2, _gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, _lensFlare.elementBuffer );\r\n\r\n\t\t_gl.disable( _gl.CULL_FACE );\r\n\t\t_gl.depthMask( false );\r\n\r\n\t\tvar i, j, jl, flare, sprite;\r\n\r\n\t\tfor ( i = 0; i < nFlares; i ++ ) {\r\n\r\n\t\t\tsize = 16 / viewportHeight;\r\n\t\t\tscale.set( size * invAspect, size );\r\n\r\n\t\t\t// calc object screen position\r\n\r\n\t\t\tflare = flares[ i ];\r\n\r\n\t\t\ttempPosition.set( flare.matrixWorld.elements[12], flare.matrixWorld.elements[13], flare.matrixWorld.elements[14] );\r\n\r\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\r\n\t\t\t// setup arrays for gl programs\r\n\r\n\t\t\tscreenPosition.copy( tempPosition )\r\n\r\n\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\r\n\t\t\t// screen cull\r\n\r\n\t\t\tif ( _lensFlare.hasVertexTexture || (\r\n\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\r\n\t\t\t\t// save current RGB to temp texture\r\n\r\n\t\t\t\t_gl.activeTexture( _gl.TEXTURE1 );\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.tempTexture );\r\n\t\t\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, 0, _gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// render pink quad\r\n\r\n\t\t\t\t_gl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\t_gl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t_gl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\r\n\t\t\t\t_gl.disable( _gl.BLEND );\r\n\t\t\t\t_gl.enable( _gl.DEPTH_TEST );\r\n\r\n\t\t\t\t_gl.drawElements( _gl.TRIANGLES, 6, _gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// copy result to occlusionMap\r\n\r\n\t\t\t\t_gl.activeTexture( _gl.TEXTURE0 );\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.occlusionTexture );\r\n\t\t\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, 0, _gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// restore graphics\r\n\r\n\t\t\t\t_gl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\t_gl.disable( _gl.DEPTH_TEST );\r\n\r\n\t\t\t\t_gl.activeTexture( _gl.TEXTURE1 );\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.tempTexture );\r\n\t\t\t\t_gl.drawElements( _gl.TRIANGLES, 6, _gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// update object positions\r\n\r\n\t\t\t\tflare.positionScreen.copy( screenPosition )\r\n\r\n\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\r\n\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tflare.updateLensFlares();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render flares\r\n\r\n\t\t\t\t_gl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\t_gl.enable( _gl.BLEND );\r\n\r\n\t\t\t\tfor ( j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tsprite = flare.lensFlares[ j ];\r\n\r\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\r\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\r\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\r\n\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\tscale.y = size;\r\n\r\n\t\t\t\t\t\t_gl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\t_gl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\t_gl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\r\n\t\t\t\t\t\t_gl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\t_gl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\r\n\t\t\t\t\t\t_renderer.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\t_renderer.setTexture( sprite.texture, 1 );\r\n\r\n\t\t\t\t\t\t_gl.drawElements( _gl.TRIANGLES, 6, _gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\t_gl.enable( _gl.CULL_FACE );\r\n\t\t_gl.enable( _gl.DEPTH_TEST );\r\n\t\t_gl.depthMask( true );\r\n\r\n\t};\r\n\r\n\tfunction createProgram ( shader, precision ) {\r\n\r\n\t\tvar program = _gl.createProgram();\r\n\r\n\t\tvar fragmentShader = _gl.createShader( _gl.FRAGMENT_SHADER );\r\n\t\tvar vertexShader = _gl.createShader( _gl.VERTEX_SHADER );\r\n\r\n\t\tvar prefix = \"precision \" + precision + \" float;\\n\";\r\n\r\n\t\t_gl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\t_gl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\r\n\t\t_gl.compileShader( fragmentShader );\r\n\t\t_gl.compileShader( vertexShader );\r\n\r\n\t\t_gl.attachShader( program, fragmentShader );\r\n\t\t_gl.attachShader( program, vertexShader );\r\n\r\n\t\t_gl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t};\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ShadowMapPlugin = function () {\r\n\r\n\tvar _gl,\r\n\t_renderer,\r\n\t_depthMaterial, _depthMaterialMorph, _depthMaterialSkin, _depthMaterialMorphSkin,\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_min = new THREE.Vector3(),\r\n\t_max = new THREE.Vector3(),\r\n\r\n\t_matrixPosition = new THREE.Vector3();\r\n\r\n\tthis.init = function ( renderer ) {\r\n\r\n\t\t_gl = renderer.context;\r\n\t\t_renderer = renderer;\r\n\r\n\t\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\t\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\r\n\t\t_depthMaterial = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms } );\r\n\t\t_depthMaterialMorph = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true } );\r\n\t\t_depthMaterialSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, skinning: true } );\r\n\t\t_depthMaterialMorphSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true, skinning: true } );\r\n\r\n\t\t_depthMaterial._shadowPass = true;\r\n\t\t_depthMaterialMorph._shadowPass = true;\r\n\t\t_depthMaterialSkin._shadowPass = true;\r\n\t\t_depthMaterialMorphSkin._shadowPass = true;\r\n\r\n\t};\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( ! ( _renderer.shadowMapEnabled && _renderer.shadowMapAutoUpdate ) ) return;\r\n\r\n\t\tthis.update( scene, camera );\r\n\r\n\t};\r\n\r\n\tthis.update = function ( scene, camera ) {\r\n\r\n\t\tvar i, il, j, jl, n,\r\n\r\n\t\tshadowMap, shadowMatrix, shadowCamera,\r\n\t\tprogram, buffer, material,\r\n\t\twebglObject, object, light,\r\n\t\trenderList,\r\n\r\n\t\tlights = [],\r\n\t\tk = 0,\r\n\r\n\t\tfog = null;\r\n\r\n\t\t// set GL state for depth map\r\n\r\n\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t_gl.disable( _gl.BLEND );\r\n\r\n\t\t_gl.enable( _gl.CULL_FACE );\r\n\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\tif ( _renderer.shadowMapCullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_renderer.setDepthTest( true );\r\n\r\n\t\t// preprocess lights\r\n\t\t// \t- skip lights that are not casting shadows\r\n\t\t//\t- create virtual lights for cascaded shadow maps\r\n\r\n\t\tfor ( i = 0, il = scene.__lights.length; i < il; i ++ ) {\r\n\r\n\t\t\tlight = scene.__lights[ i ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( ( light instanceof THREE.DirectionalLight ) && light.shadowCascade ) {\r\n\r\n\t\t\t\tfor ( n = 0; n < light.shadowCascadeCount; n ++ ) {\r\n\r\n\t\t\t\t\tvar virtualLight;\r\n\r\n\t\t\t\t\tif ( ! light.shadowCascadeArray[ n ] ) {\r\n\r\n\t\t\t\t\t\tvirtualLight = createVirtualLight( light, n );\r\n\t\t\t\t\t\tvirtualLight.originalCamera = camera;\r\n\r\n\t\t\t\t\t\tvar gyro = new THREE.Gyroscope();\r\n\t\t\t\t\t\tgyro.position = light.shadowCascadeOffset;\r\n\r\n\t\t\t\t\t\tgyro.add( virtualLight );\r\n\t\t\t\t\t\tgyro.add( virtualLight.target );\r\n\r\n\t\t\t\t\t\tcamera.add( gyro );\r\n\r\n\t\t\t\t\t\tlight.shadowCascadeArray[ n ] = virtualLight;\r\n\r\n\t\t\t\t\t\t//console.log( \"Created virtualLight\", virtualLight );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvirtualLight = light.shadowCascadeArray[ n ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tupdateVirtualLight( light, n );\r\n\r\n\t\t\t\t\tlights[ k ] = virtualLight;\r\n\t\t\t\t\tk ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlights[ k ] = light;\r\n\t\t\t\tk ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// render depth map\r\n\r\n\t\tfor ( i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\tlight = lights[ i ];\r\n\r\n\t\t\tif ( ! light.shadowMap ) {\r\n\r\n\t\t\t\tvar shadowFilter = THREE.NearestFilter;\r\n\r\n\t\t\t\tif ( _renderer.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\r\n\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\r\n\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! light.shadowCamera ) {\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tTHREE.onerror( \"Unsupported light type for shadow\" );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscene.add( light.shadowCamera );\r\n\r\n\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\r\n\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n\t\t\t\tlight.shadowCamera.add( light.cameraHelper );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( light.isVirtual && virtualLight.originalCamera == camera ) {\r\n\r\n\t\t\t\tupdateShadowCamera( camera, light );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tshadowMap = light.shadowMap;\r\n\t\t\tshadowMatrix = light.shadowMatrix;\r\n\t\t\tshadowCamera = light.shadowCamera;\r\n\r\n\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\tshadowCamera.lookAt( _matrixPosition );\r\n\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\r\n\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\r\n\t\t\t// compute shadow matrix\r\n\r\n\t\t\tshadowMatrix.set( 0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t\t\t\t  0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t\t\t\t  0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t\t\t\t  0.0, 0.0, 0.0, 1.0 );\r\n\r\n\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t// render shadow map\r\n\r\n\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t_renderer.clear();\r\n\r\n\t\t\t// set object matrices & frustum culling\r\n\r\n\t\t\trenderList = scene.__webglObjects;\r\n\r\n\t\t\tfor ( j = 0, jl = renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\twebglObject = renderList[ j ];\r\n\t\t\t\tobject = webglObject.object;\r\n\r\n\t\t\t\twebglObject.render = false;\r\n\r\n\t\t\t\tif ( object.visible && object.castShadow ) {\r\n\r\n\t\t\t\t\tif ( ! ( object instanceof THREE.Mesh || object instanceof THREE.ParticleSystem ) || ! ( object.frustumCulled ) || _frustum.intersectsObject( object ) ) {\r\n\r\n\t\t\t\t\t\tobject._modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n\r\n\t\t\t\t\t\twebglObject.render = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// render regular objects\r\n\r\n\t\t\tvar objectMaterial, useMorphing, useSkinning;\r\n\r\n\t\t\tfor ( j = 0, jl = renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\twebglObject = renderList[ j ];\r\n\r\n\t\t\t\tif ( webglObject.render ) {\r\n\r\n\t\t\t\t\tobject = webglObject.object;\r\n\t\t\t\t\tbuffer = webglObject.buffer;\r\n\r\n\t\t\t\t\t// culling is overriden globally for all objects\r\n\t\t\t\t\t// while rendering depth map\r\n\r\n\t\t\t\t\t// need to deal with MeshFaceMaterial somehow\r\n\t\t\t\t\t// in that case just use the first of material.materials for now\r\n\t\t\t\t\t// (proper solution would require to break objects by materials\r\n\t\t\t\t\t//  similarly to regular rendering and then set corresponding\r\n\t\t\t\t\t//  depth materials per each chunk instead of just once per object)\r\n\r\n\t\t\t\t\tobjectMaterial = getObjectMaterial( object );\r\n\r\n\t\t\t\t\tuseMorphing = object.geometry.morphTargets !== undefined && object.geometry.morphTargets.length > 0 && objectMaterial.morphTargets;\r\n\t\t\t\t\tuseSkinning = object instanceof THREE.SkinnedMesh && objectMaterial.skinning;\r\n\r\n\t\t\t\t\tif ( object.customDepthMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterial = object.customDepthMaterial;\r\n\r\n\t\t\t\t\t} else if ( useSkinning ) {\r\n\r\n\t\t\t\t\t\tmaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\r\n\t\t\t\t\t} else if ( useMorphing ) {\r\n\r\n\t\t\t\t\t\tmaterial = _depthMaterialMorph;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tmaterial = _depthMaterial;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( buffer instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, scene.__lights, fog, material, buffer, object );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_renderer.renderBuffer( shadowCamera, scene.__lights, fog, material, buffer, object );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// set matrices and render immediate objects\r\n\r\n\t\t\trenderList = scene.__webglObjectsImmediate;\r\n\r\n\t\t\tfor ( j = 0, jl = renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\twebglObject = renderList[ j ];\r\n\t\t\t\tobject = webglObject.object;\r\n\r\n\t\t\t\tif ( object.visible && object.castShadow ) {\r\n\r\n\t\t\t\t\tobject._modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n\r\n\t\t\t\t\t_renderer.renderImmediateObject( shadowCamera, scene.__lights, fog, _depthMaterial, object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore GL state\r\n\r\n\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\tclearAlpha = _renderer.getClearAlpha();\r\n\r\n\t\t_gl.clearColor( clearColor.r, clearColor.g, clearColor.b, clearAlpha );\r\n\t\t_gl.enable( _gl.BLEND );\r\n\r\n\t\tif ( _renderer.shadowMapCullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction createVirtualLight( light, cascade ) {\r\n\r\n\t\tvar virtualLight = new THREE.DirectionalLight();\r\n\r\n\t\tvirtualLight.isVirtual = true;\r\n\r\n\t\tvirtualLight.onlyShadow = true;\r\n\t\tvirtualLight.castShadow = true;\r\n\r\n\t\tvirtualLight.shadowCameraNear = light.shadowCameraNear;\r\n\t\tvirtualLight.shadowCameraFar = light.shadowCameraFar;\r\n\r\n\t\tvirtualLight.shadowCameraLeft = light.shadowCameraLeft;\r\n\t\tvirtualLight.shadowCameraRight = light.shadowCameraRight;\r\n\t\tvirtualLight.shadowCameraBottom = light.shadowCameraBottom;\r\n\t\tvirtualLight.shadowCameraTop = light.shadowCameraTop;\r\n\r\n\t\tvirtualLight.shadowCameraVisible = light.shadowCameraVisible;\r\n\r\n\t\tvirtualLight.shadowDarkness = light.shadowDarkness;\r\n\r\n\t\tvirtualLight.shadowBias = light.shadowCascadeBias[ cascade ];\r\n\t\tvirtualLight.shadowMapWidth = light.shadowCascadeWidth[ cascade ];\r\n\t\tvirtualLight.shadowMapHeight = light.shadowCascadeHeight[ cascade ];\r\n\r\n\t\tvirtualLight.pointsWorld = [];\r\n\t\tvirtualLight.pointsFrustum = [];\r\n\r\n\t\tvar pointsWorld = virtualLight.pointsWorld,\r\n\t\t\tpointsFrustum = virtualLight.pointsFrustum;\r\n\r\n\t\tfor ( var i = 0; i < 8; i ++ ) {\r\n\r\n\t\t\tpointsWorld[ i ] = new THREE.Vector3();\r\n\t\t\tpointsFrustum[ i ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tvar nearZ = light.shadowCascadeNearZ[ cascade ];\r\n\t\tvar farZ = light.shadowCascadeFarZ[ cascade ];\r\n\r\n\t\tpointsFrustum[ 0 ].set( -1, -1, nearZ );\r\n\t\tpointsFrustum[ 1 ].set(  1, -1, nearZ );\r\n\t\tpointsFrustum[ 2 ].set( -1,  1, nearZ );\r\n\t\tpointsFrustum[ 3 ].set(  1,  1, nearZ );\r\n\r\n\t\tpointsFrustum[ 4 ].set( -1, -1, farZ );\r\n\t\tpointsFrustum[ 5 ].set(  1, -1, farZ );\r\n\t\tpointsFrustum[ 6 ].set( -1,  1, farZ );\r\n\t\tpointsFrustum[ 7 ].set(  1,  1, farZ );\r\n\r\n\t\treturn virtualLight;\r\n\r\n\t}\r\n\r\n\t// Synchronize virtual light with the original light\r\n\r\n\tfunction updateVirtualLight( light, cascade ) {\r\n\r\n\t\tvar virtualLight = light.shadowCascadeArray[ cascade ];\r\n\r\n\t\tvirtualLight.position.copy( light.position );\r\n\t\tvirtualLight.target.position.copy( light.target.position );\r\n\t\tvirtualLight.lookAt( virtualLight.target );\r\n\r\n\t\tvirtualLight.shadowCameraVisible = light.shadowCameraVisible;\r\n\t\tvirtualLight.shadowDarkness = light.shadowDarkness;\r\n\r\n\t\tvirtualLight.shadowBias = light.shadowCascadeBias[ cascade ];\r\n\r\n\t\tvar nearZ = light.shadowCascadeNearZ[ cascade ];\r\n\t\tvar farZ = light.shadowCascadeFarZ[ cascade ];\r\n\r\n\t\tvar pointsFrustum = virtualLight.pointsFrustum;\r\n\r\n\t\tpointsFrustum[ 0 ].z = nearZ;\r\n\t\tpointsFrustum[ 1 ].z = nearZ;\r\n\t\tpointsFrustum[ 2 ].z = nearZ;\r\n\t\tpointsFrustum[ 3 ].z = nearZ;\r\n\r\n\t\tpointsFrustum[ 4 ].z = farZ;\r\n\t\tpointsFrustum[ 5 ].z = farZ;\r\n\t\tpointsFrustum[ 6 ].z = farZ;\r\n\t\tpointsFrustum[ 7 ].z = farZ;\r\n\r\n\t}\r\n\r\n\t// Fit shadow camera's ortho frustum to camera frustum\r\n\r\n\tfunction updateShadowCamera( camera, light ) {\r\n\r\n\t\tvar shadowCamera = light.shadowCamera,\r\n\t\t\tpointsFrustum = light.pointsFrustum,\r\n\t\t\tpointsWorld = light.pointsWorld;\r\n\r\n\t\t_min.set( Infinity, Infinity, Infinity );\r\n\t\t_max.set( -Infinity, -Infinity, -Infinity );\r\n\r\n\t\tfor ( var i = 0; i < 8; i ++ ) {\r\n\r\n\t\t\tvar p = pointsWorld[ i ];\r\n\r\n\t\t\tp.copy( pointsFrustum[ i ] );\r\n\t\t\tTHREE.ShadowMapPlugin.__projector.unprojectVector( p, camera );\r\n\r\n\t\t\tp.applyMatrix4( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\tif ( p.x < _min.x ) _min.x = p.x;\r\n\t\t\tif ( p.x > _max.x ) _max.x = p.x;\r\n\r\n\t\t\tif ( p.y < _min.y ) _min.y = p.y;\r\n\t\t\tif ( p.y > _max.y ) _max.y = p.y;\r\n\r\n\t\t\tif ( p.z < _min.z ) _min.z = p.z;\r\n\t\t\tif ( p.z > _max.z ) _max.z = p.z;\r\n\r\n\t\t}\r\n\r\n\t\tshadowCamera.left = _min.x;\r\n\t\tshadowCamera.right = _max.x;\r\n\t\tshadowCamera.top = _max.y;\r\n\t\tshadowCamera.bottom = _min.y;\r\n\r\n\t\t// can't really fit near/far\r\n\t\t//shadowCamera.near = _min.z;\r\n\t\t//shadowCamera.far = _max.z;\r\n\r\n\t\tshadowCamera.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\t// For the moment just ignore objects that have multiple materials with different animation methods\r\n\t// Only the first material will be taken into account for deciding which depth material to use for shadow maps\r\n\r\n\tfunction getObjectMaterial( object ) {\r\n\r\n\t\treturn object.material instanceof THREE.MeshFaceMaterial\r\n\t\t\t? object.material.materials[ 0 ]\r\n\t\t\t: object.material;\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.ShadowMapPlugin.__projector = new THREE.Projector();\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpritePlugin = function () {\r\n\r\n\tvar _gl, _renderer, _texture;\r\n\r\n\tvar vertices, faces, vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\r\n\tthis.init = function ( renderer ) {\r\n\r\n\t\t_gl = renderer.context;\r\n\t\t_renderer = renderer;\r\n\r\n\t\tvertices = new Float32Array( [\r\n\t\t\t- 0.5, - 0.5, 0, 0, \r\n\t\t\t  0.5, - 0.5, 1, 0,\r\n\t\t\t  0.5,   0.5, 1, 1,\r\n\t\t\t- 0.5,   0.5, 0, 1\r\n\t\t] );\r\n\r\n\t\tfaces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\tvertexBuffer  = _gl.createBuffer();\r\n\t\telementBuffer = _gl.createBuffer();\r\n\r\n\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t_gl.bufferData( _gl.ARRAY_BUFFER, vertices, _gl.STATIC_DRAW );\r\n\r\n\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\t_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, faces, _gl.STATIC_DRAW );\r\n\r\n\t\tprogram = createProgram();\r\n\r\n\t\tattributes = {\r\n\t\t\tposition:\t\t\t_gl.getAttribLocation ( program, 'position' ),\r\n\t\t\tuv:\t\t\t\t\t_gl.getAttribLocation ( program, 'uv' )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\tuvOffset:\t\t\t_gl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\tuvScale:\t\t\t_gl.getUniformLocation( program, 'uvScale' ),\r\n\r\n\t\t\trotation:\t\t\t_gl.getUniformLocation( program, 'rotation' ),\r\n\t\t\tscale:\t\t\t\t_gl.getUniformLocation( program, 'scale' ),\r\n\r\n\t\t\tcolor:\t\t\t\t_gl.getUniformLocation( program, 'color' ),\r\n\t\t\tmap:\t\t\t\t_gl.getUniformLocation( program, 'map' ),\r\n\t\t\topacity:\t\t\t_gl.getUniformLocation( program, 'opacity' ),\r\n\r\n\t\t\tmodelViewMatrix: \t_gl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\tprojectionMatrix:\t_gl.getUniformLocation( program, 'projectionMatrix' ),\r\n\r\n\t\t\tfogType:\t\t\t_gl.getUniformLocation( program, 'fogType' ),\r\n\t\t\tfogDensity:\t\t\t_gl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\tfogNear:\t\t\t_gl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\tfogFar:\t\t\t\t_gl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\tfogColor:\t\t\t_gl.getUniformLocation( program, 'fogColor' ),\r\n\r\n\t\t\talphaTest:\t\t\t_gl.getUniformLocation( program, 'alphaTest' )\r\n\t\t};\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = 8;\r\n\t\tcanvas.height = 8;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.fillStyle = '#ffffff';\r\n\t\tcontext.fillRect( 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t_texture = new THREE.Texture( canvas );\r\n\t\t_texture.needsUpdate = true;\r\n\r\n\t};\r\n\r\n\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\r\n\t\tvar sprites = scene.__webglSprites,\r\n\t\t\tnSprites = sprites.length;\r\n\r\n\t\tif ( ! nSprites ) return;\r\n\r\n\t\t// setup gl\r\n\r\n\t\t_gl.useProgram( program );\r\n\r\n\t\t_gl.enableVertexAttribArray( attributes.position );\r\n\t\t_gl.enableVertexAttribArray( attributes.uv );\r\n\r\n\t\t_gl.disable( _gl.CULL_FACE );\r\n\t\t_gl.enable( _gl.BLEND );\r\n\r\n\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t_gl.vertexAttribPointer( attributes.position, 2, _gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\t_gl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\t_gl.activeTexture( _gl.TEXTURE0 );\r\n\t\t_gl.uniform1i( uniforms.map, 0 );\r\n\r\n\t\tvar oldFogType = 0;\r\n\t\tvar sceneFogType = 0;\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\tif ( fog ) {\r\n\r\n\t\t\t_gl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\t\t_gl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\t_gl.uniform1f( uniforms.fogFar, fog.far );\r\n\r\n\t\t\t\t_gl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\toldFogType = 1;\r\n\t\t\t\tsceneFogType = 1;\r\n\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\t\t_gl.uniform1f( uniforms.fogDensity, fog.density );\r\n\r\n\t\t\t\t_gl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\toldFogType = 2;\r\n\t\t\t\tsceneFogType = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\toldFogType = 0;\r\n\t\t\tsceneFogType = 0;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// update positions and sort\r\n\r\n\t\tvar i, sprite, material, fogType, scale = [];\r\n\r\n\t\tfor( i = 0; i < nSprites; i ++ ) {\r\n\r\n\t\t\tsprite = sprites[ i ];\r\n\t\t\tmaterial = sprite.material;\r\n\r\n\t\t\tif ( sprite.visible === false ) continue;\r\n\r\n\t\t\tsprite._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\tsprite.z = - sprite._modelViewMatrix.elements[ 14 ];\r\n\r\n\t\t}\r\n\r\n\t\tsprites.sort( painterSortStable );\r\n\r\n\t\t// render all sprites\r\n\r\n\t\tfor( i = 0; i < nSprites; i ++ ) {\r\n\r\n\t\t\tsprite = sprites[ i ];\r\n\r\n\t\t\tif ( sprite.visible === false ) continue;\r\n\r\n\t\t\tmaterial = sprite.material;\r\n\r\n\t\t\t_gl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite._modelViewMatrix.elements );\r\n\r\n\t\t\tscale[ 0 ] = sprite.scale.x;\r\n\t\t\tscale[ 1 ] = sprite.scale.y;\r\n\r\n\t\t\tif ( scene.fog && material.fog ) {\r\n\r\n\t\t\t\tfogType = sceneFogType;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfogType = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( oldFogType !== fogType ) {\r\n\r\n\t\t\t\t_gl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\toldFogType = fogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\t_gl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\t_gl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\t_gl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\t_gl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\r\n\t\t\t_gl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\t_gl.uniform2fv( uniforms.scale, scale );\r\n\r\n\t\t\t_renderer.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\t_renderer.setDepthTest( material.depthTest );\r\n\t\t\t_renderer.setDepthWrite( material.depthWrite );\r\n\r\n\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\r\n\t\t\t\t_renderer.setTexture( material.map, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_renderer.setTexture( _texture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.drawElements( _gl.TRIANGLES, 6, _gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\t_gl.enable( _gl.CULL_FACE );\r\n\r\n\t};\r\n\r\n\tfunction createProgram () {\r\n\r\n\t\tvar program = _gl.createProgram();\r\n\r\n\t\tvar vertexShader = _gl.createShader( _gl.VERTEX_SHADER );\r\n\t\tvar fragmentShader = _gl.createShader( _gl.FRAGMENT_SHADER );\r\n\r\n\t\t_gl.shaderSource( vertexShader, [\r\n\r\n\t\t\t'precision ' + _renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t'uniform float rotation;',\r\n\t\t\t'uniform vec2 scale;',\r\n\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t'uniform vec2 uvScale;',\r\n\r\n\t\t\t'attribute vec2 position;',\r\n\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\r\n\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\r\n\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\r\n\t\t\t\t'vec4 finalPosition;',\r\n\r\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\r\n\t\t\t\t'gl_Position = finalPosition;',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\t_gl.shaderSource( fragmentShader, [\r\n\r\n\t\t\t'precision ' + _renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform vec3 color;',\r\n\t\t\t'uniform sampler2D map;',\r\n\t\t\t'uniform float opacity;',\r\n\r\n\t\t\t'uniform int fogType;',\r\n\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t'uniform float fogDensity;',\r\n\t\t\t'uniform float fogNear;',\r\n\t\t\t'uniform float fogFar;',\r\n\t\t\t'uniform float alphaTest;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\r\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\r\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\r\n\t\t\t\t'if ( fogType > 0 ) {',\r\n\r\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t'float fogFactor = 0.0;',\r\n\r\n\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\r\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\r\n\t\t\t\t\t'} else {',\r\n\r\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t'float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\r\n\t\t\t\t\t'}',\r\n\r\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\r\n\t\t\t\t'}',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\t_gl.compileShader( vertexShader );\r\n\t\t_gl.compileShader( fragmentShader );\r\n\r\n\t\t_gl.attachShader( program, vertexShader );\r\n\t\t_gl.attachShader( program, fragmentShader );\r\n\r\n\t\t_gl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t};\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn b.id - a.id;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DepthPassPlugin = function () {\r\n\r\n\tthis.enabled = false;\r\n\tthis.renderTarget = null;\r\n\r\n\tvar _gl,\r\n\t_renderer,\r\n\t_depthMaterial, _depthMaterialMorph, _depthMaterialSkin, _depthMaterialMorphSkin,\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\t_projScreenMatrix = new THREE.Matrix4();\r\n\r\n\tthis.init = function ( renderer ) {\r\n\r\n\t\t_gl = renderer.context;\r\n\t\t_renderer = renderer;\r\n\r\n\t\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\t\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\r\n\t\t_depthMaterial = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms } );\r\n\t\t_depthMaterialMorph = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true } );\r\n\t\t_depthMaterialSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, skinning: true } );\r\n\t\t_depthMaterialMorphSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true, skinning: true } );\r\n\r\n\t\t_depthMaterial._shadowPass = true;\r\n\t\t_depthMaterialMorph._shadowPass = true;\r\n\t\t_depthMaterialSkin._shadowPass = true;\r\n\t\t_depthMaterialMorphSkin._shadowPass = true;\r\n\r\n\t};\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( ! this.enabled ) return;\r\n\r\n\t\tthis.update( scene, camera );\r\n\r\n\t};\r\n\r\n\tthis.update = function ( scene, camera ) {\r\n\r\n\t\tvar i, il, j, jl, n,\r\n\r\n\t\tprogram, buffer, material,\r\n\t\twebglObject, object, light,\r\n\t\trenderList,\r\n\r\n\t\tfog = null;\r\n\r\n\t\t// set GL state for depth map\r\n\r\n\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t_gl.disable( _gl.BLEND );\r\n\r\n\t\t_renderer.setDepthTest( true );\r\n\r\n\t\t// update scene\r\n\r\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t// update camera matrices and frustum\r\n\r\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t// render depth map\r\n\r\n\t\t_renderer.setRenderTarget( this.renderTarget );\r\n\t\t_renderer.clear();\r\n\r\n\t\t// set object matrices & frustum culling\r\n\r\n\t\trenderList = scene.__webglObjects;\r\n\r\n\t\tfor ( j = 0, jl = renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\twebglObject = renderList[ j ];\r\n\t\t\tobject = webglObject.object;\r\n\r\n\t\t\twebglObject.render = false;\r\n\r\n\t\t\tif ( object.visible ) {\r\n\r\n\t\t\t\tif ( ! ( object instanceof THREE.Mesh || object instanceof THREE.ParticleSystem ) || ! ( object.frustumCulled ) || _frustum.intersectsObject( object ) ) {\r\n\r\n\t\t\t\t\tobject._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\r\n\t\t\t\t\twebglObject.render = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// render regular objects\r\n\r\n\t\tvar objectMaterial, useMorphing, useSkinning;\r\n\r\n\t\tfor ( j = 0, jl = renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\twebglObject = renderList[ j ];\r\n\r\n\t\t\tif ( webglObject.render ) {\r\n\r\n\t\t\t\tobject = webglObject.object;\r\n\t\t\t\tbuffer = webglObject.buffer;\r\n\r\n\t\t\t\t// todo: create proper depth material for particles\r\n\r\n\t\t\t\tif ( object instanceof THREE.ParticleSystem && !object.customDepthMaterial ) continue;\r\n\r\n\t\t\t\tobjectMaterial = getObjectMaterial( object );\r\n\r\n\t\t\t\tif ( objectMaterial ) _renderer.setMaterialFaces( object.material );\r\n\r\n\t\t\t\tuseMorphing = object.geometry.morphTargets.length > 0 && objectMaterial.morphTargets;\r\n\t\t\t\tuseSkinning = object instanceof THREE.SkinnedMesh && objectMaterial.skinning;\r\n\r\n\t\t\t\tif ( object.customDepthMaterial ) {\r\n\r\n\t\t\t\t\tmaterial = object.customDepthMaterial;\r\n\r\n\t\t\t\t} else if ( useSkinning ) {\r\n\r\n\t\t\t\t\tmaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\r\n\t\t\t\t} else if ( useMorphing ) {\r\n\r\n\t\t\t\t\tmaterial = _depthMaterialMorph;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmaterial = _depthMaterial;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( buffer instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\t\t_renderer.renderBufferDirect( camera, scene.__lights, fog, material, buffer, object );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_renderer.renderBuffer( camera, scene.__lights, fog, material, buffer, object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// set matrices and render immediate objects\r\n\r\n\t\trenderList = scene.__webglObjectsImmediate;\r\n\r\n\t\tfor ( j = 0, jl = renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\twebglObject = renderList[ j ];\r\n\t\t\tobject = webglObject.object;\r\n\r\n\t\t\tif ( object.visible ) {\r\n\r\n\t\t\t\tobject._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\r\n\t\t\t\t_renderer.renderImmediateObject( camera, scene.__lights, fog, _depthMaterial, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore GL state\r\n\r\n\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\tclearAlpha = _renderer.getClearAlpha();\r\n\r\n\t\t_gl.clearColor( clearColor.r, clearColor.g, clearColor.b, clearAlpha );\r\n\t\t_gl.enable( _gl.BLEND );\r\n\r\n\t};\r\n\r\n\t// For the moment just ignore objects that have multiple materials with different animation methods\r\n\t// Only the first material will be taken into account for deciding which depth material to use\r\n\r\n\tfunction getObjectMaterial( object ) {\r\n\r\n\t\treturn object.material instanceof THREE.MeshFaceMaterial\r\n\t\t\t? object.material.materials[ 0 ]\r\n\t\t\t: object.material;\r\n\r\n\t};\r\n\r\n};\r\n\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\nTHREE.ShaderFlares = {\r\n\r\n\t'lensFlareVertexTexture': {\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\r\n\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\r\n\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\r\n\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t// pink square\r\n\r\n\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\r\n\t\t\t\t// restore\r\n\r\n\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t// flare\r\n\r\n\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\"}\",\r\n\r\n\t\t\t\"}\"\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\r\n\t'lensFlare': {\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"precision mediump float;\",\r\n\r\n\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t// pink square\r\n\r\n\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\r\n\t\t\t\t// restore\r\n\r\n\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t// flare\r\n\r\n\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\r\n\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\"}\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Export the THREE object for **Node.js**, with\r\n// backwards-compatibility for the old `require()` API. If we're in\r\n// the browser, add `_` as a global object via a string identifier,\r\n// for Closure Compiler \"advanced\" mode.\r\nif (typeof exports !== 'undefined') {\r\n  if (typeof module !== 'undefined' && module.exports) {\r\n    exports = module.exports = THREE;\r\n  }\r\n  exports.THREE = THREE;\r\n} else {\r\n  this['THREE'] = THREE;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/_three@0.68.87@three/three.js","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"page-content\" }, [\n    _c(\"div\", { staticClass: \"image-layout\", attrs: { id: \"site-banner\" } }, [\n      _c(\"img\", { attrs: { src: require(\"./../../image/star-bg.svg\") } }),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"image-layout-body\" }, [\n        _c(\"div\", { staticClass: \"canvas-box\", attrs: { id: \"canvasBox\" } }),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"container site-description\" }, [\n          _c(\"h1\", [_vm._v(\"Classic modular front-end framework\")]),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\n              \"The front end UI solution for all levels of the front and back apes, the zero threshold open, and the front end for all levels\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"a\",\n            {\n              staticClass: \"text-button large light border margin-top-2\",\n              attrs: { href: \"https://github.com/canknow/Canknow\" }\n            },\n            [_c(\"Icon\", { attrs: { type: \"download\" } }), _vm._v(\"Github\")],\n            1\n          )\n        ])\n      ])\n    ]),\n    _vm._v(\" \"),\n    _c(\n      \"div\",\n      { staticClass: \"section\" },\n      [\n        _c(\n          \"Row\",\n          [\n            _c(\n              \"Column\",\n              {\n                staticClass: \"text-center padding-2 banner-title-wrapper\",\n                attrs: { span: 12 }\n              },\n              [\n                _c(\"h1\", [_vm._v(_vm._s(_vm.author) + \" DESIGNs\")]),\n                _vm._v(\" \"),\n                _c(\"p\", [\n                  _c(\"span\", [\n                    _vm._v(\"Out of the box with china front design solutions\")\n                  ])\n                ])\n              ]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"Column\",\n              { staticClass: \"text-center padding-2\", attrs: { span: 12 } },\n              [\n                _c(\"img\", {\n                  staticClass: \"width-full\",\n                  attrs: {\n                    src:\n                      \"https://www.canvasflip.com/images/home-page/first-fold-image.png\"\n                  }\n                })\n              ]\n            )\n          ],\n          1\n        )\n      ],\n      1\n    ),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container\" }, [\n      _c(\"div\", { staticClass: \"content-wrapper margin-top-2\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"text-wrapper-bottom\" },\n          [\n            _c(\n              \"Row\",\n              [\n                _c(\"Column\", { attrs: { span: 12, md: \"\" } }, [\n                  _c(\"img\", {\n                    staticClass: \"width-full center-block\",\n                    attrs: {\n                      src:\n                        \"https://t.alipayobjects.com/images/T1lyJkXg4aXXXXXXXX.png\"\n                    }\n                  })\n                ]),\n                _vm._v(\" \"),\n                _c(\"Column\", { attrs: { span: 12, md: \"\" } }, [\n                  _c(\"h1\", { staticClass: \"text-center\" }, [\n                    _c(\"span\", [_vm._v(\"Small. Determination. Happiness\")])\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"p\", { staticClass: \"text-center margin-bottom-2\" }, [\n                    _c(\"span\", [\n                      _vm._v(\n                        'This is a medium - background design language dedicated to improving the use of \"users\" and \"designers\".'\n                      )\n                    ])\n                  ])\n                ])\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"image4 bottom-wrapper\" })\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-loader/node_modules/vue-hot-reload-api\")      .rerender(\"data-v-eb8004ea\", esExports)\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.1@vue-loader/lib/template-compiler?{\"id\":\"data-v-eb8004ea\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.1@vue-loader/lib/selector.js?type=template&index=0!./example/src/views/page/Index.vue\n// module id = 1104\n// module chunks = 1","module.exports = __webpack_public_path__ + \"static/images/star-bg.ba93415.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./example/src/image/star-bg.svg\n// module id = 1105\n// module chunks = 1","var disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  require(\"!!vue-style-loader!css-loader?{\\\"sourceMap\\\":false}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-eb8004ea\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":false}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=styles&index=0!./Index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=script&index=0!./Index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=script&index=0!./Index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-eb8004ea\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=template&index=0!./Index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"example\\\\src\\\\views\\\\page\\\\Index.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-loader/node_modules/vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-eb8004ea\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-eb8004ea\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./example/src/views/page/Index.vue\n// module id = 872\n// module chunks = 1","module.exports = {\"name\":\"canknow\",\"version\":\"5.0.1\",\"keywords\":[\"canknow\",\"vue\",\"vue.js\",\"component\",\"components\",\"ui\",\"framework\"],\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/canknow/Canknow.git\"},\"bugs\":{\"url\":\"https://github.com/canknow/Canknow/issues\"},\"homepage\":\"https://github.com/canknow/Canknow#readme\",\"description\":\"A high quality UI components Library\",\"author\":\"canknow\",\"license\":\"ISC\",\"main\":\"dist/js/canknow.js\",\"files\":[\"dist\",\"src\"],\"engines\":{\"node\":\">= 4.0.0\",\"npm\":\">= 3.0.0\"},\"directories\":{\"example\":\"example\"},\"scripts\":{\"dist:style\":\"gulp --gulpfile build/build-style.js\",\"dist:dev\":\"webpack --config build/lib/webpack.dist.dev.config.js\",\"dist:prod\":\"webpack --config build/lib/webpack.dist.prod.config.js\",\"dist\":\"npm run clean && npm run dist:style && npm run dist:dev && npm run dist:prod\",\"publish\":\"npm run dist && npm publish\",\"clean\":\"rimraf dist\",\"clean:example\":\"rimraf example/dist\",\"example:dev\":\"node build/example/dev-server.js\",\"example:dist\":\"npm run clean:example && webpack --config build/example/webpack.prod.config.js\"},\"dependencies\":{\"async-validator\":\"^1.8.1\",\"axios\":\"^0.17.1\",\"clipboard\":\"^2.0.0\",\"core-js\":\"^2.5.0\",\"deepmerge\":\"^1.5.2\",\"element-resize-detector\":\"^1.1.12\",\"fs\":\"0.0.1-security\",\"lodash.throttle\":\"^4.1.1\",\"moment\":\"^2.20.1\",\"parallax\":\"^0.0.0\",\"popper.js\":\"^0.6.4\",\"postcss-loader\":\"^2.1.0\",\"prettify\":\"^0.1.7\",\"prism\":\"^4.1.2\",\"qs\":\"^6.5.1\",\"resize-observer-polyfill\":\"^1.5.0\",\"swiper\":\"^4.1.6\",\"three\":\"^0.68.0\",\"throttle-debounce\":\"^1.0.1\",\"tinycolor2\":\"^1.4.1\",\"vue\":\"^2.5.9\",\"vue-i18n\":\"7.3.2\",\"vue-qart\":\"^2.1.1\",\"vue-router\":\"3.0.1\",\"vuex\":\"3.0.1\"},\"devDependencies\":{\"amd-optimize\":\"^0.6.1\",\"autoprefixer\":\"^8.1.0\",\"babel\":\"^6.23.0\",\"babel-core\":\"^6.26.0\",\"babel-helper-vue-jsx-merge-props\":\"^2.0.3\",\"babel-loader\":\"^7.1.2\",\"babel-plugin-syntax-jsx\":\"^6.18.0\",\"babel-plugin-transform-vue-jsx\":\"^3.5.0\",\"babel-preset-es2015\":\"^6.24.1\",\"babel-preset-stage-2\":\"^6.24.1\",\"babel-preset-stage-3\":\"^6.24.1\",\"babel-runtime\":\"^6.26.0\",\"chai\":\"^3.5.0\",\"chalk\":\"^2.0.1\",\"compression-webpack-plugin\":\"^1.0.1\",\"copy-webpack-plugin\":\"^4.2.3\",\"css-loader\":\"^0.28.9\",\"es2015\":\"0.0.0\",\"extract-text-webpack-plugin\":\"^2.1.2\",\"file-loader\":\"^0.8.5\",\"friendly-errors-webpack-plugin\":\"^1.6.1\",\"gulp\":\"^3.9.1\",\"gulp-babel\":\"^6.1.2\",\"gulp-clean-css\":\"^3.9.2\",\"gulp-concat\":\"^2.6.1\",\"gulp-minify-css\":\"^1.2.4\",\"gulp-modify-css-urls\":\"^0.2.2\",\"gulp-rename\":\"^1.2.2\",\"gulp-sass\":\"^3.1.0\",\"gulp-scss\":\"^1.4.0\",\"gulp-sourcemaps\":\"^2.6.2\",\"gulp-webpack\":\"^1.5.0\",\"gulpfile\":\"^1.0.2\",\"html-webpack-plugin\":\"^2.30.1\",\"karma\":\"^1.7.1\",\"karma-chrome-launcher\":\"^2.2.0\",\"karma-coverage\":\"^1.1.1\",\"karma-mocha\":\"^1.3.0\",\"karma-sinon-chai\":\"^1.3.3\",\"karma-sourcemap-loader\":\"^0.3.7\",\"karma-spec-reporter\":\"0.0.26\",\"karma-webpack\":\"^2.0.6\",\"node-notifier\":\"^5.1.2\",\"node-sass\":\"^4.7.2\",\"optimize-css-assets-webpack-plugin\":\"^3.2.0\",\"ora\":\"^1.3.0\",\"postcss-import\":\"^11.0.0\",\"postcss-loader\":\"^2.0.8\",\"resolve-url-loader\":\"^2.2.1\",\"rimraf\":\"^2.6.2\",\"sass-loader\":\"^6.0.6\",\"scss\":\"^0.2.4\",\"scss-loader\":\"^0.0.1\",\"semver\":\"^5.3.0\",\"shelljs\":\"^0.7.8\",\"style-loader\":\"^0.17.0\",\"stylus-loader\":\"^3.0.1\",\"url-loader\":\"^0.5.9\",\"vue\":\"^2.5.9\",\"vue-hot-reload-api\":\"^1.3.3\",\"vue-html-loader\":\"^1.2.4\",\"vue-loader\":\"^13.5.0\",\"vue-style-loader\":\"^3.0.3\",\"vue-template-compiler\":\"^2.5.2\",\"webpack\":\"^3.6.0\",\"webpack-bundle-analyzer\":\"^2.9.0\",\"webpack-dev-server\":\"^2.9.1\",\"webpack-hot-middleware\":\"^2.21.0\",\"webpack-merge\":\"^4.1.0\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 875\n// module chunks = 1 3 52","<style lang=\"scss\">\r\n    #site-banner{\r\n        height: 640px;\r\n        overflow: hidden;\r\n        background-color: #24292e;\r\n        background-size: 100%;\r\n        text-align: center;\r\n        margin: 0;\r\n        .image-layout-body{\r\n            padding-top: 169px;\r\n            .site-description{\r\n                h1{\r\n                    color:#fff;\r\n                }\r\n                h2{\r\n                    color:#fff;\r\n                }\r\n                p{\r\n                    color:#fff;\r\n                }\r\n            }\r\n        }\r\n        .canvas-box{\r\n            position: absolute;\r\n            left:0;\r\n            top:0;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n    }\r\n</style>\r\n<template>\r\n    <div class=\"page-content\">\r\n        <div class=\"image-layout\" id=\"site-banner\">\r\n            <img src=\"./../../image/star-bg.svg\">\r\n            <div class=\"image-layout-body\">\r\n                <div class=\"canvas-box\" id=\"canvasBox\"></div>\r\n                <div class=\"container site-description\">\r\n                    <h1>Classic modular front-end framework</h1>\r\n                    <p>The front end UI solution for all levels of the front and back apes, the zero threshold open, and the front end for all levels</p>\r\n                    <a class=\"text-button large light border margin-top-2\" href=\"https://github.com/canknow/Canknow\"><Icon type=\"download\"></Icon>Github</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"section\">\r\n            <Row>\r\n                <Column :span=\"12\" class=\"text-center padding-2 banner-title-wrapper\">\r\n                    <h1>{{author}} DESIGNs</h1>\r\n                    <p><span>Out of the box with china front design solutions</span></p>\r\n                </Column>\r\n                <Column :span=\"12\" class=\"text-center padding-2\">\r\n                    <img class=\"width-full\" src=\"https://www.canvasflip.com/images/home-page/first-fold-image.png\">\r\n                </Column>\r\n            </Row>\r\n        </div>\r\n        <div class=\"container\">\r\n            <div class=\"content-wrapper margin-top-2\">\r\n                <div class=\"text-wrapper-bottom\">\r\n                    <Row>\r\n                        <Column :span=\"12\" md>\r\n                            <img class=\"width-full center-block\" src=\"https://t.alipayobjects.com/images/T1lyJkXg4aXXXXXXXX.png\">\r\n                        </Column>\r\n                        <Column :span=\"12\" md>\r\n                            <h1 class=\"text-center\"><span>Small. Determination. Happiness</span></h1>\r\n                            <p class=\"text-center margin-bottom-2\"><span>This is a medium - background design language dedicated to improving the use of \"users\" and \"designers\".</span></p>\r\n                        </Column>\r\n                    </Row>\r\n                </div>\r\n                <div class=\"image4 bottom-wrapper\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import packageConfig from './../../../../package';\r\n    import {AdditiveBlending, ImageUtils, PerspectiveCamera,Scene,ParticleCanvasMaterial,ParticleBasicMaterial,Particle , CanvasRenderer} from 'three';\r\n    export default {\r\n        name:'Index',\r\n        computed:{\r\n            author:()=>{\r\n                return packageConfig.author;\r\n            },\r\n            name:()=>{\r\n                return packageConfig.name;\r\n            }\r\n        },\r\n        mounted(){\r\n            let SEPARATION = 100, AMOUNTX = 100, AMOUNTY = 30;\r\n            let container = document.getElementById('canvasBox');\r\n            let camera, scene, renderer;\r\n            let particles, particle, count = 0;\r\n            let mouseX = 0, mouseY = 0;\r\n            let width =window.getComputedStyle(container).width.replace('px','');\r\n            let height=window.getComputedStyle(container).height.replace('px','');\r\n            let windowHalfX =width/ 2;\r\n            let windowHalfY = height/ 2;\r\n\r\n            init();\r\n            animate();\r\n\r\n            function init() {\r\n                camera = new PerspectiveCamera( 120, width /height, 1, 10000 );\r\n                camera.position.z = 1000;\r\n\r\n                scene = new Scene();\r\n                particles = [];\r\n\r\n                let PI2 = Math.PI * 2;\r\n                let material = new ParticleCanvasMaterial( {\r\n                    color: 0xe1e1e1,\r\n                    program: function ( context ) {\r\n                        context.beginPath();\r\n                        context.arc( 0, 0, 0.6, 0, PI2, true );\r\n                        context.fill();\r\n                    }\r\n                });\r\n/*                let material=new ParticleBasicMaterial({\r\n                    color: 0xFFFFFF,\r\n                    size: 20,\r\n                    map: ImageUtils.loadTexture(\r\n                        \"images/particle.png\"\r\n                    ),\r\n                    blending: AdditiveBlending,\r\n                    transparent: true\r\n                });*/\r\n                let i = 0;\r\n                for ( let ix = 0; ix < AMOUNTX; ix ++ ) {\r\n\r\n                    for ( let iy = 0; iy < AMOUNTY; iy ++ ) {\r\n                        particle = particles[ i ++ ] = new Particle( material );\r\n                        particle.position.x = ix * SEPARATION - ( ( AMOUNTX * SEPARATION ) / 2 );\r\n                        particle.position.z = iy * SEPARATION - ( ( AMOUNTY * SEPARATION ) / 2 );\r\n                        scene.add( particle );\r\n                    }\r\n                }\r\n                renderer = new CanvasRenderer({\r\n                    alpha:true,\r\n                });\r\n                renderer.setSize( window.innerWidth, window.innerHeight );\r\n                container.appendChild( renderer.domElement );\r\n\r\n                document.addEventListener( 'mousemove', onDocumentMouseMove, false );\r\n                window.addEventListener( 'resize', onWindowResize, false );\r\n            }\r\n\r\n            function onWindowResize() {\r\n                let width =window.getComputedStyle(container).width.replace('px','');\r\n                let height=window.getComputedStyle(container).height.replace('px','');\r\n\r\n                windowHalfX =width / 2;\r\n                windowHalfY = height/ 2;\r\n                camera.aspect = width/ height;\r\n                camera.updateProjectionMatrix();\r\n                renderer.setSize( width, height);\r\n            }\r\n\r\n            function onDocumentMouseMove( event ) {\r\n                mouseX = event.clientX - windowHalfX;\r\n                mouseY = event.clientY - windowHalfY;\r\n            }\r\n\r\n            function animate() {\r\n                requestAnimationFrame( animate );\r\n                render();\r\n            }\r\n            function render() {\r\n                camera.position.x += ( mouseX - camera.position.x ) * .05;\r\n                camera.position.y += ( - mouseY - camera.position.y ) * .05+20;\r\n                camera.lookAt( scene.position );\r\n                let i = 0;\r\n\r\n                for ( let ix = 0; ix < AMOUNTX; ix ++ ) {\r\n\r\n                    for ( let iy = 0; iy < AMOUNTY; iy ++ ) {\r\n                        particle = particles[ i++ ];\r\n                        particle.position.y = ( Math.sin( ( ix + count ) * 0.3 ) * 50 ) + ( Math.sin( ( iy + count ) * 0.5 ) * 50 );\r\n                        particle.scale.x = particle.scale.y = ( Math.sin( ( ix + count ) * 0.3 ) + 1 ) * 2 + ( Math.sin( ( iy + count ) * 0.5 ) + 1 ) * 2;\r\n                    }\r\n                }\r\n                renderer.render( scene, camera );\r\n                count += 0.1;\r\n            }\r\n        }\r\n    }\r\n</script>\n\n\n// WEBPACK FOOTER //\n// example/src/views/page/Index.vue"],"sourceRoot":""}